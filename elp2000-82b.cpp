//Implemenation of ELP2000-82b (Bureau des Logitudes - MCTJCGF9502 - M. Chapront-Touze and J. Chapront)
//Greg Miller (gmiller@gregmiller.net) 2023 https://www.celestialprogramming.com/
//Released as public domain.
//
//Example:
//    console.log(ELP82b.getPosition(2451555.5));
//    [ 382979.7604730463, -68204.20174530084, -25987.71602589964 ]
//
//Input is Julian Date in TDB
//Returns geocentric X,Y,Z in Kilometers in the mean dynamical ecliptic and inertial equinox of J2000.

/*
Kirill Dunko (kirill.dunko at gmail dot com) 2023
Convert java script code to C++
Released as public domain.
*/

#include <iostream>
#include <iomanip>
#include <limits>
#include <cmath>

const double PI = 3.141592653589793116; // const double PI = atan (1.0) * 4.0;
const double halfpi = 1.570796326794896558; // const double halfpi = PI/2.0;
const double twopi = 6.283185307179586232; // const double twopi = PI*2.0;

class ELP2000_82b
{
private:

    double mainproblem_lon ( double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += -2.8003441705852874e-14 * sin ( 5*d + 3*lp + -2*l + -2*f );
        a += -2.4974355895597922e-8 * sin ( 4*d + 4*lp + -2*l + -2*f );
        a += -6.510557629403851e-9 * sin ( 3*d + 3*lp + -2*l + -2*f );
        a += 1.2487872803181985e-8 * sin ( 3*d + 3*lp + -3*l );
        a += -7.711213660800763e-9 * sin ( d + 3*lp + -2*f );
        a += -1.8325351737212287e-12 * sin ( d + lp + -1*l + 2*f );
        a += -0.00001 * sin ( 8*d + 2*lp + -3*l );
        a += -0.00001 * sin ( 8*d + lp + l );
        a += -0.00001 * sin ( 8*d + l + -2*f );
        a += 0.00001 * sin ( 8*d + -2*l + -2*f );
        a += 0.00001 * sin ( 8*d + -1*lp + 2*l );
        a += -0.00001 * sin ( 8*d + -1*lp + -1*l + 2*f );
        a += 0.00001 * sin ( 8*d + -2*lp + l );
        a += -0.00001 * sin ( 7*d + -2*f );
        a += 0.00001 * sin ( 7*d + -2*l + 2*f );
        a += 0.00001 * sin ( 7*d + -3*l + 2*f );
        a += -0.00001 * sin ( 7*d + -5*l );
        a += -0.00001 * sin ( 7*d + -2*lp + -2*l );
        a += 0.00001 * sin ( 6*d + 3*lp + -2*l );
        a += 0.00001 * sin ( 6*d + 2*lp + -1*l + -2*f );
        a += 0.00001 * sin ( 6*d + 2*lp + -2*l + -2*f );
        a += 0.00001 * sin ( 6*d + lp + l + 2*f );
        a += 0.00001 * sin ( 6*d + lp + -5*l );
        a += -0.00001 * sin ( 6*d + l + -4*f );
        a += -0.00001 * sin ( 6*d + -1*lp + 2*l + 2*f );
        a += 0.00001 * sin ( 6*d + -2*lp + 3*l );
        a += 0.00001 * sin ( 6*d + -4*lp + -3*l );
        a += -0.00001 * sin ( 5*d + 2*lp + l );
        a += -0.00001 * sin ( 5*d + 2*lp + -2*l );
        a += 0.00001 * sin ( 5*d + 2*lp + -3*l );
        a += 0.00001 * sin ( 5*d + lp + -2*l + -2*f );
        a += 0.00001 * sin ( 5*d + 2*l );
        a += 0.00001 * sin ( 5*d + l + 2*f );
        a += 0.00001 * sin ( 5*d + -1*lp + -3*l + 2*f );
        a += 0.00001 * sin ( 5*d + -3*lp );
        a += 0.00001 * sin ( 4*d + 2*lp + 2*l );
        a += 0.00001 * sin ( 4*d + 2*lp + -2*f );
        a += 0.00001 * sin ( 4*d + lp + 3*l + 2*f );
        a += -0.00001 * sin ( 4*d + lp + -1*l + 4*f );
        a += -0.00001 * sin ( 4*d + lp + -6*l );
        a += 0.00001 * sin ( 4*d + 6*l );
        a += 0.00001 * sin ( 4*d + 2*l + -4*f );
        a += 0.00001 * sin ( 4*d + -6*l + -2*f );
        a += -0.00001 * sin ( 4*d + -1*lp + 4*l + -2*f );
        a += 0.00001 * sin ( 4*d + -1*lp + l + 4*f );
        a += -0.00001 * sin ( 4*d + -1*lp + -4*f );
        a += 0.00001 * sin ( 4*d + -1*lp + -2*l + -4*f );
        a += -0.00001 * sin ( 4*d + -2*lp + 3*l + -2*f );
        a += -0.00001 * sin ( 4*d + -3*lp + l + 2*f );
        a += 0.00001 * sin ( 4*d + -4*lp + 2*l );
        a += 0.00001 * sin ( 4*d + -4*lp + -3*l );
        a += 0.00001 * sin ( 4*d + -5*lp + -2*l );
        a += 0.00001 * sin ( 3*d + 2*lp + 2*f );
        a += -0.00001 * sin ( 3*d + 2*lp + -1*l + -2*f );
        a += -0.00001 * sin ( 3*d + lp + 2*l + -2*f );
        a += 0.00001 * sin ( 3*d + lp + -2*l + -2*f );
        a += -0.00001 * sin ( 3*d + -2*l + 4*f );
        a += 0.00001 * sin ( 3*d + -4*l + -2*f );
        a += 0.00001 * sin ( 3*d + -1*lp + 2*l + 2*f );
        a += -0.00001 * sin ( 2*d + 4*lp + -1*l );
        a += -0.00001 * sin ( 2*d + 4*lp + -2*l );
        a += -0.00001 * sin ( 2*d + 2*lp + 3*l + -2*f );
        a += -0.00001 * sin ( 2*d + 2*lp + -1*l + 4*f );
        a += -0.00001 * sin ( 2*d + lp + 2*l + 4*f );
        a += -0.000009999979231268031 * sin ( 2*d + lp + -2*l + 2*f );
        a += 0.00001 * sin ( 2*d + lp + -7*l );
        a += -0.00001 * sin ( 2*d + 6*l + 2*f );
        a += -0.00001 * sin ( 2*d + 6*l + -2*f );
        a += 0.00001 * sin ( 2*d + 4*l + 4*f );
        a += -0.00001 * sin ( 2*d + l + 6*f );
        a += 0.00001 * sin ( 2*d + l + -6*f );
        a += -0.00001 * sin ( 2*d + -1*lp + 5*l + 2*f );
        a += -0.00001 * sin ( 2*d + -1*lp + 5*l + -2*f );
        a += 0.00001 * sin ( 2*d + -1*lp + 2*l + -4*f );
        a += 0.00001 * sin ( 2*d + -1*lp + -3*l + -4*f );
        a += 0.00001 * sin ( 2*d + -2*lp + l + 4*f );
        a += 0.00001 * sin ( 2*d + -2*lp + l + -4*f );
        a += -0.00001 * sin ( 2*d + -2*lp + -4*l + -2*f );
        a += 0.00001 * sin ( 2*d + -4*lp + 3*l );
        a += 0.00001 * sin ( 2*d + -5*lp + -2*l );
        a += -0.00001 * sin ( d + 4*lp );
        a += -0.00001 * sin ( d + 2*lp + 4*l );
        a += 0.00001 * sin ( d + 2*lp + 2*l + 2*f );
        a += 0.00001 * sin ( d + 2*lp + -1*l + 2*f );
        a += -0.00001 * sin ( d + lp + -4*l + -2*f );
        a += -0.00001 * sin ( d + 6*l );
        a += 0.00001 * sin ( d + -2*l + -4*f );
        a += 0.00001 * sin ( d + -5*l + -2*f );
        a += -0.00001 * sin ( d + -1*lp + 5*l );
        a += 0.00001 * sin ( d + -1*lp + 3*l + -2*f );
        a += -0.00001 * sin ( d + -3*lp + 2*l );
        a += -0.00001 * sin ( 2*lp + 4*f );
        a += 0.00001 * sin ( lp + 5*l + -2*f );
        a += -0.00001 * sin ( 7*l + 2*f );
        a += 0.00002 * sin ( 10*d );
        a += 0.00002 * sin ( 10*d + -1*lp + -1*l );
        a += -0.00002 * sin ( 9*d + -3*l );
        a += -0.00002 * sin ( 9*d + -4*l );
        a += -0.00002 * sin ( 8*d + 2*f );
        a += -0.00002 * sin ( 8*d + -1*lp + -3*l + 2*f );
        a += 0.00002 * sin ( 8*d + -3*lp + -1*l );
        a += 0.00002 * sin ( 8*d + -3*lp + -2*l );
        a += 0.00002 * sin ( 8*d + -3*lp + -3*l );
        a += 0.00002 * sin ( 7*d + -1*lp );
        a += -0.00002 * sin ( 7*d + -2*lp + -3*l );
        a += -0.00002 * sin ( 6*d + 2*lp );
        a += -0.00002 * sin ( 6*d + lp + 3*l );
        a += 0.00002 * sin ( 6*d + -1*l + 4*f );
        a += 0.00002 * sin ( 6*d + -3*l + 4*f );
        a += 0.00002 * sin ( 6*d + -1*lp + -3*l + -2*f );
        a += -0.00002 * sin ( 6*d + -1*lp + -4*l + 2*f );
        a += 0.00002 * sin ( 6*d + -1*lp + -5*l );
        a += -0.00002 * sin ( 6*d + -2*lp + l + -2*f );
        a += -0.00002 * sin ( 6*d + -2*lp + -2*f );
        a += 0.00002 * sin ( 6*d + -4*lp );
        a += -0.00002 * sin ( 5*d + lp + 2*f );
        a += -0.00002 * sin ( 5*d + 2*l + -2*f );
        a += -0.00002 * sin ( 5*d + -4*f );
        a += 0.00002 * sin ( 5*d + -2*lp + l );
        a += -0.00002 * sin ( 5*d + -2*lp + -2*f );
        a += -0.00002 * sin ( 4*d + 2*lp + l + -2*f );
        a += 0.00002 * sin ( 4*d + 2*lp + 2*f );
        a += 0.00002 * sin ( 4*d + 2*lp + -3*l + 2*f );
        a += 0.00002 * sin ( 4*d + 2*l + 4*f );
        a += 0.00002 * sin ( 4*d + -3*l + -4*f );
        a += -0.00002 * sin ( 4*d + -4*l + 2*f );
        a += 0.00002 * sin ( 4*d + -1*lp + -1*l + -4*f );
        a += 0.00002 * sin ( 4*d + -2*lp + -2*l + -2*f );
        a += -0.00002 * sin ( 4*d + -2*lp + -4*l );
        a += -0.00002 * sin ( 4*d + -2*lp + -5*l );
        a += 0.00002 * sin ( 4*d + -3*lp + 3*l );
        a += -0.00002 * sin ( 3*d + 3*lp );
        a += -0.000019984355452677854 * sin ( 3*d + 3*lp + -2*f );
        a += -0.00002 * sin ( 3*d + 2*lp + -4*l );
        a += 0.00002 * sin ( 3*d + lp + 4*l );
        a += 0.00002 * sin ( 3*d + lp + -3*l + 2*f );
        a += 0.00002 * sin ( 3*d + lp + -3*l + -2*f );
        a += 0.00002 * sin ( 3*d + 3*l + 2*f );
        a += -0.00002 * sin ( 3*d + 3*l + -2*f );
        a += -0.00002 * sin ( 3*d + 4*f );
        a += 0.00002 * sin ( 3*d + -1*lp + -4*f );
        a += 0.00002 * sin ( 3*d + -4*lp );
        a += -0.00002 * sin ( 3*d + -4*lp + -1*l );
        a += 0.00002 * sin ( 2*d + 3*lp + l + -2*f );
        a += 0.00002 * sin ( 2*d + 2*lp + -1*l + -4*f );
        a += 0.00002 * sin ( 2*d + 2*lp + -3*l + 2*f );
        a += -0.00002 * sin ( 2*d + 2*lp + -5*l );
        a += -0.00002 * sin ( 2*d + lp + 6*l );
        a += 0.00002 * sin ( 2*d + lp + -2*l + -4*f );
        a += 0.00002 * sin ( 2*d + 3*l + -4*f );
        a += -0.00002 * sin ( 2*d + -1*lp + -4*l + 2*f );
        a += 0.00002 * sin ( 2*d + -3*lp + 4*l );
        a += -0.00002 * sin ( 2*d + -3*lp + -2*l + 2*f );
        a += -0.00002 * sin ( 2*d + -4*lp + l + -2*f );
        a += -0.00002 * sin ( 2*d + -4*lp + -1*l + 2*f );
        a += 0.00002 * sin ( 2*d + -4*lp + -3*l );
        a += 0.00002 * sin ( 2*d + -6*lp );
        a += 0.00002000000061084506 * sin ( d + 2*lp + l + -2*f );
        a += 0.00002 * sin ( d + lp + 3*l + -2*f );
        a += 0.00002 * sin ( d + lp + l + 4*f );
        a += 0.00002 * sin ( d + -4*l + 2*f );
        a += 0.00002 * sin ( d + -1*lp + 3*l + 2*f );
        a += 0.00002 * sin ( d + -1*lp + -4*f );
        a += 0.00002 * sin ( d + -1*lp + -3*l + 2*f );
        a += -0.00002 * sin ( d + -1*lp + -3*l + -2*f );
        a += 0.00002 * sin ( d + -1*lp + -5*l );
        a += 0.00002 * sin ( d + -3*lp + -2*l );
        a += -0.00002 * sin ( 5*lp + -1*l );
        a += -0.00002 * sin ( 4*lp + 2*l );
        a += 0.00002 * sin ( 3*lp + -2*l + 2*f );
        a += 0.00002 * sin ( 3*lp + -2*l + -2*f );
        a += 0.00002 * sin ( 2*lp + 3*l + -2*f );
        a += 0.00002 * sin ( 2*lp + -4*l + -2*f );
        a += -0.00002 * sin ( lp + 7*l );
        a += -0.00002 * sin ( lp + -7*l );
        a += -0.00002 * sin ( 6*l + -2*f );
        a += 0.00002 * sin ( 5*l + 4*f );
        a += 0.00003 * sin ( 10*d + -1*lp + -4*l );
        a += -0.00003 * sin ( 8*d + -1*lp + -2*l + 2*f );
        a += 0.00003 * sin ( 8*d + -1*lp + -5*l );
        a += 0.00002999999998599828 * sin ( 7*d + lp );
        a += -0.00003 * sin ( 6*d + 3*l + -2*f );
        a += 0.00003 * sin ( 6*d + -2*l + 4*f );
        a += -0.00003 * sin ( 6*d + -1*lp + 2*l + -2*f );
        a += -0.00003 * sin ( 6*d + -2*lp + 2*f );
        a += 0.00003 * sin ( 6*d + -2*lp + -1*l + -2*f );
        a += 0.00003 * sin ( 6*d + -2*lp + -2*l + -2*f );
        a += -0.00003 * sin ( 6*d + -2*lp + -3*l + 2*f );
        a += -0.00002999999998599828 * sin ( 5*d + -1*lp + l + -2*f );
        a += 0.00002999999998599828 * sin ( 5*d + -1*lp + -1*l + 2*f );
        a += -0.00002999999998599828 * sin ( 5*d + -1*lp + -2*l + -2*f );
        a += -0.00002999999998599828 * sin ( 5*d + -2*lp + -1*l + -2*f );
        a += -0.00002999999998599828 * sin ( 5*d + -3*lp + -2*l );
        a += -0.000029999999389154944 * sin ( 4*d + lp + -3*l + 2*f );
        a += -0.00003 * sin ( 4*d + -4*f );
        a += 0.00003 * sin ( 4*d + -1*lp + 5*l );
        a += 0.00003 * sin ( 4*d + -2*lp + 4*l );
        a += -0.00003 * sin ( 4*d + -3*lp + l + -2*f );
        a += 0.00003 * sin ( 4*d + -5*lp );
        a += 0.00002999999998599828 * sin ( 3*d + -2*lp + -1*l + 2*f );
        a += 0.00002999999998599828 * sin ( 3*d + -3*lp + l );
        a += -0.00003 * sin ( 2*d + 3*lp + -1*l + -2*f );
        a += 0.00003 * sin ( 2*d + lp + l + -4*f );
        a += -0.000030012490274178253 * sin ( 2*d + lp + -4*l + 2*f );
        a += -0.00003 * sin ( 2*d + lp + -5*l + -2*f );
        a += 0.00003 * sin ( 2*d + 7*l );
        a += -0.00003 * sin ( 2*d + 6*f );
        a += 0.00003 * sin ( 2*d + -1*l + -6*f );
        a += -0.00003 * sin ( 2*d + -3*l + 4*f );
        a += 0.00003 * sin ( 2*d + -8*l );
        a += 0.00003 * sin ( 2*d + -1*lp + -3*l + 2*f );
        a += -0.00003 * sin ( 2*d + -1*lp + -5*l + -2*f );
        a += 0.00003 * sin ( 2*d + -2*lp + -1*l + 4*f );
        a += -0.00003 * sin ( 2*d + -3*lp + 2*l + 2*f );
        a += 0.00003 * sin ( 2*d + -3*lp + -4*l );
        a += -0.00003 * sin ( 2*d + -4*lp + 2*f );
        a += 0.000029993756070599268 * sin ( d + 2*lp + -2*f );
        a += -0.00002999999998599828 * sin ( d + 2*l + 4*f );
        a += 0.00003 * sin ( 3*lp + -1*l + 2*f );
        a += -0.00003 * sin ( 3*lp + -4*l );
        a += 0.00003 * sin ( 2*lp + 3*l + 2*f );
        a += 0.00003 * sin ( 2*lp + -3*l + 2*f );
        a += -0.00003 * sin ( lp + 3*l + 4*f );
        a += -0.00003 * sin ( lp + 2*l + -4*f );
        a += -0.00003 * sin ( lp + -3*l + -4*f );
        a += 0.00003 * sin ( 8*l );
        a += 0.00004 * sin ( 10*d + -5*l );
        a += 0.00004 * sin ( 10*d + -1*lp + -2*l );
        a += -0.00004 * sin ( 8*d + -2*f );
        a += -0.00003999999997199656 * sin ( 7*d + -1*l + -2*f );
        a += -0.000039999999985998284 * sin ( 7*d + -1*lp + -4*l );
        a += 0.00004 * sin ( 6*d + lp + l + -2*f );
        a += 0.00004 * sin ( 6*d + lp + 2*f );
        a += 0.00004 * sin ( 6*d + 4*l );
        a += 0.00004 * sin ( 6*d + -4*lp + -1*l );
        a += 0.00004 * sin ( 6*d + -4*lp + -2*l );
        a += -0.00003999999997199656 * sin ( 5*d + 2*lp );
        a += -0.000039999999985998284 * sin ( 5*d + lp + -2*l + 2*f );
        a += 0.00003999999997199656 * sin ( 5*d + -1*lp + -2*l + 2*f );
        a += 0.00004 * sin ( 4*d + lp + 3*l + -2*f );
        a += 0.00004 * sin ( 4*d + lp + l + -4*f );
        a += -0.00004 * sin ( 4*d + lp + -3*l + -2*f );
        a += -0.00004 * sin ( 4*d + lp + -5*l );
        a += -0.00004 * sin ( 4*d + 4*l + 2*f );
        a += 0.00004 * sin ( 4*d + -1*lp + 4*f );
        a += 0.00004 * sin ( 4*d + -1*lp + -4*l + -2*f );
        a += -0.00004 * sin ( 4*d + -2*lp + 2*l + 2*f );
        a += -0.00004 * sin ( 4*d + -2*lp + -3*l + 2*f );
        a += 0.00004 * sin ( 4*d + -3*lp + -1*l + -2*f );
        a += -0.00004 * sin ( 4*d + -3*lp + -2*l + 2*f );
        a += 0.000039993756084600996 * sin ( 4*d + -5*lp + -1*l );
        a += 0.000039999999985998284 * sin ( 3*d + 3*lp + -2*l );
        a += -0.000039999999985998284 * sin ( 3*d + lp + 2*l + 2*f );
        a += -0.000039999999985998284 * sin ( 3*d + -1*l + 4*f );
        a += -0.00003999999997199656 * sin ( 3*d + -1*lp + 2*l + -2*f );
        a += -0.00003999999997199656 * sin ( 3*d + -2*lp + l + -2*f );
        a += 0.00004 * sin ( 2*d + 3*lp + l );
        a += 0.00004 * sin ( 2*d + 2*lp + -4*f );
        a += 0.00004 * sin ( 2*d + 2*lp + -3*l + -2*f );
        a += 0.00004 * sin ( 2*d + lp + 4*l + 2*f );
        a += -0.00004 * sin ( 2*d + -1*l + 6*f );
        a += 0.00004 * sin ( 2*d + -1*lp + 6*l );
        a += 0.00004 * sin ( 2*d + -2*lp + 5*l );
        a += 0.00004 * sin ( 2*d + -2*lp + 4*f );
        a += -0.00004 * sin ( 2*d + -3*lp + -2*l + -2*f );
        a += 0.00004 * sin ( 2*d + -4*lp + -2*f );
        a += 0.000039999999985998284 * sin ( d + 2*lp + -4*l );
        a += 0.000039999999985998284 * sin ( d + lp + 5*l );
        a += -0.00003999999997199656 * sin ( d + -2*lp + -1*l + -2*f );
        a += 0.00004 * sin ( 3*lp + l + 2*f );
        a += -0.00004 * sin ( lp + -2*l + 4*f );
        a += -0.00004 * sin ( 2*l + 6*f );
        a += 0.00005 * sin ( 10*d + -1*lp + -3*l );
        a += 0.00005 * sin ( 8*d + 2*l );
        a += -0.00005 * sin ( 8*d + -1*l + -2*f );
        a += 0.00005 * sin ( 8*d + -3*l + -2*f );
        a += -0.00005 * sin ( 8*d + -4*l + 2*f );
        a += 0.00005 * sin ( 8*d + -2*lp );
        a += 0.00004999999997199656 * sin ( 7*d );
        a += -0.000049999998750306444 * sin ( 7*d + -1*l );
        a += -0.00004999999997199656 * sin ( 7*d + -2*l + -2*f );
        a += 0.00005 * sin ( 6*d + lp + -3*l + 2*f );
        a += -0.00005 * sin ( 6*d + 2*l + 2*f );
        a += 0.00005 * sin ( 6*d + -3*lp + l );
        a += 0.00004999999997199656 * sin ( 5*d + lp + 2*l );
        a += 0.00004999999997199656 * sin ( 5*d + lp + -2*f );
        a += -0.00004999999997199656 * sin ( 5*d + lp + -1*l + 2*f );
        a += 0.00005 * sin ( 4*d + 3*lp );
        a += -0.00005 * sin ( 4*d + 2*lp + -4*l );
        a += -0.00005 * sin ( 4*d + -1*lp + -6*l );
        a += 0.00004999999997199656 * sin ( 3*d + l + -4*f );
        a += -0.00004999999997199656 * sin ( 3*d + -5*l );
        a += -0.00004999999997199656 * sin ( 3*d + -1*lp + 3*l );
        a += 0.00004999999997199656 * sin ( 3*d + -1*lp + l + 2*f );
        a += -0.00004999999997199656 * sin ( 3*d + -3*lp + -2*f );
        a += 0.00005 * sin ( 2*d + -4*l + -4*f );
        a += 0.00005 * sin ( 2*d + -1*lp + 2*l + 4*f );
        a += 0.00005 * sin ( 2*d + -1*lp + -2*l + -4*f );
        a += 0.00005 * sin ( 2*d + -2*lp + -5*l );
        a += -0.000049993756084600995 * sin ( 2*d + -3*lp + 2*l + -2*f );
        a += 0.000049993756084600995 * sin ( 2*d + -5*lp + l );
        a += 0.00004999999997199656 * sin ( d + 2*lp + l + 2*f );
        a += 0.00004999999997199656 * sin ( d + 4*l + 2*f );
        a += -0.00004999999997199656 * sin ( d + -6*l );
        a += -0.00004999999997199656 * sin ( d + -2*lp + 3*l );
        a += 0.00004999999997199656 * sin ( d + -2*lp + -3*l );
        a += -0.00005 * sin ( 3*lp + 3*l );
        a += 0.00005 * sin ( lp + 5*l + 2*f );
        a += 0.00006 * sin ( 10*d + -1*l );
        a += -0.00006 * sin ( 8*d + lp );
        a += -0.00006 * sin ( 8*d + -1*l + 2*f );
        a += 0.00006 * sin ( 8*d + -2*lp + -4*l );
        a += 0.00005999999997199656 * sin ( 7*d + lp + -3*l );
        a += -0.00006 * sin ( 6*d + 2*lp + -4*l );
        a += -0.00006 * sin ( 6*d + -1*lp + l + 2*f );
        a += -0.00005999999997199656 * sin ( 5*d + lp + -4*l );
        a += 0.00005999999997199656 * sin ( 5*d + 2*f );
        a += -0.00006 * sin ( 4*d + -1*lp + 3*l + 2*f );
        a += -0.00006 * sin ( 4*d + -1*lp + l + -4*f );
        a += 0.00006 * sin ( 4*d + -1*lp + -2*l + 4*f );
        a += -0.00006 * sin ( 4*d + -3*lp + 2*f );
        a += -0.00005999999997199656 * sin ( 3*d + 2*lp + 2*l );
        a += -0.00005999999997199656 * sin ( 3*d + lp + -5*l );
        a += 0.00005999999997199656 * sin ( 3*d + -1*l + -4*f );
        a += 0.00006 * sin ( 2*d + 2*lp + -2*l + -2*f );
        a += -0.00006 * sin ( 2*d + lp + l + 4*f );
        a += -0.00006000000119368668 * sin ( d + lp + -3*l + 2*f );
        a += -0.00005999999997199656 * sin ( d + 3*l + -2*f );
        a += 0.00006 * sin ( lp + -5*l + -2*f );
        a += -0.00007 * sin ( 8*d + lp + -4*l );
        a += 0.00006999999995799483 * sin ( 7*d + lp + -1*l );
        a += -0.00006999999938915493 * sin ( 6*d + lp + -1*l + -2*f );
        a += 0.00006999739311821302 * sin ( 6*d + -1*l + -2*f );
        a += -0.00007 * sin ( 6*d + -2*lp + -1*l + 2*f );
        a += -0.00007 * sin ( 6*d + -2*lp + -2*l + 2*f );
        a += -0.00006999999997199656 * sin ( 5*d + -1*lp + -4*l );
        a += 0.00007 * sin ( 4*d + -3*l + 4*f );
        a += -0.00007 * sin ( 4*d + -7*l );
        a += 0.00007 * sin ( 4*d + -1*lp + -3*l + -2*f );
        a += 0.00006999375608460098 * sin ( 4*d + -3*lp + -2*f );
        a += 0.00006999999995799483 * sin ( 3*d + lp + -2*l + 2*f );
        a += -0.00006999999995799483 * sin ( 3*d + 4*l );
        a += 0.00006998751216920198 * sin ( 2*d + 3*lp + -2*f );
        a += -0.00007 * sin ( 2*d + -5*l + 2*f );
        a += -0.00007 * sin ( 2*d + -2*lp + 3*l + 2*f );
        a += 0.00006999375604259582 * sin ( d + 3*lp + -2*l );
        a += 0.00006999999995799483 * sin ( d + lp + 4*f );
        a += -0.00006999999995799483 * sin ( d + -2*lp + 2*f );
        a += 0.00006999375604259582 * sin ( d + -3*lp + l );
        a += 0.00006999375608460098 * sin ( 3*lp + 2*f );
        a += 0.00007 * sin ( lp + -4*l + 2*f );
        a += 0.00008 * sin ( 8*d + -1*lp + l );
        a += 0.00008 * sin ( 6*d + lp + -2*f );
        a += -0.00008 * sin ( 6*d + -4*f );
        a += 0.00008 * sin ( 6*d + -2*lp + 2*l );
        a += -0.00007999375604259583 * sin ( 5*d + 2*lp + -1*l );
        a += -0.0000799946234162765 * sin ( 4*d + 2*lp + l );
        a += 0.00008 * sin ( 4*d + 2*lp + -2*l + -2*f );
        a += -0.00008 * sin ( 4*d + lp + 4*l );
        a += 0.00008 * sin ( 4*d + -1*lp + -1*l + 4*f );
        a += -0.00007999999995799484 * sin ( 3*d + -2*lp + -1*l + -2*f );
        a += 0.00008 * sin ( 2*d + lp + 4*l + -2*f );
        a += 0.00008 * sin ( 2*d + 3*l + 4*f );
        a += 0.00008 * sin ( 2*d + 2*l + -4*f );
        a += -0.00008 * sin ( 2*d + -2*lp + -4*f );
        a += -0.00007999999995799484 * sin ( d + lp + -1*l + -2*f );
        a += -0.00007999999995799484 * sin ( d + -2*lp + l + -2*f );
        a += 0.00007999375608460099 * sin ( 3*lp + -1*l + -2*f );
        a += 0.00009 * sin ( 6*d + -1*lp + 3*l );
        a += 0.00009 * sin ( 4*d + lp + 2*l + 2*f );
        a += 0.00009 * sin ( 4*d + l + 4*f );
        a += -0.00008999375608460099 * sin ( 4*d + -2*lp + 2*l + -2*f );
        a += -0.00008998751216920199 * sin ( 4*d + -3*lp + -1*l + 2*f );
        a += 0.00008998751216920199 * sin ( 4*d + -4*lp + l );
        a += -0.0000899875121131951 * sin ( 3*d + 2*lp + -2*f );
        a += -0.00008998751216920199 * sin ( 2*d + 3*lp + -3*l );
        a += -0.00008998751212719683 * sin ( d + 3*lp + l );
        a += -0.00008999999994399312 * sin ( d + lp + 3*l + 2*f );
        a += 0.00008999999994399312 * sin ( d + -4*l + -2*f );
        a += -0.00008998751216920199 * sin ( 4*lp + -2*l );
        a += -0.00008999375608460099 * sin ( 2*lp + -5*l );
        a += 0.00009 * sin ( 3*l + -4*f );
        a += 0.0001 * sin ( 6*d + lp + -1*l + 2*f );
        a += 0.00009999999994399312 * sin ( 5*d + -3*l + 2*f );
        a += 0.0001 * sin ( 4*d + -5*l + -2*f );
        a += 0.0001000008673316755 * sin ( 2*d + -1*lp + -6*l );
        a += -0.00010999999938915494 * sin ( 8*d + -2*l + 2*f );
        a += -0.00011 * sin ( 8*d + -3*l + 2*f );
        a += 0.00010999999994399311 * sin ( 7*d + lp + -2*l );
        a += -0.000109993754806904 * sin ( 5*d + -2*lp + -1*l );
        a += -0.00011 * sin ( 4*d + 4*l + -2*f );
        a += 0.00010999999994399311 * sin ( 3*d + -3*l + 2*f );
        a += 0.00010999999994399311 * sin ( 3*d + -3*l + -2*f );
        a += -0.00011000086422144333 * sin ( 3*d + -1*lp + 2*l );
        a += -0.0001100008673316755 * sin ( 2*d + -6*l + -2*f );
        a += -0.00010999375608460099 * sin ( 2*d + -2*lp + 3*l + -2*f );
        a += -0.0001099875121131951 * sin ( d + 3*lp + -1*l );
        a += -0.0001099937560285941 * sin ( d + 2*lp + 3*l );
        a += 0.0001099937560285941 * sin ( d + 2*lp + 2*f );
        a += 0.00011000086727566862 * sin ( d + lp + -5*l );
        a += 0.00010999999994399311 * sin ( d + l + -4*f );
        a += -0.00010999999994399311 * sin ( d + -1*l + 4*f );
        a += -0.00010999999994399311 * sin ( d + -1*lp + -2*l + -2*f );
        a += 0.00010998126819779609 * sin ( d + -4*lp );
        a += 0.00010999608949284817 * sin ( lp + l + -4*f );
        a += 0.00011999999938915494 * sin ( 10*d + -4*l );
        a += -0.00011999999931914634 * sin ( 7*d + -1*lp + -2*l );
        a += 0.00012 * sin ( 6*d + lp + -2*l + 2*f );
        a += 0.00011999375601459239 * sin ( 5*d + -2*lp );
        a += 0.00011999375608460099 * sin ( 4*d + 2*lp + -1*l + 2*f );
        a += 0.00011999375608460099 * sin ( 2*d + 2*lp + l + 2*f );
        a += -0.0001200008673316755 * sin ( 2*d + 5*l + 2*f );
        a += -0.00012 * sin ( 2*d + -1*lp + 4*l + 2*f );
        a += 0.00011999608949284817 * sin ( 2*d + -1*lp + -2*l + 4*f );
        a += 0.00011998126825380298 * sin ( 2*d + -4*lp + 2*l );
        a += -0.0001199999999299914 * sin ( d + lp + -3*l + -2*f );
        a += 0.0001199999999299914 * sin ( d + -1*lp + 2*l + 2*f );
        a += 0.0001199999999299914 * sin ( d + -1*lp + 2*l + -2*f );
        a += 0.00012999999877830987 * sin ( 10*d + -2*l );
        a += -0.00012999999938915493 * sin ( 6*d + lp + 2*l );
        a += -0.00012998751209919335 * sin ( 5*d + -2*lp + -3*l );
        a += 0.00012999608949284817 * sin ( 4*d + -2*l + -4*f );
        a += -0.00012999999992999137 * sin ( 3*d + -1*lp + -4*l );
        a += -0.00012998751216920196 * sin ( 2*d + -2*lp + -3*l + -2*f );
        a += 0.00012999999992999137 * sin ( d + -1*lp + -1*l + 2*f );
        a += 0.00012999999992999137 * sin ( d + -1*lp + -2*l + 2*f );
        a += 0.00012998750911497666 * sin ( 2*lp + -1*l + 2*f );
        a += 0.00012999608949284817 * sin ( lp + -1*l + 4*f );
        a += 0.00013998751216920196 * sin ( 6*d + -2*lp + -4*l );
        a += 0.00013999999992999137 * sin ( 5*d + -1*lp + l );
        a += -0.00014 * sin ( 4*d + -1*lp + 3*l + -2*f );
        a += -0.00013998751209919335 * sin ( 3*d + 3*lp + -1*l );
        a += 0.00013999999992999137 * sin ( 3*d + 2*l + 2*f );
        a += -0.00013998751208519163 * sin ( 3*d + -2*lp + -3*l );
        a += -0.00013998751216920196 * sin ( 2*d + 2*lp + 2*l + -2*f );
        a += -0.00014000086726166687 * sin ( d + -1*lp + 4*l );
        a += 0.00014000086726166687 * sin ( d + -1*lp + -4*l );
        a += 0.00013998751216920196 * sin ( 2*lp + -3*l + -2*f );
        a += 0.0001400008673316755 * sin ( lp + 4*l + -2*f );
        a += 0.00014998751094751184 * sin ( 8*d + -2*lp + -1*l );
        a += 0.00015000173405250593 * sin ( 2*d + lp + -6*l );
        a += 0.00014999217898569632 * sin ( 2*d + -6*f );
        a += -0.00014999608949284817 * sin ( 2*d + -1*lp + -1*l + -4*f );
        a += -0.00014999608940883784 * sin ( d + l + 4*f );
        a += -0.00014998837950087746 * sin ( 2*lp + 4*l );
        a += -0.00014999608949284817 * sin ( lp + 2*l + 4*f );
        a += -0.000150001734663351 * sin ( 6*l + 2*f );
        a += -0.0001599937553897456 * sin ( 7*d + -1*lp + -3*l );
        a += -0.00016 * sin ( 6*d + -1*lp + l + -2*f );
        a += 0.00015999999991598969 * sin ( 5*d + lp + -1*l + -2*f );
        a += -0.0001599960894928482 * sin ( 2*d + lp + -1*l + 4*f );
        a += -0.00015998126825380297 * sin ( 2*d + -3*lp + l + 2*f );
        a += -0.00015998126825380297 * sin ( 3*lp + -2*f );
        a += 0.0001599969568245237 * sin ( 4*l + 4*f );
        a += 0.00015999217898569635 * sin ( l + -6*f );
        a += 0.0001700008661099854 * sin ( 10*d + -3*l );
        a += -0.00016999375486291088 * sin ( 8*d + lp + -1*l );
        a += -0.00017000086733167551 * sin ( 6*d + -4*l + 2*f );
        a += 0.00017000173405250595 * sin ( 4*d + 5*l );
        a += 0.00016999608888200313 * sin ( 4*d + -1*l + -4*f );
        a += -0.00016998126815579093 * sin ( 3*d + -3*lp + -2*l );
        a += -0.00016998593507029734 * sin ( 2*d + lp + 4*f );
        a += 0.00016998593507029734 * sin ( 2*d + lp + -1*l + -4*f );
        a += 0.00017000606939118133 * sin ( d + lp + -2*f );
        a += -0.00016998593507029734 * sin ( lp + -2*l + -4*f );
        a += 0.00018000173405250595 * sin ( 8*d + -5*l );
        a += -0.00017999999938915495 * sin ( 6*d + 2*l + -2*f );
        a += 0.00018 * sin ( 6*d + -3*l + -2*f );
        a += 0.00017999375486291088 * sin ( 6*d + -1*lp + -1*l + -2*f );
        a += -0.00018000173466335101 * sin ( 2*d + 5*l + -2*f );
        a += 0.00017998593507029733 * sin ( 2*d + -1*lp + l + -4*f );
        a += 0.00018998837827918736 * sin ( 8*d + -2*lp + -3*l );
        a += -0.00018999999990198797 * sin ( 5*d + l + -2*f );
        a += 0.00018998751155835692 * sin ( 4*d + 2*lp + -2*l + 2*f );
        a += -0.0001899946234162765 * sin ( 2*d + -1*lp + 4*l + -2*f );
        a += 0.0001899921788876843 * sin ( d + -1*l + -4*f );
        a += -0.00018999217898569635 * sin ( l + 6*f );
        a += 0.00020000173405250595 * sin ( 6*d + -5*l );
        a += 0.0001999821349746334 * sin ( 6*d + -3*lp + -3*l );
        a += 0.00019997502433840398 * sin ( 4*d + 3*lp + -2*l );
        a += -0.0001999946234162765 * sin ( 4*d + -1*lp + -4*l );
        a += 0.00019997502372755892 * sin ( 4*d + -3*lp + 2*l );
        a += -0.0001999883793888637 * sin ( 3*d + 2*lp + -3*l );
        a += 0.00019999375597258722 * sin ( 3*d + lp + l + -2*f );
        a += 0.00019999375475089712 * sin ( 3*d + -1*lp + 2*f );
        a += 0.00019999375597258722 * sin ( 3*d + -1*lp + -2*l + 2*f );
        a += -0.000199995490747952 * sin ( 2*d + lp + 5*l );
        a += -0.00019999462219458638 * sin ( 2*d + lp + -4*l + -2*f );
        a += -0.00020000173455133723 * sin ( d + 5*l );
        a += 0.0001999750242263902 * sin ( d + -3*lp + -1*l );
        a += -0.00020998126703211285 * sin ( 6*d + 2*lp + -1*l );
        a += -0.00020999375597258722 * sin ( 5*d + -1*lp + -2*f );
        a += -0.00020998751155835692 * sin ( 4*d + -2*lp + l + 2*f );
        a += -0.00020997502433840398 * sin ( 2*d + -3*lp + -1*l + -2*f );
        a += -0.000209995490747952 * sin ( lp + 6*l );
        a += -0.0002199937559585855 * sin ( 3*d + lp + l + 2*f );
        a += 0.00022997502372755892 * sin ( 4*d + 3*lp + -1*l );
        a += 0.00022999695560283357 * sin ( 4*d + -3*l + -2*f );
        a += -0.0002299859356811424 * sin ( lp + -4*f );
        a += -0.0002299978241561992 * sin ( 5*l + -2*f );
        a += -0.00023999462280543143 * sin ( 8*d + lp + -3*l );
        a += 0.00023997502311671386 * sin ( 6*d + -3*lp );
        a += 0.00023999608814514258 * sin ( 5*d + -1*l + 2*f );
        a += -0.00023998533632540116 * sin ( 2*d + lp + -3*l + 2*f );
        a += 0.00023999304631737184 * sin ( 2*d + -3*l + -4*f );
        a += -0.0002399963580796275 * sin ( lp + -6*l );
        a += 0.00024998213375294334 * sin ( 8*d + -2*lp + -2*l );
        a += -0.00025000173330164366 * sin ( 7*d + -4*l );
        a += -0.0002499907129091247 * sin ( 6*d + -1*lp + -2*f );
        a += 0.00024999217884567914 * sin ( 3*d + -4*f );
        a += 0.00024997969115489834 * sin ( 2*d + -1*lp + l + 4*f );
        a += 0.00024998213544546126 * sin ( d + -2*lp + -2*l );
        a += -0.0002599836010512051 * sin ( 6*d + lp + -2*l + -2*f );
        a += -0.00025998360044036 * sin ( 6*d + -1*lp + 2*f );
        a += 0.0002599892466925357 * sin ( 3*d + lp + 3*l );
        a += 0.0002599696471438354 * sin ( 2*d + -3*lp + 3*l );
        a += 0.00026996964714383543 * sin ( 4*d + -3*lp + -3*l );
        a += 0.00026995004867680795 * sin ( 2*d + -5*lp + -1*l );
        a += 0.0002799892437783277 * sin ( 6*d + lp + -4*l );
        a += -0.00027999609056051934 * sin ( 3*d + -2*l + -2*f );
        a += 0.00027998359967549603 * sin ( d + lp + 2*l + -2*f );
        a += -0.00028998837827918735 * sin ( 8*d + lp + -2*l );
        a += 0.00029000173283081585 * sin ( 8*d + l );
        a += 0.0002999687802549843 * sin ( 3*d + -3*lp );
        a += -0.00030999695560283356 * sin ( 6*d + l + 2*f );
        a += -0.00030999695665650303 * sin ( 5*d + -2*l + -2*f );
        a += 0.00030997675778006483 * sin ( 4*d + -2*lp + 3*l );
        a += 0.00031998446838288065 * sin ( 4*d + lp + 2*l + -2*f );
        a += 0.0003199901129425384 * sin ( 4*d + -1*lp + 4*l );
        a += 0.00031995091539763844 * sin ( 2*d + -4*lp + -2*l );
        a += -0.0003199711136632315 * sin ( d + -2*lp + -2*f );
        a += -0.00031995004867680797 * sin ( 4*lp + l );
        a += 0.0003299509147867933 * sin ( 4*d + -4*lp + -2*l );
        a += -0.00032997588171453617 * sin ( d + -2*lp + l );
        a += -0.00033999011355338347 * sin ( 4*d + -1*lp + -5*l );
        a += 0.00034998837808316327 * sin ( 5*d + lp + l );
        a += 0.00034998826725685437 * sin ( 4*d + 4*f );
        a += 0.0003499814252074043 * sin ( 2*d + lp + 3*l + 2*f );
        a += -0.0003499642705601119 * sin ( 3*lp + -3*l );
        a += 0.0003499680706557758 * sin ( 2*lp + 2*l + 2*f );
        a += -0.00035999391242735727 * sin ( 4*d + 3*l + 2*f );
        a += -0.00035997588780898503 * sin ( 3*d + 2*lp + -2*l );
        a += 0.00036000433665837753 * sin ( 2*d + -7*l );
        a += -0.00035998229314992486 * sin ( 2*d + -1*lp + -4*l + -2*f );
        a += 0.00036998924438917273 * sin ( 8*d + -1*lp );
        a += 0.00036962909325483496 * sin ( 3*d + l );
        a += 0.00036997502412837815 * sin ( 3*d + -2*lp + l );
        a += 0.00036999000130936033 * sin ( 2*d + -2*l + -4*f );
        a += -0.00036997675697319566 * sin ( d + -2*lp + 2*l );
        a += 0.00038000260016249137 * sin ( 6*d + 3*l );
        a += 0.0003799580254230228 * sin ( 2*d + 3*lp );
        a += 0.00037997051365464007 * sin ( d + 2*lp + -3*l );
        a += 0.00037999477711962845 * sin ( d + -3*l + 2*f );
        a += -0.0003899814245965592 * sin ( 6*d + -1*lp + -3*l + 2*f );
        a += 0.00038999391221733145 * sin ( 5*d + -2*l + 2*f );
        a += -0.0003899805572648837 * sin ( 4*d + lp + -2*l + -2*f );
        a += -0.0003899687796021341 * sin ( 3*d + 2*lp + l );
        a += -0.00039997968970918073 * sin ( 5*d + -1*lp + -1*l + -2*f );
        a += 0.0003999626928503622 * sin ( 2*lp + 2*l + -2*f );
        a += -0.0003999609642954618 * sin ( 2*lp + l + -2*f );
        a += -0.0004099814239857142 * sin ( 4*d + -1*lp + 2*l + 2*f );
        a += 0.00041000433604753247 * sin ( 2*d + 6*l );
        a += 0.0004100043366583775 * sin ( 7*l );
        a += 0.00041999477975903276 * sin ( 4*d + -4*l + -2*f );
        a += 0.00042997518190285034 * sin ( 4*d + -1*lp + -2*l + -2*f );
        a += 0.00043997518129200534 * sin ( 6*d + -1*lp + -2*l + -2*f );
        a += 0.00043997138119634136 * sin ( 2*d + -2*lp + 4*l );
        a += -0.00045998299961089775 * sin ( 5*d + lp + -3*l );
        a += 0.0004799751800703152 * sin ( 4*d + lp + l + 2*f );
        a += -0.000489966005834308 * sin ( 2*d + 2*lp + -4*l );
        a += 0.0004899464061455905 * sin ( 2*d + -3*lp + -3*l );
        a += 0.0004999982668891498 * sin ( 5*d + l );
        a += 0.0004999063400473248 * sin ( 2*d + -5*lp );
        a += 0.0004999847373004705 * sin ( d + lp + 4*l );
        a += -0.0005099651360592523 * sin ( 6*d + 2*lp + -3*l );
        a += 0.00050996737800621 * sin ( 4*d + lp + -2*f );
        a += -0.0005099939133690129 * sin ( 3*d + 2*l + -2*f );
        a += -0.0005199642690583874 * sin ( 5*d + -2*lp + -2*l );
        a += -0.0005199555816032878 * sin ( 4*d + -2*lp + l + -2*f );
        a += -0.0005199359831362602 * sin ( 2*d + -3*lp + -1*l + 2*f );
        a += -0.0005299438032456827 * sin ( 3*d + -3*lp + -1*l );
        a += 0.0005399188266564327 * sin ( 4*d + -4*lp );
        a += -0.0005399917378052466 * sin ( 2*d + -4*l + 2*f );
        a += -0.0005399804465593596 * sin ( d + 4*f );
        a += -0.0005499502050195643 * sin ( 2*d + -2*lp + 2*l + 2*f );
        a += 0.0005499769159553564 * sin ( lp + 4*l + 2*f );
        a += 0.0005599580242013326 * sin ( 6*d + -2*lp + l );
        a += 0.0005599813086874658 * sin ( 2*d + l + -4*f );
        a += -0.000559937559927127 * sin ( d + 3*lp );
        a += 0.00055999478006184 * sin ( d + 3*l + 2*f );
        a += 0.0005699856036904905 * sin ( 2*d + -1*lp + 5*l );
        a += 0.0005799847351371248 * sin ( 8*d + -1*lp + -4*l );
        a += 0.0005899330485397366 * sin ( 6*d + -3*lp + -1*l );
        a += 0.0005899330491505817 * sin ( 6*d + -3*lp + -2*l );
        a += -0.0005900034671721272 * sin ( 5*d + -4*l );
        a += -0.0005899784921213763 * sin ( 3*d + lp + -4*l );
        a += 0.0005899830482375773 * sin ( 2*d + 2*l + 4*f );
        a += -0.0005899687159427854 * sin ( 6*f );
        a += 0.0005999462945124124 * sin ( 2*d + 2*lp + -2*l + 2*f );
        a += 0.0005999641579940492 * sin ( d + -1*lp + l + 2*f );
        a += 0.0005999462945124124 * sin ( 2*lp + -2*l + 2*f );
        a += -0.0006099588909221632 * sin ( 6*d + 2*lp + -2*l );
        a += -0.0006099813147959163 * sin ( 4*d + l + -4*f );
        a += 0.0006099821809059017 * sin ( 4*d + -2*l + 4*f );
        a += -0.0006200060694891934 * sin ( 4*d + -6*l );
        a += -0.0006200034659364354 * sin ( 3*d + 3*l );
        a += -0.0006199524286271685 * sin ( lp + l + 4*f );
        a += 0.0006299650271302565 * sin ( d + lp + -2*l + 2*f );
        a += -0.0006299524280163235 * sin ( lp + -1*l + -4*f );
        a += -0.0006399650244260743 * sin ( 6*d + -1*lp + -1*l + 2*f );
        a += 0.0006399793573317113 * sin ( 4*d + lp + -4*l );
        a += 0.0006399676288644811 * sin ( lp + -4*l + -2*f );
        a += -0.0006499142076037418 * sin ( 2*d + -3*lp + l + -2*f );
        a += -0.0006599552520560159 * sin ( 2*d + 2*lp + 2*l );
        a += -0.0006800025973550664 * sin ( 7*d + -2*l );
        a += 0.0006799791346762001 * sin ( 2*l + -4*f );
        a += 0.0006899784900000356 * sin ( 6*d + -1*lp + 2*l );
        a += 0.0006899917362055099 * sin ( d + -3*l + -2*f );
        a += 0.0006899784920653693 * sin ( d + -1*lp + -3*l );
        a += -0.0007000043384909128 * sin ( 4*d + -4*l );
        a += -0.0007099658944339286 * sin ( d + lp + -2*l + -2*f );
        a += 0.0007199782697879048 * sin ( 4*d + -1*l + 4*f );
        a += -0.0007199346752349801 * sin ( 2*d + -2*lp + -2*l + 2*f );
        a += -0.0007200052023763147 * sin ( d + -5*l );
        a += 0.0007499587813263154 * sin ( 3*d + -1*lp + -1*l + 2*f );
        a += -0.0007499070957458223 * sin ( 2*d + -3*lp + 2*f );
        a += -0.0007699731140271572 * sin ( 4*d + lp + 3*l );
        a += -0.0007699908718860546 * sin ( d + 2*l + -2*f );
        a += -0.0007799566058885644 * sin ( 4*d + -1*lp + -3*l + 2*f );
        a += -0.000799955737335199 * sin ( 6*d + -1*lp + -2*l + 2*f );
        a += -0.000829971378142116 * sin ( 6*d + lp + l );
        a += 0.0008299908663604457 * sin ( 3*d + l + 2*f );
        a += -0.0008299414068729421 * sin ( lp + 4*f );
        a += -0.0008399540052640164 * sin ( 3*d + -1*lp + l + -2*f );
        a += -0.0008399557399273674 * sin ( d + lp + 2*l + 2*f );
        a += 0.0008499574744419301 * sin ( 2*d + lp + 3*l + -2*f );
        a += 0.0008598706093857465 * sin ( 4*d + -4*lp + -1*l );
        a += 0.0008799427642252179 * sin ( 2*d + -2*lp + -4*l );
        a += -0.0008899174065111293 * sin ( 4*d + -2*lp + 2*f );
        a += 0.0008899383618649305 * sin ( 2*d + -1*lp + 4*f );
        a += 0.0008999174059002843 * sin ( 4*d + 2*lp + -1*l + -2*f );
        a += -0.0008999182744536499 * sin ( 4*d + -2*lp + -2*l + 2*f );
        a += 0.0009099139359627372 * sin ( 4*d + -2*lp + -2*f );
        a += -0.0009298964517681732 * sin ( 2*d + 3*lp + -2*l );
        a += 0.0009299329858920523 * sin ( 2*d + -1*lp + -1*l + 4*f );
        a += -0.000939986956912194 * sin ( 6*d + l + -2*f );
        a += -0.0009498964548223984 * sin ( 3*lp + 2*l );
        a += -0.0009599477594600754 * sin ( 3*d + lp + 2*f );
        a += 0.000959918275064495 * sin ( 2*d + 2*lp + 2*f );
        a += -0.0009800051991820723 * sin ( 7*d + -3*l );
        a += -0.0009999486285962827 * sin ( d + -1*lp + -1*l + -2*f );
        a += 0.0009999128984807715 * sin ( 2*lp + -2*l + -2*f );
        a += 0.001019960800673341 * sin ( 5*d + -1*lp );
        a += -0.001019905518697694 * sin ( 3*d + -2*lp + -2*f );
        a += -0.001019928540560155 * sin ( d + 2*lp + 2*l );
        a += 0.0010599419428248109 * sin ( lp + -3*l + 2*f );
        a += 0.001079901011227405 * sin ( 4*d + -2*lp + -1*l + -2*f );
        a += -0.0010798393904195968 * sin ( 4*lp + -1*l );
        a += -0.0010899865163425894 * sin ( 4*d + 3*l + -2*f );
        a += -0.001109989119559306 * sin ( 2*d + -5*l + -2*f );
        a += -0.0011099027440582207 * sin ( 2*d + -2*lp + -2*l + -2*f );
        a += 0.0011199597545887682 * sin ( 8*d + -1*lp + -1*l );
        a += 0.0011599384728680313 * sin ( 3*d + lp + -1*l + -2*f );
        a += -0.0011599419379380504 * sin ( 2*d + lp + -3*l + -2*f );
        a += -0.0011699428089347963 * sin ( 2*d + -1*lp + 3*l + 2*f );
        a += -0.0011899203887261133 * sin ( 2*lp + -4*l );
        a += -0.0012099410736606 * sin ( 4*d + -1*lp + 2*l + -2*f );
        a += 0.001229956983138402 * sin ( d + -4*f );
        a += -0.0012699089468538726 * sin ( 3*d + 2*lp + -1*l );
        a += -0.0012798126862031002 * sin ( 4*lp );
        a += -0.001309985207830464 * sin ( 2*d + 4*l + 2*f );
        a += -0.0013199808668961708 * sin ( 6*d + 2*f );
        a += -0.0013298809691365471 * sin ( 2*d + -2*lp + 2*l + -2*f );
        a += 0.001329802793037188 * sin ( 2*d + -4*lp + l );
        a += -0.0013699765325499275 * sin ( 5*d + -2*f );
        a += -0.0013799291856651421 * sin ( 3*d + lp + -1*l + 2*f );
        a += 0.0013900051948273773 * sin ( 8*d );
        a += -0.0014199769653924453 * sin ( d + -2*l + 2*f );
        a += -0.0014899507383267976 * sin ( d + -1*lp + 3*l );
        a += 0.0015299521915532782 * sin ( 3*l + 4*f );
        a += -0.0015399546402541152 * sin ( 5*d + -1*lp + -1*l );
        a += 0.001549953343348046 * sin ( d + lp + -4*l );
        a += 0.0015499164248736373 * sin ( d + -1*lp + 2*f );
        a += -0.0015699441410966274 * sin ( d + lp + l + -2*f );
        a += -0.0015998574564972977 * sin ( 4*d + -2*lp + -1*l + 2*f );
        a += 0.001599822389060835 * sin ( 4*d + -3*lp + l );
        a += 0.001629791552903366 * sin ( 2*d + -3*lp + -2*f );
        a += 0.0016599140791088043 * sin ( lp + 3*l + -2*f );
        a += 0.001699946225000089 * sin ( 8*d + -1*lp + -3*l );
        a += 0.0017299514308226772 * sin ( 2*d + lp + -5*l );
        a += -0.0017400112743596644 * sin ( 3*d + -4*l );
        a += 0.0017599425855230968 * sin ( 6*d + -1*lp + -4*l );
        a += 0.0017799451936265738 * sin ( 2*d + -1*lp + -5*l );
        a += 0.0018099356458895722 * sin ( 5*d + lp );
        a += 0.0018299035003675633 * sin ( 4*d + lp + l + -2*f );
        a += 0.0018599043640341684 * sin ( 4*d + lp + 2*f );
        a += -0.0018797903015413196 * sin ( 2*d + 3*lp + -1*l );
        a += -0.00188993998433848 * sin ( 5*d + -1*lp + -3*l );
        a += -0.0018899026326246072 * sin ( 3*d + -1*lp + -1*l + -2*f );
        a += -0.0019098581205188212 * sin ( 3*d + 2*lp );
        a += 0.0019599328673942356 * sin ( 8*d + -1*lp + -2*l );
        a += 0.0019800138705875123 * sin ( 4*d + 4*l );
        a += 0.001979854682053944 * sin ( 2*d + lp + -4*f );
        a += -0.001999829009065619 * sin ( 2*d + 2*lp + l + -2*f );
        a += -0.0020099804174057924 * sin ( 5*l + 2*f );
        a += -0.00207985430032161 * sin ( 4*d + 2*lp );
        a += -0.0021198871014783153 * sin ( d + -1*lp + l + -2*f );
        a += -0.0021399669619742946 * sin ( 6*d + -2*f );
        a += 0.002199886664514234 * sin ( 4*d + lp + -2*l + 2*f );
        a += -0.0022798801966037443 * sin ( 2*d + lp + -1*l + -2*f );
        a += 0.002289835746031381 * sin ( d + -2*lp + -1*l );
        a += -0.002319884752370452 * sin ( 2*d + -1*lp + 3*l + -2*f );
        a += -0.0023599281910461224 * sin ( 2*d + lp + 4*l );
        a += -0.0024699725945589537 * sin ( 2*d + 4*l + -2*f );
        a += -0.002509870255181073 * sin ( 4*d + -1*lp + l + 2*f );
        a += 0.002539719020588339 * sin ( d + -3*lp );
        a += 0.0025599158756305133 * sin ( 3*d + lp + 2*l );
        a += 0.0026198666163149255 * sin ( 2*d + lp + 2*l + 2*f );
        a += 0.0026997576034472523 * sin ( 2*lp + l + 2*f );
        a += -0.0027399652073949593 * sin ( 4*d + 2*l + 2*f );
        a += 0.002819910909416269 * sin ( 2*d + -2*l + 4*f );
        a += 0.0028497937623161904 * sin ( 6*d + -2*lp );
        a += -0.002850018209356769 * sin ( d + 4*l );
        a += -0.002859792179030579 * sin ( 2*d + -1*lp + -4*f );
        a += -0.0028699630309403134 * sin ( 6*d + -3*l + 2*f );
        a += -0.0028699164003967094 * sin ( lp + 5*l );
        a += 0.0028899626044425852 * sin ( d + -2*l + -2*f );
        a += 0.002899792726055915 * sin ( 4*d + -2*lp + 2*l );
        a += 0.0029496786045804524 * sin ( 2*d + -3*lp + 2*l );
        a += -0.002969901481540356 * sin ( 3*d + -1*lp + -3*l );
        a += 0.0029799586981553417 * sin ( 3*d + -2*l + 2*f );
        a += -0.0029997795430846026 * sin ( d + 2*lp + -1*l );
        a += 0.0031197837081626645 * sin ( 6*d + -2*lp + -3*l );
        a += 0.0031800155954773424 * sin ( 6*d + 2*l );
        a += 0.0032400208006890855 * sin ( 8*d + -4*l );
        a += 0.0032998528230756942 * sin ( 3*d + -1*lp + l );
        a += -0.0033199011373663692 * sin ( lp + -5*l );
        a += -0.0033499465378432564 * sin ( 5*d + -1*l + -2*f );
        a += 0.003359893322829459 * sin ( 4*d + -1*lp + 3*l );
        a += -0.003409760478770475 * sin ( 2*lp + 3*l );
        a += 0.003439887442097443 * sin ( 2*d + l + 4*f );
        a += -0.0034598214692147873 * sin ( 2*d + lp + -2*l + -2*f );
        a += 0.003529818020656818 * sin ( 4*d + lp + -1*l + 2*f );
        a += -0.003539956074445362 * sin ( 4*l + -2*f );
        a += -0.0035496734368934903 * sin ( 2*lp + -2*f );
        a += -0.0035899486907045356 * sin ( 6*d + -1*l + 2*f );
        a += 0.003609742775215862 * sin ( d + 2*lp + -2*l );
        a += 0.003639948699256367 * sin ( 6*d + -2*l + -2*f );
        a += -0.003649817407493543 * sin ( 2*d + -1*lp + -3*l + -2*f );
        a += -0.0036897425996956727 * sin ( 4*d + 2*lp + -3*l );
        a += 0.0037499469558294686 * sin ( 3*d + 2*f );
        a += -0.0037796603426187123 * sin ( 2*d + -2*lp + l + 2*f );
        a += -0.003890050647826455 * sin ( 3*d + 2*l );
        a += 0.003919869390462553 * sin ( 5*d + lp + -2*l );
        a += -0.0039598644455814845 * sin ( 6*d + lp );
        a += -0.003989713293757263 * sin ( 3*d + -2*lp + -2*l );
        a += -0.004159544707157531 * sin ( 3*lp + -2*l );
        a += -0.004310033814940133 * sin ( 4*d + -5*l );
        a += -0.00433960794319987 * sin ( 2*d + -2*lp + -1*l + -2*f );
        a += 0.004389953925422119 * sin ( 5*d );
        a += 0.004550019493767593 * sin ( 8*d + -1*l );
        a += 0.004669942582605064 * sin ( 2*d + -3*l + 2*f );
        a += 0.004729569774827007 * sin ( 2*lp + -1*l + -2*f );
        a += 0.004749839471605486 * sin ( 5*d + lp + -1*l );
        a += 0.004769844667190646 * sin ( 6*d + -1*lp + l );
        a += -0.004779841480131218 * sin ( 6*d + lp + -3*l );
        a += 0.004970046829802026 * sin ( 2*d + -6*l );
        a += -0.005089933029370788 * sin ( 6*d + -2*l + 2*f );
        a += 0.005149531598513158 * sin ( 2*d + 2*lp + -1*l + 2*f );
        a += 0.005179608534718312 * sin ( 3*d + -2*lp );
        a += 0.005189524672076656 * sin ( 2*lp + 2*f );
        a += 0.005259735399552878 * sin ( lp + 3*l + 2*f );
        a += 0.005379627262646968 * sin ( 2*d + -2*lp + 3*l );
        a += 0.005399923484191364 * sin ( d + 2*l + 2*f );
        a += 0.0055996085284573905 * sin ( 4*d + -2*lp + -3*l );
        a += 0.005680046826136957 * sin ( 2*d + 5*l );
        a += -0.0062297984426934365 * sin ( 3*d + lp + -3*l );
        a += 0.0062296889616551224 * sin ( lp + -3*l + -2*f );
        a += -0.006539407361216272 * sin ( 2*d + 2*lp + -1*l + -2*f );
        a += -0.006589654354319376 * sin ( d + lp + l + 2*f );
        a += 0.006619907405755203 * sin ( 4*d + -2*l + -2*f );
        a += 0.006650063316434002 * sin ( 6*l );
        a += 0.006659631350316869 * sin ( 4*d + -1*lp + -2*f );
        a += -0.006679785793356467 * sin ( 4*d + lp + 2*l );
        a += 0.006789776953154166 * sin ( d + lp + 3*l );
        a += -0.006929766521877937 * sin ( 5*d + -1*lp + -2*l );
        a += -0.006939757685130187 * sin ( d + -1*lp + -2*l );
        a += 0.00729977295447178 * sin ( 2*d + -1*lp + 4*l );
        a += -0.007319611815852931 * sin ( 4*d + -1*lp + l + -2*f );
        a += 0.0074394663787402775 * sin ( 6*d + -2*lp + -1*l );
        a += 0.007549181336550161 * sin ( 4*d + -3*lp + -2*l );
        a += 0.008118801675727443 * sin ( 2*d + -4*lp + -1*l );
        a += 0.008359404194365531 * sin ( 6*d + -2*lp + -2*l );
        a += 0.008400046365778407 * sin ( 8*d + -3*l );
        a += -0.008489377850873695 * sin ( d + 2*lp + l );
        a += -0.008499714944099918 * sin ( 2*d + -1*l + -4*f );
        a += 0.008660042463581182 * sin ( 8*d + -2*l );
        a += 0.008889541269867157 * sin ( 2*d + lp + 2*l + -2*f );
        a += 0.008909511771469678 * sin ( 3*d + lp + -2*f );
        a += -0.009339879974900565 * sin ( 4*d + -3*l + 2*f );
        a += -0.009439334146341344 * sin ( 2*d + 2*lp + -3*l );
        a += -0.009550064601426137 * sin ( d + -4*l );
        a += 0.009648950143362645 * sin ( 2*d + -3*lp + -2*l );
        a += 0.009708923059664075 * sin ( 4*d + -3*lp );
        a += -0.009799863476904437 * sin ( 4*d + 2*l + -2*f );
        a += -0.010069489709312174 * sin ( 2*d + -1*lp + 2*l + 2*f );
        a += -0.010619831809297086 * sin ( 3*d + l + -2*f );
        a += -0.01063963592472661 * sin ( 6*d + lp + -1*l );
        a += -0.010769880800198795 * sin ( 2*d + -4*l + -2*f );
        a += -0.01113941619626768 * sin ( 4*d + -1*lp + 2*f );
        a += -0.011819139519574232 * sin ( 3*d + -2*lp + -1*l );
        a += 0.012149814390483465 * sin ( 3*d + -1*l + 2*f );
        a += -0.01280929630469278 * sin ( d + -1*lp + -2*f );
        a += -0.012819572112065988 * sin ( 6*d + lp + -2*l );
        a += 0.012969588013701659 * sin ( 2*l + 4*f );
        a += 0.013308016134137452 * sin ( 2*d + -4*lp );
        a += -0.013319838644010817 * sin ( 2*d + 3*l + 2*f );
        a += -0.013429068013676312 * sin ( 2*d + 2*lp + l );
        a += -0.013500128064030415 * sin ( 5*d + -1*l );
        a += 0.013719541110713085 * sin ( 2*d + 4*f );
        a += 0.013760086679413185 * sin ( 6*d + -4*l );
        a += -0.014829504541564934 * sin ( d + -1*lp + 2*l );
        a += -0.015138945719806746 * sin ( 2*lp + -3*l );
        a += -0.015329209047162612 * sin ( 4*d + -1*lp + -2*l + 2*f );
        a += -0.015408606427033808 * sin ( 2*d + -2*lp + -1*l + 2*f );
        a += 0.015438917713797419 * sin ( 2*d + -2*lp + -3*l );
        a += 0.015979756166714678 * sin ( d + -1*l + 2*f );
        a += 0.01604916324539834 * sin ( 2*d + lp + l + 2*f );
        a += -0.01643850656787531 * sin ( 2*d + -2*lp + l + -2*f );
        a += -0.016860079741348174 * sin ( 5*d + -3*l );
        a += 0.017408086973591006 * sin ( 4*d + -3*lp + -1*l );
        a += -0.017809753472371206 * sin ( 4*d + l + 2*f );
        a += -0.017958011818946063 * sin ( 3*lp + l );
        a += -0.01815833868938683 * sin ( 2*d + -2*lp + 2*f );
        a += 0.018189435394415806 * sin ( 2*d + lp + -4*l );
        a += -0.018749006424452888 * sin ( 4*d + lp + -1*l + -2*f );
        a += -0.019478935460323477 * sin ( 3*d + -1*lp + -2*f );
        a += 0.019929337733671896 * sin ( 2*d + -1*l + 4*f );
        a += 0.021490147745885833 * sin ( 4*d + 3*l );
        a += -0.021568883722094416 * sin ( 2*d + -1*lp + -2*l + 2*f );
        a += -0.021708437659199616 * sin ( 4*d + 2*lp + -1*l );
        a += 0.022439230074951338 * sin ( 3*d + lp + l );
        a += -0.02272880827894973 * sin ( 4*d + -1*lp + -1*l + 2*f );
        a += 0.022850114760163083 * sin ( 6*d + l );
        a += 0.022888787499854124 * sin ( 4*d + -1*lp + -1*l + -2*f );
        a += 0.022959247592637164 * sin ( d + lp + -3*l );
        a += -0.02348788846071101 * sin ( 2*d + 2*lp + -2*f );
        a += -0.02378961017702937 * sin ( d + -1*l + -2*f );
        a += -0.023909618138649127 * sin ( 4*d + -2*f );
        a += 0.024108270631263605 * sin ( 4*d + -2*lp + l );
        a += 0.024288739290388783 * sin ( lp + -2*l + 2*f );
        a += 0.02509914632108936 * sin ( 6*d + -1*lp );
        a += -0.026019711176632113 * sin ( 4*l + 2*f );
        a += -0.026759156631173703 * sin ( 2*d + lp + 3*l );
        a += 0.026768615776657505 * sin ( lp + 2*l + -2*f );
        a += 0.02681914607534109 * sin ( 4*d + lp + -3*l );
        a += -0.028038551498779034 * sin ( 2*d + -1*lp + -2*l + -2*f );
        a += -0.028868509584793603 * sin ( 2*d + -1*lp + 2*l + -2*f );
        a += 0.02948908127823996 * sin ( 2*d + -1*lp + -4*l );
        a += -0.02978952669840833 * sin ( 3*d + -1*l + -2*f );
        a += 0.03273893500673652 * sin ( 4*d + -1*lp + 2*l );
        a += 0.03299636944758035 * sin ( 2*d + -3*lp + l );
        a += -0.03335956821373712 * sin ( 2*d + 3*l + -2*f );
        a += -0.03513749089380507 * sin ( 4*d + 2*lp + -2*l );
        a += -0.0358680440151852 * sin ( d + lp + 2*f );
        a += 0.038998738458432214 * sin ( 6*d + -1*lp + -3*l );
        a += -0.039468782533558504 * sin ( lp + 4*l );
        a += -0.039677055794669604 * sin ( d + 2*lp );
        a += -0.040119358521312036 * sin ( d + l + -2*f );
        a += -0.04074023016151185 * sin ( d + 3*l );
        a += -0.041888564277954156 * sin ( 3*d + lp + -2*l );
        a += 0.04303679580864692 * sin ( d + -2*lp );
        a += 0.04337776535554442 * sin ( lp + 2*l + 2*f );
        a += -0.04442019195008308 * sin ( 3*d + -3*l );
        a += 0.04449931413338749 * sin ( d + l + 2*f );
        a += -0.04701854751128408 * sin ( lp + -4*l );
        a += -0.05069828927347295 * sin ( 4*d + lp + l );
        a += -0.05141432377169647 * sin ( 3*lp + -1*l );
        a += 0.051647338978221734 * sin ( lp + -2*l + -2*f );
        a += -0.056839235213631316 * sin ( 3*l + -2*f );
        a += -0.05725024744601576 * sin ( 5*d + -2*l );
        a += -0.06102676290932679 * sin ( 2*d + -1*lp + -1*l + -2*f );
        a += 0.06313417958526389 * sin ( 2*d + -2*lp + -2*f );
        a += 0.06438542840994514 * sin ( 2*d + -2*lp + 2*l );
        a += 0.06506739334621038 * sin ( 3*d + -1*lp );
        a += -0.06512534481101676 * sin ( 2*lp + 2*l );
        a += 0.06540650518468386 * sin ( 2*d + lp + 2*f );
        a += -0.06600899377887524 * sin ( 4*d + l + -2*f );
        a += 0.06741641313718931 * sin ( 2*d + lp + -1*l + 2*f );
        a += 0.06850055286096865 * sin ( 2*d + -5*l );
        a += 0.07141757072051812 * sin ( 6*d + -1*lp + -1*l );
        a += -0.07372613121994247 * sin ( 2*d + -1*lp + l + 2*f );
        a += 0.07500610055323817 * sin ( lp + -2*f );
        a += -0.07517736689244475 * sin ( 2*d + -4*f );
        a += 0.07765057203011536 * sin ( 2*d + 4*l );
        a += -0.08018730329129607 * sin ( l + -4*f );
        a += -0.08048569149304159 * sin ( lp + -1*l + 2*f );
        a += -0.08281558084813738 * sin ( lp + l + -2*f );
        a += -0.08310716185804999 * sin ( 3*d + -1*lp + -2*l );
        a += 0.08471547920641856 * sin ( 2*d + lp + l + -2*f );
        a += -0.0849987385193876 * sin ( 4*d + 2*f );
        a += 0.09032699478060902 * sin ( 6*d + -1*lp + -2*l );
        a += 0.09091696689983418 * sin ( l + 4*f );
        a += -0.09153884065202653 * sin ( 2*d + -3*l + -2*f );
        a += 0.09204688700937419 * sin ( d + lp + 2*l );
        a += 0.09319702826030411 * sin ( 2*d + -1*lp + 3*l );
        a += 0.0998167550639198 * sin ( 4*d + -1*lp + -3*l );
        a += -0.10134867537740934 * sin ( 3*lp );
        a += 0.1110008916610703 * sin ( 5*l );
        a += -0.12072578938500593 * sin ( d + -1*lp + l );
        a += -0.12385834524328818 * sin ( 2*d + 2*l + 2*f );
        a += 0.12616048484413014 * sin ( 6*d );
        a += -0.12812062905785798 * sin ( d + -3*l );
        a += -0.1363551817755378 * sin ( d + -1*lp + -1*l );
        a += 0.14989465656636866 * sin ( 3*d + lp );
        a += 0.1522588712672188 * sin ( 4*d + -2*lp );
        a += 0.15779874125045584 * sin ( 4*d + -2*lp + -2*l );
        a += -0.16976761277048513 * sin ( 4*d + -2*l + 2*f );
        a += 0.176234283465467 * sin ( 2*d + lp + -3*l );
        a += 0.17902695036433208 * sin ( 2*d + -1*l + -2*f );
        a += -0.18574679866535543 * sin ( 2*d + 2*lp );
        a += -0.19309621888121814 * sin ( 2*lp + -2*l );
        a += -0.2013370173866436 * sin ( 4*d + -1*l + 2*f );
        a += 0.21853112454481052 * sin ( 4*d + 2*l );
        a += -0.23140185805839836 * sin ( 3*d + -1*lp + -1*l );
        a += 0.24694273034572545 * sin ( 2*d + -3*lp + -1*l );
        a += -0.24988218348421065 * sin ( 2*d + 2*lp + -2*l );
        a += -0.25303563377877913 * sin ( 3*d + -2*f );
        a += 0.2542856774887287 * sin ( d + 2*f );
        a += 0.2633660273517885 * sin ( lp + l + 2*f );
        a += 0.27376033109557757 * sin ( 3*d + lp + -1*l );
        a += 0.28250035911531046 * sin ( 4*d + -1*lp + l );
        a += -0.2890998380717041 * sin ( 4*d + lp );
        a += -0.2902203546402672 * sin ( 2*d + lp + 2*l );
        a += 0.29255151442959165 * sin ( 6*d + -3*l );
        a += 0.294198957132028 * sin ( 2*d + -2*lp + -2*l );
        a += 0.30085535746880604 * sin ( 4*d + -1*l + -2*f );
        a += 0.3015539867982457 * sin ( lp + -1*l + -2*f );
        a += 0.30871761179214624 * sin ( 4*d + -2*lp + -1*l );
        a += -0.32865581190371806 * sin ( 3*l + 2*f );
        a += 0.33979203489338344 * sin ( 2*d + -3*lp );
        a += 0.3496480742815911 * sin ( d + lp + -2*l );
        a += -0.35757765071651765 * sin ( 4*d + lp + -2*l );
        a += -0.37451003268772687 * sin ( 2*d + -1*lp + l + -2*f );
        a += -0.3821293826531899 * sin ( 2*d + -1*lp + 2*f );
        a += 0.394511466220774 * sin ( 6*d + -1*l );
        a += 0.40422722435341507 * sin ( 3*d );
        a += 0.41339757059148174 * sin ( lp + 2*f );
        a += 0.4203253264023018 * sin ( 4*f );
        a += -0.426217343916485 * sin ( 2*d + -1*lp + -1*l + 2*f );
        a += -0.4537934801492974 * sin ( 2*d + 2*l + -2*f );
        a += 0.47840441076242296 * sin ( 2*d + -1*lp + -3*l );
        a += -0.5357122838542843 * sin ( 2*d + -2*l + 2*f );
        a += -0.545922295332263 * sin ( lp + 3*l );
        a += -0.5569196708493391 * sin ( d + -1*lp );
        a += -0.5606420150197801 * sin ( 2*d + -2*l + -2*f );
        a += 0.5715624455486874 * sin ( 6*d + -2*l );
        a += -0.5833098502330389 * sin ( d + -2*f );
        a += -0.5839922398837608 * sin ( d + 2*l );
        a += -0.6352077347583 * sin ( 4*d + lp + -1*l );
        a += -0.6693782779112403 * sin ( lp + -3*l );
        a += 0.7516753753405784 * sin ( 2*d + -2*lp + l );
        a += 0.9482760727769559 * sin ( 2*d + -4*l );
        a += -0.9902152062436256 * sin ( 2*d + l + 2*f );
        a += 1.0594959939813802 * sin ( 2*d + 3*l );
        a += 1.077692201532093 * sin ( d + lp + -1*l );
        a += -1.1616851618482078 * sin ( 2*lp + l );
        a += 1.1770005002971526 * sin ( 2*d + -1*lp + 2*l );
        a += 1.1868256821760201 * sin ( 4*d + -3*l );
        a += -1.2241239477742394 * sin ( 3*d + -2*l );
        a += 1.261815334548221 * sin ( d + lp + l );
        a += -1.3725698661367376 * sin ( 2*l + -2*f );
        a += -1.4371612257872322 * sin ( 2*d + lp + -2*f );
        a += -1.7529659058834621 * sin ( d + -2*l );
        a += 1.870763523432673 * sin ( 4*d + -1*lp );
        a += 1.9336824423566752 * sin ( 4*l );
        a += 1.9777270098531954 * sin ( 4*d + l );
        a += 2.146072399945245 * sin ( 2*d + -1*lp + -2*f );
        a += 2.488885442458337 * sin ( 2*d + lp + -2*l );
        a += -2.521195632587292 * sin ( 2*d + 2*lp + -1*l );
        a += -2.5679425540909007 * sin ( 2*lp + -1*l );
        a += 2.7318871580458453 * sin ( 4*d + -1*lp + -2*l );
        a += -2.9145384452924774 * sin ( 2*d + lp + l );
        a += -3.2096876157228866 * sin ( 3*d + -1*l );
        a += -3.9976127354056374 * sin ( 2*l + 2*f );
        a += 4.374006618992986 * sin ( 4*d + -1*lp + -1*l );
        a += -5.741606247250193 * sin ( 2*d + 2*f );
        a += -6.383148086356698 * sin ( 2*d + l + -2*f );
        a += 7.37119145052019 * sin ( 2*d + -2*lp + -1*l );
        a += -7.447485471464419 * sin ( 2*lp );
        a += -7.630150262676135 * sin ( lp + 2*l );
        a += 8.050161806582173 * sin ( 2*d + -2*lp );
        a += -8.453098171936281 * sin ( d + l );
        a += 8.605526075202382 * sin ( 2*d + -1*lp + -2*l );
        a += -9.365862028414305 * sin ( 2*d + -1*l + 2*f );
        a += -9.679050367322295 * sin ( lp + -2*l );
        a += 13.194063384267789 * sin ( 2*d + -3*l );
        a += 13.89905969743302 * sin ( 4*d );
        a += 14.379697344712016 * sin ( 2*d + 2*l );
        a += 14.53026832082162 * sin ( 2*d + -1*lp + l );
        a += 17.954455689537255 * sin ( d + lp );
        a += -18.584706787435177 * sin ( d + -1*l );
        a += -24.358212338620138 * sin ( 2*d + lp );
        a += -28.39708210160611 * sin ( 2*d + lp + -1*l );
        a += 30.772574871068475 * sin ( 4*d + -2*l );
        a += 36.12381367876787 * sin ( 3*l );
        a += 38.42983453922982 * sin ( 4*d + -1*l );
        a += 39.53329484664211 * sin ( l + -2*f );
        a += -45.09960222672089 * sin ( l + 2*f );
        a += 55.17704960898589 * sin ( 2*d + -2*f );
        a += -109.38029152528641 * sin ( lp + l );
        a += -124.98811884997961 * sin ( d );
        a += -147.32128695221752 * sin ( lp + -1*l );
        a += 164.72851067770688 * sin ( 2*d + -1*lp );
        a += 191.95619698055046 * sin ( 2*d + l );
        a += 205.43581754495605 * sin ( 2*d + -1*lp + -1*l );
        a += 211.65555045555556 * sin ( 2*d + -2*l );
        a += -411.5956722539517 * sin ( 2*f );
        a += -666.4171035052449 * sin ( lp );
        a += 769.0257121206408 * sin ( 2*l );
        a += 2369.913939217018 * sin ( 2*d );
        a += 4586.438303048241 * sin ( 2*d + -1*l );
        a += 22639.585779999783 * sin ( l );
        return a;
    }

    double mainproblem_lat ( double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 1.162109596585152e-8 * sin ( 3*d + 3*lp + -1*l + -1*f );
        a += 0.00001 * sin ( 10*d + -4*l + -1*f );
        a += 0.00001 * sin ( 8*d + 2*l + -1*f );
        a += 0.00001 * sin ( 8*d + -1*lp + l + f );
        a += 0.00001 * sin ( 8*d + -2*lp + -1*f );
        a += 0.00001 * sin ( 7*d + lp + -1*l + f );
        a += 0.00001 * sin ( 7*d + lp + -2*l + f );
        a += -0.00001 * sin ( 7*d + -1*l + -3*f );
        a += -0.00001 * sin ( 7*d + -1*lp + -3*l + -1*f );
        a += 0.00001 * sin ( 6*d + 4*l + -1*f );
        a += -0.00001 * sin ( 6*d + l + 3*f );
        a += 0.00001 * sin ( 6*d + -1*lp + 3*l + f );
        a += -0.00001 * sin ( 6*d + -1*lp + 3*f );
        a += 0.00001 * sin ( 6*d + -2*lp + 2*l + f );
        a += 0.00001 * sin ( 6*d + -2*lp + -1*l + -3*f );
        a += 0.00001 * sin ( 6*d + -3*lp + l + -1*f );
        a += -0.00001 * sin ( 5*d + 2*lp + -1*f );
        a += 0.00001 * sin ( 5*d + lp + 2*l + -1*f );
        a += -0.00001 * sin ( 5*d + lp + -3*l + -1*f );
        a += -0.00001 * sin ( 5*d + 2*l + f );
        a += 0.00001 * sin ( 5*d + -1*l + 3*f );
        a += -0.00001 * sin ( 5*d + -4*l + f );
        a += -0.00001 * sin ( 5*d + -1*lp + -1*l + -3*f );
        a += -0.00001 * sin ( 4*d + 2*lp + l + -1*f );
        a += 0.00001 * sin ( 4*d + 2*lp + -2*l + -3*f );
        a += -0.00001 * sin ( 4*d + lp + 4*l + f );
        a += -0.00001 * sin ( 4*d + lp + -4*l + f );
        a += -0.00001 * sin ( 4*d + lp + -4*l + -1*f );
        a += -0.00001 * sin ( 4*d + lp + -5*l + -1*f );
        a += 0.00001 * sin ( 4*d + -2*l + 5*f );
        a += -0.00001 * sin ( 4*d + -6*l + f );
        a += -0.00001 * sin ( 4*d + -1*lp + 3*l + -3*f );
        a += -0.00001 * sin ( 4*d + -1*lp + -5*f );
        a += -0.00001 * sin ( 4*d + -1*lp + -6*l + -1*f );
        a += 0.00001 * sin ( 4*d + -3*lp + -3*f );
        a += 0.00001 * sin ( 4*d + -4*lp + l + -1*f );
        a += -0.00001 * sin ( 3*d + 3*lp + -1*l + f );
        a += 0.00001000450921004284 * sin ( 3*d + 3*lp + -1*l + -3*f );
        a += -0.00001 * sin ( 3*d + 2*lp + 2*l + -1*f );
        a += -0.00001 * sin ( 3*d + 2*lp + -2*l + f );
        a += -0.00001 * sin ( 3*d + lp + -4*l + f );
        a += 0.00001 * sin ( 3*d + -3*l + 3*f );
        a += -0.00001 * sin ( 3*d + -1*lp + 3*l + f );
        a += 0.00001 * sin ( 3*d + -1*lp + 3*f );
        a += -0.00001 * sin ( 3*d + -1*lp + -4*l + -1*f );
        a += -0.00001 * sin ( 3*d + -2*lp + 2*l + -1*f );
        a += -0.00001 * sin ( 3*d + -2*lp + -3*l + -1*f );
        a += -0.00001 * sin ( 2*d + 2*lp + -4*l + f );
        a += 0.00001 * sin ( 2*d + 2*l + 5*f );
        a += -0.00001 * sin ( 2*d + -1*lp + -1*l + -5*f );
        a += 0.00001 * sin ( 2*d + -4*lp + 2*l + f );
        a += 0.00001 * sin ( 2*d + -5*lp + -1*l + f );
        a += 0.00001 * sin ( 2*d + -5*lp + -1*l + -1*f );
        a += -0.00001 * sin ( d + 2*lp + 3*l + f );
        a += 0.00001 * sin ( d + 2*lp + -3*l + f );
        a += 0.00001 * sin ( d + lp + 2*l + -3*f );
        a += -0.00001 * sin ( d + lp + -2*l + -3*f );
        a += 0.00001 * sin ( d + lp + -5*l + -1*f );
        a += -0.00001 * sin ( d + 5*l + -1*f );
        a += 0.00001 * sin ( d + l + -5*f );
        a += -0.00001 * sin ( d + 5*f );
        a += -0.00001 * sin ( d + -1*lp + 4*l + -1*f );
        a += -0.00001 * sin ( d + -2*lp + -1*l + f );
        a += -0.00001 * sin ( 4*lp + l + f );
        a += 0.00001 * sin ( 4*lp + f );
        a += -0.00001 * sin ( 3*lp + -3*l + f );
        a += 0.00001 * sin ( 2*lp + 2*l + 3*f );
        a += 0.00001 * sin ( 2*lp + 2*l + -3*f );
        a += -0.00001 * sin ( 2*lp + -5*l + -1*f );
        a += -0.00001 * sin ( lp + 6*l + -1*f );
        a += -0.00001 * sin ( lp + l + 5*f );
        a += -0.00001 * sin ( lp + -1*l + -5*f );
        a += -0.00001 * sin ( lp + -6*l + f );
        a += 0.00002 * sin ( 10*d + -1*l + -1*f );
        a += 0.00002 * sin ( 10*d + -2*l + f );
        a += 0.00002 * sin ( 10*d + -4*l + f );
        a += -0.00002 * sin ( 8*d + lp + -1*f );
        a += -0.00002 * sin ( 8*d + lp + -1*l + f );
        a += 0.00002 * sin ( 8*d + -1*l + -3*f );
        a += 0.00002 * sin ( 8*d + -2*l + -3*f );
        a += 0.00002 * sin ( 8*d + -5*l + f );
        a += 0.00002 * sin ( 8*d + -1*lp + l + -1*f );
        a += 0.00002 * sin ( 8*d + -1*lp + -4*l + -1*f );
        a += 0.00002 * sin ( 8*d + -2*lp + -1*l + f );
        a += 0.00002 * sin ( 8*d + -2*lp + -3*l + f );
        a += 0.00002 * sin ( 8*d + -2*lp + -3*l + -1*f );
        a += 0.00002 * sin ( 7*d + lp + -1*l + -1*f );
        a += 0.00002 * sin ( 7*d + lp + -2*l + -1*f );
        a += -0.00002 * sin ( 7*d + -1*lp + -1*l + -1*f );
        a += -0.00002 * sin ( 7*d + -1*lp + -2*l + f );
        a += -0.00002 * sin ( 7*d + -1*lp + -3*l + f );
        a += -0.00002 * sin ( 6*d + 2*lp + -1*l + f );
        a += -0.00002 * sin ( 6*d + 2*lp + -3*l + -1*f );
        a += -0.00002 * sin ( 6*d + lp + 2*l + f );
        a += -0.00002 * sin ( 6*d + 2*l + -3*f );
        a += -0.00002 * sin ( 6*d + -4*l + 3*f );
        a += 0.00002 * sin ( 6*d + -1*lp + 3*l + -1*f );
        a += -0.00002 * sin ( 6*d + -1*lp + -3*l + 3*f );
        a += 0.00002 * sin ( 6*d + -1*lp + -4*l + -1*f );
        a += 0.00002 * sin ( 6*d + -2*lp + 2*l + -1*f );
        a += 0.00002 * sin ( 6*d + -3*lp + -3*l + f );
        a += -0.00002 * sin ( 5*d + 2*lp + -1*l + -1*f );
        a += 0.00002 * sin ( 5*d + -2*l + 3*f );
        a += -0.00002 * sin ( 5*d + -2*lp + -1*f );
        a += -0.00002 * sin ( 5*d + -2*lp + -1*l + f );
        a += 0.00002 * sin ( 4*d + 3*lp + -1*f );
        a += 0.00002 * sin ( 4*d + 3*lp + -1*l + f );
        a += 0.00002 * sin ( 4*d + 3*lp + -2*l + f );
        a += -0.00002 * sin ( 4*d + 2*lp + l + f );
        a += -0.00002 * sin ( 4*d + lp + 4*l + -1*f );
        a += 0.00002 * sin ( 4*d + lp + l + 3*f );
        a += -0.00002 * sin ( 4*d + 3*l + 3*f );
        a += 0.00002 * sin ( 4*d + -1*l + 5*f );
        a += -0.00002 * sin ( 4*d + -7*l + -1*f );
        a += -0.00002 * sin ( 4*d + -1*lp + 2*l + 3*f );
        a += 0.00002 * sin ( 4*d + -1*lp + -4*l + f );
        a += -0.00002 * sin ( 4*d + -2*lp + -2*l + -3*f );
        a += -0.00002 * sin ( 3*d + 2*lp + -2*l + -1*f );
        a += -0.00002 * sin ( 3*d + 4*l + f );
        a += -0.00002 * sin ( 3*d + 4*l + -1*f );
        a += 0.00002 * sin ( 3*d + l + -3*f );
        a += -0.00002 * sin ( 3*d + -1*lp + 3*l + -1*f );
        a += 0.00002 * sin ( 3*d + -1*lp + -1*l + 3*f );
        a += -0.00002 * sin ( 2*d + 3*lp + -2*l + f );
        a += 0.00002 * sin ( 2*d + lp + 3*l + 3*f );
        a += 0.00002 * sin ( 2*d + lp + 3*l + -3*f );
        a += 0.00002 * sin ( 2*d + lp + l + -5*f );
        a += -0.00002 * sin ( 2*d + lp + -3*l + -3*f );
        a += 0.00002 * sin ( 2*d + -3*l + 5*f );
        a += -0.00002 * sin ( 2*d + -4*l + 3*f );
        a += 0.00002 * sin ( 2*d + -7*l + f );
        a += 0.00002 * sin ( 2*d + -1*lp + 5*f );
        a += 0.00002 * sin ( 2*d + -1*lp + -1*l + 5*f );
        a += 0.00002 * sin ( 2*d + -1*lp + -6*l + -1*f );
        a += -0.00002 * sin ( 2*d + -2*lp + 2*l + 3*f );
        a += 0.00002 * sin ( 2*d + -2*lp + -4*l + f );
        a += 0.00002 * sin ( 2*d + -3*lp + 3*l + -1*f );
        a += -0.00002 * sin ( 2*d + -3*lp + 3*f );
        a += -0.00002 * sin ( 2*d + -3*lp + -1*l + 3*f );
        a += 0.00002 * sin ( 2*d + -5*lp + f );
        a += 0.00002 * sin ( d + lp + 4*l + -1*f );
        a += 0.00002 * sin ( d + 3*l + 3*f );
        a += 0.00002 * sin ( d + -3*l + 3*f );
        a += -0.00002 * sin ( d + -1*lp + 4*l + f );
        a += 0.00002 * sin ( d + -1*lp + l + 3*f );
        a += -0.00002 * sin ( d + -3*lp + l + -1*f );
        a += -0.00002 * sin ( 4*lp + l + -1*f );
        a += -0.00002 * sin ( 2*lp + 4*l + f );
        a += 0.00002 * sin ( lp + 4*l + 3*f );
        a += -0.00002 * sin ( lp + 5*f );
        a += 0.00002 * sin ( lp + -3*l + 3*f );
        a += 0.00002 * sin ( 7*l + -1*f );
        a += 0.00003 * sin ( 10*d + -2*l + -1*f );
        a += 0.00003 * sin ( 10*d + -3*l + f );
        a += 0.00003 * sin ( 10*d + -3*l + -1*f );
        a += -0.00003 * sin ( 8*d + lp + -3*l + f );
        a += 0.00003 * sin ( 8*d + -2*lp + -2*l + f );
        a += -0.00002999999998599828 * sin ( 7*d + -1*f );
        a += -0.00002999999998599828 * sin ( 7*d + -1*l + f );
        a += -0.00003 * sin ( 7*d + -4*l + f );
        a += -0.00003 * sin ( 6*d + lp + -3*l + -1*f );
        a += 0.00003 * sin ( 6*d + lp + -4*l + f );
        a += -0.00003 * sin ( 6*d + -1*lp + -1*l + 3*f );
        a += -0.00003 * sin ( 6*d + -1*lp + -2*l + 3*f );
        a += 0.00003 * sin ( 6*d + -3*lp + f );
        a += 0.00003 * sin ( 5*d + lp + -3*f );
        a += -0.00002999999998599828 * sin ( 5*d + l + -3*f );
        a += -0.00003 * sin ( 4*d + 2*lp + -3*l + -1*f );
        a += 0.00003 * sin ( 4*d + lp + 2*l + -3*f );
        a += 0.00003 * sin ( 4*d + lp + -2*l + -3*f );
        a += 0.00003 * sin ( 4*d + 5*l + f );
        a += 0.00003 * sin ( 4*d + 5*l + -1*f );
        a += 0.00003 * sin ( 4*d + -4*l + 3*f );
        a += -0.00003 * sin ( 4*d + -2*lp + 3*f );
        a += -0.00003 * sin ( 4*d + -2*lp + -4*l + -1*f );
        a += 0.00003 * sin ( 4*d + -3*lp + 2*l + f );
        a += 0.00003 * sin ( 4*d + -3*lp + 2*l + -1*f );
        a += 0.00003 * sin ( 4*d + -4*lp + -2*l + f );
        a += -0.00002999999998599828 * sin ( 3*d + lp + 3*f );
        a += 0.00002999999998599828 * sin ( 3*d + lp + -1*l + -3*f );
        a += -0.00002999999998599828 * sin ( 3*d + -4*l + f );
        a += -0.00002999999998599828 * sin ( 3*d + -3*lp + -1*l + f );
        a += 0.00003 * sin ( 2*d + 2*lp + 3*f );
        a += -0.00003 * sin ( 2*d + 2*lp + -3*l + f );
        a += -0.00003 * sin ( 2*d + lp + 5*l + -1*f );
        a += 0.00003 * sin ( 2*d + lp + -6*l + -1*f );
        a += -0.00003 * sin ( 2*d + -5*l + -3*f );
        a += -0.00003 * sin ( 2*d + -1*lp + l + -5*f );
        a += -0.00003 * sin ( 2*d + -2*lp + 2*l + -3*f );
        a += 0.00003 * sin ( 2*d + -3*lp + 3*l + f );
        a += -0.00003 * sin ( 2*d + -3*lp + l + -3*f );
        a += 0.00003 * sin ( 2*d + -4*lp + -2*l + -1*f );
        a += -0.00002999999998599828 * sin ( d + 3*lp + f );
        a += -0.00002999999998599828 * sin ( d + 3*lp + -1*f );
        a += -0.00002999999998599828 * sin ( d + 2*lp + 2*l + -1*f );
        a += 0.00002999999998599828 * sin ( d + 2*lp + -3*l + -1*f );
        a += -0.00002999999998599828 * sin ( d + lp + 2*l + 3*f );
        a += 0.00002999999998599828 * sin ( d + -5*f );
        a += -0.00002999999998599828 * sin ( d + -1*lp + -1*l + -3*f );
        a += 0.00002999999998599828 * sin ( d + -1*lp + -4*l + -1*f );
        a += -0.00002999999998599828 * sin ( d + -2*lp + 2*l + f );
        a += -0.00002999999998599828 * sin ( d + -2*lp + -2*l + f );
        a += 0.00002999999998599828 * sin ( d + -3*lp + -1*l + -1*f );
        a += 0.00003 * sin ( 2*lp + -2*l + -3*f );
        a += 0.00003 * sin ( lp + 3*l + -3*f );
        a += 0.00003 * sin ( lp + -4*l + -3*f );
        a += 0.00003 * sin ( 3*l + -5*f );
        a += -0.00004 * sin ( 8*d + lp + -2*l + f );
        a += -0.00004 * sin ( 8*d + lp + -3*l + -1*f );
        a += 0.00004 * sin ( 8*d + l + f );
        a += 0.00004 * sin ( 8*d + -2*lp + -1*l + -1*f );
        a += 0.00004 * sin ( 8*d + -2*lp + -2*l + -1*f );
        a += -0.00003999999997199656 * sin ( 7*d + -1*lp + -2*l + -1*f );
        a += -0.00004 * sin ( 6*d + lp + -3*f );
        a += -0.000039999999985998284 * sin ( 5*d + -1*lp + -3*l + -1*f );
        a += -0.00003999999997199656 * sin ( 5*d + -2*lp + -2*l + f );
        a += -0.00003999999997199656 * sin ( 5*d + -2*lp + -2*l + -1*f );
        a += -0.00004 * sin ( 4*d + -1*l + -5*f );
        a += -0.00004 * sin ( 4*d + -2*lp + l + -3*f );
        a += -0.00004 * sin ( 4*d + -2*lp + -2*l + 3*f );
        a += 0.000039993756084600996 * sin ( 4*d + -4*lp + f );
        a += -0.00003999999997199656 * sin ( 3*d + 2*lp + l + f );
        a += 0.00003999999997199656 * sin ( 3*d + lp + 3*l + f );
        a += 0.00003999999997199656 * sin ( 3*d + lp + 3*l + -1*f );
        a += 0.000039999999985998284 * sin ( 3*d + lp + -3*l + f );
        a += 0.00003999999997199656 * sin ( 3*d + l + 3*f );
        a += -0.00003999999997199656 * sin ( 3*d + -2*lp + -3*f );
        a += -0.00003999999997199656 * sin ( 3*d + -3*lp + -1*l + -1*f );
        a += 0.00004 * sin ( 2*d + 3*lp + f );
        a += 0.00004 * sin ( 2*d + 2*lp + -2*l + 3*f );
        a += -0.00004 * sin ( 2*d + 2*lp + -2*l + -3*f );
        a += -0.00004 * sin ( 2*d + lp + 5*l + f );
        a += -0.00004 * sin ( 2*d + -1*lp + -3*l + -3*f );
        a += 0.00004 * sin ( 2*d + -2*lp + 4*l + -1*f );
        a += 0.000039993756084600996 * sin ( 2*d + -5*lp + -1*f );
        a += -0.000039999999985998284 * sin ( d + 5*l + f );
        a += -0.000039999999985998284 * sin ( d + -5*l + f );
        a += -0.000039999999985998284 * sin ( d + -1*lp + -3*l + f );
        a += 0.00004 * sin ( 4*lp + -1*f );
        a += -0.00004 * sin ( 4*lp + -1*l + f );
        a += -0.000039993756084600996 * sin ( 4*lp + -1*l + -1*f );
        a += -0.00004 * sin ( 3*lp + 2*l + -1*f );
        a += -0.00004 * sin ( 3*lp + -3*l + -1*f );
        a += 0.00004 * sin ( 2*lp + -2*l + 3*f );
        a += -0.00004 * sin ( 2*lp + -4*l + f );
        a += -0.00004 * sin ( lp + 6*l + f );
        a += -0.00004 * sin ( lp + -6*l + -1*f );
        a += 0.00004 * sin ( 3*l + 5*f );
        a += 0.00005 * sin ( 8*d + -1*lp + f );
        a += -0.00005 * sin ( 6*d + 2*lp + -1*l + -1*f );
        a += -0.00005 * sin ( 6*d + 2*lp + -3*l + f );
        a += -0.00005 * sin ( 6*d + lp + 2*l + -1*f );
        a += -0.00005 * sin ( 6*d + l + -3*f );
        a += -0.00005 * sin ( 6*d + 3*f );
        a += 0.00005 * sin ( 6*d + -3*lp + -1*f );
        a += 0.00005 * sin ( 6*d + -3*lp + -2*l + -1*f );
        a += 0.00004999999997199656 * sin ( 5*d + lp + l + f );
        a += -0.00004999999997199656 * sin ( 5*d + lp + -3*l + f );
        a += -0.00004999999997199656 * sin ( 5*d + -1*lp + -3*f );
        a += 0.00005 * sin ( 4*d + 2*lp + -1*l + -3*f );
        a += 0.00005 * sin ( 4*d + -1*lp + 4*l + f );
        a += -0.00005 * sin ( 4*d + -1*lp + -3*l + -3*f );
        a += 0.00005 * sin ( 4*d + -2*lp + 3*l + f );
        a += 0.00005 * sin ( 4*d + -2*lp + 3*l + -1*f );
        a += -0.00005 * sin ( 4*d + -2*lp + -1*l + 3*f );
        a += -0.00005 * sin ( 4*d + -2*lp + -1*l + -3*f );
        a += -0.00004999999997199656 * sin ( 3*d + 2*lp + -1*l + -1*f );
        a += -0.00004999999997199656 * sin ( 3*d + lp + -1*l + 3*f );
        a += -0.00005 * sin ( 2*d + 3*lp + -1*l + f );
        a += 0.00005 * sin ( 2*d + lp + -5*f );
        a += 0.00005 * sin ( 2*d + lp + -5*l + f );
        a += 0.00005 * sin ( 2*d + 6*l + -1*f );
        a += -0.00005 * sin ( 2*d + -2*l + -5*f );
        a += -0.00005 * sin ( 2*d + -1*lp + 3*l + 3*f );
        a += -0.00005 * sin ( 2*d + -3*lp + -2*l + f );
        a += 0.00004999999997199656 * sin ( d + -2*lp + l + f );
        a += -0.00006 * sin ( 8*d + lp + -1*l + -1*f );
        a += -0.00006 * sin ( 6*d + 2*lp + -2*l + f );
        a += 0.00006 * sin ( 6*d + 3*l + f );
        a += 0.000059993756084600995 * sin ( 6*d + -3*lp + -1*l + f );
        a += 0.000059993756084600995 * sin ( 6*d + -3*lp + -2*l + f );
        a += -0.00005999999997199656 * sin ( 5*d + 2*l + -1*f );
        a += -0.0000599999993611515 * sin ( 5*d + l + f );
        a += -0.00005999999997199656 * sin ( 5*d + -1*lp + l + -1*f );
        a += 0.00006 * sin ( 4*d + -1*lp + 4*l + -1*f );
        a += -0.00006 * sin ( 4*d + -2*lp + -3*l + -1*f );
        a += -0.00005999999997199656 * sin ( 3*d + -3*lp + -1*f );
        a += 0.000059993756084600995 * sin ( 2*d + 3*lp + l + -1*f );
        a += -0.000059993756084600995 * sin ( 2*d + 3*lp + -2*l + -1*f );
        a += -0.00006 * sin ( 2*d + 2*lp + l + -3*f );
        a += -0.00006 * sin ( 2*d + 4*l + 3*f );
        a += 0.00006 * sin ( 2*d + -1*lp + 5*l + -1*f );
        a += -0.00006 * sin ( 2*d + -1*lp + 3*l + -3*f );
        a += 0.00006 * sin ( 2*d + -1*lp + -5*l + f );
        a += 0.000059993756084600995 * sin ( 2*d + -3*lp + -3*l + -1*f );
        a += 0.00005999999995799484 * sin ( d + lp + -2*l + 3*f );
        a += 0.00005999999997199656 * sin ( d + -1*lp + 3*f );
        a += -0.00005999999995799484 * sin ( d + -2*lp + 2*l + -1*f );
        a += -0.00006 * sin ( 4*l + -3*f );
        a += 0.00007 * sin ( 8*d + -1*lp + -4*l + f );
        a += -0.00007 * sin ( 6*d + lp + -1*l + -3*f );
        a += 0.00007 * sin ( 6*d + -2*l + -3*f );
        a += 0.00007 * sin ( 6*d + -2*lp + l + f );
        a += 0.00007 * sin ( 6*d + -2*lp + -3*l + -1*f );
        a += 0.00007 * sin ( 4*d + lp + 3*f );
        a += -0.00007 * sin ( 4*d + -4*l + -3*f );
        a += 0.00006998751216920198 * sin ( 4*d + -4*lp + -1*l + f );
        a += 0.00006998751216920198 * sin ( 4*d + -4*lp + -1*l + -1*f );
        a += -0.00006999999995799483 * sin ( 3*d + lp + -4*l + -1*f );
        a += -0.00006999999995799483 * sin ( 3*d + -1*lp + 2*l + f );
        a += -0.00007 * sin ( 2*d + 2*lp + -4*l + -1*f );
        a += 0.00007 * sin ( 2*d + l + 5*f );
        a += 0.00007 * sin ( 2*d + -7*l + -1*f );
        a += 0.00007 * sin ( 2*d + -1*lp + -3*l + 3*f );
        a += 0.00007 * sin ( 2*d + -2*lp + 4*l + f );
        a += 0.00006999999995799483 * sin ( d + lp + -1*l + -3*f );
        a += 0.00006999999995799483 * sin ( d + lp + -4*l + f );
        a += 0.00006999999995799483 * sin ( d + -2*lp + -2*l + -1*f );
        a += 0.00007 * sin ( 2*lp + l + 3*f );
        a += -0.00007 * sin ( 2*lp + l + -3*f );
        a += -0.00008 * sin ( 8*d + lp + -2*l + -1*f );
        a += 0.00007998751216920199 * sin ( 4*d + 3*lp + -1*l + -1*f );
        a += 0.00007998751216920199 * sin ( 4*d + -4*lp + -1*f );
        a += -0.00007999999995799484 * sin ( 3*d + -2*l + -3*f );
        a += 0.00007999999995799484 * sin ( 3*d + -2*lp + f );
        a += 0.00008 * sin ( 2*d + 6*l + f );
        a += -0.00008 * sin ( 2*d + 4*l + -3*f );
        a += 0.00008 * sin ( 2*d + 2*l + -5*f );
        a += 0.00007999375608460099 * sin ( 2*d + -3*lp + -3*f );
        a += 0.00007998751216920199 * sin ( 2*d + -4*lp + l + -1*f );
        a += -0.00007999375604259583 * sin ( d + 2*lp + -1*l + -1*f );
        a += 0.00007999999995799484 * sin ( d + lp + 4*l + f );
        a += -0.00007999999995799484 * sin ( d + -1*lp + l + -3*f );
        a += -0.00007999375608460099 * sin ( 3*lp + 2*l + f );
        a += 0.00008000086733167551 * sin ( 7*l + f );
        a += 0.00009 * sin ( 8*d + l + -1*f );
        a += 0.00009 * sin ( 8*d + -4*l + -1*f );
        a += -0.00008999999995799484 * sin ( 7*d + -3*l + -1*f );
        a += -0.00008999375608460099 * sin ( 6*d + 2*lp + -2*l + -1*f );
        a += 0.00009 * sin ( 6*d + -1*lp + -4*l + f );
        a += 0.00009 * sin ( 4*d + lp + -2*l + 3*f );
        a += -0.00009 * sin ( 4*d + -1*lp + l + 3*f );
        a += -0.00009 * sin ( 4*d + -1*lp + -5*l + -1*f );
        a += -0.00008999375604259583 * sin ( 3*d + 2*lp + l + -1*f );
        a += -0.00008999999994399312 * sin ( 3*d + -1*lp + -1*l + -3*f );
        a += -0.00008998751216920199 * sin ( 2*d + 3*lp + -1*l + -1*f );
        a += -0.00008999375608460099 * sin ( 2*d + 2*lp + 2*l + f );
        a += -0.00009 * sin ( 2*d + -1*lp + -5*f );
        a += -0.00008999375608460099 * sin ( 2*d + -2*lp + -2*l + 3*f );
        a += -0.00008999375608460099 * sin ( 2*lp + -1*l + 3*f );
        a += -0.00009999999994399312 * sin ( 7*d + -2*l + f );
        a += 0.0001 * sin ( 6*d + 3*l + -1*f );
        a += 0.0001 * sin ( 6*d + -1*lp + 2*l + f );
        a += 0.0001 * sin ( 6*d + -1*lp + -3*f );
        a += 0.00009998751216920199 * sin ( 6*d + -3*lp + -1*l + -1*f );
        a += 0.00009999999994399312 * sin ( 5*d + lp + l + -1*f );
        a += -0.0000999937560285941 * sin ( 5*d + -2*lp + -1*l + -1*f );
        a += -0.0001 * sin ( 4*d + 3*l + -3*f );
        a += -0.0001 * sin ( 4*d + -1*lp + 2*l + -3*f );
        a += -0.0000999937560285941 * sin ( 3*d + 2*lp + -1*l + f );
        a += 0.0001 * sin ( 2*d + lp + 2*l + 3*f );
        a += 0.0001 * sin ( 2*d + -1*lp + 5*l + f );
        a += 0.00009998751216920199 * sin ( 2*d + -4*lp + l + f );
        a += 0.00009999375608460099 * sin ( 2*lp + -1*l + -3*f );
        a += 0.00010000521437441902 * sin ( lp + -3*f );
        a += -0.0001 * sin ( 5*l + 3*f );
        a += 0.00010999999938915494 * sin ( 8*d + -1*lp + -1*f );
        a += -0.00010999999994399311 * sin ( 7*d + -3*l + f );
        a += -0.00011 * sin ( 6*d + lp + l + f );
        a += -0.00010999999994399311 * sin ( 5*d + -1*l + -3*f );
        a += 0.00011 * sin ( 4*d + lp + l + -3*f );
        a += -0.00011 * sin ( 4*d + -1*lp + -3*l + 3*f );
        a += 0.00010999375608460099 * sin ( 4*d + -2*lp + -3*l + f );
        a += -0.00010999375608460099 * sin ( 2*d + -2*lp + l + 3*f );
        a += -0.00011000086727566862 * sin ( d + -5*l + -1*f );
        a += 0.0001099875121131951 * sin ( d + -3*lp + -1*f );
        a += -0.00010998751216920199 * sin ( 3*lp + -2*l + f );
        a += -0.00012 * sin ( 4*d + lp + 3*l + f );
        a += 0.00012 * sin ( 4*d + lp + -1*l + 3*f );
        a += -0.00012 * sin ( 4*d + 2*l + 3*f );
        a += 0.00011999375608460099 * sin ( 2*d + 2*lp + -1*l + 3*f );
        a += 0.00011999608949284817 * sin ( 2*d + -2*l + 5*f );
        a += 0.00011998751216920199 * sin ( 2*d + -2*lp + -4*l + -1*f );
        a += -0.00011999375601459239 * sin ( d + 2*lp + 2*l + f );
        a += 0.00011998751209919339 * sin ( d + -3*lp + f );
        a += -0.0001299999993191463 * sin ( 7*d + -1*l + -1*f );
        a += 0.00012998751216920196 * sin ( 6*d + -2*lp + l + -1*f );
        a += -0.00012999608949284817 * sin ( 4*d + -5*f );
        a += 0.00012998751216920196 * sin ( 4*d + -3*lp + -2*l + -1*f );
        a += -0.00013999999938915493 * sin ( 6*d + -1*l + 3*f );
        a += -0.00014 * sin ( 6*d + -3*l + 3*f );
        a += 0.0001400008673316755 * sin ( 6*d + -4*l + -1*f );
        a += 0.00014 * sin ( 6*d + -1*lp + -1*l + -3*f );
        a += 0.00013999999991598966 * sin ( 5*d + lp + -2*l + -1*f );
        a += -0.00013999999992999137 * sin ( 5*d + -1*lp + -3*l + f );
        a += -0.00013999999992999137 * sin ( 3*d + 3*l + f );
        a += -0.00013998751208519163 * sin ( 3*d + -2*lp + l + -1*f );
        a += -0.00013998751208519163 * sin ( 3*d + -2*lp + -2*l + -1*f );
        a += -0.0001400008673316755 * sin ( 2*d + -4*l + -3*f );
        a += -0.00013998751216920196 * sin ( 2*lp + -3*f );
        a += -0.0001400008673316755 * sin ( lp + -5*l + f );
        a += 0.00014999999877830987 * sin ( 8*d + -1*lp + -1*l + f );
        a += -0.00014999999938915493 * sin ( 4*d + lp + -1*l + -3*f );
        a += -0.000150001734663351 * sin ( 4*d + -6*l + -1*f );
        a += 0.00014999999991598966 * sin ( 3*d + -3*l + f );
        a += -0.00015 * sin ( 2*d + lp + -2*l + -3*f );
        a += -0.00014999999991598966 * sin ( d + -1*lp + 3*l + -1*f );
        a += -0.0001500008673316755 * sin ( lp + 5*l + -1*f );
        a += -0.00015998751208519166 * sin ( 3*d + 2*lp + f );
        a += 0.00015999608940883787 * sin ( 3*d + 3*f );
        a += 0.00015999608940883787 * sin ( 3*d + -2*l + 3*f );
        a += -0.0001600008672476652 * sin ( 3*d + -4*l + -1*f );
        a += -0.00015998751208519166 * sin ( 3*d + -2*lp + -2*l + f );
        a += 0.00015998751208519166 * sin ( d + 2*lp + -2*l + f );
        a += -0.00015998751216920199 * sin ( 2*lp + 3*l + -1*f );
        a += 0.00015998360166205017 * sin ( 2*lp + 3*f );
        a += -0.0001599883795008775 * sin ( 2*lp + -4*l + -1*f );
        a += 0.00016999375547375594 * sin ( 6*d + -1*lp + 2*l + -1*f );
        a += 0.0001699812676429579 * sin ( 4*d + -3*lp + l + f );
        a += 0.00016999609132538338 * sin ( 2*d + lp + -2*l + 3*f );
        a += 0.00016998751208519166 * sin ( d + 2*lp + -2*l + -1*f );
        a += 0.00016999462331826446 * sin ( d + lp + -4*l + -1*f );
        a += -0.00017000086723366347 * sin ( d + 4*l + -1*f );
        a += -0.00017999462331826446 * sin ( d + -1*lp + 3*l + f );
        a += 0.00017999462331826446 * sin ( d + -1*lp + -3*l + -1*f );
        a += 0.00018999462280543144 * sin ( 8*d + -1*lp + -3*l + -1*f );
        a += -0.00018999609000568121 * sin ( d + l + -3*f );
        a += 0.0001999999987783099 * sin ( 8*d + f );
        a += -0.00019998837889003242 * sin ( 4*d + 2*lp + -3*l + f );
        a += -0.00019999462280543144 * sin ( 4*d + lp + 3*l + -1*f );
        a += 0.000200001734663351 * sin ( 2*d + -6*l + f );
        a += -0.0001999898454654354 * sin ( d + lp + l + 3*f );
        a += -0.0001999960893808344 * sin ( d + -2*l + 3*f );
        a += 0.00019999071290912468 * sin ( lp + 3*l + 3*f );
        a += -0.00020999608888200313 * sin ( 6*d + -2*l + 3*f );
        a += 0.00020998984557744918 * sin ( 2*d + lp + 2*l + -3*f );
        a += 0.00020997502433840398 * sin ( 2*d + -3*lp + 2*l + -1*f );
        a += -0.00020998984607628046 * sin ( d + lp + l + -3*f );
        a += -0.0002099898454654354 * sin ( d + lp + -1*l + 3*f );
        a += 0.0002099960893808344 * sin ( d + 2*l + 3*f );
        a += 0.00021999462219458637 * sin ( 8*d + -1*lp + -3*l + f );
        a += -0.00021999462330426272 * sin ( 3*d + -1*lp + -3*l + -1*f );
        a += -0.00021998126812778748 * sin ( d + 2*lp + l + -1*f );
        a += 0.00022999375534774044 * sin ( 5*d + lp + f );
        a += 0.0002299960907145383 * sin ( 2*d + -3*l + -3*f );
        a += 0.00022999071290912468 * sin ( lp + -3*l + -3*f );
        a += -0.0002399999986522944 * sin ( 7*d + -2*l + -1*f );
        a += 0.00023997502372755892 * sin ( 4*d + -3*lp + l + -1*f );
        a += 0.0002399734472394993 * sin ( 2*d + -2*lp + -1*l + -3*f );
        a += 0.0002499946221945864 * sin ( 8*d + -1*lp + -2*l + f );
        a += -0.00024998213436378837 * sin ( 4*d + 2*lp + f );
        a += -0.0002499821355854785 * sin ( 2*d + 2*lp + 2*l + -1*f );
        a += -0.00024999217884567914 * sin ( d + -2*l + -3*f );
        a += 0.00025998826847854447 * sin ( 2*d + 5*f );
        a += 0.00025998913581021997 * sin ( 2*l + 5*f );
        a += -0.000270002598800784 * sin ( 5*d + f );
        a += -0.00027000173389848703 * sin ( 3*d + 3*l + -1*f );
        a += -0.0002699883787500152 * sin ( 3*d + -1*lp + 2*l + -1*f );
        a += 0.00026998924667853404 * sin ( d + lp + 3*l + -1*f );
        a += 0.00027999011294253833 * sin ( 2*d + lp + -5*l + -1*f );
        a += 0.0002899875103366668 * sin ( 8*d + -1*lp + -1*l + -1*f );
        a += -0.0002899883775143234 * sin ( 5*d + -1*lp + -1*l + f );
        a += 0.000290001734663351 * sin ( 4*d + -4*l + f );
        a += 0.0002899672033241003 * sin ( 4*d + -2*lp + -3*f );
        a += 0.0002899901141642285 * sin ( 2*d + -1*lp + -5*l + -1*f );
        a += -0.000299989243610307 * sin ( 3*d + -1*lp + l + f );
        a += 0.0002999767590017549 * sin ( 2*d + -2*lp + -3*l + f );
        a += -0.00030998751094751185 * sin ( 6*d + lp + l + -1*f );
        a += 0.0003099796909868777 * sin ( 3*d + lp + -3*f );
        a += 0.0003099634032284364 * sin ( 2*d + -3*lp + 2*l + f );
        a += 0.00030995629259220693 * sin ( 2*d + -4*lp + -1*l + -1*f );
        a += -0.0003099625413943664 * sin ( 3*lp + f );
        a += 0.0003199750225058688 * sin ( 6*d + -2*lp + f );
        a += -0.0003199875101686462 * sin ( 5*d + -1*lp + -1*f );
        a += 0.0003299767577800648 * sin ( 6*d + -2*lp + -3*l + f );
        a += -0.00033000173387048355 * sin ( 5*d + -3*l + -1*f );
        a += -0.0003299805578757288 * sin ( 4*d + -1*lp + -2*l + -3*f );
        a += 0.00032998055909741887 * sin ( 2*d + -1*lp + -2*l + -3*f );
        a += -0.0003299634032284364 * sin ( 3*lp + -2*l + -1*f );
        a += 0.0003400026007733364 * sin ( 4*d + 4*l + f );
        a += 0.00033999011233169335 * sin ( 2*d + lp + -4*l + f );
        a += 0.00033995004867680797 * sin ( 2*d + -4*lp + -1*l + f );
        a += 0.0003499892460256838 * sin ( 3*d + lp + 2*l + f );
        a += -0.00035998142520740433 * sin ( 2*d + -1*lp + 2*l + 3*f );
        a += 0.00036000346932670203 * sin ( 6*l + -1*f );
        a += -0.0003699796899332082 * sin ( 4*d + -1*lp + 3*f );
        a += 0.0003699767571692198 * sin ( 4*d + -2*lp + 2*l + f );
        a += 0.0003699562919813619 * sin ( 2*d + 3*lp + -1*f );
        a += -0.00036999011294253835 * sin ( 2*d + lp + 4*l + f );
        a += -0.00036997675900175494 * sin ( 2*lp + 3*l + f );
        a += 0.00037998924500001784 * sin ( 8*d + -1*lp + -2*l + -1*f );
        a += 0.0003799921775539805 * sin ( 3*d + -1*l + 3*f );
        a += 0.0003799843579713927 * sin ( 2*d + -1*l + 5*f );
        a += -0.00038996877899128904 * sin ( d + 2*lp + -1*l + f );
        a += 0.0004000026007733364 * sin ( 4*d + 4*l + -1*f );
        a += -0.00039999011355338346 * sin ( 2*d + lp + 4*l + -1*f );
        a += 0.0004099892459976804 * sin ( 5*d + lp + -2*l + f );
        a += -0.0004099882676436719 * sin ( 5*d + -3*f );
        a += 0.00042000260016249137 * sin ( 8*d + -4*l + f );
        a += -0.00041999617365587344 * sin ( 3*d + -1*lp + f );
        a += -0.0004300026017569972 * sin ( d + -4*l + f );
        a += 0.00043998300267912474 * sin ( 3*d + lp + 2*l + -1*f );
        a += -0.0004399830014574346 * sin ( 3*d + lp + -3*l + -1*f );
        a += -0.00043995704829070443 * sin ( 2*d + -2*lp + 3*f );
        a += -0.0004399821821275919 * sin ( 2*l + -5*f );
        a += 0.00045000086488829525 * sin ( 8*d + -1*f );
        a += -0.00044999782208563475 * sin ( 5*d + l + -1*f );
        a += -0.00044995704890154944 * sin ( 2*d + -2*lp + -1*l + 3*f );
        a += -0.0004500026017429955 * sin ( d + 4*l + f );
        a += -0.0004599508037644603 * sin ( 2*d + 2*lp + -1*l + -3*f );
        a += -0.00045998044746424087 * sin ( 2*d + -1*l + -5*f );
        a += 0.0004599651378917874 * sin ( 2*d + -2*lp + 3*l + -1*f );
        a += -0.0004599808270733532 * sin ( lp + 5*l + f );
        a += -0.00046998300047377373 * sin ( 6*d + lp + f );
        a += 0.00046996035883126993 * sin ( 4*d + -2*lp + 2*l + -1*f );
        a += 0.00047999868904449446 * sin ( 6*d + 2*l + f );
        a += -0.0004899612273846357 * sin ( 2*lp + -3*l + f );
        a += 0.0004999799579091425 * sin ( 4*d + -1*lp + 3*l + f );
        a += 0.0005099773562449267 * sin ( 5*d + lp + -1*f );
        a += 0.0005199712701740084 * sin ( 2*d + lp + l + 3*f );
        a += -0.000519969536452313 * sin ( d + -1*lp + -3*f );
        a += 0.0005299782229517554 * sin ( 5*d + lp + -1*l + f );
        a += -0.0005299816937941837 * sin ( lp + -5*l + -1*f );
        a += -0.0005399799597416777 * sin ( 6*d + lp + -3*l + f );
        a += -0.0005599541149158709 * sin ( 4*d + 2*lp + -1*f );
        a += -0.0005599523817770172 * sin ( 3*d + 2*lp + -1*f );
        a += -0.0005599869587447292 * sin ( 2*d + 3*l + 3*f );
        a += -0.0005699790908802742 * sin ( 5*d + -1*lp + -2*l + -1*f );
        a += -0.0005799808258516631 * sin ( 4*d + -1*lp + -4*l + -1*f );
        a += 0.0005899291392542749 * sin ( 4*d + -3*lp + -2*l + f );
        a += 0.0005999986878228044 * sin ( 8*d + -1*l + f );
        a += 0.0005999843555280124 * sin ( 6*d + -3*f );
        a += 0.0005999745813254189 * sin ( 4*d + -1*lp + 3*l + -1*f );
        a += -0.0005999611157514576 * sin ( 4*d + -1*lp + -2*l + 3*f );
        a += -0.000599953248483846 * sin ( d + -2*lp + l + -1*f );
        a += -0.0006099728457151816 * sin ( 5*d + -1*lp + -2*l + f );
        a += -0.0006099611163623026 * sin ( 2*d + -1*lp + 2*l + -3*f );
        a += -0.0006199602484197822 * sin ( 4*d + -1*lp + l + -3*f );
        a += 0.0006199024289293278 * sin ( 2*d + -4*lp + f );
        a += 0.0006299737121612084 * sin ( 6*d + -1*lp + l + f );
        a += 0.0006299737127720534 * sin ( 4*d + lp + -3*l + -1*f );
        a += -0.0006299470033187534 * sin ( 3*d + -2*lp + -1*l + f );
        a += 0.0006399470051512887 * sin ( d + -2*lp + -1*l + -1*f );
        a += -0.000649960247198092 * sin ( 4*d + -1*lp + -1*l + -3*f );
        a += -0.0006599878260764047 * sin ( 4*d + -3*l + -3*f );
        a += 0.0006599172452816126 * sin ( 3*lp + -1*f );
        a += 0.0006699470024471064 * sin ( 6*d + -2*lp + -1*f );
        a += -0.0006799869575230391 * sin ( 4*d + l + 3*f );
        a += 0.000699945695156671 * sin ( 2*d + -2*lp + 3*l + f );
        a += 0.0007199965125898487 * sin ( 6*d + -4*l + f );
        a += -0.0007199251183356353 * sin ( 2*d + -2*lp + l + -3*f );
        a += -0.0007199368500758877 * sin ( d + 2*lp + l + f );
        a += 0.0007299982496965799 * sin ( 2*d + 5*l + -1*f );
        a += -0.0007499572040226155 * sin ( 4*d + -1*lp + -1*l + 3*f );
        a += -0.0007499695832744609 * sin ( 2*d + l + -5*f );
        a += -0.000759949226856349 * sin ( 3*d + -1*lp + -3*f );
        a += 0.0007599661621770643 * sin ( 2*d + -1*lp + 4*l + -1*f );
        a += 0.0007699073649434467 * sin ( 2*d + -3*lp + -2*l + -1*f );
        a += 0.000779937714745386 * sin ( 6*d + -2*lp + -1*l + f );
        a += 0.0007999056284475605 * sin ( 4*d + -3*lp + f );
        a += 0.0007999661633987543 * sin ( 2*d + -1*lp + -4*l + f );
        a += 0.0007999492274531925 * sin ( d + lp + -3*f );
        a += 0.000799957046024116 * sin ( d + -1*lp + -1*l + f );
        a += -0.0008299453169320388 * sin ( d + lp + 3*f );
        a += -0.0008299002543072172 * sin ( 3*lp + l + f );
        a += 0.000869933205493338 * sin ( 6*d + -2*lp + -2*l + f );
        a += 0.0008799956446473281 * sin ( 6*d + 2*l + -1*f );
        a += 0.0008799323387725076 * sin ( 6*d + -2*lp + -2*l + -1*f );
        a += -0.000879964425681178 * sin ( 4*d + lp + 2*l + f );
        a += 0.0008899652930128535 * sin ( 6*d + -1*lp + -3*l + -1*f );
        a += -0.0008999791377304255 * sin ( 4*d + 2*l + -3*f );
        a += -0.0008999652942345436 * sin ( 4*d + -1*lp + -3*l + -1*f );
        a += 0.0009200008510807613 * sin ( 2*d + -6*l + -1*f );
        a += -0.0009299808736154666 * sin ( 2*d + 3*l + -3*f );
        a += 0.000929959051647618 * sin ( d + lp + 3*l + f );
        a += 0.000929959051647618 * sin ( d + lp + -3*l + f );
        a += 0.0009599581843019407 * sin ( d + -1*lp + -2*l + -1*f );
        a += 0.0009699564471812078 * sin ( 5*d + lp + -1*l + -1*f );
        a += 0.0009899999831382406 * sin ( 2*d + 5*l + f );
        a += -0.0010099189842856572 * sin ( 3*d + -2*lp + -1*l + -1*f );
        a += -0.0010199224541584263 * sin ( 2*d + 2*lp + -3*l + -1*f );
        a += -0.00102989987408726 * sin ( 2*d + 2*lp + -3*f );
        a += 0.001069997378088989 * sin ( 8*d + -3*l + -1*f );
        a += 0.0010699743586699082 * sin ( 6*d + -1*l + -3*f );
        a += 0.0010799973774781439 * sin ( 8*d + -3*l + f );
        a += -0.0010799973775009167 * sin ( 3*d + 2*l + f );
        a += -0.0010898752780347763 * sin ( 3*lp + l + -1*f );
        a += -0.0010899795651033413 * sin ( 4*l + 3*f );
        a += 0.0011099965089247782 * sin ( 8*d + -2*l + f );
        a += 0.0011099554077879273 * sin ( 2*d + -1*lp + 4*l + f );
        a += -0.0011399082292208968 * sin ( 4*d + 2*lp + -2*l + -1*f );
        a += -0.00115995193662869 * sin ( 6*d + lp + -1*l + f );
        a += -0.0011599978060727498 * sin ( 4*d + -5*l + -1*f );
        a += 0.0011798134370148371 * sin ( 2*d + -4*lp + -1*f );
        a += 0.001199999543790326 * sin ( 6*l + f );
        a += 0.0012199480248998478 * sin ( 6*d + -1*lp + l + -1*f );
        a += -0.0012199960713621628 * sin ( d + -4*l + -1*f );
        a += -0.0012399943360739652 * sin ( 5*d + -3*l + f );
        a += -0.0012699409141743777 * sin ( 5*d + -1*lp + -1*l + -1*f );
        a += -0.0012699708743139821 * sin ( 4*d + -3*l + 3*f );
        a += -0.0012799665387880537 * sin ( 3*d + -1*l + -3*f );
        a += 0.0012999917304751059 * sin ( 8*d + -1*l + -1*f );
        a += -0.0013098883620638472 * sin ( 3*d + -2*lp + -1*f );
        a += 0.0013398410122280795 * sin ( 4*d + -3*lp + -1*l + f );
        a += 0.001349919189549129 * sin ( lp + 2*l + 3*f );
        a += -0.0013699435180911802 * sin ( 6*d + lp + -2*l + f );
        a += 0.0013698909623295812 * sin ( 6*d + -2*lp + -1*l + -1*f );
        a += -0.0013699426512391035 * sin ( d + -1*lp + -2*l + f );
        a += 0.0014099191883274389 * sin ( lp + 2*l + -3*f );
        a += 0.0014199674048280303 * sin ( d + l + 3*f );
        a += -0.00144988905751594 * sin ( 2*d + 2*lp + l + f );
        a += -0.001459937272155993 * sin ( d + -1*lp + 2*l + f );
        a += -0.0014599678360252657 * sin ( 3*l + -3*f );
        a += -0.0015199372709062996 * sin ( 3*d + lp + -2*l + -1*f );
        a += -0.0015299346691265293 * sin ( 6*d + lp + -1*f );
        a += 0.0015399099018474083 * sin ( lp + -2*l + -3*f );
        a += 0.0015599361233734454 * sin ( l + 5*f );
        a += 0.001609803279538061 * sin ( 4*d + -3*lp + -1*f );
        a += 0.0016199336249252678 * sin ( 2*d + lp + -3*l + f );
        a += 0.0016497996382285336 * sin ( 4*d + -3*lp + -1*l + -1*f );
        a += -0.0016898672825942668 * sin ( 2*lp + -3*l + -1*f );
        a += -0.0016998594769067638 * sin ( d + 2*lp + -1*f );
        a += -0.0017499271194119585 * sin ( d + -1*lp + 2*l + -1*f );
        a += 0.0017698869903964355 * sin ( 2*d + lp + 3*f );
        a += 0.0017798619072322333 * sin ( 2*d + -2*lp + -3*l + -1*f );
        a += -0.0017898575650762503 * sin ( 4*d + 2*lp + -1*l + f );
        a += 0.001859924345988945 * sin ( d + lp + -3*l + -1*f );
        a += -0.0018599278163237709 * sin ( lp + -4*l + f );
        a += 0.0018899912874621209 * sin ( 8*d + -2*l + -1*f );
        a += -0.0018997746625669376 * sin ( 3*lp + -1*l + f );
        a += 0.0019099243408886182 * sin ( 4*d + -1*lp + -3*l + f );
        a += -0.0019099278157129257 * sin ( lp + 4*l + -1*f );
        a += 0.0019098803040788963 * sin ( lp + -2*l + 3*f );
        a += 0.0019199243366127027 * sin ( 4*d + lp + -3*l + f );
        a += 0.0019198839514968744 * sin ( 2*d + lp + -1*l + 3*f );
        a += -0.001919846819238944 * sin ( 2*d + -2*lp + -2*l + f );
        a += -0.001959916363531558 * sin ( 4*d + lp + 2*l + -1*f );
        a += -0.002029912493951025 * sin ( 4*d + lp + -2*l + -1*f );
        a += -0.0020398345010631458 * sin ( d + 2*lp + f );
        a += 0.002039830591166839 * sin ( d + -2*lp + -1*f );
        a += 0.0021398181045017236 * sin ( d + -2*lp + f );
        a += -0.002159740399814466 * sin ( 3*lp + -1*l + -1*f );
        a += -0.002209902236099514 * sin ( 2*d + -5*f );
        a += -0.0022398653712066728 * sin ( 2*d + -1*lp + l + 3*f );
        a += 0.002299998659596891 * sin ( 2*d + -5*l + f );
        a += 0.002319948704143127 * sin ( 2*d + -3*l + 3*f );
        a += 0.0023399408968838914 * sin ( d + -1*l + 3*f );
        a += -0.00235990266469412 * sin ( l + -5*f );
        a += 0.002399716291484545 * sin ( 2*d + -3*lp + l + -1*f );
        a += -0.0024499882392914106 * sin ( 5*d + -1*l + f );
        a += 0.0024699023890973584 * sin ( 2*d + lp + -4*l + -1*f );
        a += -0.0024699925875418423 * sin ( d + 3*l + -1*f );
        a += -0.002539982595286591 * sin ( 5*d + -1*f );
        a += 0.002549796147764157 * sin ( 4*d + -2*lp + l + f );
        a += -0.0025598906793244235 * sin ( 6*d + lp + -2*l + -1*f );
        a += 0.0025596936467878165 * sin ( 2*d + -3*lp + l + f );
        a += 0.0025798928537680513 * sin ( 3*d + lp + l + f );
        a += -0.0026098844315374683 * sin ( 3*d + lp + -2*l + f );
        a += -0.002669838379709103 * sin ( 2*d + -1*lp + -2*l + 3*f );
        a += 0.0027297235598305646 * sin ( 2*d + -2*lp + -3*f );
        a += -0.002749881830083278 * sin ( 3*d + -1*lp + l + -1*f );
        a += -0.0027697791512921554 * sin ( 4*d + 2*lp + -2*l + f );
        a += -0.0028198790578959562 * sin ( 3*d + -1*lp + -2*l + -1*f );
        a += 0.002829772910430982 * sin ( 4*d + -2*lp + -2*l + -1*f );
        a += -0.0028397729159285873 * sin ( 2*lp + 2*l + -1*f );
        a += -0.0028699904102523245 * sin ( 3*d + -3*l + -1*f );
        a += 0.0028798781817201045 * sin ( 6*d + -1*lp + f );
        a += -0.0028799326298548436 * sin ( 4*d + 3*f );
        a += -0.0030398093938821757 * sin ( 4*d + lp + -3*f );
        a += 0.0030499877969977444 * sin ( 6*d + l + f );
        a += 0.0031698643983152502 * sin ( d + lp + 2*l + -1*f );
        a += -0.003219983892681363 * sin ( 3*d + 2*l + -1*f );
        a += 0.003229990829419911 * sin ( 4*d + 3*l + f );
        a += -0.0032898581500539273 * sin ( 3*d + -1*lp + -2*l + f );
        a += -0.003419790387071806 * sin ( 2*d + lp + -1*l + -3*f );
        a += -0.0034998445207667546 * sin ( 6*d + lp + -1*l + -1*f );
        a += -0.0035498557991327615 * sin ( 2*d + lp + 3*l + f );
        a += -0.003689908304183305 * sin ( d + -1*l + -3*f );
        a += -0.0038999104609056786 * sin ( 4*d + -2*l + -3*f );
        a += 0.004149828641518913 * sin ( 6*d + -1*lp + -3*l + f );
        a += 0.004159834723835853 * sin ( 2*d + -1*lp + -4*l + -1*f );
        a += 0.004169661270154693 * sin ( 4*d + -2*lp + l + -1*f );
        a += 0.004209826038302197 * sin ( 4*d + -1*lp + 2*l + f );
        a += 0.004259816505713846 * sin ( 3*d + lp + l + -1*f );
        a += -0.004379647045217164 * sin ( 4*d + 2*lp + -1*l + -1*f );
        a += 0.004489988211173972 * sin ( 4*d + 3*l + -1*f );
        a += -0.004509900024088814 * sin ( 2*d + 2*l + 3*f );
        a += 0.00464971174941051 * sin ( 2*d + lp + l + -3*f );
        a += -0.004959793944305288 * sin ( 2*d + lp + 3*l + -1*f );
        a += -0.005039598812306407 * sin ( 2*d + 2*lp + -2*l + f );
        a += -0.005049973448151081 * sin ( 5*d + -2*l + -1*f );
        a += -0.005189974310511986 * sin ( 5*d + -2*l + f );
        a += -0.005279576182880805 * sin ( 2*lp + 2*l + f );
        a += 0.005339659408508781 * sin ( 4*d + -1*lp + -3*f );
        a += -0.0053595708026320105 * sin ( 2*lp + -2*l + f );
        a += -0.005369978216276267 * sin ( d + -3*l + f );
        a += -0.005479781711253736 * sin ( lp + 4*l + f );
        a += -0.0055198609322139845 * sin ( 4*d + l + -3*f );
        a += -0.005529979084134777 * sin ( d + 3*l + f );
        a += -0.0055398639637834046 * sin ( 4*d + -1*l + -3*f );
        a += 0.005549559179689509 * sin ( 2*d + -2*lp + 2*l + -1*f );
        a += -0.005579763484460804 * sin ( 4*d + lp + l + f );
        a += 0.005659993400376703 * sin ( 5*l + -1*f );
        a += 0.005919743641191331 * sin ( 5*f );
        a += 0.006139739803503799 * sin ( 4*d + -1*lp + 2*l + -1*f );
        a += -0.006169494473585369 * sin ( 2*d + 2*lp + l + -1*f );
        a += -0.006319856559999554 * sin ( 4*d + -2*l + 3*f );
        a += 0.006349765211896771 * sin ( d + lp + -1*l + -1*f );
        a += 0.006449833570178715 * sin ( d + 3*f );
        a += -0.00645974249623623 * sin ( lp + -4*l + -1*f );
        a += 0.006519712119469701 * sin ( 6*d + -1*lp + -1*f );
        a += 0.006539964306097862 * sin ( 6*d + l + -1*f );
        a += -0.006579990676571802 * sin ( 3*d + l + f );
        a += -0.0066398443980509566 * sin ( 4*d + -1*l + 3*f );
        a += 0.006679585539765538 * sin ( lp + l + 3*f );
        a += 0.006769458986707825 * sin ( 2*d + -2*lp + 2*l + f );
        a += 0.006789580160738434 * sin ( lp + -1*l + -3*f );
        a += -0.006799984691872836 * sin ( 4*d + -4*l + -1*f );
        a += 0.00701997427656259 * sin ( 6*d + -3*l + -1*f );
        a += -0.007029565234585507 * sin ( lp + l + -3*f );
        a += 0.00756967723561297 * sin ( 6*d + -1*lp + -1*l + f );
        a += -0.007709969931594283 * sin ( 4*d + -3*l + -1*f );
        a += -0.008449629794236958 * sin ( d + -1*lp + l + f );
        a += -0.009109431041475023 * sin ( lp + -1*l + 3*f );
        a += 0.009138912517098884 * sin ( 2*d + -3*lp + -1*l + -1*f );
        a += 0.009349612446672779 * sin ( 2*d + -1*lp + -3*l + f );
        a += 0.009389605050104204 * sin ( 6*d + -1*lp + -2*l + f );
        a += -0.009439413502331859 * sin ( 2*d + -1*lp + 3*f );
        a += 0.009849597176923141 * sin ( 2*d + -1*lp + 3*l + -1*f );
        a += -0.009949765302123855 * sin ( 2*d + 2*l + -3*f );
        a += -0.010089734072084015 * sin ( 3*d + -3*f );
        a += 0.010159566041243776 * sin ( d + lp + 2*l + f );
        a += 0.010269979876276477 * sin ( 2*d + 4*l + -1*f );
        a += 0.010309540272323673 * sin ( d + -1*lp + -1*l + -1*f );
        a += 0.0103393577932252 * sin ( 2*d + -1*lp + -1*l + -3*f );
        a += 0.010418758910186602 * sin ( 2*d + -3*lp + -1*l + f );
        a += -0.01048993143434228 * sin ( 5*d + -1*l + -1*f );
        a += 0.010909534950554581 * sin ( 6*d + -1*lp + -2*l + -1*f );
        a += 0.011269991558434344 * sin ( 2*d + -5*l + -1*f );
        a += 0.01156927152644841 * sin ( lp + 3*f );
        a += -0.01176927479776785 * sin ( 2*d + -1*lp + -1*l + 3*f );
        a += -0.011809747447104757 * sin ( 3*l + 3*f );
        a += 0.011859977233838637 * sin ( 2*d + 4*l + f );
        a += 0.012109509451245426 * sin ( 2*d + -1*lp + 3*l + f );
        a += 0.012299015560126391 * sin ( 4*d + -2*lp + -2*l + f );
        a += -0.012549954232758405 * sin ( d + -3*l + -1*f );
        a += -0.012618987543121853 * sin ( 2*d + 2*lp + -2*l + -1*f );
        a += 0.012698962639543001 * sin ( 4*d + -2*lp + f );
        a += 0.013209414988021643 * sin ( 3*d + lp + -1*l + -1*f );
        a += -0.01345938234256086 * sin ( d + -1*lp + -1*f );
        a += 0.0135093955516099 * sin ( 3*d + lp + f );
        a += -0.01355940421512513 * sin ( 3*d + -1*lp + -1*l + f );
        a += 0.014649925710091877 * sin ( 6*d + f );
        a += -0.014818809383686982 * sin ( 2*d + 2*lp + f );
        a += 0.014859351786676396 * sin ( 6*d + -1*lp + -1*l + -1*f );
        a += -0.015708742594635918 * sin ( 2*lp + -2*l + -1*f );
        a += 0.01596931486802827 * sin ( d + lp + -2*l + -1*f );
        a += 0.01602807005073243 * sin ( 2*d + -3*lp + f );
        a += -0.01668896450061568 * sin ( 2*d + -1*lp + l + -3*f );
        a += 0.016799273649312576 * sin ( d + lp + -2*l + f );
        a += -0.01691926105545369 * sin ( 4*d + lp + l + -1*f );
        a += 0.017679987133064217 * sin ( 5*l + f );
        a += -0.018008547089206565 * sin ( 2*lp + -1*f );
        a += 0.01817925033385909 * sin ( 2*d + lp + -3*l + -1*f );
        a += -0.01828917777585103 * sin ( d + -1*lp + f );
        a += -0.020119107679315115 * sin ( d + -1*lp + l + -1*f );
        a += 0.020449524967629036 * sin ( 2*d + -2*l + -3*f );
        a += 0.020829083573661377 * sin ( 3*d + lp + -1*l + f );
        a += -0.021039063254930736 * sin ( 3*d + -1*lp + -1*l + -1*f );
        a += 0.02173990685139259 * sin ( 4*d + -3*l + f );
        a += 0.022848167931385607 * sin ( 2*d + -2*lp + -2*l + -1*f );
        a += -0.023649017971540856 * sin ( lp + -3*l + f );
        a += 0.023798063029962558 * sin ( 4*d + -2*lp + -1*l + f );
        a += -0.024188998798003365 * sin ( lp + 3*l + -1*f );
        a += 0.02495993884214148 * sin ( 2*d + -4*l + f );
        a += -0.0254888785378384 * sin ( 4*d + lp + f );
        a += -0.025718816050415413 * sin ( 3*d + -1*lp + -1*f );
        a += 0.028279896584106023 * sin ( 4*d + 2*l + f );
        a += -0.028399989464081118 * sin ( 3*d + f );
        a += 0.028987600948148076 * sin ( 4*d + -2*lp + -1*f );
        a += -0.02956872028388639 * sin ( 4*d + lp + -2*l + f );
        a += 0.03008870870623988 * sin ( 4*d + -1*lp + l + f );
        a += -0.030379283750658456 * sin ( 2*d + l + 3*f );
        a += 0.031179882291110614 * sin ( 6*d + -3*l + f );
        a += -0.03141867768889243 * sin ( 2*d + lp + 2*l + f );
        a += -0.032259159198359554 * sin ( d + -3*f );
        a += 0.03435842663403383 * sin ( 3*d + lp + -1*f );
        a += 0.034617170207734006 * sin ( 4*d + -2*lp + -1*l + -1*f );
        a += 0.03464847577765305 * sin ( d + lp + l + -1*f );
        a += -0.03610975911290336 * sin ( 3*d + l + -1*f );
        a += -0.03635979942713299 * sin ( d + 2*l + -1*f );
        a += 0.0364656014073262 * sin ( 2*d + -3*lp + -1*f );
        a += 0.03673976905123171 * sin ( 6*d + -1*f );
        a += -0.039409784606434066 * sin ( 3*d + -2*l + -1*f );
        a += 0.04216978932741134 * sin ( 6*d + -1*l + f );
        a += 0.048339792756893894 * sin ( 4*d + 2*l + -1*f );
        a += -0.048519738913999334 * sin ( 3*d + -2*l + f );
        a += -0.05096776276161888 * sin ( 4*d + lp + -1*l + f );
        a += 0.05250775219785864 * sin ( 4*d + -1*lp + -2*l + -1*f );
        a += 0.054287681534841654 * sin ( 2*d + lp + -2*l + f );
        a += -0.05456652997919215 * sin ( 2*d + lp + -3*f );
        a += 0.055017725765814714 * sin ( 2*d + -1*lp + -3*l + -1*f );
        a += -0.05503550224140248 * sin ( 2*lp + l + f );
        a += -0.055897481678740916 * sin ( d + lp + -1*l + f );
        a += 0.056857521579167174 * sin ( 4*d + -1*lp + l + -1*f );
        a += -0.057285297765117975 * sin ( 2*lp + f );
        a += 0.058475244105182476 * sin ( 2*d + -2*lp + l + f );
        a += 0.059629731307917454 * sin ( 6*d + -2*l + f );
        a += -0.0617574566504726 * sin ( lp + 3*l + f );
        a += -0.06186493544888985 * sin ( 2*lp + l + -1*f );
        a += -0.06207733289135549 * sin ( 2*d + -1*lp + -2*l + f );
        a += 0.06256837666765727 * sin ( 4*d + -3*f );
        a += -0.062827319414148 * sin ( 2*d + lp + 2*l + -1*f );
        a += -0.0638296882750927 * sin ( d + 2*l + f );
        a += -0.06560848184424974 * sin ( 2*d + -2*l + 3*f );
        a += 0.06914435931260178 * sin ( 2*d + -2*lp + l + -1*f );
        a += -0.07478691908132629 * sin ( lp + -3*l + -1*f );
        a += -0.0784595574203263 * sin ( d + -2*l + f );
        a += 0.07912663455528067 * sin ( 2*d + lp + -2*l + -1*f );
        a += 0.08095958493294239 * sin ( 6*d + -2*l + -1*f );
        a += 0.08814439092219056 * sin ( 2*d + -1*lp + -3*f );
        a += 0.09156976212432366 * sin ( 4*l + -1*f );
        a += 0.09402942771680872 * sin ( 6*d + -1*l + -1*f );
        a += -0.09510222464961493 * sin ( 2*lp + -1*l + f );
        a += 0.1017555079437212 * sin ( d + lp + l + f );
        a += -0.10534137055687365 * sin ( 2*d + 2*lp + -1*l + -1*f );
        a += -0.10963942564411915 * sin ( d + -2*l + -1*f );
        a += -0.11307487794267482 * sin ( 4*d + lp + -1*f );
        a += -0.11329072330774588 * sin ( 2*d + 2*lp + -1*l + f );
        a += -0.11334073811726099 * sin ( 2*lp + -1*l + -1*f );
        a += -0.11786728928883108 * sin ( 2*l + 3*f );
        a += 0.12386475055329171 * sin ( 2*d + -1*lp + 2*l + f );
        a += 0.12896452294148794 * sin ( 2*d + -1*lp + 2*l + -1*f );
        a += -0.13034698026749608 * sin ( 2*l + -3*f );
        a += 0.13380968796906262 * sin ( 2*d + -4*l + -1*f );
        a += -0.13413879963718953 * sin ( 2*d + 2*lp + -1*f );
        a += 0.13794955454887314 * sin ( 2*d + 3*l + f );
        a += 0.1392788703575699 * sin ( d + -1*l + f );
        a += -0.14452642033530635 * sin ( 2*d + 3*f );
        a += 0.1464195085902976 * sin ( 2*d + 3*l + -1*f );
        a += 0.15790302720979735 * sin ( 4*d + -1*lp + f );
        a += -0.171902324885903 * sin ( 4*d + lp + -1*l + -1*f );
        a += -0.20592870889021603 * sin ( 3*d + -1*l + f );
        a += 0.21258887871021664 * sin ( 4*d + l + f );
        a += 0.21375087241805898 * sin ( 4*d + -1*lp + -2*l + f );
        a += -0.2370096472308161 * sin ( 2*d + lp + l + f );
        a += -0.24483403135052215 * sin ( 2*d + -1*l + 3*f );
        a += 0.2540789585470581 * sin ( 2*d + -3*l + f );
        a += 0.26324937564948425 * sin ( 4*l + f );
        a += 0.2686280229569365 * sin ( 2*d + -2*lp + -1*l + -1*f );
        a += -0.29115281957063105 * sin ( 2*d + l + -3*f );
        a += -0.30127706666588727 * sin ( lp + -2*l + f );
        a += -0.3051679045592289 * sin ( 3*d + -1*l + -1*f );
        a += -0.3129065654745452 * sin ( lp + 2*l + -1*f );
        a += 0.3147142643365984 * sin ( 2*d + -2*lp + -1*l + f );
        a += 0.32906188659450036 * sin ( 2*d + -1*l + -3*f );
        a += 0.3388051731948818 * sin ( 4*d + -1*lp + -1*l + f );
        a += -0.3518270352520293 * sin ( 3*d + -1*f );
        a += 0.3834982031391505 * sin ( 2*d + -2*lp + f );
        a += 0.41494120965053316 * sin ( 4*d + -1*lp + -1*f );
        a += -0.42988724661750677 * sin ( d + -1*l + -1*f );
        a += 0.4733771244402667 * sin ( 4*d + l + -1*f );
        a += -0.588925840557543 * sin ( d + l + -1*f );
        a += 0.595773592773338 * sin ( 4*d + -1*lp + -1*l + -1*f );
        a += 0.6337065552264189 * sin ( 4*d + -2*l + -1*f );
        a += -0.6388126752200219 * sin ( lp + 2*l + f );
        a += 0.6502221050679999 * sin ( 2*d + -1*lp + -2*l + -1*f );
        a += -0.6674055906423221 * sin ( d + l + f );
        a += -0.7910146977975804 * sin ( 2*d + lp + -1*l + -1*f );
        a += -0.7931860578992775 * sin ( lp + -2*l + -1*f );
        a += 0.8025932817907606 * sin ( d + lp + f );
        a += 0.8042231949825923 * sin ( d + lp + -1*f );
        a += -0.8227134671120412 * sin ( 2*d + lp + l + -1*f );
        a += -1.0193849686234684 * sin ( l + 3*f );
        a += 1.0857794666193619 * sin ( 2*d + -2*lp + -1*f );
        a += 1.134610152680881 * sin ( 2*d + -1*lp + l + f );
        a += 1.1918722470239156 * sin ( 4*d + f );
        a += -1.264272974442855 * sin ( 2*d + lp + f );
        a += -1.3178213396953622 * sin ( 2*d + lp + -1*l + f );
        a += 1.5156340039346252 * sin ( 2*d + -3*l + -1*f );
        a += 1.5197526556358836 * sin ( 2*d + 2*l + f );
        a += 1.5813034543096383 * sin ( 3*l + -1*f );
        a += -1.6244210192935056 * sin ( 2*d + -2*l + f );
        a += 1.7659818785902839 * sin ( 2*d + -1*lp + l + -1*f );
        a += 2.146168997223952 * sin ( 2*d + 2*l + -1*f );
        a += 2.1863126913266306 * sin ( 2*d + -3*f );
        a += 2.4138771780692565 * sin ( 4*d + -2*l + f );
        a += 2.798640690590698 * sin ( l + -3*f );
        a += 2.998481220661874 * sin ( 4*d + -1*l + f );
        a += 3.674461638876316 * sin ( 4*d + -1*f );
        a += 3.9840541785107315 * sin ( 3*l + f );
        a += -4.805739774801292 * sin ( d + -1*f );
        a += -4.839610797611041 * sin ( lp + -1*f );
        a += -5.075914192200714 * sin ( lp + l + -1*f );
        a += -5.311274506945692 * sin ( lp + l + f );
        a += -5.368395688849232 * sin ( d + f );
        a += -5.632349625361227 * sin ( lp + -1*l + f );
        a += -6.296475881117304 * sin ( 3*f );
        a += -6.460067402607056 * sin ( lp + f );
        a += 6.5795744852210385 * sin ( 4*d + -1*l + -1*f );
        a += -6.731431333340867 * sin ( lp + -1*l + -1*f );
        a += 7.43454958873235 * sin ( 2*d + -1*lp + -1*l + -1*f );
        a += 7.958548354542698 * sin ( 2*d + -1*lp + f );
        a += 8.868136128797962 * sin ( 2*d + -1*lp + -1*l + f );
        a += -12.094142301993864 * sin ( 2*d + lp + -1*f );
        a += 15.121553091067174 * sin ( 2*d + l + f );
        a += 15.566264146094996 * sin ( 2*d + -2*l + -1*f );
        a += 29.57657874739885 * sin ( 2*d + -1*lp + -1*f );
        a += 31.759668197533784 * sin ( 2*l + -1*f );
        a += 33.35720017106566 * sin ( 2*d + l + -1*f );
        a += 61.911945225502166 * sin ( 2*l + f );
        a += 117.26068633236684 * sin ( 2*d + f );
        a += 166.5741021708 * sin ( 2*d + -1*l + -1*f );
        a += 199.48374400255545 * sin ( 2*d + -1*l + f );
        a += 623.6524283434268 * sin ( 2*d + -1*f );
        a += 999.6935757428375 * sin ( l + -1*f );
        a += 1010.1670684572065 * sin ( l + f );
        a += 18461.238680000977 * sin ( f );
        return a;
    }

    double mainproblem_r ( double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += -2.600064479295188e-9 * sin ( 3*d + 3*lp + -2*l + -2*f + halfpi );
        a += 1.7346633510099198e-9 * sin ( 2*d + -1*lp + l + 2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 10*d + -5*l + halfpi );
        a += -0.00001999999999572086 * sin ( 10*d + -1*lp + -2*l + halfpi );
        a += -0.00001999999999572086 * sin ( 8*d + 2*l + halfpi );
        a += -0.00001999999999572086 * sin ( 8*d + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 8*d + -1*lp + -1*l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 8*d + -1*lp + -2*l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 7*d + -1*lp + -1*l + halfpi );
        a += 0.00001999999999572086 * sin ( 7*d + -1*lp + -4*l + halfpi );
        a += -0.00001999999999572086 * sin ( 6*d + 4*l + halfpi );
        a += -0.00001999999999572086 * sin ( 5*d + -3*l + 2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 5*d + -2*lp + l + halfpi );
        a += 0.00001999999999572086 * sin ( 5*d + -2*lp + -1*l + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 4*d + 2*lp + -3*l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 4*d + -2*lp + -5*l + halfpi );
        a += -0.00001999999999572086 * sin ( 4*d + -5*lp + halfpi );
        a += 0.000019979578220416432 * sin ( 3*d + 3*lp + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 3*d + lp + -3*l + 2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 3*d + l + 2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 3*d + -2*lp + l + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 2*d + 4*lp + -1*l + halfpi );
        a += 0.00001999999999572086 * sin ( 2*d + 3*l + -4*f + halfpi );
        a += -0.00001999999999572086 * sin ( 2*d + -2*l + -4*f + halfpi );
        a += -0.00001999999999572086 * sin ( 2*d + -5*l + 2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 2*d + -1*lp + 6*l + halfpi );
        a += -0.00001999999999572086 * sin ( 2*d + -2*lp + 5*l + halfpi );
        a += 0.00001999999999572086 * sin ( 2*d + -2*lp + -3*l + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 2*d + -3*lp + -4*l + halfpi );
        a += -0.00001999999999572086 * sin ( 2*d + -6*lp + halfpi );
        a += 0.00001999999999572086 * sin ( d + 2*lp + l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( d + 2*lp + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( d + 2*lp + -4*l + halfpi );
        a += -0.00001999999999572086 * sin ( d + lp + 3*l + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( d + -1*lp + -2*l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( d + -2*lp + l + -2*f + halfpi );
        a += -0.00001999999999572086 * sin ( 3*lp + -2*l + 2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 5*l + -2*f + halfpi );
        a += 0.00001999999999572086 * sin ( 4*l + -4*f + halfpi );
        a += -0.00002999999999358129 * sin ( 10*d + -1*l + halfpi );
        a += -0.00002999999999358129 * sin ( 10*d + -1*lp + -3*l + halfpi );
        a += -0.00002999999999358129 * sin ( 8*d + -2*lp + halfpi );
        a += -0.00002999999999358129 * sin ( 8*d + -2*lp + -4*l + halfpi );
        a += -0.00002999999999358129 * sin ( 7*d + lp + -3*l + halfpi );
        a += -0.00002999999999358129 * sin ( 6*d + -1*lp + -3*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 6*d + -2*lp + -2*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 6*d + -3*lp + l + halfpi );
        a += -0.00002999999999358129 * sin ( 6*d + -4*lp + -1*l + halfpi );
        a += -0.00002999999999358129 * sin ( 6*d + -4*lp + -2*l + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + 2*lp + halfpi );
        a += -0.00002999999999358129 * sin ( 5*d + lp + 2*l + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + lp + -4*l + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + -1*lp + l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + -1*lp + -2*l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + -1*lp + -4*l + halfpi );
        a += 0.00002999999999358129 * sin ( 5*d + -3*lp + -2*l + halfpi );
        a += -0.00002999999999358129 * sin ( 4*d + 3*lp + halfpi );
        a += 0.00002999999999358129 * sin ( 4*d + 2*lp + l + halfpi );
        a += -0.00002999999999358129 * sin ( 4*d + 2*lp + -4*l + halfpi );
        a += -0.00002999999999358129 * sin ( 4*d + lp + l + -4*f + halfpi );
        a += -0.00002999999999358129 * sin ( 4*d + lp + 2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 4*d + -1*lp + -4*f + halfpi );
        a += -0.00002999999999358129 * sin ( 4*d + -2*lp + -3*l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 3*d + 2*lp + 2*l + halfpi );
        a += 0.00002999999999358129 * sin ( 3*d + 4*l + halfpi );
        a += -0.00002999999999358129 * sin ( 3*d + -5*l + halfpi );
        a += 0.00002999999999358129 * sin ( 3*d + -1*lp + 2*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 3*d + -2*lp + 2*l + halfpi );
        a += 0.00002999999999358129 * sin ( 3*d + -3*lp + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 3*d + -4*lp + halfpi );
        a += 0.00002999999999358129 * sin ( 3*d + -4*lp + -1*l + halfpi );
        a += -0.00002999999999358129 * sin ( 2*d + 3*lp + -1*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 2*d + 2*lp + -3*l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 2*d + lp + -4*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( 2*d + -2*lp + l + -4*f + halfpi );
        a += 0.00002999999999358129 * sin ( 2*d + -2*lp + -5*l + halfpi );
        a += 0.00002999999999358129 * sin ( 2*d + -3*lp + 2*l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 2*d + -3*lp + -2*l + 2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 2*d + -4*lp + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( d + -6*l + halfpi );
        a += -0.00002999999999358129 * sin ( d + -1*lp + 2*l + -2*f + halfpi );
        a += -0.00002999999999358129 * sin ( d + -2*lp + 2*f + halfpi );
        a += 0.00002999999999358129 * sin ( 3*lp + 3*l + halfpi );
        a += -0.00002999999999358129 * sin ( 3*lp + l + -2*f + halfpi );
        a += 0.00002999999999358129 * sin ( lp + l + -4*f + halfpi );
        a += 0.00002999999999358129 * sin ( lp + -1*l + 4*f + halfpi );
        a += -0.00002999999999358129 * sin ( 4*f + halfpi );
        a += 0.00003999999999144172 * sin ( 8*d + lp + halfpi );
        a += 0.00003999999999144172 * sin ( 8*d + lp + -4*l + halfpi );
        a += -0.00003999999999144172 * sin ( 8*d + -3*l + -2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 8*d + -1*lp + l + halfpi );
        a += -0.00003999999999144172 * sin ( 7*d + lp + -1*l + halfpi );
        a += 0.00003999999999144172 * sin ( 7*d + -1*l + -2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 7*d + -2*l + -2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 6*d + 2*lp + -4*l + halfpi );
        a += 0.00003999999999144172 * sin ( 6*d + 2*l + -2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 6*d + -4*f + halfpi );
        a += 0.00003999999999144172 * sin ( 6*d + -1*lp + -2*l + 2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 6*d + -1*lp + -3*l + 2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 5*d + -3*l + -2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 4*d + lp + 4*l + halfpi );
        a += -0.00003999999999144172 * sin ( 4*d + lp + -5*l + halfpi );
        a += 0.00003999999999144172 * sin ( 4*d + 4*l + -2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 4*d + -1*lp + -6*l + halfpi );
        a += 0.00003999999999144172 * sin ( 4*d + -2*lp + -3*l + 2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 4*d + -5*lp + -1*l + halfpi );
        a += -0.00003999999999144172 * sin ( 3*d + 3*lp + -2*l + halfpi );
        a += -0.00003999999999144172 * sin ( 3*d + -3*lp + l + halfpi );
        a += -0.00003999999999144172 * sin ( 2*d + 2*lp + -1*l + 2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 2*d + lp + 4*l + -2*f + halfpi );
        a += 0.00003999999999144172 * sin ( 2*d + -1*lp + -4*l + -2*f + halfpi );
        a += -0.00003999999999144172 * sin ( 2*d + -5*lp + l + halfpi );
        a += 0.00003999999999144172 * sin ( d + -2*lp + 3*l + halfpi );
        a += 0.00003999999999144172 * sin ( d + -2*lp + -3*l + halfpi );
        a += 0.00003999999999144172 * sin ( 4*l + 2*f + halfpi );
        a += -0.000049999999989302146 * sin ( 6*d + -1*lp + 3*l + halfpi );
        a += -0.000049999999989302146 * sin ( 6*d + -2*lp + 2*l + halfpi );
        a += -0.000049999999989302146 * sin ( 6*d + -2*lp + -2*f + halfpi );
        a += 0.000049999999989302146 * sin ( 4*d + 2*lp + -2*f + halfpi );
        a += -0.000049999999989302146 * sin ( 4*d + -7*l + halfpi );
        a += 0.000049999999989302146 * sin ( 4*d + -1*lp + l + -4*f + halfpi );
        a += -0.000049999999989302146 * sin ( 4*d + -1*lp + -4*l + -2*f + halfpi );
        a += 0.000049999999989302146 * sin ( 4*d + -2*lp + 2*l + -2*f + halfpi );
        a += 0.000049999999989302146 * sin ( 4*d + -2*lp + -1*l + 2*f + halfpi );
        a += -0.000049999999989302146 * sin ( 3*d + lp + -5*l + halfpi );
        a += 0.0000499999999612987 * sin ( 3*d + l + -4*f + halfpi );
        a += -0.000049999999989302146 * sin ( 3*d + -3*l + -2*f + halfpi );
        a += -0.0000499999999612987 * sin ( 3*d + -2*lp + -1*l + -2*f + halfpi );
        a += -0.000049999999989302146 * sin ( 2*d + lp + 2*l + -4*f + halfpi );
        a += -0.000049999999989302146 * sin ( 2*lp + -5*l + halfpi );
        a += 0.000049999999989302146 * sin ( lp + 2*l + -4*f + halfpi );
        a += 0.000059999999959159136 * sin ( 7*d + -1*lp + -2*l + halfpi );
        a += 0.00005999999998716258 * sin ( 6*d + -1*l + 2*f + halfpi );
        a += -0.000059999999959159136 * sin ( 5*d + 2*l + halfpi );
        a += -0.000059999999959159136 * sin ( 5*d + -2*lp + -1*l + halfpi );
        a += -0.00005999999998716258 * sin ( 4*d + -5*l + -2*f + halfpi );
        a += 0.00005999999998716258 * sin ( 4*d + -1*lp + 3*l + -2*f + halfpi );
        a += -0.00005999999998716258 * sin ( 4*d + -1*lp + -1*l + -4*f + halfpi );
        a += -0.00005999999998716258 * sin ( 4*d + -3*lp + -1*l + -2*f + halfpi );
        a += -0.00005999999998716258 * sin ( 4*d + -4*lp + l + halfpi );
        a += 0.000059999999959159136 * sin ( 3*d + lp + -1*l + 2*f + halfpi );
        a += -0.000059999999959159136 * sin ( 3*d + -1*l + 2*f + halfpi );
        a += -0.000059999999959159136 * sin ( 3*d + -1*lp + -2*l + 2*f + halfpi );
        a += 0.00005999999998716258 * sin ( 2*d + -1*lp + -6*l + halfpi );
        a += 0.00005999999998716258 * sin ( 2*d + -2*lp + 3*l + -2*f + halfpi );
        a += 0.000059999999959159136 * sin ( d + 3*lp + -2*l + halfpi );
        a += 0.000059999999959159136 * sin ( d + 2*lp + 3*l + halfpi );
        a += -0.000059999999959159136 * sin ( d + lp + 2*f + halfpi );
        a += 0.000059999999959159136 * sin ( d + lp + -5*l + halfpi );
        a += -0.000059999999959159136 * sin ( d + -4*lp + halfpi );
        a += -0.00005999999998716258 * sin ( 4*lp + -2*l + halfpi );
        a += -0.00005999999998716258 * sin ( lp + 4*l + -2*f + halfpi );
        a += -0.000069999999985023 * sin ( 10*d + -2*l + halfpi );
        a += -0.000069999999985023 * sin ( 10*d + -4*l + halfpi );
        a += -0.00006999999994301784 * sin ( 7*d + lp + -2*l + halfpi );
        a += -0.00006999999994301784 * sin ( 7*d + halfpi );
        a += -0.000069999999985023 * sin ( 6*d + -2*lp + -4*l + halfpi );
        a += 0.00006999999994301784 * sin ( 5*d + 2*lp + -1*l + halfpi );
        a += -0.000069999999985023 * sin ( 4*d + lp + -3*l + 2*f + halfpi );
        a += 0.000069999999985023 * sin ( 4*d + l + 2*f + halfpi );
        a += -0.00006999999994301784 * sin ( 3*d + 2*lp + -3*l + halfpi );
        a += 0.00006999999994301784 * sin ( 3*d + lp + -2*l + 2*f + halfpi );
        a += 0.000069999999985023 * sin ( 2*d + -3*lp + -1*l + 2*f + halfpi );
        a += 0.00006999999994301784 * sin ( d + 3*lp + l + halfpi );
        a += -0.00006999999994301784 * sin ( d + -1*lp + l + 2*f + halfpi );
        a += -0.000069999999985023 * sin ( 3*lp + 2*f + halfpi );
        a += 0.000069999999985023 * sin ( 3*lp + -1*l + 2*f + halfpi );
        a += -0.000069999999985023 * sin ( lp + -2*l + 4*f + halfpi );
        a += -0.00007999999994087827 * sin ( 7*d + -1*l + halfpi );
        a += 0.00007999999998288344 * sin ( 6*d + lp + 2*l + halfpi );
        a += -0.00007999999998288344 * sin ( 4*d + lp + 2*l + -2*f + halfpi );
        a += 0.00007999999998288344 * sin ( 4*d + -1*lp + 2*f + halfpi );
        a += 0.00007999999994087827 * sin ( 3*d + -3*lp + -2*l + halfpi );
        a += 0.00007999999998288344 * sin ( 2*d + 5*l + -2*f + halfpi );
        a += 0.00007999999994087827 * sin ( d + 3*lp + -1*l + halfpi );
        a += 0.00007999999994087827 * sin ( d + lp + -2*l + -2*f + halfpi );
        a += 0.00007999999994087827 * sin ( d + -1*lp + 4*l + halfpi );
        a += -0.00007999999994087827 * sin ( d + -1*lp + -2*l + 2*f + halfpi );
        a += -0.00008999999998074387 * sin ( 8*d + -1*l + -2*f + halfpi );
        a += -0.00008999999998074387 * sin ( 8*d + -5*l + halfpi );
        a += -0.00008999999998074387 * sin ( 6*d + -5*l + halfpi );
        a += -0.00008999999993873871 * sin ( 5*d + lp + -2*f + halfpi );
        a += 0.00008999999993873871 * sin ( 5*d + -2*lp + -3*l + halfpi );
        a += -0.00008999999998074387 * sin ( 4*d + 5*l + halfpi );
        a += -0.00008999999998074387 * sin ( 4*d + -4*l + 2*f + halfpi );
        a += 0.00008998751209393897 * sin ( 3*d + 2*lp + -2*f + halfpi );
        a += -0.00008999999992473698 * sin ( 3*d + lp + -2*l + -2*f + halfpi );
        a += 0.00008999999998074387 * sin ( 2*d + lp + -6*l + halfpi );
        a += 0.00008999999998074387 * sin ( 2*d + -1*lp + 4*l + -2*f + halfpi );
        a += -0.00008998751214994586 * sin ( 2*d + -4*lp + 2*l + halfpi );
        a += 0.00008999999998074387 * sin ( 2*lp + 4*l + halfpi );
        a += -0.00009999999997860429 * sin ( 10*d + -3*l + halfpi );
        a += -0.00009999999997860429 * sin ( 8*d + -2*lp + -1*l + halfpi );
        a += 0.00009998751209179939 * sin ( 3*d + 3*lp + -1*l + halfpi );
        a += -0.00009999999997860429 * sin ( 2*d + 3*lp + -3*l + halfpi );
        a += 0.00009999999997860429 * sin ( 2*d + 2*lp + 2*l + -2*f + halfpi );
        a += 0.0000999999999225974 * sin ( d + 5*l + halfpi );
        a += 0.0000999999999225974 * sin ( d + -1*lp + -4*l + halfpi );
        a += 0.00009999999997860429 * sin ( lp + 6*l + halfpi );
        a += 0.00010999999997646473 * sin ( 8*d + lp + -1*l + halfpi );
        a += 0.00010999999992045784 * sin ( 7*d + -1*lp + -3*l + halfpi );
        a += -0.00010999999997646473 * sin ( 6*d + -2*lp + -1*l + -2*f + halfpi );
        a += 0.00010999999997646473 * sin ( 4*d + -2*lp + -2*l + 2*f + halfpi );
        a += -0.00010998751214566671 * sin ( 4*d + -3*lp + -3*l + halfpi );
        a += 0.00010999999997646473 * sin ( 2*d + lp + 5*l + halfpi );
        a += 0.00010999999992045784 * sin ( d + 3*l + -2*f + halfpi );
        a += -0.00010999999992045784 * sin ( d + -1*lp + -1*l + -2*f + halfpi );
        a += -0.00010999999997646473 * sin ( 2*lp + l + 2*f + halfpi );
        a += -0.00010999999997646473 * sin ( lp + -6*l + halfpi );
        a += -0.00011999999997432516 * sin ( 8*d + -2*l + -2*f + halfpi );
        a += 0.00011999999997432516 * sin ( 6*d + -4*l + 2*f + halfpi );
        a += -0.00011998751214352715 * sin ( 6*d + -3*lp + -3*l + halfpi );
        a += -0.00011999999997432516 * sin ( 4*d + lp + -1*l + 2*f + halfpi );
        a += -0.00011999999997432516 * sin ( 4*d + -2*lp + -4*l + halfpi );
        a += -0.00011999999990431656 * sin ( 3*d + -1*lp + -4*l + halfpi );
        a += 0.00011999999997432516 * sin ( 2*d + lp + -4*f + halfpi );
        a += 0.00011999999997432516 * sin ( 2*d + -5*l + -2*f + halfpi );
        a += -0.00011997502431272912 * sin ( 2*d + -5*lp + -1*l + halfpi );
        a += -0.00012999999997218557 * sin ( 8*d + -2*lp + -3*l + halfpi );
        a += 0.00012999999813965039 * sin ( 4*d + lp + l + -2*f + halfpi );
        a += -0.00012998751214138754 * sin ( 4*d + -3*lp + 2*l + halfpi );
        a += -0.00012999999990217695 * sin ( 3*d + -3*l + 2*f + halfpi );
        a += 0.00012999999997218557 * sin ( 2*d + -1*lp + 2*l + -4*f + halfpi );
        a += -0.00012999999990217695 * sin ( d + 2*l + 2*f + halfpi );
        a += 0.000139999999970046 * sin ( 6*d + 2*lp + -1*l + halfpi );
        a += -0.000139999999970046 * sin ( 4*d + -2*l + -4*f + halfpi );
        a += -0.00013999999988603568 * sin ( 3*d + lp + 3*l + halfpi );
        a += -0.0001399999999000374 * sin ( 3*d + -1*lp + -2*l + -2*f + halfpi );
        a += 0.0001400026019650725 * sin ( 2*d + 2*l + 2*f + halfpi );
        a += -0.000139999999970046 * sin ( 2*d + -2*l + 4*f + halfpi );
        a += 0.0001399999999000374 * sin ( d + lp + -3*l + 2*f + halfpi );
        a += 0.00014999999996790644 * sin ( 8*d + lp + -3*l + halfpi );
        a += 0.0001499999998838961 * sin ( 7*d + -4*l + halfpi );
        a += -0.0001499999998838961 * sin ( 5*d + lp + -1*l + -2*f + halfpi );
        a += -0.0001499812682217094 * sin ( 4*d + 3*lp + -2*l + halfpi );
        a += -0.0001499999998838961 * sin ( 3*d + 2*f + halfpi );
        a += -0.00014999999996790644 * sin ( 2*d + lp + l + 2*f + halfpi );
        a += 0.00014999999996790644 * sin ( lp + -3*l + 2*f + halfpi );
        a += -0.00015999999996576687 * sin ( 8*d + l + halfpi );
        a += -0.00015998751213496884 * sin ( 8*d + -2*lp + -2*l + halfpi );
        a += 0.00015999999996576687 * sin ( 6*d + lp + -2*f + halfpi );
        a += -0.00015998751205095852 * sin ( 5*d + -2*lp + halfpi );
        a += 0.00015999999804922136 * sin ( 3*d + 3*l + halfpi );
        a += -0.00015998751205095852 * sin ( 3*d + -2*lp + -3*l + halfpi );
        a += -0.00015998126821956983 * sin ( 2*d + -3*lp + 3*l + halfpi );
        a += -0.00016998126821743027 * sin ( 6*d + -3*lp + halfpi );
        a += -0.0001699999999636273 * sin ( 4*d + -1*lp + 4*l + halfpi );
        a += 0.00016999999987961698 * sin ( d + l + -4*f + halfpi );
        a += -0.00016998126821743027 * sin ( 3*lp + -2*f + halfpi );
        a += -0.0001799875121306897 * sin ( 4*d + -2*lp + 3*l + halfpi );
        a += -0.0001799999998634757 * sin ( 3*d + lp + l + -2*f + halfpi );
        a += -0.0001799999998634757 * sin ( 3*d + -4*f + halfpi );
        a += -0.00017999999996148774 * sin ( 2*d + -3*l + 4*f + halfpi );
        a += 0.0001799875121306897 * sin ( 2*lp + 2*l + -2*f + halfpi );
        a += 0.00018999999995934818 * sin ( 8*d + lp + -2*l + halfpi );
        a += 0.00018999999995934818 * sin ( 6*d + lp + -2*l + -2*f + halfpi );
        a += -0.00018999999986133614 * sin ( 5*d + -1*lp + l + halfpi );
        a += -0.00018999999986133614 * sin ( d + -3*l + -2*f + halfpi );
        a += -0.00018999999995934818 * sin ( lp + -2*l + -2*f + halfpi );
        a += -0.00019000173462269918 * sin ( 7*l + halfpi );
        a += -0.00019999999995720858 * sin ( 6*d + 3*l + halfpi );
        a += 0.00019999999995720858 * sin ( 6*d + -2*l + 2*f + halfpi );
        a += -0.0001999999998451948 * sin ( 5*d + lp + l + halfpi );
        a += 0.0001999999998451948 * sin ( 5*d + l + -2*f + halfpi );
        a += -0.00019997502429561255 * sin ( 4*d + 3*lp + -1*l + halfpi );
        a += -0.00020000173462055959 * sin ( 2*d + 6*l + halfpi );
        a += 0.0002000026019522351 * sin ( 2*d + -7*l + halfpi );
        a += 0.00020999999984305524 * sin ( 5*d + -1*lp + -2*f + halfpi );
        a += 0.00020998126820887198 * sin ( 4*d + 2*lp + -2*l + -2*f + halfpi );
        a += 0.0002099999987333789 * sin ( 2*d + lp + -3*l + -2*f + halfpi );
        a += 0.00020999999984305524 * sin ( d + -1*lp + -1*l + 2*f + halfpi );
        a += -0.000209975024293473 * sin ( 3*lp + -3*l + halfpi );
        a += -0.00021999999873123933 * sin ( 8*d + -1*lp + halfpi );
        a += -0.00021999999995292945 * sin ( 4*d + lp + -2*l + 2*f + halfpi );
        a += -0.00021997502429133342 * sin ( 4*d + -3*lp + -2*f + halfpi );
        a += -0.0002199687803759344 * sin ( 4*d + -4*lp + -2*l + halfpi );
        a += 0.00022998126820459285 * sin ( 4*d + -2*lp + l + -2*f + halfpi );
        a += -0.0002299999998247744 * sin ( 3*d + lp + -1*l + -2*f + halfpi );
        a += -0.00023999999750527008 * sin ( 6*d + lp + -4*l + halfpi );
        a += -0.00023997502306536417 * sin ( 2*d + 3*lp + halfpi );
        a += -0.0002399812680764378 * sin ( d + -2*lp + -2*f + halfpi );
        a += -0.0002499830028636647 * sin ( 2*d + -2*lp + 4*l + halfpi );
        a += 0.0002600017344677049 * sin ( 5*d + -4*l + halfpi );
        a += 0.0002599687803673761 * sin ( 2*d + -3*lp + -1*l + -2*f + halfpi );
        a += 0.00026000520393442415 * sin ( 3*l + 2*f + halfpi );
        a += -0.0002699999999422316 * sin ( 6*d + -3*l + -2*f + halfpi );
        a += 0.00026996878036523656 * sin ( 2*d + -3*lp + l + -2*f + halfpi );
        a += -0.00027000173446556537 * sin ( d + lp + 4*l + halfpi );
        a += 0.0002700017346055826 * sin ( 4*l + -2*f + halfpi );
        a += 0.000279999999940092 * sin ( 6*d + -3*l + 2*f + halfpi );
        a += 0.00027998126803987605 * sin ( 3*d + 2*lp + l + halfpi );
        a += 0.00027998126803987605 * sin ( d + 2*lp + -3*l + halfpi );
        a += 0.00028997502412233747 * sin ( d + -2*lp + -2*l + halfpi );
        a += 0.0002999999997677922 * sin ( 5*d + -2*l + -2*f + halfpi );
        a += -0.0002999999997677922 * sin ( 3*d + -1*lp + 2*l + halfpi );
        a += 0.00029998751210501485 * sin ( 2*d + lp + -3*l + 2*f + halfpi );
        a += -0.0003000026019308394 * sin ( 2*d + -1*lp + 5*l + halfpi );
        a += -0.0002999999999358129 * sin ( lp + 2*l + 2*f + halfpi );
        a += -0.0003099750242720772 * sin ( 2*lp + -1*l + -2*f + halfpi );
        a += 0.00031999999730613114 * sin ( 7*d + -2*l + halfpi );
        a += 0.00031998826841007823 * sin ( 4*d + -4*f + halfpi );
        a += 0.00031997502104769176 * sin ( 3*d + 2*lp + -2*l + halfpi );
        a += -0.00032998924492941197 * sin ( 8*d + -1*lp + -4*l + halfpi );
        a += 0.00032999000307128965 * sin ( 3*l + -4*f + halfpi );
        a += 0.0003399767570964744 * sin ( 6*d + 2*lp + -3*l + halfpi );
        a += 0.0003399875119144342 * sin ( 5*d + -1*lp + -1*l + -2*f + halfpi );
        a += 0.00033995004860406256 * sin ( 4*lp + halfpi );
        a += -0.0003499750224309838 * sin ( 6*d + -2*lp + l + halfpi );
        a += 0.00034999999972909094 * sin ( 3*d + 2*l + -2*f + halfpi );
        a += -0.0003499757805728615 * sin ( 2*d + -1*lp + -4*f + halfpi );
        a += 0.00034996253625069857 * sin ( d + -3*lp + -1*l + halfpi );
        a += 0.00035998751514640273 * sin ( 4*d + lp + -2*l + -2*f + halfpi );
        a += -0.0003599750242613794 * sin ( 4*d + -2*lp + -2*l + -2*f + halfpi );
        a += 0.00035997762625640593 * sin ( 2*d + 2*lp + 2*l + halfpi );
        a += 0.0003599438046843844 * sin ( 2*d + -4*lp + -2*l + halfpi );
        a += 0.00035997502223282014 * sin ( d + -2*lp + 2*l + halfpi );
        a += -0.00036998751067232366 * sin ( d + lp + 2*l + -2*f + halfpi );
        a += 0.0003699438046822448 * sin ( 4*lp + l + halfpi );
        a += 0.0003799892440978433 * sin ( 5*d + lp + -3*l + halfpi );
        a += 0.0003799856645696792 * sin ( l + -4*f + halfpi );
        a += -0.0003899892443057295 * sin ( 6*d + -1*lp + 2*l + halfpi );
        a += -0.00038998435788794943 * sin ( 2*d + -1*l + -4*f + halfpi );
        a += 0.0003999718700550118 * sin ( 2*d + lp + l + -4*f + halfpi );
        a += -0.00040998751208147955 * sin ( 6*d + -1*lp + -2*l + -2*f + halfpi );
        a += -0.00040999098140818155 * sin ( 4*d + -1*lp + -5*l + halfpi );
        a += -0.00040997138233030904 * sin ( 2*d + 2*lp + -4*l + halfpi );
        a += 0.00040996878033528253 * sin ( 2*d + -2*lp + -2*l + -2*f + halfpi );
        a += 0.00041998751024680485 * sin ( 6*d + lp + -1*l + -2*f + halfpi );
        a += -0.00042995004614142614 * sin ( 6*d + -3*lp + -1*l + halfpi );
        a += -0.0004300034689966712 * sin ( d + -5*l + halfpi );
        a += 0.0004399687778854836 * sin ( 6*d + 2*lp + -2*l + halfpi );
        a += -0.0004399500467501317 * sin ( 6*d + -3*lp + -2*l + halfpi );
        a += 0.00043996877825829944 * sin ( 5*d + -2*lp + -2*l + halfpi );
        a += 0.00043999478088658177 * sin ( 4*d + 3*l + -2*f + halfpi );
        a += -0.00043997518180870926 * sin ( 2*d + lp + 3*l + -2*f + halfpi );
        a += 0.000439973446907329 * sin ( d + -1*lp + l + -2*f + halfpi );
        a += 0.00044998386832001365 * sin ( 4*d + lp + 3*l + halfpi );
        a += -0.00044993131500179503 * sin ( 4*d + -4*lp + halfpi );
        a += -0.00045995471539488205 * sin ( 2*d + 2*lp + -2*l + 2*f + halfpi );
        a += -0.0004599751818044301 * sin ( 2*d + -1*lp + -3*l + 2*f + halfpi );
        a += 0.0004599517832417387 * sin ( 2*d + -3*lp + -3*l + halfpi );
        a += 0.0004799956469880089 * sin ( 2*d + -4*l + 2*f + halfpi );
        a += -0.0004799947806119908 * sin ( d + -3*l + 2*f + halfpi );
        a += -0.0004899734446912801 * sin ( 6*d + -1*lp + -2*f + halfpi );
        a += 0.0004899734468686276 * sin ( 3*d + -1*lp + l + -2*f + halfpi );
        a += 0.0004999843578644142 * sin ( 4*d + l + -4*f + halfpi );
        a += 0.000519983000362516 * sin ( 6*d + lp + l + halfpi );
        a += -0.0005199455380918122 * sin ( 2*d + 3*lp + -2*l + halfpi );
        a += 0.0005199734306354251 * sin ( 2*d + lp + -2*l + -2*f + halfpi );
        a += 0.0005399375604364369 * sin ( d + 3*lp + halfpi );
        a += -0.0005500052026506866 * sin ( 4*d + -6*l + halfpi );
        a += 0.0005499751805634839 * sin ( 4*d + -1*lp + 2*l + -2*f + halfpi );
        a += -0.0005499375604342974 * sin ( 3*d + -3*lp + halfpi );
        a += -0.000549950206123578 * sin ( 2*d + 2*lp + -2*l + -2*f + halfpi );
        a += -0.0005599732935231145 * sin ( 5*d + -1*lp + -1*l + halfpi );
        a += -0.0005798938514815866 * sin ( 2*d + -5*lp + halfpi );
        a += -0.0005899658934640504 * sin ( 4*d + -1*lp + -3*l + -2*f + halfpi );
        a += -0.0006399383145750397 * sin ( 4*d + 2*lp + -1*l + -2*f + halfpi );
        a += -0.0006499793586751311 * sin ( 3*d + lp + -4*l + halfpi );
        a += 0.0006499250706935614 * sin ( 3*d + -3*lp + -1*l + halfpi );
        a += 0.0006499784931759908 * sin ( d + -1*lp + -3*l + halfpi );
        a += 0.0006600034657672203 * sin ( 7*d + -3*l + halfpi );
        a += -0.0006599543839722837 * sin ( 2*lp + -4*l + halfpi );
        a += 0.0006699926037718808 * sin ( 4*d + 2*f + halfpi );
        a += -0.0006699500481694119 * sin ( 3*d + -2*lp + l + halfpi );
        a += 0.0006699543851918342 * sin ( 2*d + -2*lp + -4*l + halfpi );
        a += 0.0006699526501644385 * sin ( d + 2*lp + 2*l + halfpi );
        a += 0.0006899658928318094 * sin ( 4*d + -1*lp + -1*l + 2*f + halfpi );
        a += -0.0006999776212969001 * sin ( 8*d + -1*lp + -1*l + halfpi );
        a += 0.000699938316627536 * sin ( 3*d + -2*lp + -2*f + halfpi );
        a += -0.0007199926031503379 * sin ( 4*d + -4*l + -2*f + halfpi );
        a += -0.0007298938520603381 * sin ( 4*lp + -1*l + halfpi );
        a += -0.0007399632904200352 * sin ( d + -1*lp + 2*f + halfpi );
        a += 0.0007699605168418144 * sin ( 4*d + -1*lp + -3*l + 2*f + halfpi );
        a += -0.000779881362386307 * sin ( 4*d + -4*lp + -1*l + halfpi );
        a += 0.0007799151870125539 * sin ( 3*lp + 2*l + halfpi );
        a += 0.0007899566075520735 * sin ( 2*d + -1*lp + -3*l + -2*f + halfpi );
        a += -0.0007999726250570814 * sin ( 4*d + -1*l + -4*f + halfpi );
        a += 0.0007999253867512489 * sin ( 2*d + 2*lp + -2*f + halfpi );
        a += -0.0007999566051065537 * sin ( lp + 3*l + -2*f + halfpi );
        a += -0.0008300025963198366 * sin ( 8*d + halfpi );
        a += 0.0008399245194110152 * sin ( 2*d + -2*lp + 2*l + -2*f + halfpi );
        a += -0.000849973980566124 * sin ( 6*d + -1*lp + -4*l + halfpi );
        a += -0.0008499374961839267 * sin ( 2*d + -1*lp + l + -4*f + halfpi );
        a += -0.0008899999993195179 * sin ( 5*d + l + halfpi );
        a += -0.0008899531377279173 * sin ( 3*d + -1*lp + -1*l + -2*f + halfpi );
        a += 0.0009299686045761293 * sin ( 4*d + lp + -4*l + halfpi );
        a += 0.0009699668699829995 * sin ( d + -1*lp + 3*l + halfpi );
        a += 0.0009899268099749037 * sin ( 3*d + 2*lp + -1*l + halfpi );
        a += 0.0009899129001014891 * sin ( 2*d + -2*lp + -2*l + 2*f + halfpi );
        a += -0.000989912898268954 * sin ( 2*lp + -2*l + 2*f + halfpi );
        a += -0.0010099878247033958 * sin ( 3*d + -2*l + 2*f + halfpi );
        a += 0.0010099686070671708 * sin ( d + lp + -4*l + halfpi );
        a += -0.0010199305605880081 * sin ( 2*l + 2*f + halfpi );
        a += 0.0010398618110166091 * sin ( 2*d + -3*lp + -2*f + halfpi );
        a += -0.0010600078020932145 * sin ( 4*d + 4*l + halfpi );
        a += 0.0010799612032035646 * sin ( 2*d + -1*lp + 2*f + halfpi );
        a += -0.0010899614902405963 * sin ( 8*d + -1*lp + -3*l + halfpi );
        a += -0.0011099588894717518 * sin ( 5*d + lp + halfpi );
        a += -0.0011099974099931535 * sin ( 3*d + 2*l + halfpi );
        a += -0.0011100043364208852 * sin ( 3*l + -2*f + halfpi );
        a += -0.001129833145651581 * sin ( 2*d + -4*lp + l + halfpi );
        a += -0.0011398714746409758 * sin ( 4*d + -3*lp + l + halfpi );
        a += 0.0011599658281056869 * sin ( 2*d + lp + -5*l + halfpi );
        a += 0.0011899882531947116 * sin ( 2*d + 4*l + -2*f + halfpi );
        a += 0.0011899658329860288 * sin ( 2*d + -1*lp + -5*l + halfpi );
        a += -0.0012099384701849956 * sin ( 6*d + -1*lp + -1*l + -2*f + halfpi );
        a += -0.0012599552450671344 * sin ( 8*d + -1*lp + -2*l + halfpi );
        a += 0.0012699326548513648 * sin ( 2*d + -1*lp + 3*l + -2*f + halfpi );
        a += 0.001279956115359515 * sin ( 5*d + -1*lp + -3*l + halfpi );
        a += 0.0013499587180396506 * sin ( 2*d + lp + 4*l + halfpi );
        a += 0.001359907896328418 * sin ( 4*d + 2*lp + halfpi );
        a += 0.00141997653160726 * sin ( 5*d + -2*f + halfpi );
        a += -0.0014299238082958613 * sin ( 2*d + lp + 2*f + halfpi );
        a += -0.0014498729896367144 * sin ( 4*d + -2*lp + -1*l + -2*f + halfpi );
        a += -0.0014799207667409674 * sin ( d + lp + -2*l + 2*f + halfpi );
        a += -0.0014999498718958769 * sin ( 3*d + lp + 2*l + halfpi );
        a += 0.0015200095376645792 * sin ( d + 4*l + halfpi );
        a += -0.001529943799928881 * sin ( 5*d + -1*lp + halfpi );
        a += 0.0015299559452449764 * sin ( lp + 5*l + halfpi );
        a += 0.0015599190320184947 * sin ( d + lp + -1*l + -2*f + halfpi );
        a += 0.001589883956620626 * sin ( d + -2*lp + l + halfpi );
        a += 0.0015999153866677535 * sin ( 4*d + -1*lp + -2*l + 2*f + halfpi );
        a += -0.0016098189252268494 * sin ( d + -3*lp + halfpi );
        a += 0.0016198813619353197 * sin ( 3*d + 2*lp + halfpi );
        a += -0.001639976091475414 * sin ( d + l + 2*f + halfpi );
        a += 0.0016798473041586793 * sin ( 2*d + -2*lp + -1*l + 2*f + halfpi );
        a += -0.0017000104066922652 * sin ( 3*d + -4*l + halfpi );
        a += -0.0017399514359479973 * sin ( lp + -5*l + halfpi );
        a += 0.0018099964774992798 * sin ( 2*d + l + 2*f + halfpi );
        a += -0.0018200086631538323 * sin ( 6*d + 2*l + halfpi );
        a += -0.0018400112663662697 * sin ( 8*d + -4*l + halfpi );
        a += -0.0018398695647908042 * sin ( 4*d + -2*lp + 2*l + halfpi );
        a += 0.0018698352531917636 * sin ( 2*d + 2*lp + l + -2*f + halfpi );
        a += 0.001879980856351468 * sin ( 2*d + -4*l + -2*f + halfpi );
        a += -0.001939859848473082 * sin ( 6*d + -2*lp + halfpi );
        a += -0.0019399354732501006 * sin ( 4*d + -1*lp + 3*l + halfpi );
        a += -0.0019498659228468962 * sin ( 6*d + -2*lp + -3*l + halfpi );
        a += -0.002029892925098962 * sin ( 2*d + lp + -2*l + 2*f + halfpi );
        a += 0.002029970875216893 * sin ( d + 2*l + -2*f + halfpi );
        a += -0.0020599708751964725 * sin ( 3*d + -2*l + -2*f + halfpi );
        a += 0.0020797715681284018 * sin ( 2*d + 3*lp + -1*l + halfpi );
        a += -0.002089769663312621 * sin ( 2*d + -3*lp + 2*l + halfpi );
        a += 0.002189928728041801 * sin ( 2*d + 2*l + -4*f + halfpi );
        a += 0.002239838349407682 * sin ( 3*d + -2*lp + -2*l + halfpi );
        a += 0.002279842689108186 * sin ( 2*lp + 3*l + halfpi );
        a += -0.002299927325665726 * sin ( 4*d + -1*lp + -4*l + halfpi );
        a += -0.0023697856236097816 * sin ( 2*lp + l + -2*f + halfpi );
        a += -0.002389830193923712 * sin ( 4*d + -2*lp + -3*l + halfpi );
        a += -0.0024799481549706284 * sin ( 5*d + -1*l + halfpi );
        a += 0.0025198248142579488 * sin ( 4*d + 2*lp + -3*l + halfpi );
        a += -0.002559915008361952 * sin ( 5*d + lp + -2*l + halfpi );
        a += -0.002699953061730438 * sin ( 6*d + -2*f + halfpi );
        a += 0.002719906155265635 * sin ( 6*d + lp + halfpi );
        a += 0.0027198592346774184 * sin ( 4*d + -1*lp + l + -2*f + halfpi );
        a += 0.0027799068664836188 * sin ( 6*d + lp + -3*l + halfpi );
        a += -0.0027799617426805664 * sin ( d + -2*l + -2*f + halfpi );
        a += 0.002809957402336698 * sin ( 5*d + -1*l + -2*f + halfpi );
        a += -0.0028500095223241463 * sin ( 8*d + -1*l + halfpi );
        a += -0.002869690226908898 * sin ( 3*lp + -2*l + halfpi );
        a += -0.002959897133655964 * sin ( 6*d + -1*lp + l + halfpi );
        a += -0.002980024279762562 * sin ( 2*d + 5*l + halfpi );
        a += 0.003040028617629792 * sin ( 2*d + -6*l + halfpi );
        a += -0.003109888292127687 * sin ( 5*d + lp + -1*l + halfpi );
        a += 0.003239766884270276 * sin ( d + 2*lp + -2*l + halfpi );
        a += -0.003259955652241495 * sin ( 6*d + -2*l + -2*f + halfpi );
        a += -0.0032900312232363995 * sin ( 6*l + halfpi );
        a += 0.0033098216667820654 * sin ( d + lp + -1*l + 2*f + halfpi );
        a += -0.003339890728073113 * sin ( 3*d + -1*lp + -3*l + halfpi );
        a += -0.0033497667134172876 * sin ( 2*d + -2*lp + 3*l + halfpi );
        a += -0.003419685336853714 * sin ( 2*lp + 2*f + halfpi );
        a += -0.00391987546827571 * sin ( d + lp + 3*l + halfpi );
        a += 0.003999944344880401 * sin ( 4*d + 2*l + -2*f + halfpi );
        a += -0.004029629891074657 * sin ( 4*d + -2*lp + -2*f + halfpi );
        a += -0.004129870779350646 * sin ( 2*d + -1*lp + 4*l + halfpi );
        a += -0.004219848915651944 * sin ( d + -1*lp + -2*l + halfpi );
        a += -0.004259370053484488 * sin ( 2*d + -4*lp + -1*l + halfpi );
        a += 0.004299854987420303 * sin ( 4*d + lp + 2*l + halfpi );
        a += 0.004379682243183401 * sin ( d + 2*lp + -1*l + halfpi );
        a += 0.004499591548785873 * sin ( 2*lp + -1*l + 2*f + halfpi );
        a += 0.004569935661861146 * sin ( d + -2*l + 2*f + halfpi );
        a += -0.005129442024548935 * sin ( 4*d + -3*lp + -2*l + halfpi );
        a += -0.005369723686187613 * sin ( 2*d + lp + 2*l + -2*f + halfpi );
        a += -0.005390026858029839 * sin ( 8*d + -3*l + halfpi );
        a += -0.00540960626010783 * sin ( 6*d + -2*lp + -1*l + halfpi );
        a += -0.005420042485264708 * sin ( 4*d + -5*l + halfpi );
        a += 0.0054999204348384996 * sin ( 4*d + -1*l + 2*f + halfpi );
        a += -0.005579483885243759 * sin ( 2*lp + -2*f + halfpi );
        a += -0.0055900216497210805 * sin ( 8*d + -2*l + halfpi );
        a += -0.005619699480591253 * sin ( d + lp + l + -2*f + halfpi );
        a += 0.005729806764277895 * sin ( 5*d + -1*lp + -2*l + halfpi );
        a += -0.005879691925052026 * sin ( 2*d + lp + -1*l + 2*f + halfpi );
        a += -0.006179558738021248 * sin ( 6*d + -2*lp + -2*l + halfpi );
        a += -0.00636003988144267 * sin ( d + -4*l + halfpi );
        a += 0.006459530481599322 * sin ( d + 2*lp + l + halfpi );
        a += -0.00659004160302242 * sin ( 6*d + -4*l + halfpi );
        a += -0.0066096576379514665 * sin ( 4*d + -1*lp + -2*l + -2*f + halfpi );
        a += 0.00670989308645376 * sin ( 3*d + l + -2*f + halfpi );
        a += -0.006799776067874765 * sin ( 3*d + lp + -3*l + halfpi );
        a += -0.006819637513872005 * sin ( lp + l + 2*f + halfpi );
        a += -0.0074399064957780285 * sin ( 4*d + -3*l + -2*f + halfpi );
        a += -0.007449746661024307 * sin ( 2*d + -4*f + halfpi );
        a += -0.00768958328116718 * sin ( lp + -1*l + -2*f + halfpi );
        a += 0.0077997255856728336 * sin ( 6*d + lp + -1*l + halfpi );
        a += -0.007849874379004721 * sin ( 6*d + -1*l + -2*f + halfpi );
        a += 0.007919278185230938 * sin ( 2*d + -2*lp + l + -2*f + halfpi );
        a += -0.008079559500347928 * sin ( 3*d + lp + -2*f + halfpi );
        a += -0.00813999390722699 * sin ( 5*d + halfpi );
        a += -0.008169089048356087 * sin ( 4*d + -3*lp + halfpi );
        a += -0.008369733601730649 * sin ( 2*l + -4*f + halfpi );
        a += 0.008439384096676371 * sin ( d + -2*lp + -1*l + halfpi );
        a += -0.008679859626274804 * sin ( 3*d + -1*l + -2*f + halfpi );
        a += -0.008869670625992603 * sin ( 3*d + -1*lp + l + halfpi );
        a += 0.009119359290868793 * sin ( 2*d + 2*lp + l + halfpi );
        a += 0.00924988301609694 * sin ( 4*d + -3*l + 2*f + halfpi );
        a += -0.009379344895669337 * sin ( 2*lp + -3*l + halfpi );
        a += 0.009479676164686361 * sin ( 6*d + lp + -2*l + halfpi );
        a += 0.009569128532571514 * sin ( 2*d + -2*lp + -1*l + -2*f + halfpi );
        a += -0.0103592697958812 * sin ( 2*d + 2*lp + -3*l + halfpi );
        a += -0.010479216019258013 * sin ( 3*d + -2*lp + halfpi );
        a += -0.010719031704736388 * sin ( 2*d + 2*lp + -1*l + -2*f + halfpi );
        a += 0.011158786759249162 * sin ( 2*d + -3*lp + -2*l + halfpi );
        a += 0.011209618045331486 * sin ( d + -1*lp + 2*l + halfpi );
        a += 0.011490054603247013 * sin ( 5*d + -3*l + halfpi );
        a += -0.012430067605841203 * sin ( 4*d + 3*l + halfpi );
        a += -0.013659249434815706 * sin ( d + -1*lp + -2*f + halfpi );
        a += 0.013888986016538055 * sin ( 3*d + -2*lp + -1*l + halfpi );
        a += 0.014169558533350623 * sin ( 2*d + lp + -4*l + halfpi );
        a += -0.014200047626902556 * sin ( 6*d + l + halfpi );
        a += 0.014409212727052135 * sin ( 3*d + -1*lp + -2*f + halfpi );
        a += -0.01447949507668943 * sin ( 3*d + lp + l + halfpi );
        a += 0.014829794773936499 * sin ( 4*d + -2*l + 2*f + halfpi );
        a += 0.01516894182254668 * sin ( 2*d + -2*lp + -3*l + halfpi );
        a += 0.01517921271149061 * sin ( 2*d + -1*lp + -2*l + -2*f + halfpi );
        a += 0.015509180853547678 * sin ( 4*d + lp + -1*l + -2*f + halfpi );
        a += -0.01570826604663463 * sin ( 4*d + -3*lp + -1*l + halfpi );
        a += -0.015777639756287154 * sin ( 2*d + -4*lp + halfpi );
        a += 0.01703944894128188 * sin ( 2*d + lp + 3*l + halfpi );
        a += -0.01708940569902432 * sin ( 6*d + -1*lp + halfpi );
        a += -0.017278752710630535 * sin ( 4*d + -2*lp + l + halfpi );
        a += 0.017289433003371456 * sin ( d + lp + -3*l + halfpi );
        a += 0.018039066125319674 * sin ( 2*d + -1*lp + 2*l + -2*f + halfpi );
        a += 0.01810976518876861 * sin ( 2*d + 3*l + -2*f + halfpi );
        a += -0.018659375556539202 * sin ( 2*d + l + -4*f + halfpi );
        a += 0.018678640308858598 * sin ( 4*d + 2*lp + -1*l + halfpi );
        a += -0.01873968665784827 * sin ( d + 2*f + halfpi );
        a += 0.019117888665712967 * sin ( 3*lp + l + halfpi );
        a += 0.01937970135219828 * sin ( 4*d + l + -2*f + halfpi );
        a += 0.01968892294161761 * sin ( 4*d + lp + -2*f + halfpi );
        a += -0.020079746473453525 * sin ( 2*d + -3*l + 2*f + halfpi );
        a += -0.02078930546575749 * sin ( 4*d + -1*lp + 2*l + halfpi );
        a += 0.021267621756587585 * sin ( 3*lp + halfpi );
        a += 0.023039284017757133 * sin ( lp + 4*l + halfpi );
        a += 0.023339273276131552 * sin ( 2*d + -1*lp + -4*l + halfpi );
        a += 0.02368012052807116 * sin ( d + 3*l + halfpi );
        a += -0.023989231448114805 * sin ( 4*d + lp + -3*l + halfpi );
        a += -0.02435920989481715 * sin ( 6*d + -1*lp + -3*l + halfpi );
        a += -0.024709617513199892 * sin ( d + -1*l + 2*f + halfpi );
        a += 0.026578098464485986 * sin ( 4*d + 2*lp + -2*l + halfpi );
        a += -0.026739169195952667 * sin ( lp + -4*l + halfpi );
        a += -0.02697856878864713 * sin ( 4*d + -1*lp + -1*l + -2*f + halfpi );
        a += 0.028387370839987467 * sin ( 2*d + -2*lp + -2*f + halfpi );
        a += -0.028546851606479653 * sin ( 2*d + -3*lp + l + halfpi );
        a += 0.029099627772039983 * sin ( 2*d + -3*l + -2*f + halfpi );
        a += -0.029390185549546838 * sin ( 4*d + -4*l + halfpi );
        a += -0.029477804732416357 * sin ( d + -2*lp + halfpi );
        a += 0.030238433400363952 * sin ( 2*d + -1*lp + -2*l + 2*f + halfpi );
        a += 0.0314297001650719 * sin ( 2*d + 2*f + halfpi );
        a += 0.032648313219869725 * sin ( lp + 2*l + -2*f + halfpi );
        a += 0.03378816948660811 * sin ( d + lp + -2*f + halfpi );
        a += 0.03681872682368452 * sin ( 4*d + lp + l + halfpi );
        a += 0.03728722670772817 * sin ( d + 2*lp + halfpi );
        a += 0.037338024305556786 * sin ( 2*d + -1*lp + -1*l + 2*f + halfpi );
        a += 0.03809868881490931 * sin ( 3*d + lp + -2*l + halfpi );
        a += -0.03893570873723868 * sin ( 3*lp + -1*l + halfpi );
        a += -0.042319335450963426 * sin ( d + -1*l + -2*f + halfpi );
        a += -0.04315859519419192 * sin ( 4*d + -1*lp + -3*l + halfpi );
        a += -0.044220291338237 * sin ( 2*d + 4*l + halfpi );
        a += 0.04591018423462756 * sin ( 5*d + -2*l + halfpi );
        a += -0.04607671212951372 * sin ( 2*d + -2*lp + 2*l + halfpi );
        a += -0.047357471886296826 * sin ( 2*d + lp + -1*l + -2*f + halfpi );
        a += 0.047400374620333655 * sin ( 2*d + -5*l + halfpi );
        a += -0.04843021103043979 * sin ( 3*d + -3*l + halfpi );
        a += -0.05019740326735 * sin ( lp + -2*l + 2*f + halfpi );
        a += 0.050716371213433385 * sin ( 2*lp + 2*l + halfpi );
        a += -0.051908205261208096 * sin ( 6*d + -1*lp + -1*l + halfpi );
        a += 0.05292818797749385 * sin ( 3*d + -1*lp + -2*l + halfpi );
        a += -0.05526704882234315 * sin ( 2*d + lp + l + -2*f + halfpi );
        a += -0.05788683478255263 * sin ( 4*d + -1*lp + -2*f + halfpi );
        a += -0.05849810955417974 * sin ( 2*d + -1*lp + 3*l + halfpi );
        a += -0.058880464019011286 * sin ( 5*l + halfpi );
        a += -0.05903800403541461 * sin ( d + lp + 2*l + halfpi );
        a += 0.0605490546713428 * sin ( d + l + -2*f + halfpi );
        a += -0.06544991996081569 * sin ( 3*d + l + halfpi );
        a += -0.06677775577404779 * sin ( 6*d + -1*lp + -2*l + halfpi );
        a += -0.07981886787915188 * sin ( 4*d + -2*l + -2*f + halfpi );
        a += -0.08587025795747004 * sin ( 6*d + halfpi );
        a += -0.09938048266643106 * sin ( d + -3*l + halfpi );
        a += -0.10325752715588883 * sin ( l + 2*f + halfpi );
        a += -0.10765613259321437 * sin ( 3*d + lp + halfpi );
        a += -0.10833226583295306 * sin ( 4*d + -2*lp + -2*l + halfpi );
        a += -0.1088721949643023 * sin ( 2*d + 2*lp + -2*l + halfpi );
        a += 0.10997613693898027 * sin ( d + -1*lp + l + halfpi );
        a += 0.11410596222561975 * sin ( d + -1*lp + -1*l + halfpi );
        a += -0.12805058293015048 * sin ( 4*d + -2*lp + halfpi );
        a += -0.13571251458379674 * sin ( 2*d + lp + -2*f + halfpi );
        a += -0.1361702812854765 * sin ( 2*lp + -2*l + halfpi );
        a += -0.13922061800817892 * sin ( 4*d + 2*l + halfpi );
        a += 0.143675373519686 * sin ( 2*d + lp + -2*l + halfpi );
        a += 0.14762939872944095 * sin ( 2*d + 2*lp + halfpi );
        a += -0.14806365025832907 * sin ( 2*d + -3*lp + -1*l + halfpi );
        a += -0.1570740303060822 * sin ( 3*d + -1*lp + halfpi );
        a += -0.15802133913814997 * sin ( lp + 2*f + halfpi );
        a += 0.1685745372653624 * sin ( 2*d + lp + -3*l + halfpi );
        a += -0.1831609465326197 * sin ( 6*d + -3*l + halfpi );
        a += -0.1856697678063508 * sin ( lp + -2*f + halfpi );
        a += 0.20098654003148564 * sin ( 3*d + -2*f + halfpi );
        a += -0.20285296573006098 * sin ( 4*d + -1*lp + l + halfpi );
        a += 0.20940882693131582 * sin ( 2*d + -1*lp + l + -2*f + halfpi );
        a += 0.21251282528850712 * sin ( 2*d + lp + 2*l + halfpi );
        a += -0.2125824858351687 * sin ( 3*d + lp + -1*l + halfpi );
        a += 0.236951809597832 * sin ( 4*d + lp + -2*l + halfpi );
        a += 0.24452120177613068 * sin ( 4*d + lp + halfpi );
        a += -0.24809677253589668 * sin ( lp + l + -2*f + halfpi );
        a += 0.2556009610708777 * sin ( 3*d + -1*lp + -1*l + halfpi );
        a += -0.27903969892556335 * sin ( 4*d + -2*lp + -1*l + halfpi );
        a += 0.28398591773319404 * sin ( 2*d + 2*l + -2*f + halfpi );
        a += -0.28663087783523633 * sin ( 6*d + -1*l + halfpi );
        a += -0.3217550210499067 * sin ( 4*d + -1*l + -2*f + halfpi );
        a += 0.3233427819496249 * sin ( 2*d + -1*lp + -1*l + -2*f + halfpi );
        a += 0.3322486704535117 * sin ( d + lp + -2*l + halfpi );
        a += 0.3346321631561456 * sin ( lp + -1*l + 2*f + halfpi );
        a += 0.34301547037427194 * sin ( 2*d + -2*lp + -2*l + halfpi );
        a += 0.35507845831061036 * sin ( lp + 3*l + halfpi );
        a += 0.37852141917341753 * sin ( d + 2*l + halfpi );
        a += -0.41071405448299453 * sin ( 2*d + -3*lp + halfpi );
        a += -0.422406278774844 * sin ( lp + -3*l + halfpi );
        a += -0.42250165652074306 * sin ( 6*d + -2*l + halfpi );
        a += 0.4726232314562022 * sin ( 2*d + -2*l + -2*f + halfpi );
        a += 0.49504385021238806 * sin ( 2*d + -1*lp + -3*l + halfpi );
        a += 0.4975518333191603 * sin ( d + -1*lp + halfpi );
        a += -0.5079212363929992 * sin ( 4*d + -2*f + halfpi );
        a += -0.5142324263749917 * sin ( 4*d + -3*l + halfpi );
        a += 0.5787894233154659 * sin ( 4*d + lp + -1*l + halfpi );
        a += 0.5963208387272017 * sin ( 2*d + -1*l + 2*f + halfpi );
        a += 0.6570637741116113 * sin ( 2*d + -1*lp + -2*f + halfpi );
        a += -0.6575321001719026 * sin ( 2*d + -2*lp + l + halfpi );
        a += -0.6696835112883041 * sin ( 2*d + 3*l + halfpi );
        a += 0.7740389175847989 * sin ( 2*d + -2*l + 2*f + halfpi );
        a += 0.7785449371458397 * sin ( 2*d + -4*l + halfpi );
        a += -0.7956262371647108 * sin ( d + -2*f + halfpi );
        a += -0.8488012847169336 * sin ( 2*d + -1*lp + 2*l + halfpi );
        a += 0.8512397898115406 * sin ( d + lp + -1*l + halfpi );
        a += 0.8624327804759546 * sin ( 3*d + -2*l + halfpi );
        a += -0.9333169516113453 * sin ( d + lp + l + halfpi );
        a += 1.065670882984133 * sin ( 2*lp + halfpi );
        a += -1.1169370852826597 * sin ( 4*l + halfpi );
        a += 1.1655348497411109 * sin ( 2*lp + l + halfpi );
        a += -1.4189284012965027 * sin ( 3*d + halfpi );
        a += -1.4225541249320666 * sin ( 4*d + l + halfpi );
        a += -1.5713933532013946 * sin ( 4*d + -1*lp + halfpi );
        a += -1.7385258310865037 * sin ( d + -2*l + halfpi );
        a += -1.8970355348529564 * sin ( 4*d + -1*lp + -2*l + halfpi );
        a += -2.117125477612384 * sin ( 2*lp + -1*l + halfpi );
        a += 2.3536278839452796 * sin ( 2*d + 2*lp + -1*l + halfpi );
        a += 2.6164074429505932 * sin ( 2*d + lp + l + halfpi );
        a += -3.1483015646540564 * sin ( 2*f + halfpi );
        a += 3.2582370843552964 * sin ( 3*d + -1*l + halfpi );
        a += -3.9579801365651974 * sin ( 4*d + -1*lp + -1*l + halfpi );
        a += 4.131113909525857 * sin ( 2*d + l + -2*f + halfpi );
        a += -4.421176345788108 * sin ( 2*l + -2*f + halfpi );
        a += -4.950128396307023 * sin ( 2*d + -2*lp + -1*l + halfpi );
        a += 5.750854030679853 * sin ( lp + 2*l + halfpi );
        a += 6.322003215271084 * sin ( d + l + halfpi );
        a += -7.002691409591132 * sin ( lp + -2*l + halfpi );
        a += -8.379106718921369 * sin ( d + -1*l + halfpi );
        a += 8.751561179755182 * sin ( 2*d + -1*l + -2*f + halfpi );
        a += -9.884453786454122 * sin ( 2*d + -2*lp + halfpi );
        a += 10.056196651111373 * sin ( 2*d + -1*lp + -2*l + halfpi );
        a += 10.321105570221611 * sin ( 2*d + -2*f + halfpi );
        a += -10.444757711497783 * sin ( 2*d + 2*l + halfpi );
        a += -11.64994782787713 * sin ( 4*d + halfpi );
        a += -12.831395086065443 * sin ( 2*d + -1*lp + l + halfpi );
        a += 14.402688794598129 * sin ( 2*d + -3*l + halfpi );
        a += -16.674712956766612 * sin ( d + lp + halfpi );
        a += -21.63634372538151 * sin ( 4*d + -2*l + halfpi );
        a += -23.2104301949711 * sin ( 3*l + halfpi );
        a += 24.208482539702214 * sin ( 2*d + lp + -1*l + halfpi );
        a += 30.82383967858488 * sin ( 2*d + lp + halfpi );
        a += -34.78252367148676 * sin ( 4*d + -1*l + halfpi );
        a += 48.88829640301958 * sin ( lp + halfpi );
        a += 79.66055615283707 * sin ( l + -2*f + halfpi );
        a += 104.75522518593684 * sin ( lp + l + halfpi );
        a += 108.74270168839186 * sin ( d + halfpi );
        a += -129.62013867850587 * sin ( lp + -1*l + halfpi );
        a += -152.1377114862193 * sin ( 2*d + -1*lp + -1*l + halfpi );
        a += -170.73307846037957 * sin ( 2*d + l + halfpi );
        a += -204.58598380513953 * sin ( 2*d + -1*lp + halfpi );
        a += 246.15847755240628 * sin ( 2*d + -2*l + halfpi );
        a += -569.9251213522874 * sin ( 2*l + halfpi );
        a += -2955.9675637102655 * sin ( 2*d + halfpi );
        a += -3699.1109192098975 * sin ( 2*d + -1*l + halfpi );
        a += -20905.35504324328 * sin ( l + halfpi );
        a += 385000.5289868033 * sin ( halfpi );
        return a;
    }

    double tides_lon3 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( PI + 4*d + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( lp + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.71238898038469 + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( -1*l + -4*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + -2*d + lp + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( -2*d + 2*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( -2*d + -1*lp + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000006457718232379019 + 6*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000006632251157578452 + 4*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000009773843811168245 + 4*d + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2831535421872005 + 4*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00001605702911834783 + 4*d + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + 4*d + -2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000153588974175501 + 3*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012740903539558603 + 3*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + 3*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14158584680571 + 3*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416099323493882 + 2*d + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000010821041362364843 + 2*d + 3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416209279236758 + 2*d + -1*lp + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + 2*d + -2*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + 2*d + -3*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141608361553061 + lp + -1*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000022165681500327984 + 5*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000022165681500327984 + -5*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00001605702911834783 + -1*lp + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000015707963267948964 + -1*lp + -1*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + -1*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000016231562043547263 + -1*d + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416186589956476 + -1*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( -1*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + -2*d + 3*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416212769895258 + -2*d + lp + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416001585055766 + -2*d + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416059180921088 + -2*d + l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141608885151837 + -2*d + -2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000009773843811168245 + -2*d + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1415977150446244 + -2*d + -2*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00001710422666954443 + -4*d + 2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + -4*d + 2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416085360859864 + -4*d + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141601380236053 + -4*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416106304810887 + -4*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000062831853071795875 + -6*d + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000017453292519943296 + -6*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 2*d + lp ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2*d + -1*lp ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + d + -1*lp + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + d + -1*lp + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + lp + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + lp + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5707963267948966 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 2*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + -1*lp + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + -2*d + lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + -2*d + l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000015707963267948964 + 6*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00001239183768915974 + 4*d + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000158824961931484 + 4*d + -2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416132484749664 + 2*d + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415992858409507 + 2*d + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000021118483949131386 + 2*d + -2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + 2*d + -2*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141601729301904 + d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00004747295565424577 + lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000011693705988362007 + 4*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605394493333 + 2*l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141616739133471 + -2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -1*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416139466066677 + -1*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141602078367754 + -2*d + 2*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141608187020136 + -2*d + lp + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416141211395927 + -2*d + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415980641104744 + -2*d + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -3*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000143116998663535 + -4*d + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00001710422666954443 + -4*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141608885151837 + -4*d + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00001727875959474386 + -4*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -4*d + -1*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141606790756734 + -4*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d + -1*lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 2*d + lp + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2*d + -1*lp + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 2*d + -1*lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + 2*d + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707963267948966 + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -1*lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -2*d + lp + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141608187020136 + 4*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000016231562043547263 + 4*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0000158824961931484 + 4*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416109795469387 + 2*d + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000008901179185171082 + 2*d + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000012566370614359175 + d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0000317649923862968 + d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141606616223809 + d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416134230078923 + 2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141605219960407 + 2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141601380236053 + lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000015009831567151233 + -5*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416123758103405 + -3*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000004363323129985824 + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416158664688445 + -1*lp + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000012566370614359175 + -2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141615517402994 + -1*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141605045427482 + -2*d + lp + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416085360859864 + -2*d + lp + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141605219960407 + -3*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000011868238913561442 + -6*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000017453292519943296 + -6*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + 2*lp + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + lp + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71238898038469 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + 2*d + -1*lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + d + lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + -2*d + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000015707963267948964 + 6*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000011693705988362007 + 6*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1416060926250333 + 4*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1415989367751007 + 2*d + -1*l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1416118522115655 + d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141605045427482 + d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000025481807079117207 + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1416139466066677 + lp + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141605045427482 + lp + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000023212879051524586 + lp + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.14160330009823 + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000012217304763960308 + -1*lp + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1415909082605413 + -1*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000021293016874330818 + -1*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00001937315469713706 + -2*d + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141601205703128 + -2*d + lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0000143116998663535 + -3*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141598413176325 + 2*d + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141605394493333 + 2*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141593177188569 + 2*d + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141619357127349 + 2*d + -4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.000018151424220741027 + 2*d + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.000021293016874330818 + -1*lp + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1416062671579583 + -2*d + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1416179608639467 + -2*d + 4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1416003330385016 + -2*d + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + d + lp + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + lp + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( PI + 2*d + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.000012566370614359175 + 4*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141605394493333 + 2*d + lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1415624593937332 + 2*d + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.000012042771838760873 + 2*d + -1*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141644315335652 + 2*d + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1415938753202695 + d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.00002251474735072685 + -1*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 2*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5707963267948966 + -2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141618484462722 + -2*d + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141604521828706 + -3*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.000005235987755982988 + -4*d + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( PI + 2*d + lp + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2*d + lp + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( PI + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( PI + 2*d + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( -4*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0000148352986419518 + d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.000020245819323134223 + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.00000715584993317675 + 4*d + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.283172740808972 + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.000005410520681182421 + -2*d + 2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.00002059488517353309 + -2*d + lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.141605394493333 + -2*d + 3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1416102814152382 + -2*d + -1*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( -2*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000012740903539558603 + 2*d + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.141631923497963 + -2*d + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000021293016874330818 + -2*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.00001134464013796314 + -2*d + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.141601380236053 + -4*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.000018500490071139895 + 2*d + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.0000069813170079773176 + 2*d + -2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5707963267948966 + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.000007853981633974482 + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.00001727875959474386 + -4*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1415802617521043 + d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1415956206495212 + -4*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.00001937315469713706 + 2*d + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1416134230078923 + -2*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( -2*d + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.141604870894557 + 3*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1415977150446244 + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1416060926250333 + -2*d + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.000012217304763960308 + 4*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1416125503432655 + 2*d + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.000019024088846738194 + -4*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.000015707963267948964 + 4*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.141605569026258 + l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( PI + d + -1*lp ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( PI + -2*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.00001239183768915974 + 4*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.00002251474735072685 + -4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( PI + 2*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.141593351721494 + 2*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.00002181661564992912 + 4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1416031255653047 + -1*l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.000013962634015954635 + -4*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.000018675022996339326 + -1*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( d + lp + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( PI + lp + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.00001710422666954443 + 4*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.1416097578164623 + 2*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.141605219960407 + d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.141605394493333 + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.0000158824961931484 + -4*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.141615517402994 + -1*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.141605394493333 + -3*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.000013439035240356336 + 4*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.000016929693744344997 + -2*d + 2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( PI + l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( PI + -2*d + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( PI + 2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.000012217304763960308 + -1*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.000007853981633974482 + -2*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( PI + -2*d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.000011693705988362007 + 3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.71238898038469 + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.000022165681500327984 + -1*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1416158664688445 + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.000012566370614359175 + 2*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.000015707963267948964 + 2*d + -2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.14161167767864 + -2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1416059180921088 + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.141622847785853 + 2*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.000012042771838760873 + 2*d + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.141613772073742 + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.00002356194490192345 + lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1416087106189114 + -2*d + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( PI + 2*d + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( PI + -2*d + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.1416108050140137 + d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.141605394493333 + -2*d + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.141619706193199 + -2*d + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.000021293016874330818 + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( PI + lp ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.141604870894557 + -2*d + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( PI + lp + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.141601729301904 + -2*d + lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.141602078367754 + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.1416008566372775 + -2*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.14161167767864 + -2*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.141604347295782 + -1*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( PI + 2*d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.000010297442586766545 + d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 2*d + -2*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.141601380236053 + -2*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 0.000005061454830783556 + -4*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 0.000009075712110370514 + 2*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( PI + d + lp ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 0.00001937315469713706 + -2*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.141605045427482 + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.14161604100177 + -1*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 0.000017453292519943296 + -4*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( PI + 2*d + -2*l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( PI + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.000012217304763960308 + 2*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 2*l + -2*f ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 0.000007330382858376184 + 4*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 2*d + l + -2*f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 0.000017976891295541595 + 2*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 0.000020769418098732523 + -2*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.001 * sin ( fmod ( ( PI + d ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 2*d ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 3.1416080124872106 + 2*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 0.000015707963267948964 + 4*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 3.1416059180921088 + -2*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 0.000018675022996339326 + 2*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 0.000013962634015954635 + -4*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 3.1416488531917075 + 2*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 3.141617262732246 + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 0.000013089969389957472 + -2*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00217 * sin ( fmod ( ( 0.000013613568165555768 + 4*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00225 * sin ( fmod ( ( 0.000005410520681182421 + -2*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 0.00002251474735072685 + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00239 * sin ( fmod ( ( PI + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00239 * sin ( fmod ( ( PI + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0024 * sin ( fmod ( ( 3.141606441690884 + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00241 * sin ( fmod ( ( PI + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00242 * sin ( fmod ( ( 0.00002181661564992912 + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00249 * sin ( fmod ( ( 0.000024958208303518915 + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00249 * sin ( fmod ( ( 3.1416289564382347 + -2*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00261 * sin ( fmod ( ( 3.1416104559481632 + -1*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00282 * sin ( fmod ( ( 0.000011693705988362007 + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00288 * sin ( fmod ( ( 0.00000715584993317675 + 2*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00292 * sin ( fmod ( ( 3.1416128994091164 + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00331 * sin ( fmod ( ( 0.000012042771838760873 + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00342 * sin ( fmod ( ( 3.1416080124872106 + d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00387 * sin ( fmod ( ( 3.1415968423799976 + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00387 * sin ( fmod ( ( 0.00002059488517353309 + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0048 * sin ( fmod ( ( 0.000012217304763960308 + 2*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0048 * sin ( fmod ( ( PI + l + -2*f ), twopi ) );
        a += 0.00482 * sin ( fmod ( ( 0.00001710422666954443 + -2*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00646 * sin ( fmod ( ( 0.0000158824961931484 + 2*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00815 * sin ( fmod ( ( 0.00001239183768915974 + 2*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00887 * sin ( fmod ( ( 3.141601205703128 + -2*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00913 * sin ( fmod ( ( 0.00001972222054753592 + -2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01234 * sin ( fmod ( ( 0.000017802358370342164 + 2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01492 * sin ( fmod ( ( 3.14160766342136 + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.02206 * sin ( fmod ( ( 2*d + -1*l ), twopi ) );
        a += 0.03279 * sin ( fmod ( ( 0.00002234021442552742 + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.03402 * sin ( fmod ( ( 0.000021991148575128552 + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.03638 * sin ( fmod ( ( PI + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.03838 * sin ( fmod ( ( 0.000012217304763960308 + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.04746 * sin ( fmod ( ( 0.000013264502315156904 + -2*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.04962 * sin ( fmod ( ( 0.000005061454830783556 + -2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.05036 * sin ( fmod ( ( 0.000008901179185171082 + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.06456 * sin ( fmod ( ( 0.000007330382858376184 + 2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.06569 * sin ( fmod ( ( 0.000017453292519943296 + -2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.09642 * sin ( fmod ( ( 0.000015707963267948964 + 2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.36061 * sin ( fmod ( ( 0.00001239183768915974 + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.49141 * sin ( fmod ( ( 0.000022165681500327984 + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.49331 * sin ( fmod ( ( 0.000022165681500327984 + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 7.06304 * sin ( fmod ( ( 0.0000164060949687467 + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double tides_lat4 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 4*d + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + -3*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + -2*d + l + f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + -2*d + -2*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416041727628565 + 6*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141604696361632 + 6*d + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + 4*d + lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000009773843811168245 + 4*d + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14159858770925 + 4*d + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416041727628565 + 4*d + -1*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + 4*d + -2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + 3*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000011693705988362007 + 2*d + lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000021118483949131386 + 2*d + lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000016231562043547263 + 2*d + 3*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141607139822585 + 2*d + -1*l + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + 2*d + -4*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012740903539558603 + 2*d + -1*lp + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000004886921905584122 + d + lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141615517402994 + d + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000015184364492350668 + lp + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + lp + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.71238898038469 + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.71238898038469 + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141608187020136 + -2*l + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + -1*lp + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 2*lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000158824961931484 + -2*d + 2*lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012740903539558603 + -2*d + lp + l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + -2*d + lp + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141608361553061 + -2*d + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + -2*d + -3*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416092342176865 + -2*d + -1*lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + -3*d + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141605219960407 + -3*d + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000012566370614359175 + -4*d + 2*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000016231562043547263 + -4*d + lp + 2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0000164060949687467 + -4*d + lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416006821043525 + -4*d + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 4*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2*d + 2*lp + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + 2*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( d + lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( PI + lp + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + d + lp + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + d + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + lp + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + lp + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + -2*l + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( -1*lp + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( -1*d + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + -4*d + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141604347295782 + 6*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012042771838760873 + 4*d + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000016755160819145566 + 4*d + -1*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012915436464758039 + 4*d + -1*lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + 3*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + 2*d + lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + 2*d + -1*lp + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000158824961931484 + 2*d + -1*lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416181353968726 + 2*d + -1*lp + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141604696361632 + 2*d + -2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000017802358370342164 + 2*d + -2*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000011868238913561442 + d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + 2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000153588974175501 + 2*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012042771838760873 + lp + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + lp + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000013089969389957472 + 3*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415982386433994 + 4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416261639114316 + -1*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -1*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000164060949687467 + -1*d + -1*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -1*d + -1*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 3*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000016231562043547263 + -2*d + 2*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + lp + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141584101476458 + -2*d + 2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416080124872106 + -2*d + l + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416008566372775 + -2*d + -2*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -3*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141605219960407 + -3*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -3*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -4*d + 2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000012566370614359175 + -4*d + lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0000164060949687467 + -4*d + lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00001658062789394613 + -4*d + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.000013264502315156904 + -6*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + lp + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + lp + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( PI + lp + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2*d + -1*lp + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( -1*lp + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( -1*lp + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -2*d + lp + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -2*d + l + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -2*d + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + -4*d + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416125503432655 + 2*d + lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416368104198686 + 2*d + -1*lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416104559481632 + d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141616564600546 + d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416305272345615 + lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00001239183768915974 + lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000021118483949131386 + -4*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141604696361632 + -1*lp + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141605219960407 + -2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416122012774155 + -1*d + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000012915436464758039 + -2*d + 2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1416031255653047 + -2*d + lp + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 2*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + -1*lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141605743559183 + -2*d + -1*lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000013089969389957472 + -4*d + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000013264502315156904 + -4*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2*d + l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + d + lp + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + d + lp + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*d + -1*lp + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000017976891295541595 + 4*d + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000012566370614359175 + 2*d + l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141605219960407 + 2*d + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141604347295782 + 2*d + -1*lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141604870894557 + d + lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000012566370614359175 + d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000012566370614359175 + 2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000020769418098732523 + lp + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00003525565089028546 + -1*lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1416134230078923 + -1*lp + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141605045427482 + -1*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000013089969389957472 + -6*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*d + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + lp + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + lp + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2*l + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + 2*d + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + -2*l + f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00001239183768915974 + 2*d + 2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1416041727628565 + 2*d + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00001117010721276371 + -4*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141605045427482 + -2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141604696361632 + -1*d + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.000010646508437165409 + -2*d + 4*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1416041727628565 + -2*d + -1*lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141605219960407 + -2*d + -2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.000013089969389957472 + -6*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2*d + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( PI + -1*l + f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( -2*d + -1*lp + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141604347295782 + 4*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.000013089969389957472 + -2*d + lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141609059684762 + -2*d + -1*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141605743559183 + -4*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( PI + 2*d + -1*lp + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( PI + -2*d + 2*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1416041727628565 + 4*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.141616739133471 + 2*d + -3*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.000023911010752322313 + 3*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.000013439035240356336 + -2*d + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.141606441690884 + -2*d + -1*lp + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( PI + 3*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.141604870894557 + 4*d + -1*lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.000012217304763960308 + 3*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.00001954768762233649 + 2*d + -1*lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.000003839724354387525 + d + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1416097578164623 + -1*l + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.000018151424220741027 + -2*d + lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.141605569026258 + -4*d + -1*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( PI + 2*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000012042771838760873 + 2*d + lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1416027764994547 + 4*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.141604347295782 + l + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000009599310885968813 + -4*d + 2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000012566370614359175 + -4*d + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0000164060949687467 + -4*d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2*d + lp + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.000010821041362364843 + 2*d + -2*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.000013264502315156904 + -2*d + lp + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 2*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.141604696361632 + 4*d + -1*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.141605569026258 + 2*d + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.141605045427482 + 2*d + -2*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1416099323493882 + -1*d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1415991113080257 + -2*d + -2*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( PI + -2*d + lp + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( PI + -2*d + f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.000020071286397934788 + 2*d + 2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.000013439035240356336 + lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.141606616223809 + -1*lp + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.00001937315469713706 + -2*d + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.141605394493333 + -3*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.141604870894557 + 2*d + -2*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.00001239183768915974 + 2*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( PI + -2*d + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.141605569026258 + -1*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.141605569026258 + -3*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.000014486232791552936 + -4*d + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.000012740903539558603 + 2*d + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1416125503432655 + -1*lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( PI + -1*l + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.000016755160819145566 + 4*d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.000012915436464758039 + 4*d + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1416106304810887 + 2*d + lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( PI + -2*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.000013089969389957472 + -4*d + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( PI + 2*d + -2*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( PI + l + -3*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.000019896753472735356 + lp + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.00001134464013796314 + lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.00001134464013796314 + -2*d + lp + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.000013089969389957472 + -4*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.000011693705988362007 + d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.000011868238913561442 + -2*d + lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.141605219960407 + -1*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.000012566370614359175 + -4*d + lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.000012217304763960308 + -4*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.141603998229931 + -1*lp + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.141605394493333 + d + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.000012042771838760873 + 2*d + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.000028623399732707 + 2*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.1415992858409507 + -2*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.000020769418098732523 + -3*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.14160766342136 + -4*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.141605569026258 + -2*d + -1*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.000012566370614359175 + -1*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.141618833528573 + 2*d + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.0000164060949687467 + -2*d + lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.141605394493333 + -2*d + -1*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.141604347295782 + 4*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.1416041727628565 + 2*d + -1*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( l + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.1416029510323797 + -2*d + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 2*d + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.00001239183768915974 + 2*d + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.00001762782544514273 + 2*d + -1*lp + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 0.000012740903539558603 + -2*d + 2*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.1416034746311556 + 2*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 0.000012915436464758039 + 2*d + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( l + -1*f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 0.000010995574287564276 + -2*d + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.141634541491841 + 2*d + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( PI + -2*d + l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 0.000025656340004316642 + 2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 2*d + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 0.000013089969389957472 + -2*d + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 0.000012042771838760873 + -3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 3.141605569026258 + 4*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 0.000018151424220741027 + -2*d + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 2*d + -1*l + f ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 0.000013439035240356336 + -2*d + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 3.141605045427482 + 4*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 0.000012217304763960308 + l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 0.00001954768762233649 + 2*d + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00144 * sin ( fmod ( ( PI + 2*l + -1*f ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 3.1416034746311556 + 3*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( PI + -3*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 0.000012740903539558603 + -4*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00206 * sin ( fmod ( ( 0.00001658062789394613 + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00212 * sin ( fmod ( ( 0.000012217304763960308 + lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00212 * sin ( fmod ( ( 3.141605394493333 + -1*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00217 * sin ( fmod ( ( PI + 2*d + -1*f ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 0.00001239183768915974 + d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 3.1416059180921088 + -1*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00239 * sin ( fmod ( ( 0.0000809832772925369 + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00252 * sin ( fmod ( ( 3.1416027764994547 + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00257 * sin ( fmod ( ( 0.000012915436464758039 + lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00273 * sin ( fmod ( ( 0.000013439035240356336 + -2*d + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00276 * sin ( fmod ( ( 3.141604521828706 + -1*lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00293 * sin ( fmod ( ( PI + -2*d + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00315 * sin ( fmod ( ( 3.141604870894557 + 2*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00322 * sin ( fmod ( ( 0.00001239183768915974 + -4*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00328 * sin ( fmod ( ( 0.00001239183768915974 + -2*d + lp + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00371 * sin ( fmod ( ( 3.141605394493333 + 2*d + -1*lp + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00377 * sin ( fmod ( ( 0.000020245819323134223 + -2*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00425 * sin ( fmod ( ( l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00437 * sin ( fmod ( ( 0.000010821041362364843 + -1*l + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00441 * sin ( fmod ( ( PI + -1*l + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00562 * sin ( fmod ( ( 0.00001134464013796314 + -2*d + l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00562 * sin ( fmod ( ( 0.000016231562043547263 + -2*d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00563 * sin ( fmod ( ( 3.141604347295782 + 2*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00589 * sin ( fmod ( ( 3.141605045427482 + -2*d + -1*lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00672 * sin ( fmod ( ( 0.000011519173063162575 + -2*d + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00834 * sin ( fmod ( ( 0.00001239183768915974 + 2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01005 * sin ( fmod ( ( 0.000017802358370342164 + 2*d + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01404 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + lp + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01647 * sin ( fmod ( ( 0.000013089969389957472 + -2*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01745 * sin ( fmod ( ( 0.000011693705988362007 + -2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.02403 * sin ( fmod ( ( 3.1416041727628565 + 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.03977 * sin ( fmod ( ( 0.000019024088846738194 + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.04638 * sin ( fmod ( ( 3.141604870894557 + 2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.07332 * sin ( fmod ( ( 0.00001239183768915974 + -2*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.08042 * sin ( fmod ( ( -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0835 * sin ( fmod ( ( 3.141605394493333 + 2*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.29854 * sin ( fmod ( ( 0.000012566370614359175 + -2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.32622 * sin ( fmod ( ( 0.000015009831567151233 + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.41571 * sin ( fmod ( ( 3.141604696361632 + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.45586 * sin ( fmod ( ( 0.000013089969389957472 + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 8.04508 * sin ( fmod ( ( 3.141605045427482 + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double tides_r5 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707963267948966 + -1*lp + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7124053864796585 + 6*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708088931655109 + 2*d + lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7124055610125835 + 2*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712410273401564 + 2*d + -2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708120347581647 + d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708052279740816 + d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708088931655109 + d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708102894289124 + d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.570818492476397 + lp + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707963267948966 + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71241114606619 + -1*lp + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7124128913954415 + -2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7123977070309495 + -2*d + lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712404862880883 + -2*d + 3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712394216372445 + -2*d + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708088931655109 + -2*d + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712393169174894 + -2*d + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708088931655109 + -4*d + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708127328898651 + -6*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 2*lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707963267948966 + lp + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71238898038469 + 3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707963267948966 + d + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712401197689453 + 6*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708127328898651 + 4*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712399277827276 + 2*d + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7124053864796585 + 2*d + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708277427214326 + d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708172707459205 + 2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708219831349008 + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.570818492476397 + lp + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71241114606619 + -1*lp + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71238898038469 + -1*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712401721288229 + -1*lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712387584121288 + -1*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.570817445278846 + -1*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712401546755304 + -2*d + 2*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708127328898651 + -2*d + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712404339282108 + -2*d + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.570809242231361 + -2*d + -1*l + 3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712397183432174 + -2*d + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7124053864796585 + -4*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708085440996604 + -6*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707963267948966 + 2*d + lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707963267948966 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( PI + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5707963267948966 + d + lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71238898038469 + -2*d + lp + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5707963267948966 + -2*d + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71241481125762 + 2*d + -4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712437849603745 + 2*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708088931655109 + -1*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7123980560968 + -1*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708223322007513 + -2*d + 4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708013882497274 + -4*d + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5707963267948966 + d + lp + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71238898038469 + d + lp + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71238898038469 + lp + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71238898038469 + 2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.71238898038469 + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5707963267948966 + 2*d + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5707963267948966 + 2*d + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71238898038469 + -2*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71238898038469 + -2*d + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5708020863814283 + 2*d + 2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.712403815683332 + d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5708088931655109 + lp + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.712401546755304 + -1*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5708015627826524 + -2*d + 2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( PI + -2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5708076714350343 + -2*d + -1*lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5708088931655109 + -4*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71239369277367 + -4*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71238898038469 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71238898038469 + lp + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5707963267948966 + 2*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712396310767549 + 4*d + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5708005155851015 + 2*d + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712395787168772 + 2*d + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712380777337205 + d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.71238898038469 + -3*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712409051671088 + -2*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.71241149513204 + -1*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5708066242374832 + -2*d + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5707963267948966 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712405735545509 + 3*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712409051671088 + 2*d + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712408528072312 + 2*d + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712396136234623 + 2*d + -2*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.570815874482519 + -2*d + lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5708167471471448 + -2*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712401023156529 + -3*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712438024136671 + 2*d + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5708123838240147 + -3*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.570808020500885 + -4*d + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5707963267948966 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5707963267948966 + -2*d + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5707963267948966 + lp ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5708150018178928 + 2*d + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.712410971533265 + 4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.570818667009322 + -4*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.570824601128779 + -1*lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5708129074227906 + -4*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.712405211946733 + 4*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5708359457689167 + -2*d + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5707963267948966 + 2*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.71238898038469 + -2*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5708085440996604 + 3*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.570808020500885 + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5708088931655109 + -2*d + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5708143036861921 + -4*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5707963267948966 + d + -1*lp ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.712407306341836 + 4*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.570811511159389 + -1*lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.71241044793449 + -1*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.712408004473536 + -2*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5708074969021093 + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5708144782191173 + 2*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5707977230582981 + 2*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5708101148959872 + -4*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.71238898038469 + 4*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.71238898038469 + 4*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5707963267948966 + lp + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.712409924335713 + 2*d + -1*l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.712411320599116 + -1*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5708150018178928 + -1*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.712401546755304 + -3*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.71238898038469 + -2*d + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.712402593952856 + 4*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.7124123677966665 + -1*lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.5708102894289124 + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.712403641150407 + lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.5708005155851015 + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( PI + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.5707963267948966 + 2*l + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.5708197142068732 + lp + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.5708101148959872 + -4*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.71238898038469 + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.570817445278846 + lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.570808020500885 + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.712397357965099 + -2*d + lp + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.712401372222379 + -2*d + lp + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.5708144782191173 + d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.5708129074227906 + -2*d + 2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.71241009886864 + -1*lp + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.712405211946733 + 2*d + -2*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.71238898038469 + lp + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.712401372222379 + -2*d + 2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.5708113366264636 + -4*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.712418301916124 + 2*d + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.5707963267948966 + 2*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.712396659833399 + -2*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.712397183432174 + -2*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.5708012137168024 + -4*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.71238898038469 + -2*d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.570824077530003 + -2*d + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.71238898038469 + 2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.5707963267948966 + l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.71240241941993 + -2*d + lp + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.712399801426053 + 2*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.712399103294351 + d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.712396310767549 + 4*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.7124128913954415 + -1*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 1.5707963267948966 + d + lp ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 1.5708153508837432 + -2*d + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.71238898038469 + 2*d + l + -2*f ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 4.712407306341836 + 2*d + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 1.5708081950338102 + -1*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 1.5708130819557158 + -4*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 1.5707963267948966 + -1*l + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 4.712400150491902 + 2*d + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 1.5708160490154444 + -2*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 4.712405211946733 + 4*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 4.712408353539387 + 2*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 1.5707963267948966 + d ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.7124059100784335 + -2*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 4.712395438102922 + l + -3*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 1.5708123838240147 + 2*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 1.5708101148959872 + -4*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 1.570818667009322 + -3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00153 * sin ( fmod ( ( 4.712410971533265 + 3*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0016 * sin ( fmod ( ( 1.5708013882497274 + -2*d + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 4.712402593952856 + 4*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00177 * sin ( fmod ( ( 4.71244134026225 + 2*d + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 4.712413414994217 + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 4.712396310767549 + 2*d + -1*lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 1.5708212850032002 + lp + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00219 * sin ( fmod ( ( 4.71238898038469 + -1*l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 1.5707963267948966 + l + -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00279 * sin ( fmod ( ( 1.5708165726142198 + lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0028 * sin ( fmod ( ( 1.57083402590674 + -2*d + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 1.570811685692314 + d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00341 * sin ( fmod ( ( 4.712409575269863 + -1*lp + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.0039 * sin ( fmod ( ( 1.5708050534411566 + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00444 * sin ( fmod ( ( 4.71238898038469 + l + -2*f ), twopi ) );
        a += 0.00448 * sin ( fmod ( ( 1.5707963267948966 + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00485 * sin ( fmod ( ( 1.5708071478362589 + -2*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00531 * sin ( fmod ( ( 1.5707963267948966 + l ), twopi ) );
        a += 0.00617 * sin ( fmod ( ( 4.712397008899249 + -2*d + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00657 * sin ( fmod ( ( 1.5708130819557158 + -2*d + lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00745 * sin ( fmod ( ( 4.7124050374138085 + 2*d + -1*lp + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00785 * sin ( fmod ( ( 4.712401197689453 + -2*d + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00854 * sin ( fmod ( ( 4.71240276848578 + -2*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00925 * sin ( fmod ( ( 1.5708151763508182 + -2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00992 * sin ( fmod ( ( 4.712407306341836 + 2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.01961 * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*l ), twopi ) );
        a += 0.02469 * sin ( fmod ( ( 1.570818667009322 + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.02488 * sin ( fmod ( ( 4.712410971533265 + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.02809 * sin ( fmod ( ( 1.5707965013278218 + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.03855 * sin ( fmod ( ( 1.5708012137168024 + -2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.04301 * sin ( fmod ( ( 1.5707963267948966 ), twopi ) );
        a += 0.05343 * sin ( fmod ( ( 4.712396485300473 + 2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.08508 * sin ( fmod ( ( 4.712399626893127 + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.09554 * sin ( fmod ( ( 1.5708130819557158 + -2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.10689 * sin ( fmod ( ( 4.7124050374138085 + 2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.45276 * sin ( fmod ( ( 1.570818667009322 + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.45648 * sin ( fmod ( ( 4.712410971533265 + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double tides_lon6 ( double t,double d,double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( PI + -2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + -2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + -2*d + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + -2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( -2*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( PI + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( PI + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( PI + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.003*t * sin ( fmod ( ( PI + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double tides_lat7 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 2*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + -1*l + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + -2*d + l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2*d + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( PI + -1*f + 2* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( PI + -2*d + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( PI + -2*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( PI + -1*l + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00342*t * sin ( fmod ( ( 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double tides_r8 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + -2*d + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + -1*l + f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + -2*d + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 1.5707963267948966 + l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.71238898038469 + -1*l + -1*f + 1* ( 3.810344430588308 + 8399.709113522267*t ) ), twopi ) );
        return a;
    }

    double planetary_lon9 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 6.157391399473795 + 10*p1 + -12*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.848367050310476 + 9*p1 + -3*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.081933293997665 + 8*p1 + 4*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4086208647966756 + 7*p1 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4086208647966756 + 7*p1 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.101889214132042 + 6*p1 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.101889214132042 + 6*p1 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.040703730143652 + 6*p1 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.040703730143652 + 6*p1 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7030207255967351 + 6*p1 + -31*p2 + 14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.953216491891876 + 5*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.05972953032637594 + 5*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.405321860441189 + 5*p1 + -6*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9379094052581596 + 5*p1 + -4*p2 + -1*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9379094052581596 + 5*p1 + -4*p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.862503361583638 + 5*p1 + -14*p2 + 2*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3778437117703744 + 4*p1 + 21*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.472000776748549 + 4*p1 + 17*p2 + -31*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3592554486344923 + 4*p1 + 6*p2 + -11*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.43214212653039447 + 4*p1 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5787843667120574 + 4*p1 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4321333998841344 + 4*p1 + -4*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.43214212653039447 + 4*p1 + -4*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2825373984696626 + 4*p1 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.428759537900371 + 4*p1 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.471208371773192 + 4*p1 + -6*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.482413062000095 + 4*p1 + -7*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.482413062000095 + 4*p1 + -7*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2285435606607487 + 4*p1 + -15*p2 + 6*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2285435606607487 + 4*p1 + -15*p2 + 6*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.031452105841314 + 3*p1 + 6*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.171980432158291 + 3*p1 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.171980432158291 + 3*p1 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7130980821648252 + 3*p1 + -3*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4846575384215273 + 3*p1 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2588660214236391 + 3*p1 + -4*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.613810698335263 + 3*p1 + -5*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0227694078852263 + 3*p1 + -9*p2 + 2*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.231694752625225 + 2*p1 + 24*p2 + -34*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.769120035056139 + 2*p1 + 20*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.530942439955623 + 2*p1 + 16*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.530942439955623 + 2*p1 + 16*p2 + -20*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.785545320148341 + 2*p1 + 16*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.206150645790128 + 2*p1 + 11*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.591565753391946 + 2*p1 + 11*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.591565753391946 + 2*p1 + 11*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5919958025196372 + 2*p1 + 10*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1268610105087764 + 2*p1 + 3*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5137984027825002 + 2*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.645462576389398 + 2*p1 + -5*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.874842996931529 + 2*p1 + -3*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.874842996931529 + 2*p1 + -3*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.971578760384573 + 2*p1 + -4*p2 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7499599510674042 + 2*p1 + -8*p2 + 3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7499599510674042 + 2*p1 + -8*p2 + 3*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.976076273839088 + 2*p1 + -9*p2 + 8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.00676648397369 + 2*p1 + -10*p2 + 8*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.879322209923847 + 2*p1 + -11*p2 + 6*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2410032916578113 + 2*p1 + -12*p2 + 13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2410032916578113 + 2*p1 + -12*p2 + 13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7381480862886821 + 2*p1 + -24*p2 + 19*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7381480862886821 + 2*p1 + -24*p2 + 19*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.521224272147594 + 2*p1 + -25*p2 + 21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6819012199450025 + 2*p1 + -30*p2 + 29*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.378765952245445 + 2*p1 + -32*p2 + 32*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.148106247853185 + 2*p1 + -33*p2 + 34*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.570825150222504 + 2*p1 + -48*p2 + 45*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.756089930459525 + p1 + 41*p2 + -45*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.024339340045712 + p1 + 26*p2 + -35*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.095503761029012 + p1 + 16*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8303929430434205 + p1 + 16*p2 + -19*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3382734409345505 + p1 + 14*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3382734409345505 + p1 + 14*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.748494066025288 + p1 + 13*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3387373494497306 + p1 + 13*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.482887783058321 + p1 + 2*p2 + -4*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4792409260845965 + p1 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9411968989388992 + p1 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0884840297808576 + p1 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.385215475928656 + p1 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6573271501115308 + p1 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.248184440366825 + p1 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4188338164510124 + p1 + -9*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4188338164510124 + p1 + -9*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.357014820435732 + p1 + -10*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.01201034270794 + p1 + -11*p3 + 11*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.01201034270794 + p1 + -11*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.487865287552084 + p1 + -1*p2 + -1*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.040453965029376 + p1 + -4*p2 + 3*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3973062358235302 + p1 + -5*p2 + 3*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.341584505058509 + p1 + -8*p2 + 6*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3416951589330852 + p1 + -9*p2 + 7*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5356645942815028 + p1 + -10*p2 + 10*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5519446934748884 + p1 + -20*p2 + 13*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3499140889136518 + p1 + -21*p2 + 19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5827080414034658 + p1 + -28*p2 + 30*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8093296030003356 + p1 + -31*p2 + 33*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8907984308907775 + p1 + -33*p2 + 38*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.287325717770826 + p1 + -51*p2 + 54*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.150254033034057 + 49*p2 + -48*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9820613654083434 + 49*p2 + -55*p3 + 2*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.629257036748339 + 49*p2 + -55*p3 + p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.491609350866829 + 49*p2 + -57*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3703590503044385 + 48*p2 + -57*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.19334305367651 + 47*p2 + -49*p3 + d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8492650052139934 + 47*p2 + -50*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.45434882326814424 + 46*p2 + -49*p3 + 2*p4 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.012553838237012 + 46*p2 + -50*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.012553838237012 + 46*p2 + -50*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9628053308023325 + 46*p2 + -58*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6557280624542203 + 45*p2 + -48*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.869387463752278 + 44*p2 + -47*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1527908521051975 + 44*p2 + -47*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1254036775799943 + 44*p2 + -48*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7724799429042037 + 43*p2 + -42*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7724799429042037 + 43*p2 + -42*p3 + d + -5*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.123760301051266 + 43*p2 + -44*p3 + -1*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5943024211607562 + 43*p2 + -46*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2495632844691675 + 42*p2 + -43*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7291622926280565 + 42*p2 + -43*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9667319385602023 + 41*p2 + -35*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1172742829900555 + 41*p2 + -41*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.227902701254367 + 41*p2 + -42*p3 + p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0023764488078322 + 41*p2 + -45*p3 + 6*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4214080110630956 + 40*p2 + -37*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.283070979615265 + 40*p2 + -38*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1384562969239598 + 40*p2 + -39*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9739469806499716 + 40*p2 + -39*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.729017255767214 + 40*p2 + -40*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.258657148003759 + 40*p2 + -41*p3 + p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.648568223758714 + 39*p2 + -39*p3 + p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.471420263242701 + 39*p2 + -39*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.132848388002693 + 39*p2 + -41*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.629660731404325 + 38*p2 + -35*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.056900219567551 + 38*p2 + -37*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9755624489073007 + 38*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9634994142525836 + 38*p2 + -39*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.140283665149114 + 38*p2 + -42*p3 + 6*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6872626628809371 + 37*p2 + -35*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.1347097901482615 + 37*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.711439870337456 + 37*p2 + -36*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3896912067607867 + 36*p2 + -34*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3019686896275244 + 36*p2 + -34*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1647531557671245 + 36*p2 + -35*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4716282894929056 + 36*p2 + -36*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.392198214694985 + 35*p2 + -32*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.123944058726552 + 34*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.125104702679128 + 33*p2 + -33*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1248057277782615 + 33*p2 + -33*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.125674727212829 + 32*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7476832030514435 + 32*p2 + -33*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1726148338464415 + 31*p2 + -23*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.27221887989053 + 31*p2 + -29*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.127279382927113 + 31*p2 + -31*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1265062020684797 + 31*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.316626313751623 + 31*p2 + -36*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.028221658932164 + 31*p2 + -37*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4801987287848237 + 31*p2 + -37*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.501529453269314 + 31*p2 + -38*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7114511809843266 + 31*p2 + -39*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.881642948735274 + 31*p2 + -39*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.023235602325067 + 31*p2 + -39*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.306846552817632 + 31*p2 + -39*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.516019027681395 + 31*p2 + -39*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5519905871358994 + 31*p2 + -40*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3507713946422315 + 31*p2 + -41*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8661515808274974 + 30*p2 + -37*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.858852307321389 + 30*p2 + -37*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.008029072151216 + 30*p2 + -41*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5979669229565605 + 29*p2 + -27*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1289032372631684 + 29*p2 + -29*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1281166173692947 + 29*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.950967294583147 + 29*p2 + -33*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.934722459538968 + 29*p2 + -33*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9967477619701504 + 29*p2 + -34*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9967477619701504 + 29*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8884041797245747 + 29*p2 + -35*p3 + 2*p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.029996833314368 + 29*p2 + -35*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6075964280385886 + 29*p2 + -35*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6075964280385886 + 29*p2 + -35*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5484294343267635 + 29*p2 + -36*p3 + 4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5484294343267635 + 29*p2 + -36*p3 + 4*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24755401044437172 + 29*p2 + -36*p3 + 2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.298717681826468 + 29*p2 + -36*p3 + 4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.411474503618636 + 29*p2 + -36*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.90877636938387 + 29*p2 + -37*p3 + 6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.89433031315838 + 28*p2 + -25*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.271734551023102 + 28*p2 + -28*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274698992757615 + 28*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.519210336723718 + 28*p2 + -29*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.270993135156854 + 28*p2 + -30*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17956156784027902 + 28*p2 + -31*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4885176661315294 + 28*p2 + -31*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.495008737149255 + 28*p2 + -32*p3 + p5 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.804820387341516 + 28*p2 + -32*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.27521451202875347 + 28*p2 + -32*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5157172262604595 + 28*p2 + -32*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8687796976151506 + 28*p2 + -33*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.515314770331583 + 28*p2 + -33*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.37372211674178984 + 28*p2 + -33*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3515304298356071 + 28*p2 + -34*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8658719790813281 + 28*p2 + -34*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.640131485185815 + 28*p2 + -35*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9255163543368403 + 28*p2 + -36*p3 + 7*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.409737901012902 + 28*p2 + -36*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275403931242495 + 27*p2 + -25*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.352755144368365 + 27*p2 + -27*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.749821056852213 + 27*p2 + -28*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5981835098184158 + 27*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5981835098184158 + 27*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.272424130610564 + 27*p2 + -29*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2952725594193226 + 27*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.444290873848018 + 27*p2 + -30*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2256719534458094 + 27*p2 + -30*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6302874706404 + 27*p2 + -30*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4973148321915986 + 27*p2 + -31*p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.026266724135322 + 27*p2 + -32*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6541417326970824 + 27*p2 + -32*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9256729188690604 + 27*p2 + -33*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.503981823899608 + 27*p2 + -35*p3 + 5*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8806526489176926 + 27*p2 + -37*p3 + 8*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.094387946543262 + 26*p2 + -23*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.276137667660033 + 26*p2 + -24*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.796160421157287 + 26*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1507697693297043 + 26*p2 + -25*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.137276454349611 + 26*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.584222123027888 + 26*p2 + -27*p3 + p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.608603125452822 + 26*p2 + -27*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1573461529545856 + 26*p2 + -27*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6071269259714853 + 26*p2 + -27*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.749460297295825 + 26*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1330159311125674 + 26*p2 + -28*p3 + 2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.266725796637412 + 26*p2 + -28*p3 + p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.654014157627078 + 26*p2 + -28*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.795606811216871 + 26*p2 + -28*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.74104170164883 + 26*p2 + -29*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2679232330439385 + 26*p2 + -29*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7152696463151065 + 26*p2 + -29*p3 + -1*p7 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4620727948694787 + 26*p2 + -29*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3272892282837576 + 26*p2 + -29*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0508884159624237 + 26*p2 + -29*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0508884159624237 + 26*p2 + -29*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6304358236268195 + 26*p2 + -29*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1055982048271384 + 26*p2 + -30*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7691798828528493 + 26*p2 + -30*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8902301431880113 + 26*p2 + -30*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8845635827055612 + 26*p2 + -31*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.445208376439158 + 26*p2 + -31*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9136664328821078 + 26*p2 + -32*p3 + 4*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4783862128549443 + 26*p2 + -32*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0902855756314 + 26*p2 + -33*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.911270968483746 + 26*p2 + -34*p3 + 6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.911270968483746 + 26*p2 + -34*p3 + 6*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.917353623958188 + 26*p2 + -36*p3 + 10*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377252087645531 + 26*p2 + -37*p3 + 15*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.263839545653389 + 25*p2 + -18*p3 + -21*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.79616251555239 + 25*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.148454232512767 + 25*p2 + -24*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274490076846151 + 25*p2 + -25*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274268420031148 + 25*p2 + -25*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135993288283545 + 25*p2 + -25*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0217703814213843 + 25*p2 + -25*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + 3*d + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + 3*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.750536292779679 + 25*p2 + -26*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5981817644891638 + 25*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + -1*d + 2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + -1*d + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1709995231254036 + 25*p2 + -26*p3 + -2*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.246221328017449 + 25*p2 + -27*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.325537441313531 + 25*p2 + -27*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0867355419395763 + 25*p2 + -27*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2734072320866299 + 25*p2 + -27*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.950852617952974 + 25*p2 + -28*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7506975272092969 + 25*p2 + -28*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.419274895146258 + 25*p2 + -28*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2495334393389586 + 25*p2 + -29*p3 + 3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.961742599820792 + 25*p2 + -29*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2495334393389586 + 25*p2 + -29*p3 + 3*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4263808116661942 + 25*p2 + -29*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.894472689533759 + 25*p2 + -29*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2932830671032916 + 25*p2 + -29*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1623774135893101 + 25*p2 + -29*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.406637123568859 + 25*p2 + -29*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8853479336714075 + 25*p2 + -30*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6532692511023273 + 25*p2 + -30*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3144341717128016 + 25*p2 + -31*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.35711653063954013 + 24*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7948719936085151 + 24*p2 + -23*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.131649861907032 + 24*p2 + -24*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275244408148862 + 24*p2 + -24*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275244582681787 + 24*p2 + -24*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.013411109972324427 + 24*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1308026790881134 + 24*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.50842612180857 + 24*p2 + -24*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1237224019115484 + 24*p2 + -25*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6104959350266097 + 24*p2 + -25*p3 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.19176491846854 + 24*p2 + -25*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.749831877893575 + 24*p2 + -25*p3 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.159961396797357 + 24*p2 + -25*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7133754234812835 + 24*p2 + -26*p3 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7133754234812835 + 24*p2 + -26*p3 + 3*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.728259433806 + 24*p2 + -26*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5866667802162062 + 24*p2 + -26*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.547420442489552 + 24*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.321481994263597 + 24*p2 + -26*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.024014359738991 + 24*p2 + -26*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.57495178121097 + 24*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.21352275901426 + 24*p2 + -27*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7060260080357441 + 24*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.741421800366648 + 24*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7060260080357441 + 24*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0141516701705786 + 24*p2 + -29*p3 + 6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6564946110616963 + 24*p2 + -29*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0101539935188857 + 24*p2 + -29*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6564946110616963 + 24*p2 + -29*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.074944646606828 + 24*p2 + -29*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3491785986685448 + 23*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1378745786842694 + 23*p2 + -21*p3 + -2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.153036602962195 + 23*p2 + -22*p3 + -1*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1547187512952672 + 23*p2 + -22*p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00008883725892651137 + 23*p2 + -23*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280770993225302 + 23*p2 + -23*p3 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3312558380747648 + 23*p2 + -23*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8583351407690745 + 23*p2 + -23*p3 + -2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.113546783306571 + 23*p2 + -24*p3 + p5 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.235738356931195 + 23*p2 + -24*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.235738356931195 + 23*p2 + -24*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1243735842554674 + 23*p2 + -24*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1243735842554674 + 23*p2 + -24*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2659662378452605 + 23*p2 + -24*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6106090323621391 + 23*p2 + -24*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6106090323621391 + 23*p2 + -24*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6053665868879237 + 23*p2 + -24*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.742990710824532 + 23*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4547802856558705 + 23*p2 + -24*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.596372939245663 + 23*p2 + -24*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.586600981303406 + 23*p2 + -25*p3 + p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7281936348931985 + 23*p2 + -25*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.586600981303406 + 23*p2 + -25*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.25523159028087 + 23*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9881063047743095 + 23*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9881063047743095 + 23*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8973524827995498 + 23*p2 + -25*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.163615069053483 + 23*p2 + -25*p3 + -4*p4 + -3*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.163615069053483 + 23*p2 + -25*p3 + -4*p4 + -3*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5314342567422022 + 23*p2 + -26*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3162720289101015 + 23*p2 + -26*p3 + 2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4497689132763028 + 23*p2 + -26*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.817852403301991 + 23*p2 + -26*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5956737263540481 + 23*p2 + -26*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.329567057490535 + 23*p2 + -26*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.056401562003623 + 23*p2 + -27*p3 + 6*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.581081569073532 + 23*p2 + -27*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.896096020271039 + 23*p2 + -27*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.896096020271039 + 23*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7193563007653844 + 23*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3029165609476492 + 23*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.189058287359497 + 23*p2 + -27*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.047465633769704 + 23*p2 + -27*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.689392662700071 + 23*p2 + -28*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6572285220121599 + 23*p2 + -28*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.561201736796225 + 23*p2 + -36*p3 + 19*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2339233550487796 + 22*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2339233550487796 + 22*p2 + -18*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.719745360150604 + 22*p2 + -19*p3 + -6*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4614310203068868 + 22*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.278797200374222 + 22*p2 + -20*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.278797200374222 + 22*p2 + -20*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.663150973257903 + 22*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4602990082523601 + 22*p2 + -22*p3 + p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9830265239863794 + 22*p2 + -22*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.124619177576173 + 22*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.276803685302594 + 22*p2 + -22*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135211031712801 + 22*p2 + -22*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0019779816412851736 + 22*p2 + -22*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.376394415854468 + 22*p2 + -22*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.1860100868175225 + 22*p2 + -22*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1380457954838903 + 22*p2 + -22*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.308061983112087 + 22*p2 + -22*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.16646932952229396 + 22*p2 + -22*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.16646932952229396 + 22*p2 + -22*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.308061983112087 + 22*p2 + -22*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6098513849338483 + 22*p2 + -23*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.220755884541717 + 22*p2 + -23*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6098513849338483 + 22*p2 + -23*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5630331022820259 + 22*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5826869059228834 + 22*p2 + -23*p3 + -3*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.246800760332477 + 22*p2 + -23*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.32504697829877033 + 22*p2 + -24*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.634224409834124 + 22*p2 + -24*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.108032415534895 + 22*p2 + -24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.91543027112249 + 22*p2 + -24*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.940909111141879 + 22*p2 + -24*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0723419861313044 + 22*p2 + -24*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0723419861313044 + 22*p2 + -24*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.09448814543896 + 22*p2 + -24*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.266708675414109 + 22*p2 + -25*p3 + 3*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.63752500198257 + 22*p2 + -25*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4430994866056568 + 22*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.014839704456666 + 22*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8732470508668717 + 22*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.233451967112766 + 22*p2 + -26*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.809446382523927 + 22*p2 + -26*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.048172666649687 + 22*p2 + -26*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8734056927975615 + 22*p2 + -27*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5130547349848587 + 22*p2 + -27*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6132542533764618 + 21*p2 + -19*p3 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.13779638793378 + 21*p2 + -19*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1459737790781497 + 21*p2 + -19*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275837471028691 + 21*p2 + -19*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275837471028691 + 21*p2 + -19*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.690676892960322 + 21*p2 + -19*p3 + -3*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.745214094256964 + 21*p2 + -19*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7962235765812598 + 21*p2 + -20*p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0014243632025525723 + 21*p2 + -20*p3 + -1*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.277532185732378 + 21*p2 + -21*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2822067010679925 + 21*p2 + -21*p3 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2822067010679925 + 21*p2 + -21*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281788520179215 + 21*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.028765295000894146 + 21*p2 + -21*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.1764702916590455 + 21*p2 + -21*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.43850228085758697 + 21*p2 + -21*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.119811476621996 + 21*p2 + -22*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9692911148424017 + 21*p2 + -22*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.622314632084365 + 21*p2 + -22*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6101074247351161 + 21*p2 + -22*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6019656383074878 + 21*p2 + -22*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0415924348021344 + 21*p2 + -22*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.1831850883919275 + 21*p2 + -22*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.614567962704438 + 21*p2 + -23*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.103508173047875 + 21*p2 + -23*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1658424072549776 + 21*p2 + -23*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3074350608447705 + 21*p2 + -23*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.040275775411063 + 21*p2 + -23*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8986831218212702 + 21*p2 + -23*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.72531523789081 + 21*p2 + -24*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.174052653080866 + 21*p2 + -24*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.72531523789081 + 21*p2 + -24*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4364333760605894 + 21*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.225031102537744 + 21*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.225031102537744 + 21*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9609803805431801 + 21*p2 + -24*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5133107747861265 + 21*p2 + -26*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7604045334084304 + 21*p2 + -26*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5133107747861265 + 21*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5133107747861265 + 21*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5133107747861265 + 21*p2 + -26*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.887609905876942 + 20*p2 + -13*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.273620545314491 + 20*p2 + -15*p3 + -4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.063736491216371 + 20*p2 + -17*p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.682420089334987 + 20*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6496050983723738 + 20*p2 + -19*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6490877827820827 + 20*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7977208945465457 + 20*p2 + -19*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.399709754231401 + 20*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.730155908571216 + 20*p2 + -19*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.927827370294356 + 20*p2 + -19*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.014990982011229696 + 20*p2 + -19*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7635829525092375 + 20*p2 + -19*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0343145778559268 + 20*p2 + -20*p3 + 2*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.070605251484229 + 20*p2 + -20*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.070605251484229 + 20*p2 + -20*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.929012597894435 + 20*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3612610064779593 + 20*p2 + -20*p3 + p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2797410744337006 + 20*p2 + -20*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2797410744337006 + 20*p2 + -20*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1374495910114093 + 20*p2 + -20*p3 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -1*d + 4*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + -1*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9472561754996813 + 20*p2 + -20*p3 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -5*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6064104683135414 + 20*p2 + -20*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.761352621753064 + 20*p2 + -20*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6197599681632706 + 20*p2 + -20*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4088245532187003 + 20*p2 + -20*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.267231899628907 + 20*p2 + -20*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6666650106755507 + 20*p2 + -20*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5250723570857576 + 20*p2 + -20*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.213147504726765 + 20*p2 + -21*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.81627200766431 + 20*p2 + -21*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.033344025753843 + 20*p2 + -21*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4446622544178922 + 20*p2 + -21*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3629536182882265 + 20*p2 + -21*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6659022932941125 + 20*p2 + -22*p3 + 5*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.11847347322415068 + 20*p2 + -22*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7347738752390685 + 20*p2 + -22*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.952594282013539 + 20*p2 + -22*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7417190469348958 + 20*p2 + -22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2572475691099482 + 20*p2 + -22*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3988402226997416 + 20*p2 + -22*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8993049826337559 + 20*p2 + -22*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.275253641397264 + 20*p2 + -23*p3 + 11*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.725114525026831 + 20*p2 + -23*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.513542379977866 + 20*p2 + -25*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.513542379977866 + 20*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.036829082207592 + 20*p2 + -27*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0171543431140266 + 20*p2 + -28*p3 + 13*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.880446568024615 + 19*p2 + -11*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5900054120440295 + 19*p2 + -14*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0987490347384865 + 19*p2 + -16*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9571563811486943 + 19*p2 + -16*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5815103964707475 + 19*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.319673833158531 + 19*p2 + -17*p3 + -3*p5 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.303397258616915 + 19*p2 + -17*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1472106939190376 + 19*p2 + -17*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1472106939190376 + 19*p2 + -17*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7232251891149137 + 19*p2 + -17*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7232251891149137 + 19*p2 + -17*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.127836683553908 + 19*p2 + -18*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3013618216499727 + 19*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7659211786064506 + 19*p2 + -18*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5956683158333669 + 19*p2 + -18*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7372609694231596 + 19*p2 + -18*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.761133940496106 + 19*p2 + -19*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.761133940496106 + 19*p2 + -19*p3 + 2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8411136279737956 + 19*p2 + -19*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.664693844316665 + 19*p2 + -19*p3 + p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.664693844316665 + 19*p2 + -19*p3 + p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2788816743100195 + 19*p2 + -19*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280323665338017 + 19*p2 + -19*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280323665338017 + 19*p2 + -19*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1372897188519264 + 19*p2 + -19*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3563077705591158 + 19*p2 + -19*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.761151908889084 + 19*p2 + -19*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6366601913382075 + 19*p2 + -19*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.774231223272288 + 19*p2 + -19*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.632638569682495 + 19*p2 + -19*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4825219280538367 + 19*p2 + -19*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4825219280538367 + 19*p2 + -19*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.150211447000308 + 19*p2 + -20*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.150211447000308 + 19*p2 + -20*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.42904630399479 + 19*p2 + -20*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6105453278444413 + 19*p2 + -20*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2559684257994783 + 19*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751637246471838 + 19*p2 + -20*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2552065895809827 + 19*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6028327178798785 + 19*p2 + -20*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.557301266485551 + 19*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0687005566748935 + 19*p2 + -22*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9271079030851003 + 19*p2 + -22*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0282150096843736 + 19*p2 + -24*p3 + 9*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0040437618422624 + 19*p2 + -24*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9119544394188264 + 19*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9119544394188264 + 19*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6280228719426708 + 18*p2 + -10*p3 + -13*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.737628020663172 + 18*p2 + -10*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.08349916940928673 + 18*p2 + -13*p3 + -5*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377566945042592 + 18*p2 + -14*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.011671889372712078 + 18*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377566945042592 + 18*p2 + -14*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.902600015223546 + 18*p2 + -14*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.902600015223546 + 18*p2 + -14*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -6*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.597627647946606 + 18*p2 + -15*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.451156824592439 + 18*p2 + -15*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.576349449374283 + 18*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1836269887618993 + 18*p2 + -16*p3 + -1*p8 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135926965771969 + 18*p2 + -16*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135926965771969 + 18*p2 + -16*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.940721156178072 + 18*p2 + -17*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9701409496484645 + 18*p2 + -17*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7980305159558494 + 18*p2 + -17*p3 + -1*d + -1*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1392884699113104 + 18*p2 + -17*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.860064255455658 + 18*p2 + -17*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.860064255455658 + 18*p2 + -17*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1664737013437405 + 18*p2 + -18*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1664737013437405 + 18*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.516738942004577 + 18*p2 + -18*p3 + p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.65833159559437 + 18*p2 + -18*p3 + p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.064104581155617 + 18*p2 + -18*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279500742595701 + 18*p2 + -18*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3553225321963653 + 18*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4066826851606526 + 18*p2 + -18*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4066826851606526 + 18*p2 + -18*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139639630156812 + 18*p2 + -18*p3 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6277719275895 + 18*p2 + -18*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6168840146218344 + 18*p2 + -18*p3 + -1*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.060371130356042 + 18*p2 + -19*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.610726318487873 + 18*p2 + -19*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.485967774087632 + 18*p2 + -19*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743606637517561 + 18*p2 + -19*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9954673884308873 + 18*p2 + -20*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9954673884308873 + 18*p2 + -20*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.727174711675884 + 18*p2 + -20*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.727174711675884 + 18*p2 + -20*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.727174711675884 + 18*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.230139340690798 + 18*p2 + -20*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2435238706685916 + 18*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3069449553941774 + 18*p2 + -21*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.685744792522061 + 18*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.685744792522061 + 18*p2 + -21*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1446895743128485 + 18*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.170556060457422 + 18*p2 + -23*p3 + 9*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9690319334484804 + 18*p2 + -23*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.012641985862555 + 18*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7592585417232545 + 18*p2 + -24*p3 + 15*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.047080639631663 + 18*p2 + -27*p3 + 17*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.270531304040143 + 17*p2 + -14*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1077474032680446 + 17*p2 + -14*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.273949173816008 + 17*p2 + -14*p3 + -4*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13235652022621439 + 17*p2 + -14*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.624376896131888 + 17*p2 + -14*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.624376896131888 + 17*p2 + -14*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2992115760115157 + 17*p2 + -14*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5899874606476834 + 17*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1387434035859125 + 17*p2 + -15*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.014781891566840774 + 17*p2 + -15*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6865362568462571 + 17*p2 + -15*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17139080894706757 + 17*p2 + -15*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3129834625368613 + 17*p2 + -15*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.027671024549794 + 17*p2 + -15*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.196771420922836 + 17*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.196771420922836 + 17*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6925780716162027 + 17*p2 + -16*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.695193455998633 + 17*p2 + -16*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.940796030802984 + 17*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7984473005812258 + 17*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.799675165204953 + 17*p2 + -16*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6925780716162027 + 17*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6371300084778937 + 17*p2 + -16*p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.778722662067687 + 17*p2 + -16*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.21989019273441118 + 17*p2 + -16*p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5983423347803476 + 17*p2 + -16*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.14105581580683 + 17*p2 + -16*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8421397070410435 + 17*p2 + -17*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3272633804141944 + 17*p2 + -17*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.138489632712673 + 17*p2 + -17*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281165088570402 + 17*p2 + -17*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1423735138971347 + 17*p2 + -17*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.749590324325099 + 17*p2 + -17*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6079976707353052 + 17*p2 + -17*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9806444816266247 + 17*p2 + -18*p3 + 3*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.396763987519885 + 17*p2 + -18*p3 + 2*p6 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6108806055937495 + 17*p2 + -18*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752473782782318 + 17*p2 + -18*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.891592232129534 + 17*p2 + -19*p3 + 6*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.125020752342107 + 17*p2 + -19*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.125020752342107 + 17*p2 + -19*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9330837529076375 + 17*p2 + -19*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0721697391307656 + 17*p2 + -19*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.912796918347081 + 17*p2 + -20*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2836345124374664 + 17*p2 + -20*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.192870435511703 + 17*p2 + -21*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0512777819219101 + 17*p2 + -21*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.880936613986992 + 17*p2 + -22*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.022529267576785 + 17*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9853767928554324 + 17*p2 + -23*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9853767928554324 + 17*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.105987753817867 + 16*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377921945012447 + 16*p2 + -12*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377921945012447 + 16*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4582033829211737 + 16*p2 + -13*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.222600914585583 + 16*p2 + -13*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4406614276752291 + 16*p2 + -13*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6158951110676545 + 16*p2 + -14*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.386773199282694 + 16*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0288810613202015 + 16*p2 + -14*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4761881281983493 + 16*p2 + -14*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6177807817881424 + 16*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.542535099878612 + 16*p2 + -14*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.146468762952332 + 16*p2 + -14*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.631000612172765 + 16*p2 + -14*p3 + -1*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.631000612172765 + 16*p2 + -14*p3 + -1*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.736071186970392 + 16*p2 + -14*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.375675174168038 + 16*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4797992229190422 + 16*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2771134812448235 + 16*p2 + -15*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.287588415318201 + 16*p2 + -15*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.287588415318201 + 16*p2 + -15*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2448615165022696 + 16*p2 + -16*p3 + 6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.147640743046729 + 16*p2 + -16*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5245913528422246 + 16*p2 + -16*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144912793425862 + 16*p2 + -16*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280685995690731 + 16*p2 + -16*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.60846140471756 + 16*p2 + -16*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.689892350464917 + 16*p2 + -17*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.689892350464917 + 16*p2 + -17*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4684509175896496 + 16*p2 + -17*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6128371196852354 + 16*p2 + -17*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6128371196852354 + 16*p2 + -17*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.424652603637503 + 16*p2 + -17*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8241909070481421 + 16*p2 + -17*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5847942164617415 + 16*p2 + -18*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7263868700515355 + 16*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0733117080603463 + 16*p2 + -18*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9353443033548197 + 16*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0643649757816975 + 16*p2 + -18*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7904565021305276 + 16*p2 + -18*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.527450925783643 + 16*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.347359808051675 + 16*p2 + -19*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.347359808051675 + 16*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.671488028035562 + 16*p2 + -20*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.813080681625355 + 16*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042262658231534 + 16*p2 + -20*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.126187513445382 + 16*p2 + -21*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9845948598555888 + 16*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5337450726718427 + 15*p2 + -9*p3 + -1*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377993678044704 + 15*p2 + -9*p3 + -2*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2387757194351745 + 15*p2 + -9*p3 + -2*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.47433441399980614 + 15*p2 + -9*p3 + -4*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.47433441399980614 + 15*p2 + -9*p3 + -4*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.301497118660269 + 15*p2 + -9*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1599044650704755 + 15*p2 + -9*p3 + -8*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.378753070802246 + 15*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2371604172124533 + 15*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.226708023381377 + 15*p2 + -11*p3 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.774471006016562 + 15*p2 + -11*p3 + -4*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.248437679142973 + 15*p2 + -11*p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1206378730261823 + 15*p2 + -11*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.898086768310814 + 15*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9472919717459805 + 15*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5844863318833731 + 15*p2 + -12*p3 + -1*p7 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.943440902751455 + 15*p2 + -12*p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.943440902751455 + 15*p2 + -12*p3 + -2*p5 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2943845188992749 + 15*p2 + -12*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.038106646223418195 + 15*p2 + -12*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279407542013645 + 15*p2 + -12*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279407542013645 + 15*p2 + -12*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.440244851576044 + 15*p2 + -13*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.514742119305687 + 15*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.867882283307042 + 15*p2 + -13*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.009139467617969 + 15*p2 + -13*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.536699242458718 + 15*p2 + -13*p3 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.53976369155937 + 15*p2 + -13*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8664677024466165 + 15*p2 + -13*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8664677024466165 + 15*p2 + -13*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6424941034009732 + 15*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2283311625890985 + 15*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.940099120832661 + 15*p2 + -14*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.074250878229161 + 15*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.924460447136017 + 15*p2 + -14*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.924460447136017 + 15*p2 + -14*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.288018464445892 + 15*p2 + -14*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.288018464445892 + 15*p2 + -14*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.119480902763352 + 15*p2 + -15*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003889466238069363 + 15*p2 + -15*p3 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2353196269486917 + 15*p2 + -15*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.123263214283665 + 15*p2 + -16*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.123263214283665 + 15*p2 + -16*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9795360485136326 + 15*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6100164930810874 + 15*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.612952311415867 + 15*p2 + -16*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.612952311415867 + 15*p2 + -16*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6329295245671192 + 15*p2 + -17*p3 + 11*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0094385745601768 + 15*p2 + -17*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0094385745601768 + 15*p2 + -17*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5843043025407066 + 15*p2 + -17*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7258969561305 + 15*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0654685474677335 + 15*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.524180876897106 + 15*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.425768550164595 + 15*p2 + -18*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.425768550164595 + 15*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.106843331213828 + 15*p2 + -18*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9652506776240347 + 15*p2 + -18*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8984265584212271 + 15*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042764963990257 + 15*p2 + -19*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0095954796599311 + 15*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.949750425533707 + 15*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6827297022459742 + 15*p2 + -23*p3 + 19*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054192515766008 + 15*p2 + -24*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054192515766008 + 15*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.861397512471257 + 14*p2 + -7*p3 + -4*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.237865530230259 + 14*p2 + -8*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379458183820053 + 14*p2 + -8*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3657999097306956 + 14*p2 + -9*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.507392563320488 + 14*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9026300093917301 + 14*p2 + -9*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0473743870430905 + 14*p2 + -9*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379078225641893 + 14*p2 + -10*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379078225641893 + 14*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2374855720521003 + 14*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.774404517470378 + 14*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.644949109021779 + 14*p2 + -11*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6075426633993106 + 14*p2 + -11*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.534578135320453 + 14*p2 + -11*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.008517606805482 + 14*p2 + -11*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279803208155071 + 14*p2 + -11*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7403589033505 + 14*p2 + -12*p3 + 3*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.44912592548155117 + 14*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.149319949815022 + 14*p2 + -12*p3 + -3*d + 4*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.149319949815022 + 14*p2 + -12*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0610666355646454 + 14*p2 + -12*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.866792857286263 + 14*p2 + -12*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.866792857286263 + 14*p2 + -12*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.866792857286263 + 14*p2 + -12*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6389973362446024 + 14*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6163344019420648 + 14*p2 + -13*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.940699339562422 + 14*p2 + -13*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1433241947406967 + 14*p2 + -13*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1433241947406967 + 14*p2 + -13*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1415183025636586 + 14*p2 + -13*p3 + -1*p6 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1133643963997377 + 14*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1133643963997377 + 14*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.288414130587319 + 14*p2 + -13*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.288414130587319 + 14*p2 + -13*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.069027822906276 + 14*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281592868770066 + 14*p2 + -14*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281108539902639 + 14*p2 + -14*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141086508106715 + 14*p2 + -14*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141086508106715 + 14*p2 + -14*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.20810311163106748 + 14*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.756893305514219 + 14*p2 + -14*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5497848485255457 + 14*p2 + -14*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6044476795350655 + 14*p2 + -14*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1237271227988455 + 14*p2 + -15*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1237271227988455 + 14*p2 + -15*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9669712486956006 + 14*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6130318984297578 + 14*p2 + -15*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752765078234476 + 14*p2 + -15*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.303504230303429 + 14*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.755198765343456 + 14*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.831148513073242 + 14*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.754565210824983 + 14*p2 + -15*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.583744400916667 + 14*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.72533705450646 + 14*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.296235955671474 + 14*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6099423080895607 + 14*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.067593834897887 + 14*p2 + -16*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0354338914984975 + 14*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.523602283253436 + 14*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.523602283253436 + 14*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.814041485378578 + 14*p2 + -18*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.814041485378578 + 14*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9755861683884948 + 14*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043227301709111 + 14*p2 + -18*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.009835986030856 + 14*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.698710468974326 + 14*p2 + -19*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9021713368643062 + 14*p2 + -20*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9021713368643062 + 14*p2 + -20*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6660129556670054 + 14*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5244203020772126 + 14*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3011307315586921 + 14*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054358322044947 + 14*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3487311132449666 + 13*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3487311132449666 + 13*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.075841937371912 + 13*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.171882302162746 + 13*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0338671009306655 + 13*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.39495652454652 + 13*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5696395395633083 + 13*p2 + -9*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4280468859735149 + 13*p2 + -9*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4785340252459549 + 13*p2 + -9*p3 + -7*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8482336901589898 + 13*p2 + -10*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.394381796122155 + 13*p2 + -10*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8482336901589898 + 13*p2 + -10*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.125849285632979 + 13*p2 + -10*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.125849285632979 + 13*p2 + -10*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4909312989507453 + 13*p2 + -11*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8670818838103935 + 13*p2 + -11*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8670818838103935 + 13*p2 + -11*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8016086154553632 + 13*p2 + -12*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.941714597588307 + 13*p2 + -12*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.42799351289167 + 13*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.114026399785019 + 13*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.114026399785019 + 13*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2887745410778555 + 13*p2 + -12*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2887745410778555 + 13*p2 + -12*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.06838048028671 + 13*p2 + -13*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282015412981975 + 13*p2 + -13*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.138962791472888 + 13*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.20617958426244454 + 13*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.283143942876315 + 13*p2 + -13*p3 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1148210481934524 + 13*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.256212290787565 + 13*p2 + -13*p3 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7823665434833673 + 13*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124157171926536 + 13*p2 + -14*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124157171926536 + 13*p2 + -14*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.738760381783548 + 13*p2 + -14*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6131055513241916 + 13*p2 + -14*p3 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3035422614844894 + 13*p2 + -14*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7528429199191145 + 13*p2 + -14*p3 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.796694142842548 + 13*p2 + -14*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7532049012059785 + 13*p2 + -14*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5831108463981929 + 13*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.724703499987987 + 13*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.082680660980001 + 13*p2 + -15*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.396590152726387 + 13*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.767707872161717 + 13*p2 + -17*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9732079827497273 + 13*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043648798723468 + 13*p2 + -17*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.082093523721313 + 13*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9026013859919974 + 13*p2 + -19*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9026013859919974 + 13*p2 + -19*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.618342271205142 + 13*p2 + -19*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.476749617615349 + 13*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.743725502937938 + 13*p2 + -19*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9527674101770205 + 13*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9527674101770205 + 13*p2 + -19*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4078566106121775 + 13*p2 + -20*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4078566106121775 + 13*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054494632259527 + 13*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.935977176738226 + 12*p2 + -3*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.864000671050606 + 12*p2 + -6*p3 + p5 + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.864000671050606 + 12*p2 + -6*p3 + p5 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.376823434781242 + 12*p2 + -6*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.374162846371186 + 12*p2 + -6*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.667521286203213 + 12*p2 + -7*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.909106079076205 + 12*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5259286326134194 + 12*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1916354235363587 + 12*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.610913966877413 + 12*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2393591830041157 + 12*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.32099921069754506 + 12*p2 + -8*p3 + -3*p7 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7051212548464605 + 12*p2 + -8*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.548570448432008 + 12*p2 + -8*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.548570448432008 + 12*p2 + -8*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.405981943964294 + 12*p2 + -9*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.623658518611767 + 12*p2 + -9*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4692098037450503 + 12*p2 + -10*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144592350975196 + 12*p2 + -10*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0043216097608631595 + 12*p2 + -10*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.004312534048752789 + 12*p2 + -10*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12536996723048108 + 12*p2 + -10*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12536996723048108 + 12*p2 + -10*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867334782019007 + 12*p2 + -10*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867334782019007 + 12*p2 + -10*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8019819413823646 + 12*p2 + -11*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9921559837393952 + 12*p2 + -11*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.95363659264283 + 12*p2 + -11*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4756577311369847 + 12*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1146772330630883 + 12*p2 + -11*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1146772330630883 + 12*p2 + -11*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2890996959175025 + 12*p2 + -11*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2890996959175025 + 12*p2 + -11*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1417127322423304 + 12*p2 + -12*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282299203518349 + 12*p2 + -12*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00016074482410867775 + 12*p2 + -12*p3 + d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.84370753630811 + 12*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6168417946505693 + 12*p2 + -12*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6168417946505693 + 12*p2 + -12*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124552663535038 + 12*p2 + -13*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124552663535038 + 12*p2 + -13*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6962669910249011 + 12*p2 + -13*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9182377907606148 + 12*p2 + -13*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.059830444350408 + 12*p2 + -13*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.871948725931263 + 12*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3092222610021798 + 12*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6165925446367513 + 12*p2 + -13*p3 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3091339473420287 + 12*p2 + -13*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6039959798263328 + 12*p2 + -13*p3 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3086199478773162 + 12*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.75168803555307 + 12*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1268210594655392 + 12*p2 + -14*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1268210594655392 + 12*p2 + -14*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1377291927575786 + 12*p2 + -14*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1377291927575786 + 12*p2 + -14*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.58239945019508 + 12*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.723992103784873 + 12*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0293967806192157 + 12*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.174245694994454 + 12*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.084268387000541 + 12*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.00687978983541 + 12*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0362065317617217 + 12*p2 + -15*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0362065317617217 + 12*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7814992893780515 + 12*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.044028756901627 + 12*p2 + -16*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.044028756901627 + 12*p2 + -16*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.151435446404732 + 12*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.618931826429833 + 12*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.942222654435246 + 12*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.942222654435246 + 12*p2 + -18*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.739008227035648 + 12*p2 + -19*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.739008227035648 + 12*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.619721081314219 + 11*p2 + 6*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381763240163162 + 11*p2 + -5*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6854934226181905 + 11*p2 + -6*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4027647870524085 + 11*p2 + -7*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.606835140913819 + 11*p2 + -7*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.465242487324025 + 11*p2 + -7*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.219738025518587 + 11*p2 + -8*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.219738025518587 + 11*p2 + -8*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.224401221709016 + 11*p2 + -8*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.224401221709016 + 11*p2 + -8*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.340541687827076 + 11*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1448817265651763 + 11*p2 + -9*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12703745479783646 + 11*p2 + -9*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12703745479783646 + 11*p2 + -9*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008302007652961426 + 11*p2 + -9*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867551551912105 + 11*p2 + -9*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867551551912105 + 11*p2 + -9*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8023554418422916 + 11*p2 + -10*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.953975011984792 + 11*p2 + -10*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2114403896870725 + 11*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.115319165161971 + 11*p2 + -10*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.115319165161971 + 11*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.304269399644136 + 11*p2 + -10*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2893887224416325 + 11*p2 + -10*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2893887224416325 + 11*p2 + -10*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420246225796618 + 11*p2 + -11*p3 + 3*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1419846545397907 + 11*p2 + -11*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14168655230355 + 11*p2 + -11*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1411276978770624 + 11*p2 + -11*p3 + 2*d + -5*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0004324925886441949 + 11*p2 + -11*p3 + d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.03782215755534312 + 11*p2 + -11*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282000577683333 + 11*p2 + -11*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1404079240935396 + 11*p2 + -11*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1419691211094483 + 11*p2 + -11*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124913248558501 + 11*p2 + -12*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124913248558501 + 11*p2 + -12*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6965560175490313 + 11*p2 + -12*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9184906889692286 + 11*p2 + -12*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.060083342559022 + 11*p2 + -12*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3141796942095443 + 11*p2 + -12*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3142481111162225 + 11*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3142086666751274 + 11*p2 + -12*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.839355574814895 + 11*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5409740603989945 + 11*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.761330456071564 + 11*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.127073957674153 + 11*p2 + -13*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.127073957674153 + 11*p2 + -13*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.58160759431345 + 11*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.723200247903244 + 11*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0259296840601286 + 11*p2 + -13*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41301314339561135 + 11*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.765394787304049 + 11*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9846536774513808 + 11*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.093936106294871 + 11*p2 + -16*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9523434527050776 + 11*p2 + -16*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.020779575001661 + 11*p2 + -16*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8791869214118675 + 11*p2 + -16*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.151519745807604 + 11*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.792059429512194 + 11*p2 + -16*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9304074735309458 + 11*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9304074735309458 + 11*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.454776296893542 + 11*p2 + -18*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5398516391570374 + 11*p2 + -18*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5398516391570374 + 11*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054687840207723 + 11*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.845220396202055 + 10*p2 + 8*p3 + -24*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8645219754032272 + 10*p2 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.224101863749032 + 10*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -5*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.271633828528628 + 10*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.087696371187749 + 10*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.527622806721697 + 10*p2 + -4*p3 + -9*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2357728804571178 + 10*p2 + -4*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6209850062669288 + 10*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.918228898079746 + 10*p2 + -5*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.489620382149573 + 10*p2 + -5*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0851762732841617 + 10*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0851762732841617 + 10*p2 + -6*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.235485075663464 + 10*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3800175618453165 + 10*p2 + -6*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.673612093735239 + 10*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.673612093735239 + 10*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.428151082129859 + 10*p2 + -7*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.42807760376834997 + 10*p2 + -7*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.428151082129859 + 10*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.22465411991763 + 10*p2 + -7*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5169754256199056 + 10*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.273497333567617 + 10*p2 + -8*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008690692477380564 + 10*p2 + -8*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008690692477380564 + 10*p2 + -8*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867732193489687 + 10*p2 + -8*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867732193489687 + 10*p2 + -8*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5924593534706504 + 10*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.179056503548018 + 10*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.022233923874080963 + 10*p2 + -9*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1159527196804446 + 10*p2 + -9*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9123846715777595 + 10*p2 + -10*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.053977325167553 + 10*p2 + -10*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.283029972876159 + 10*p2 + -10*p3 + 4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416031255653047 + 10*p2 + -10*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0001048942880448592 + 10*p2 + -10*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.254740927238234 + 10*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279685223897637 + 10*p2 + -10*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1426745831931044 + 10*p2 + -10*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2391673798176384 + 10*p2 + -10*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13063963984102756 + 10*p2 + -10*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125238228865222 + 10*p2 + -11*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125238228865222 + 10*p2 + -11*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7385236896420277 + 10*p2 + -11*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.231353208687243 + 10*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.318654892944583 + 10*p2 + -11*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.318737970616978 + 10*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751478421509906 + 10*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.318257830539754 + 10*p2 + -11*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.732756449156687 + 10*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.745369420062075 + 10*p2 + -11*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0005145230634879284 + 10*p2 + -12*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0005145230634879284 + 10*p2 + -12*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01358267583779547 + 10*p2 + -12*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1272907275672512 + 10*p2 + -12*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1272907275672512 + 10*p2 + -12*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.137974935116259 + 10*p2 + -12*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.136120522786016 + 10*p2 + -12*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5807342315557522 + 10*p2 + -12*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.722326885145545 + 10*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0124964084063044 + 10*p2 + -12*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.420885127415832 + 10*p2 + -12*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.157290868508881 + 10*p2 + -12*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.177007853068661 + 10*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.711062530153173 + 10*p2 + -13*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.167036437986167 + 10*p2 + -13*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9055417506811492 + 10*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3363804738244704 + 10*p2 + -13*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3363804738244704 + 10*p2 + -13*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.008770138951613 + 10*p2 + -14*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.008770138951613 + 10*p2 + -14*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.824889945406833 + 10*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043042296808399 + 10*p2 + -14*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043042296808399 + 10*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6640419383460954 + 10*p2 + -15*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6640419383460954 + 10*p2 + -15*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.035247481836068 + 10*p2 + -15*p3 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8795120762515142 + 10*p2 + -15*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8795120762515142 + 10*p2 + -15*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9713127297149866 + 10*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.738441518627526 + 10*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.241943526020811 + 10*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.616658901141594 + 10*p2 + -16*p3 + p5 + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.917109809960001 + 10*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.917109809960001 + 10*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7714809079420454 + 10*p2 + -18*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7714809079420454 + 10*p2 + -18*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.153715387003246 + 10*p2 + -18*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1299909179546948 + 10*p2 + -18*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054751370192496 + 10*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.506211456524081 + 9*p2 + -1*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4119108019383684 + 9*p2 + -2*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3764762463014369 + 9*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3764762463014369 + 9*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.382248441695215 + 9*p2 + -3*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2406557881054225 + 9*p2 + -3*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.661225176961252 + 9*p2 + -3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5196325233714583 + 9*p2 + -3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.409327050506983 + 9*p2 + -4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.409327050506983 + 9*p2 + -4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2385699451163648 + 9*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2385699451163648 + 9*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7901854524976937 + 9*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6889456838786353 + 9*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6870956348715213 + 9*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6889456838786353 + 9*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6870956348715213 + 9*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5622972884660182 + 9*p2 + -6*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.42070463487622517 + 9*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6307616596015335 + 9*p2 + -6*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1304446865635798 + 9*p2 + -7*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1304446865635798 + 9*p2 + -7*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009078504637173704 + 9*p2 + -7*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009078504637173704 + 9*p2 + -7*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867877230350529 + 9*p2 + -7*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867877230350529 + 9*p2 + -7*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5772254216275428 + 9*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.041451969790615 + 9*p2 + -8*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.599066837949484 + 9*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.4884431660674196 + 9*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1165770239538833 + 9*p2 + -8*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.442477136187662 + 9*p2 + -8*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.378798074801998 + 9*p2 + -8*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.259322459016302 + 9*p2 + -9*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.91267369810189 + 9*p2 + -9*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.91267369810189 + 9*p2 + -9*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000031590459461097363 + 9*p2 + -9*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142441407205038 + 9*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.059922738274571716 + 9*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0001165879940332212 + 9*p2 + -9*p3 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3002907045897072 + 9*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.25707355978352436 + 9*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.275463970568763 + 9*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1447740397503283 + 9*p2 + -9*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143912370698619 + 9*p2 + -9*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2390340366627863 + 9*p2 + -9*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.133369019718563 + 9*p2 + -10*p3 + 3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125527429922277 + 9*p2 + -10*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125527429922277 + 9*p2 + -10*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.060480579496776 + 9*p2 + -10*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.060480579496776 + 9*p2 + -10*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.647580716467936 + 9*p2 + -10*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3229955267942928 + 9*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.731239408970855 + 9*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0112785006576293 + 9*p2 + -11*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0112785006576293 + 9*p2 + -11*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.013861230386413764 + 9*p2 + -11*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1274713691448324 + 9*p2 + -11*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1274713691448324 + 9*p2 + -11*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5797819799158643 + 9*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.721374633505658 + 9*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.997310124051776 + 9*p2 + -11*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41807931061537523 + 9*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4340448929792353 + 9*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.336669500348601 + 9*p2 + -12*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.336669500348601 + 9*p2 + -12*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2735037402959486 + 9*p2 + -13*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6396867328008238 + 9*p2 + -13*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6963570500143039 + 9*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6643309648702254 + 9*p2 + -14*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6643309648702254 + 9*p2 + -14*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.020725644327774 + 9*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9715696506791969 + 9*p2 + -14*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9039716439877382 + 9*p2 + -15*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9039716439877382 + 9*p2 + -15*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.562641790965412 + 9*p2 + -15*p3 + 4*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.562641790965412 + 9*p2 + -15*p3 + 4*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.899061858268953 + 9*p2 + -15*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.615947504938481 + 9*p2 + -15*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.474354851348688 + 9*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.924677906662499 + 9*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.924677906662499 + 9*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9020762419150223 + 9*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6827232700226915 + 9*p2 + -16*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054795177956721 + 9*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.380963704832823 + 8*p2 + -2*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.380963704832823 + 8*p2 + -2*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.272716115696107 + 8*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401933312196759 + 8*p2 + -3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2603406586069656 + 8*p2 + -3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1871841273137558 + 8*p2 + -3*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.3287767809035484 + 8*p2 + -3*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379005445412084 + 8*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.644970061471119 + 8*p2 + -4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0834587032655905 + 8*p2 + -5*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.225051356855383 + 8*p2 + -5*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.931719969626761 + 8*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.971714023401604 + 8*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.002789734276387737 + 8*p2 + -6*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13219053941434972 + 8*p2 + -6*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13219053941434972 + 8*p2 + -6*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009474519844451218 + 8*p2 + -6*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009474519844451218 + 8*p2 + -6*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867987884225104 + 8*p2 + -6*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.867987884225104 + 8*p2 + -6*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5674353462543311 + 8*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.944136940057151 + 8*p2 + -7*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.011611011375084 + 8*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8234957424070728 + 8*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1635085784741603 + 8*p2 + -7*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1171908562518102 + 8*p2 + -7*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1635085784741603 + 8*p2 + -7*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1171908562518102 + 8*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9887416046220356 + 8*p2 + -8*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130334258211828 + 8*p2 + -8*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00030211649352021846 + 8*p2 + -8*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000991696080983178 + 8*p2 + -8*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142509649578791 + 8*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0009922196797587763 + 8*p2 + -8*p3 + 3*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2529387257475744 + 8*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1425846987366266 + 8*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1261162955135835 + 8*p2 + -8*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.218938839254099 + 8*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0011281808284891346 + 8*p2 + -8*p3 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.30253205641511827 + 8*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01253600188537447 + 8*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1493118958055137 + 8*p2 + -8*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2388629943960905 + 8*p2 + -8*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.220407376283361 + 8*p2 + -8*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5176069112382273 + 8*p2 + -8*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125780328130891 + 8*p2 + -9*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.125780328130891 + 8*p2 + -9*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0500424378773485 + 8*p2 + -9*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.191635091467142 + 8*p2 + -9*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.060625790890541 + 8*p2 + -9*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.060625790890541 + 8*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7895077241525106 + 8*p2 + -9*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6052252152185125 + 8*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5953777185129099 + 8*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.807230521003912 + 8*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.162274830720875 + 8*p2 + -9*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0059240050454357 + 8*p2 + -10*p3 + 4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0114589677022856 + 8*p2 + -10*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0114589677022856 + 8*p2 + -10*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1426491013860254 + 8*p2 + -10*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1426491013860254 + 8*p2 + -10*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9462650030174737 + 8*p2 + -10*p3 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5787593915071205 + 8*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.720352045096914 + 8*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9860366933472946 + 8*p2 + -10*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9467159960961897 + 8*p2 + -10*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9467159960961897 + 8*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.851995257756155 + 8*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.732465677303305 + 8*p2 + -11*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5908730237135125 + 8*p2 + -11*p3 + 2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5908730237135125 + 8*p2 + -11*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3339921482794082 + 8*p2 + -11*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1290067182911783 + 8*p2 + -11*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9161533440349579 + 8*p2 + -11*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6168791192016121 + 8*p2 + -11*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6641253565860239 + 8*p2 + -12*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6830264167171296 + 8*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.045117842354871 + 8*p2 + -12*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1104683715719035 + 8*p2 + -12*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.045117842354871 + 8*p2 + -12*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5632744898158935 + 8*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.054821149369309 + 8*p2 + -12*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.054821149369309 + 8*p2 + -12*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.196413802959102 + 8*p2 + -12*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.054821149369309 + 8*p2 + -12*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4197380800347874 + 8*p2 + -12*p3 + -1*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6645840376117644 + 8*p2 + -13*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6645840376117644 + 8*p2 + -13*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.154607033226506 + 8*p2 + -13*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8800540009842585 + 8*p2 + -13*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0216466545740515 + 8*p2 + -13*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.128884221672639 + 8*p2 + -13*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.151343991151927 + 8*p2 + -13*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1420546507411125 + 8*p2 + -13*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0015936686383127 + 8*p2 + -13*p3 + 2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.004624607417326 + 8*p2 + -13*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.089972105999425 + 8*p2 + -13*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.151919077140459 + 8*p2 + -13*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.129717965456316 + 8*p2 + -13*p3 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9684371252394007 + 8*p2 + -13*p3 + -1*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9684371252394007 + 8*p2 + -13*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9042245421963522 + 8*p2 + -14*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9042245421963522 + 8*p2 + -14*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0075532699021725 + 8*p2 + -14*p3 + p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.899169545083801 + 8*p2 + -14*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8996025612712208 + 8*p2 + -14*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4793414315545608 + 8*p2 + -14*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.620934085144354 + 8*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.806157824649003 + 8*p2 + -14*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.911857258572757 + 8*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8073168978052525 + 8*p2 + -14*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.635633771703426 + 8*p2 + -15*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8488716249972272 + 8*p2 + -15*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8488716249972272 + 8*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4609102225564086 + 8*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9132489501250307 + 8*p2 + -17*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9132489501250307 + 8*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5230182790890855 + 8*p2 + -21*p3 + 19*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2565257009313233 + 8*p2 + -47*p3 + 39*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4759558333732254 + 7*p2 + -2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4759558333732254 + 7*p2 + -2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.279269801542396 + 7*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2173193482411735 + 7*p2 + -3*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5113963061329805 + 7*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.393207015002637 + 7*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.873983090205704 + 7*p2 + -4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7323904366159115 + 7*p2 + -4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0836037401264313 + 7*p2 + -4*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2251963937162245 + 7*p2 + -4*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.970288089402724 + 7*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5575524193649133 + 7*p2 + -5*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1413172406338283 + 7*p2 + -5*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13396815725750597 + 7*p2 + -5*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13396815725750597 + 7*p2 + -5*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139483248655833 + 7*p2 + -5*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009890780871051866 + 7*p2 + -5*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009890780871051866 + 7*p2 + -5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868065725909743 + 7*p2 + -5*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868065725909743 + 7*p2 + -5*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.569293449270954 + 7*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.515251248845127 + 7*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8031931998832487 + 7*p2 + -6*p3 + d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.16123199649281 + 7*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.944350393824669 + 7*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8031893601588942 + 7*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144924836197701 + 7*p2 + -6*p3 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0035016540782762235 + 7*p2 + -6*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1450943076680695 + 7*p2 + -6*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.117787933388917 + 7*p2 + -6*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.163653789867927 + 7*p2 + -6*p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.8508810310633645 + 7*p2 + -6*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8863097931204982 + 7*p2 + -6*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8863097931204982 + 7*p2 + -6*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4339710740501923 + 7*p2 + -6*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4339710740501923 + 7*p2 + -6*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9888866414828756 + 7*p2 + -7*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130479295072669 + 7*p2 + -7*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281921514268217 + 7*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0010910053154216553 + 7*p2 + -7*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1426869750307938 + 7*p2 + -7*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0003740240587023848 + 7*p2 + -7*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2824805432276305 + 7*p2 + -7*p3 + d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1402698685497064 + 7*p2 + -7*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2386554747480285 + 7*p2 + -7*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7067852177620448 + 7*p2 + -8*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.116528852866529 + 7*p2 + -8*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6155877585863783 + 7*p2 + -8*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.57052792065089 + 7*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3289706614884953 + 7*p2 + -8*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.604322007330605 + 7*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801345096233262 + 7*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0060690419062763 + 7*p2 + -9*p3 + 4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140243339545076 + 7*p2 + -9*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140243339545076 + 7*p2 + -9*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2811544420619665 + 7*p2 + -9*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139561788472173 + 7*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5877263696050918 + 7*p2 + -9*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5776860140171443 + 7*p2 + -9*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.719278667606937 + 7*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9983428353701815 + 7*p2 + -9*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.778257016721572 + 7*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.937014234383128 + 7*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.227433033152654 + 7*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.935402605850153 + 7*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7352847331111265 + 7*p2 + -10*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7352847331111265 + 7*p2 + -10*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.592489722199635 + 7*p2 + -10*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.592489722199635 + 7*p2 + -10*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5688005597918746 + 7*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.42720790620208127 + 7*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7351197655035467 + 7*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1842898478151735 + 7*p2 + -10*p3 + d + 2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2677623136869047 + 7*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.439193988833419 + 7*p2 + -10*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.111935154773596 + 7*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0658572152955195 + 7*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0087118619512285 + 7*p2 + -11*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0087118619512285 + 7*p2 + -11*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.664800632971937 + 7*p2 + -12*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.664800632971937 + 7*p2 + -12*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0360061764619095 + 7*p2 + -12*p3 + p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0360061764619095 + 7*p2 + -12*p3 + p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4908618263482 + 7*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.022535193197925 + 7*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.050398003937562 + 7*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.030345516105649808 + 7*p2 + -12*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.030345516105649808 + 7*p2 + -12*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5458486074635234 + 7*p2 + -13*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5458486074635234 + 7*p2 + -13*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.487399093112243 + 7*p2 + -13*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.47268963270936 + 7*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.487399093112243 + 7*p2 + -13*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.031429399564405 + 7*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054847014235505 + 7*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.346600440789083 + 7*p2 + -42*p3 + 36*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.709564871620354 + 6*p2 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.652264665079829 + 6*p2 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.652264665079829 + 6*p2 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3861705115970306 + 6*p2 + -1*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.231143394616203 + 6*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.212096275921655 + 6*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7815589796384694 + 6*p2 + -2*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.852591794297853 + 6*p2 + -2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3879375169250165 + 6*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0837143940010074 + 6*p2 + -3*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2253070475908014 + 6*p2 + -3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.05767807032358181 + 6*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2165711255908436 + 6*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0016936675061352976 + 6*p2 + -4*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13577963448815086 + 6*p2 + -4*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13577963448815086 + 6*p2 + -4*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139593902530409 + 6*p2 + -4*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.010342646614393197 + 6*p2 + -4*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.010342646614393197 + 6*p2 + -4*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868113896997098 + 6*p2 + -4*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868113896997098 + 6*p2 + -4*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.788563884086299 + 6*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.646971230496506 + 6*p2 + -5*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2734812340469146 + 6*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.350452522987892 + 6*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5360974614309475 + 6*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8033001885663957 + 6*p2 + -5*p3 + d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.944532082599801 + 6*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.942335934802017 + 6*p2 + -5*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003612307952852664 + 6*p2 + -5*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.145204961542646 + 6*p2 + -5*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.267601436821454 + 6*p2 + -5*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.126008783231661 + 6*p2 + -5*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.118356561659217 + 6*p2 + -5*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.022171615619784767 + 6*p2 + -5*p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.434151715627774 + 6*p2 + -5*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.434151715627774 + 6*p2 + -5*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142170183039278 + 6*p2 + -6*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001146506785635075 + 6*p2 + -6*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142742301968082 + 6*p2 + -6*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282496251190898 + 6*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3228843663175742 + 6*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3228843663175742 + 6*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1383826440295253 + 6*p2 + -6*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2778309861003185 + 6*p2 + -6*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1154926508896197 + 6*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.962380875226563 + 6*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.22772375401613734 + 6*p2 + -6*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3693164076059303 + 6*p2 + -6*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2384139211795526 + 6*p2 + -6*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.585443845005967 + 6*p2 + -6*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.516912610763467 + 6*p2 + -6*p3 + -7*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.516912610763467 + 6*p2 + -6*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7618131801493985 + 6*p2 + -7*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7618131801493985 + 6*p2 + -7*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1188759716446106 + 6*p2 + -7*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1188759716446106 + 6*p2 + -7*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6159212910064344 + 6*p2 + -7*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.473003459905502 + 6*p2 + -7*p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.583000392551492 + 6*p2 + -7*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.467963298091592 + 6*p2 + -7*p3 + d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.600507066651596 + 6*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.88492891411127 + 6*p2 + -7*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7433362605214775 + 6*p2 + -7*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.607391543381037 + 6*p2 + -7*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.39695022264939 + 6*p2 + -7*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.39695022264939 + 6*p2 + -7*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9691621520073124 + 6*p2 + -8*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9525933923522802 + 6*p2 + -8*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.1107548055971055 + 6*p2 + -8*p3 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9525933923522802 + 6*p2 + -8*p3 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280946747880978 + 6*p2 + -8*p3 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280946747880978 + 6*p2 + -8*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281299478922806 + 6*p2 + -8*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397068253330134 + 6*p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5926846754770825 + 6*p2 + -8*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1397679033585164 + 6*p2 + -8*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.28136055694831 + 6*p2 + -8*p3 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6722483019560472 + 6*p2 + -8*p3 + p7 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.904172373848351 + 6*p2 + -8*p3 + 6*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0224655545607706 + 6*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.992621497044168 + 6*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.853315424802363 + 6*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.04613589290756 + 6*p2 + -8*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9045432393177665 + 6*p2 + -8*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.61945313928077 + 6*p2 + -9*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.730640062905719 + 6*p2 + -9*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.730640062905719 + 6*p2 + -9*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.32537373792801 + 6*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2475150981003689 + 6*p2 + -9*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9709983959167026 + 6*p2 + -9*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9709983959167026 + 6*p2 + -9*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.112591049506496 + 6*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3373198100278936 + 6*p2 + -9*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3373198100278936 + 6*p2 + -9*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201223423775455 + 6*p2 + -9*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201223423775455 + 6*p2 + -9*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201223423775455 + 6*p2 + -9*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201223423775455 + 6*p2 + -9*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.115050925052572 + 6*p2 + -10*p3 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.115197707242666 + 6*p2 + -10*p3 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.446205683068698 + 6*p2 + -10*p3 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.446205683068698 + 6*p2 + -10*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.162443037969185 + 6*p2 + -10*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.162443037969185 + 6*p2 + -10*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6340179203869796 + 6*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3074530122411163 + 6*p2 + -10*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037106265987759 + 6*p2 + -11*p3 + 3*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037106265987759 + 6*p2 + -11*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6649812745495185 + 6*p2 + -11*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6649812745495185 + 6*p2 + -11*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8930980682148884 + 6*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8930980682148884 + 6*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0097225396294762 + 6*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0097225396294762 + 6*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.655310788223335 + 6*p2 + -11*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.257538217420305 + 6*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.655310788223335 + 6*p2 + -11*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.15054342562067 + 6*p2 + -11*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.046214432723899 + 6*p2 + -12*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.046214432723899 + 6*p2 + -12*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.485879958531307 + 6*p2 + -12*p3 + p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.485879958531307 + 6*p2 + -12*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6920853566700479 + 6*p2 + -12*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7307375928176395 + 6*p2 + -12*p3 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6920853566700479 + 6*p2 + -12*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.872330246407432 + 6*p2 + -12*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9009295351015122 + 6*p2 + -12*p3 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9009295351015122 + 6*p2 + -12*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8433466107171137 + 6*p2 + -12*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8107934276406166 + 6*p2 + -12*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8433466107171137 + 6*p2 + -12*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4193621361139077 + 6*p2 + -13*p3 + 4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4193621361139077 + 6*p2 + -13*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.048304281471921 + 6*p2 + -14*p3 + 8*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9423496889098416 + 6*p2 + -14*p3 + 8*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.048304281471921 + 6*p2 + -14*p3 + 8*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8416993604707654 + 6*p2 + -14*p3 + 6*p4 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2606741910270216 + 5*p2 + -1*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2606741910270216 + 5*p2 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.376645236664613 + 5*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.23505258307482 + 5*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5621030248219543 + 5*p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.168657474300469 + 5*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.168657474300469 + 5*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4760617833571383 + 5*p2 + -1*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.682353766823411 + 5*p2 + -1*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.823946420413204 + 5*p2 + -1*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381096698921824 + 5*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0837924102185714 + 5*p2 + -2*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.225385063808365 + 5*p2 + -2*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6158623073760334 + 5*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.298558839867903 + 5*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2418129498978114 + 5*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0017715091907742446 + 5*p2 + -3*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139671744215048 + 5*p2 + -3*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139671744215048 + 5*p2 + -3*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.010848792097471553 + 5*p2 + -3*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.010848792097471553 + 5*p2 + -3*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868136411744448 + 5*p2 + -3*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.868136411744448 + 5*p2 + -3*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.297704867261536 + 5*p2 + -3*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.732420481773994 + 5*p2 + -3*p3 + -13*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.732420481773994 + 5*p2 + -3*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.944684624376426 + 5*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.215897960596666 + 5*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.376101383571375 + 5*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003690149637491611 + 5*p2 + -4*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.145282803227285 + 5*p2 + -4*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1638422854271417 + 5*p2 + -4*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1638422854271417 + 5*p2 + -4*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.171277737106488 + 5*p2 + -4*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1188731791178075 + 5*p2 + -4*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1188731791178075 + 5*p2 + -4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.830242512658531 + 5*p2 + -4*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1491289852999045 + 5*p2 + -4*p3 + -1*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2981333455929 + 5*p2 + -4*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2981333455929 + 5*p2 + -4*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130667965164809 + 5*p2 + -5*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.989075311575017 + 5*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0006110397711232147 + 5*p2 + -5*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0011578514257730382 + 5*p2 + -5*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0010922270458980513 + 5*p2 + -5*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420909450912373 + 5*p2 + -5*p3 + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1465844697834218 + 5*p2 + -5*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1331642840989877 + 5*p2 + -5*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3693942492905693 + 5*p2 + -5*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3693942492905693 + 5*p2 + -5*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.238142347947942 + 5*p2 + -5*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2278015957007763 + 5*p2 + -5*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.585521861223531 + 5*p2 + -5*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6027176921838554 + 5*p2 + -5*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6027176921838554 + 5*p2 + -5*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1337343086326883 + 5*p2 + -6*p3 + p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3031096113595533 + 5*p2 + -6*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7524577257531995 + 5*p2 + -6*p3 + 6*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6113392781211735 + 5*p2 + -6*p3 + 6*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6156790393062577 + 5*p2 + -6*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6030409356596413 + 5*p2 + -6*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.613315514433207 + 5*p2 + -6*p3 + 2*d + -1*l + -4*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.474961719326239 + 5*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6113392781211735 + 5*p2 + -6*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7524577257531995 + 5*p2 + -6*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5045546239634793 + 5*p2 + -6*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6249868972037764 + 5*p2 + -6*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4833942436139834 + 5*p2 + -6*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.957164077594037 + 5*p2 + -6*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.815571424004243 + 5*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.16406461487889615 + 5*p2 + -6*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1642730071915843 + 5*p2 + -6*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9606023592238317 + 5*p2 + -7*p3 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282375823472511 + 5*p2 + -7*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281091784741818 + 5*p2 + -7*p3 + 2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.693578519838395 + 5*p2 + -7*p3 + p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.408787203172708 + 5*p2 + -7*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.046246546782136 + 5*p2 + -7*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9046538931923428 + 5*p2 + -7*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9032433350875144 + 5*p2 + -7*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9032433350875144 + 5*p2 + -7*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.47217195105658516 + 5*p2 + -7*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5339358371590857 + 5*p2 + -8*p3 + 4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.625139771049618 + 5*p2 + -8*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.481718403961169 + 5*p2 + -8*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.750862320283952 + 5*p2 + -8*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.753704065372049 + 5*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2011965032133922 + 5*p2 + -8*p3 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.404792676611985 + 5*p2 + -8*p3 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.404792676611985 + 5*p2 + -8*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1677807784205594 + 5*p2 + -8*p3 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.113263175801438 + 5*p2 + -8*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201301265460095 + 5*p2 + -8*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201301265460095 + 5*p2 + -8*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.449842766198612 + 5*p2 + -9*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.077790755018055 + 5*p2 + -9*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7621840626154474 + 5*p2 + -9*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0454656864747935 + 5*p2 + -9*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0454656864747935 + 5*p2 + -9*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9021865212287984 + 5*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9470439264660055 + 5*p2 + -9*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1492869206005767 + 5*p2 + -9*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.100389627238728 + 5*p2 + -9*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.290879574190369 + 5*p2 + -9*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.923011474791012 + 5*p2 + -9*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.923011474791012 + 5*p2 + -9*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.00119747889811 + 5*p2 + -10*p3 + 7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.00119747889811 + 5*p2 + -10*p3 + 7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037251477381524 + 5*p2 + -10*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037251477381524 + 5*p2 + -10*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8714219600680615 + 5*p2 + -10*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.013014613657854 + 5*p2 + -10*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.642388885542028 + 5*p2 + -10*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8933148381079861 + 5*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.150242862926844 + 5*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.87652236973443 + 5*p2 + -10*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.734929716144638 + 5*p2 + -10*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.223562565508482 + 5*p2 + -11*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.223562565508482 + 5*p2 + -11*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043088548033577 + 5*p2 + -11*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043088548033577 + 5*p2 + -11*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7960858870999106 + 5*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7960858870999106 + 5*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.994446762375905 + 5*p2 + -12*p3 + 4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.994446762375905 + 5*p2 + -12*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.921446761621648 + 5*p2 + -13*p3 + 6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054856962612241 + 5*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054856962612241 + 5*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7637316715581406 + 4*p2 + 22*p3 + -32*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.240244239467802 + 4*p2 + 2*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381836893057595 + 4*p2 + 2*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.552028835341469 + 4*p2 + 2*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.552028835341469 + 4*p2 + 2*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377152603878168 + 4*p2 + 2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377152603878168 + 4*p2 + 2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.794157647342307 + 4*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.794157647342307 + 4*p2 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.260722362114377 + 4*p2 + p3 + -1*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7857648570732922 + 4*p2 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9273575106630854 + 4*p2 + p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.221357708061071 + 4*p2 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.378058429759952 + 4*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.236422666537636 + 4*p2 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.236422666537636 + 4*p2 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6824019379107664 + 4*p2 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6824019379107664 + 4*p2 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0838405813059264 + 4*p2 + -1*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.22543323489572 + 4*p2 + -1*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1258003824206564 + 4*p2 + -1*p3 + -5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.05101405417361706 + 4*p2 + -1*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.05101405417361706 + 4*p2 + -1*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0092821930591982 + 4*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.069708152248704 + 4*p2 + -2*p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.069708152248704 + 4*p2 + -2*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005426577710300769 + 4*p2 + -2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018196802781292882 + 4*p2 + -2*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.310765149057576 + 4*p2 + -2*p3 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139719915302403 + 4*p2 + -2*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139719915302403 + 4*p2 + -2*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.011429114073759666 + 4*p2 + -2*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.011429114073759666 + 4*p2 + -2*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.701624138624239 + 4*p2 + -2*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.27934239024264523 + 4*p2 + -3*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6652978772758302 + 4*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4901364590127542 + 4*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8032422436352296 + 4*p2 + -3*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8032603950594506 + 4*p2 + -3*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5172801686056203 + 4*p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8031645764835162 + 4*p2 + -3*p3 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.40269322005476 + 4*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0037383207248466543 + 4*p2 + -3*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14533097431464 + 4*p2 + -3*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.171376522742151 + 4*p2 + -3*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1192946761321636 + 4*p2 + -3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1192946761321636 + 4*p2 + -3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0907340997542123 + 4*p2 + -3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.367364588906792 + 4*p2 + -3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.29818134214733 + 4*p2 + -3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3161610259696745 + 4*p2 + -3*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3161610259696745 + 4*p2 + -3*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5313942887023315 + 4*p2 + -3*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1073775679995466 + 4*p2 + -4*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0011266100321623395 + 4*p2 + -4*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.230770451748318 + 4*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0891777981585253 + 4*p2 + -4*p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1423764809568637 + 4*p2 + -4*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0004792674125976428 + 4*p2 + -4*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1364208939502833 + 4*p2 + -4*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.4579102016001055 + 4*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.243897771184269 + 4*p2 + -4*p3 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.387322969498756 + 4*p2 + -4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24573031590896283 + 4*p2 + -4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8994768975650773 + 4*p2 + -4*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3694424203779247 + 4*p2 + -4*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.23784721277143 + 4*p2 + -4*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.585569857777961 + 4*p2 + -4*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.734298971149601 + 4*p2 + -5*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5927063175598075 + 4*p2 + -5*p3 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.19432045505426 + 4*p2 + -5*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.26072431596982 + 4*p2 + -5*p3 + p5 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1191316623800276 + 4*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2830278529861068 + 4*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.420377568672718 + 4*p2 + -5*p3 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.561970222262511 + 4*p2 + -5*p3 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6169915269037571 + 4*p2 + -5*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3353660714665783 + 4*p2 + -5*p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.477036043142235 + 4*p2 + -5*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.80824420823347 + 4*p2 + -5*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.488224476312144 + 4*p2 + -5*p3 + d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.393207530103097 + 4*p2 + -5*p3 + d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.859317603601655 + 4*p2 + -5*p3 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.882767149299751 + 4*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.679030502391322 + 4*p2 + -5*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3355510763672895 + 4*p2 + -5*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.956129795479304 + 4*p2 + -5*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8145371418895113 + 4*p2 + -5*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.724299988363241 + 4*p2 + -5*p3 + -3*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.837453148933588 + 4*p2 + -5*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.724299988363241 + 4*p2 + -5*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.280754055033241 + 4*p2 + -6*p3 + 3*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143302203592121 + 4*p2 + -6*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143302203592121 + 4*p2 + -6*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.28261912237024 + 4*p2 + -6*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.28261912237024 + 4*p2 + -6*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282619296903165 + 4*p2 + -6*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.925082316446819 + 4*p2 + -6*p3 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.882676375182013 + 4*p2 + -6*p3 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.882676375182013 + 4*p2 + -6*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.076169710205436 + 4*p2 + -6*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41966948009686733 + 4*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9047319094099069 + 4*p2 + -6*p3 + -2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9047319094099069 + 4*p2 + -6*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.161382950476473 + 4*p2 + -6*p3 + -1*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.157221561940943 + 4*p2 + -7*p3 + 5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7502826794427313 + 4*p2 + -7*p3 + 6*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7502826794427313 + 4*p2 + -7*p3 + 6*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2629804606022905 + 4*p2 + -7*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3973702894070783 + 4*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0773980304414068 + 4*p2 + -7*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2189906840311995 + 4*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.58235497829242 + 4*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1139492647303975 + 4*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.19598284717351805 + 4*p2 + -7*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201349436547449 + 4*p2 + -7*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8012211523614203 + 4*p2 + -7*p3 + -3*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201349436547449 + 4*p2 + -7*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.967158190455123 + 4*p2 + -8*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.675154964794002 + 4*p2 + -8*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.675154964794002 + 4*p2 + -8*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6936464216446145 + 4*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.336508921559101 + 4*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.055568499355013 + 4*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197066730632273 + 4*p2 + -8*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197066730632273 + 4*p2 + -8*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5182381883303573 + 4*p2 + -8*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.65983084192015 + 4*p2 + -8*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.290491063898876 + 4*p2 + -8*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6864718541968585 + 4*p2 + -9*p3 + 5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037361956723175 + 4*p2 + -9*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037361956723175 + 4*p2 + -9*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.586354051207516 + 4*p2 + -9*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.586354051207516 + 4*p2 + -9*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9609220950444801 + 4*p2 + -9*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5617818672429544 + 4*p2 + -9*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8807071031903545 + 4*p2 + -9*p3 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6352456104777815 + 4*p2 + -9*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6352456104777815 + 4*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.493652956887989 + 4*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042777879426722 + 4*p2 + -10*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9011852258369293 + 4*p2 + -10*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9016765360213657 + 4*p2 + -10*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043269189611159 + 4*p2 + -10*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9016765360213657 + 4*p2 + -10*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.043269189611159 + 4*p2 + -10*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.611234068760544 + 4*p2 + -10*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.611234068760544 + 4*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1686789248536353 + 4*p2 + -10*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1686789248536353 + 4*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.795711513975358 + 4*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.713725528030917 + 4*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.795711513975358 + 4*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7891651330169775 + 4*p2 + -10*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.446234297970113 + 4*p2 + -16*p3 + 15*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.446234297970113 + 4*p2 + -16*p3 + 15*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7544625514716992 + 3*p2 + 27*p3 + -37*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.679383241931467 + 3*p2 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377200600432597 + 3*p2 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3781671637723525 + 3*p2 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377200600432597 + 3*p2 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3781671637723525 + 3*p2 + 3*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.387275330508492 + 3*p2 + 2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.387275330508492 + 3*p2 + 2*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.249496944960958 + 3*p2 + 2*p3 + -9*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.147238636183703 + 3*p2 + p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0056459825939097 + 3*p2 + p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.344313361337268 + 3*p2 + p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5801706732386 + 3*p2 + p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.097110685671323 + 3*p2 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1737697097141693 + 3*p2 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.34691752462258607 + 3*p2 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.102548931592662 + 3*p2 + -5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.47720358625211 + 3*p2 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5571077264681383 + 3*p2 + -1*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1872468016305358 + 3*p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.22775447181097241 + 3*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018421950254800148 + 3*p2 + -1*p3 + -2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018421950254800148 + 3*p2 + -1*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0054258795785999715 + 3*p2 + -1*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142020084723606 + 3*p2 + -1*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143434848615273 + 3*p2 + -1*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397426045826795 + 3*p2 + -1*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397426045826795 + 3*p2 + -1*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397426045826795 + 3*p2 + -1*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397426045826795 + 3*p2 + -1*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.41710493578557 + 3*p2 + -1*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4018830127210349 + 3*p2 + -1*p3 + -6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.944931588465583 + 3*p2 + -2*p3 + d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3777969454447379 + 3*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.50541300238456 + 3*p2 + -2*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003760835472197381 + 3*p2 + -2*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1453534890619905 + 3*p2 + -2*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.134830549935866 + 3*p2 + -2*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2287938408754853 + 3*p2 + -2*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.04033420994773855 + 3*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.385133994547538 + 3*p2 + -2*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.385133994547538 + 3*p2 + -2*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.090756614501563 + 3*p2 + -2*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.198945560575412 + 3*p2 + -2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.783483371173402 + 3*p2 + -2*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.298204031427606 + 3*p2 + -2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.298204031427606 + 3*p2 + -2*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7079467768708305 + 3*p2 + -3*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6528498314864398 + 3*p2 + -3*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.989145997409722 + 3*p2 + -3*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.989145997409722 + 3*p2 + -3*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5302135819616738 + 3*p2 + -3*p3 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5303755485162591 + 3*p2 + -3*p3 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282979009262 + 3*p2 + -3*p3 + 5*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.280753190866933 + 3*p2 + -3*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0010548769999053729 + 3*p2 + -3*p3 + 3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.151788867079944 + 3*p2 + -3*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005840569808873824 + 3*p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.188581105843685 + 3*p2 + -3*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1345338439630273 + 3*p2 + -3*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.06989136083026252 + 3*p2 + -3*p3 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.762995849243817 + 3*p2 + -3*p3 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6269519464119637 + 3*p2 + -3*p3 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5177990549922384 + 3*p2 + -3*p3 + -1*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5177990549922384 + 3*p2 + -3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3694651096582007 + 3*p2 + -3*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8890450646259072 + 3*p2 + -3*p3 + -1*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.25766784439382845 + 3*p2 + -3*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.941938182763804 + 3*p2 + -3*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5855925470582375 + 3*p2 + -3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5864870028049342 + 3*p2 + -3*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.13427187854062 + 3*p2 + -4*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9026218063442458 + 3*p2 + -4*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.13427187854062 + 3*p2 + -4*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9026218063442458 + 3*p2 + -4*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274945084182146 + 3*p2 + -4*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274945084182146 + 3*p2 + -4*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.056832292266382 + 3*p2 + -4*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0592672011058395 + 3*p2 + -4*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.192366035357877 + 3*p2 + -4*p3 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.192366035357877 + 3*p2 + -4*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1095806971143394 + 3*p2 + -4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1095815697789653 + 3*p2 + -4*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.974860677510023 + 3*p2 + -4*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.974860677510023 + 3*p2 + -4*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.213100214802353 + 3*p2 + -4*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4502967008421055 + 3*p2 + -4*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9390833392080005 + 3*p2 + -4*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4244096283106753 + 3*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.717801769993899 + 3*p2 + -4*p3 + d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5762091164041068 + 3*p2 + -4*p3 + d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.717801769993899 + 3*p2 + -4*p3 + d + -3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5762091164041068 + 3*p2 + -4*p3 + d + -5*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.336647841269243 + 3*p2 + -4*p3 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.722594444119876 + 3*p2 + -4*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.723890351089482 + 3*p2 + -4*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7401536526304657 + 3*p2 + -4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.881746306220259 + 3*p2 + -4*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.27421570258942 + 3*p2 + -4*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1111595134573764 + 3*p2 + -4*p3 + -3*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6657762890204353 + 3*p2 + -5*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6657762890204353 + 3*p2 + -5*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.123554152171656 + 3*p2 + -5*p3 + 2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0606196737398434 + 3*p2 + -5*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.264161218332848 + 3*p2 + -5*p3 + 2*p5 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.264161218332848 + 3*p2 + -5*p3 + 2*p5 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.123633913718472 + 3*p2 + -5*p3 + 2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5648348056688595 + 3*p2 + -5*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4494088518516164 + 3*p2 + -5*p3 + p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4495301522346296 + 3*p2 + -5*p3 + p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.035507029292473 + 3*p2 + -5*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9084550627668944 + 3*p2 + -5*p3 + -3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.783549885214536 + 3*p2 + -5*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5877577855316278 + 3*p2 + -6*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5877577855316278 + 3*p2 + -6*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4577174917557352 + 3*p2 + -6*p3 + 2*p5 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2944778940142567 + 3*p2 + -6*p3 + 2*p6 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2944778940142567 + 3*p2 + -6*p3 + 2*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5236087324733518 + 3*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.008207278766162 + 3*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.478054940864599 + 3*p2 + -6*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1146372735215335 + 3*p2 + -6*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1146372735215335 + 3*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9762239116971736 + 3*p2 + -6*p3 + -1*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.18620446550629463 + 3*p2 + -6*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.18620446550629463 + 3*p2 + -6*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201372125827726 + 3*p2 + -6*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201372125827726 + 3*p2 + -6*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5082013149025963 + 3*p2 + -7*p3 + 7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5082013149025963 + 3*p2 + -7*p3 + 7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6656612803210455 + 3*p2 + -7*p3 + 7*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.477687050953229 + 3*p2 + -7*p3 + 5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.718577751877652 + 3*p2 + -7*p3 + 4*p4 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7072673201930275 + 3*p2 + -7*p3 + 4*p4 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7072673201930275 + 3*p2 + -7*p3 + 4*p4 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.718411596532863 + 3*p2 + -7*p3 + 4*p4 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.43409794249017924 + 3*p2 + -7*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.43409794249017924 + 3*p2 + -7*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8534845217119313 + 3*p2 + -7*p3 + 4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.576065509799934 + 3*p2 + -7*p3 + p6 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.160715362037585 + 3*p2 + -7*p3 + p7 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.658844556359848 + 3*p2 + -7*p3 + -1*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.148307790890208 + 3*p2 + -7*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8459803040600566 + 3*p2 + -8*p3 + 8*p4 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.455689627691109 + 3*p2 + -8*p3 + 5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.360583835724818 + 3*p2 + -8*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.37668798873297 + 3*p2 + -8*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.03743997294074 + 3*p2 + -8*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.03743997294074 + 3*p2 + -8*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.274442412360938 + 3*p2 + -8*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.274442412360938 + 3*p2 + -8*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.101568954712617 + 3*p2 + -8*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8807849448749936 + 3*p2 + -8*p3 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.634223196601964 + 3*p2 + -8*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.634223196601964 + 3*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4926305430121705 + 3*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2181169467127015 + 3*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.132360061874618 + 3*p2 + -9*p3 + 4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0129178969223442 + 3*p2 + -9*p3 + 4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0129178969223442 + 3*p2 + -9*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.872663953360414 + 3*p2 + -9*p3 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.872663953360414 + 3*p2 + -9*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.468554598645535 + 3*p2 + -9*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.610147252235328 + 3*p2 + -9*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7568657208137206 + 3*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054717859870857 + 3*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3621973756216543 + 3*p2 + -15*p3 + 23*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5944249602708793 + 2*p2 + 21*p3 + -24*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.556406461673004 + 2*p2 + 18*p3 + -19*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.80073351586673 + 2*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.661727142152443 + 2*p2 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.378170479897931 + 2*p2 + 4*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.375177746832903 + 2*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.130545758123904 + 2*p2 + 3*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7028758547705027 + 2*p2 + 3*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.387278646634072 + 2*p2 + 3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.387278646634072 + 2*p2 + 3*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3791070235745515 + 2*p2 + 2*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379871128721074 + 2*p2 + 2*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.237514369984758 + 2*p2 + 2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.341946345805714 + 2*p2 + 2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379871128721074 + 2*p2 + 2*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.848214857599702 + 2*p2 + 2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.853650528018746 + 2*p2 + 2*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.853650528018746 + 2*p2 + 2*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.03738637433607 + 2*p2 + 2*p3 + -4*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.617464685663973 + 2*p2 + 2*p3 + -7*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.137150599113909 + 2*p2 + 2*p3 + -10*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.94778047240698 + 2*p2 + p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2141334157262667 + 2*p2 + p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.31934830375808365 + 2*p2 + p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6281616426148378 + 2*p2 + p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1212424550790727 + 2*p2 + p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1212424550790727 + 2*p2 + p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.378390740449532 + 2*p2 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6414546022951186 + 2*p2 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.059546096221991335 + 2*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9225417811943493 + 2*p2 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1605198511680957 + 2*p2 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.059461447753269614 + 2*p2 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0016345008444926894 + 2*p2 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143227154434286 + 2*p2 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0016345008444926894 + 2*p2 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018455111510588041 + 2*p2 + -2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018455111510588041 + 2*p2 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005360778797500583 + 2*p2 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3315949555484274 + 2*p2 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1594084255004257 + 2*p2 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.917500755214131 + 2*p2 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.917500755214131 + 2*p2 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9316368664594168 + 2*p2 + -5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.4636921283461115 + 2*p2 + -1*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.322099474756319 + 2*p2 + -1*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5895743412137366 + 2*p2 + -1*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3476191554802044 + 2*p2 + -1*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.945044860334037 + 2*p2 + -1*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3485871150833604 + 2*p2 + -1*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3496636341659904 + 2*p2 + -1*p3 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.345954285906727 + 2*p2 + -1*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8028937013836064 + 2*p2 + -1*p3 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8016712727755098 + 2*p2 + -1*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.362063525864659 + 2*p2 + -1*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.491766447496142 + 2*p2 + -1*p3 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003764151597776171 + 2*p2 + -1*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1453568051875687 + 2*p2 + -1*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2312189758711316 + 2*p2 + -1*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.119462576806206 + 2*p2 + -1*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2625537360984946 + 2*p2 + -1*p3 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.77158461449288 + 2*p2 + -1*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6299919609030875 + 2*p2 + -1*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.196064405039485 + 2*p2 + -1*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.290446741034192 + 2*p2 + -1*p3 + -3*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.290446741034192 + 2*p2 + -1*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.817246424985698 + 2*p2 + -1*p3 + -4*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12759613469139985 + 2*p2 + -2*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.101345212000829 + 2*p2 + -2*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2830870451426994 + 2*p2 + -2*p3 + 5*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1430290595641845 + 2*p2 + -2*p3 + 2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14726078486857 + 2*p2 + -2*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1469153842096 + 2*p2 + -2*p3 + -4*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1472375719895185 + 2*p2 + -2*p3 + -4*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005382246347300113 + 2*p2 + -2*p3 + -4*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14863907137887 + 2*p2 + -2*p3 + -5*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.719580784100457 + 2*p2 + -2*p3 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.385872600890348 + 2*p2 + -2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.20192255168390513 + 2*p2 + -2*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.20192255168390513 + 2*p2 + -2*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.369468425783779 + 2*p2 + -2*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.059914560722037 + 2*p2 + -2*p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.9575121047452 + 2*p2 + -2*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.585595863183816 + 2*p2 + -2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.902174495453593 + 2*p2 + -2*p3 + -1*p4 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.902174495453593 + 2*p2 + -2*p3 + -1*p4 + d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8267286072822253 + 2*p2 + -2*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6474751070515565 + 2*p2 + -2*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8267286072822253 + 2*p2 + -2*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.134320049627974 + 2*p2 + -3*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.134320049627974 + 2*p2 + -3*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7070478898144701 + 2*p2 + -3*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7070478898144701 + 2*p2 + -3*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7011809655338911 + 2*p2 + -3*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0939788498649112 + 2*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.25956454468187 + 2*p2 + -3*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6329616386253558 + 2*p2 + -3*p3 + 2*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.137817157351879 + 2*p2 + -3*p3 + p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.278645007663449 + 2*p2 + -3*p3 + p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.137817157351879 + 2*p2 + -3*p3 + p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.803302308456448 + 2*p2 + -3*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.714947284002262 + 2*p2 + -3*p3 + 5*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.719534532875279 + 2*p2 + -3*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.776526514269903 + 2*p2 + -3*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.479277220434721 + 2*p2 + -3*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2156603957905194 + 2*p2 + -3*p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.349572004380261 + 2*p2 + -3*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5824516355397147 + 2*p2 + -3*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.721415823276004 + 2*p2 + -3*p3 + d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.669296452087099 + 2*p2 + -3*p3 + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3801700696286745 + 2*p2 + -3*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.673911102629372 + 2*p2 + -3*p3 + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9630365614332712 + 2*p2 + -3*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.491164657970054 + 2*p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6024956948013183 + 2*p2 + -3*p3 + -2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.47905329469169 + 2*p2 + -3*p3 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743199801268921 + 2*p2 + -3*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.21683487033577 + 2*p2 + -3*p3 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.006004324184294 + 2*p2 + -3*p3 + -1*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0118666766155513 + 2*p2 + -4*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0118666766155513 + 2*p2 + -4*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.132108359901531 + 2*p2 + -4*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.225879515585453 + 2*p2 + -4*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14635042113073 + 2*p2 + -4*p3 + 2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1491623210886175 + 2*p2 + -4*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.340377103278613 + 2*p2 + -4*p3 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.896113341522217 + 2*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0107364183885927 + 2*p2 + -4*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206249797488274 + 2*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.141634549990157 + 2*p2 + -4*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5069080259268686 + 2*p2 + -5*p3 + 6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5165757452211989 + 2*p2 + -5*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5165757452211989 + 2*p2 + -5*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.005825078870115 + 2*p2 + -5*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1203617619385167 + 2*p2 + -5*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.024571128268693 + 2*p2 + -5*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3363984422174497 + 2*p2 + -5*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.115296484380012 + 2*p2 + -5*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0597827883635116 + 2*p2 + -5*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201375441953304 + 2*p2 + -5*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0597827883635116 + 2*p2 + -5*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.201375441953304 + 2*p2 + -5*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6458917528524637 + 2*p2 + -6*p3 + 5*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07375674152465438 + 2*p2 + -6*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8563213883764393 + 2*p2 + -6*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9059705695800474 + 2*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.045415071926486 + 2*p2 + -6*p3 + -3*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.045415071926486 + 2*p2 + -6*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1281926967280482 + 2*p2 + -6*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.289039648092918 + 2*p2 + -6*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1474469945031243 + 2*p2 + -6*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1474469945031243 + 2*p2 + -6*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1504447635280332 + 2*p2 + -7*p3 + 6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037488144028094 + 2*p2 + -7*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037488144028094 + 2*p2 + -7*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.57243155126604 + 2*p2 + -7*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.035343998543703 + 2*p2 + -7*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.491557165522194 + 2*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0046989499451443335 + 2*p2 + -8*p3 + 6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.624575016496939 + 2*p2 + -8*p3 + 5*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.872712124447769 + 2*p2 + -8*p3 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.872712124447769 + 2*p2 + -8*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.493379123226668 + 2*p2 + -8*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7217259597857675 + 2*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7217259597857675 + 2*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.957915799401187 + 2*p2 + -9*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8115205063120473 + 2*p2 + -9*p3 + 8*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5211261761453152 + 2*p2 + -10*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054904261034971 + 2*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054904261034971 + 2*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.262058262618804 + 2*p2 + -13*p3 + 15*p4 + -2*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.262058262618804 + 2*p2 + -13*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.698703828224852 + p2 + 43*p3 + -59*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.698703828224852 + p2 + 43*p3 + -59*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17989998718224073 + p2 + 29*p3 + -36*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.329779298025894 + p2 + 9*p3 + -20*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6531189782537306 + p2 + 5*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6531189782537306 + p2 + 5*p3 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6754221747024823 + p2 + 5*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6754221747024823 + p2 + 5*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381115548477746 + p2 + 5*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.239522894887953 + p2 + 5*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.23932741801173 + p2 + 5*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.23932741801173 + p2 + 5*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.602061797450956 + p2 + 4*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0462025389900358 + p2 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.272346280427609 + p2 + 4*p3 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.130753626837816 + p2 + 4*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.141030150968509 + p2 + 3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9994374973787157 + p2 + 3*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3022063949733296 + p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6287234641010544 + p2 + 3*p3 + -5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8870178731980325 + p2 + 3*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2768808118588995 + p2 + 3*p3 + -8*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2234138634562126 + p2 + 2*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2234138634562126 + p2 + 2*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3667141131928906 + p2 + 2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2147523094790236 + p2 + 2*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9723384597163837 + p2 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.573835119555544 + p2 + 2*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.211004406439924 + p2 + 2*p3 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7708791609075405 + p2 + 2*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7708791609075405 + p2 + 2*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.778408677335253 + p2 + 2*p3 + -6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2368014029853183 + p2 + p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.378394056575112 + p2 + p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5285169388974937 + p2 + p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.46677329861431627 + p2 + p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17397040558151516 + p2 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6806545057653528 + p2 + p3 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005954016210253456 + p2 + p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0025776767722704252 + p2 + p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.15969710295870554 + p2 + p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.485228261086929 + p2 + p3 + -4*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.20747115340387 + p2 + p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.20747115340387 + p2 + p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0009026842891314673 + p2 + p3 + -2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.049200865606986 + p2 + p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0009026842891314673 + p2 + p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0009026842891314673 + p2 + p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.234220427084102 + p2 + p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6473756232841925 + p2 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6496930629666742 + p2 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.545415948840271 + p2 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.403823295250477 + p2 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8035152131302417 + p2 + 3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.945058822968054 + p2 + d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.603177445902097 + p2 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.945191467991204 + p2 + -1*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7310657232153313 + p2 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4013140353848845 + p2 + -2*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.470246537819051 + p2 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.470246537819051 + p2 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.474383317212128 + p2 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8035941020124318 + p2 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8035764741869866 + p2 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.343437521125351 + p2 + -4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1187651432371086 + p2 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2436120267924506 + p2 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.385204680382245 + p2 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.5166059819088415 + p2 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.083061291794911 + p2 + -7*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.195277087013912 + p2 + -1*p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.299423808048558 + p2 + -1*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.159147366735911 + p2 + -1*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.950716639807611 + p2 + -1*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1419349126561094 + p2 + -1*p3 + 5*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.278213562272356 + p2 + -1*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00023230332344044527 + p2 + -1*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.850771590420948 + p2 + -1*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.850771590420948 + p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1401946448589455 + p2 + -1*p3 + -2*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282977438465674 + p2 + -1*p3 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141042002210789 + p2 + -1*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14160731435551 + p2 + -1*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.540627088943698 + p2 + -1*p3 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.384646158024972 + p2 + -1*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.384646158024972 + p2 + -1*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.10705326032957618 + p2 + -1*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.106043953419781 + p2 + -1*p3 + -2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7026657256268793 + p2 + -2*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.899865441849837 + p2 + -2*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8522683847874584 + p2 + -2*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8522683847874584 + p2 + -2*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.529500823488426 + p2 + -2*p3 + p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.871586736146083 + p2 + -2*p3 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.113713645281378 + p2 + -2*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1192803644322975 + p2 + -2*p3 + p5 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.028377831906951402 + p2 + -2*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0006773622826989992 + p2 + -2*p3 + p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.279603367955719 + p2 + -2*p3 + p6 + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8322421278842254 + p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.684411343976904 + p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.99160431065779 + p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.479379496728887 + p2 + -2*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9010082579490937 + p2 + -2*p3 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.924744586738242 + p2 + -2*p3 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.924744586738242 + p2 + -2*p3 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3373163023727568 + p2 + -2*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.47962663535097 + p2 + -2*p3 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.65128796183378 + p2 + -2*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7382484512189886 + p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.879841104808781 + p2 + -2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.928618494051018 + p2 + -2*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.20504110599136863 + p2 + -2*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.127864242759456 + p2 + -3*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1397584870788724 + p2 + -3*p3 + 2*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1460509226310878 + p2 + -3*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.149184835835969 + p2 + -3*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743310455143497 + p2 + -3*p3 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5162226736118372 + p2 + -3*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.65781532720163 + p2 + -3*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.050831718256683 + p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.050831718256683 + p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.080302824407085 + p2 + -3*p3 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8851381620919514 + p2 + -3*p3 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.40158315665722566 + p2 + -3*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9532314677301759 + p2 + -3*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5165984345014748 + p2 + -4*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5165984345014748 + p2 + -4*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.043864363882721 + p2 + -4*p3 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.755350966552547 + p2 + -4*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.255744150990597 + p2 + -5*p3 + 8*p4 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.548759127022465 + p2 + -5*p3 + 6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2741788421489366 + p2 + -5*p3 + 5*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1701917932458974 + p2 + -5*p3 + 3*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1701917932458974 + p2 + -5*p3 + 3*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0078030435147656 + p2 + -5*p3 + 2*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8616631430850936 + p2 + -5*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.901926292637326 + p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.903716825916947 + p2 + -5*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1462203771048227 + p2 + -5*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.746961334872819 + p2 + -6*p3 + 8*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6564396501868917 + p2 + -6*p3 + 6*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037510658775446 + p2 + -6*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.037510658775446 + p2 + -6*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0956048155927025 + p2 + -6*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0956048155927025 + p2 + -6*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.022448284299492 + p2 + -6*p3 + p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.022448284299492 + p2 + -6*p3 + p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8808556307096994 + p2 + -6*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9196333560305093 + p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4904705235299027 + p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.677370877303917 + p2 + -7*p3 + 11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042926406946067 + p2 + -7*p3 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042926406946067 + p2 + -7*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6435276788856876 + p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8167395898692362 + p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.685740761268148 + p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.182973737517829 + p2 + -8*p3 + 13*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4871276944135583 + p2 + -8*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.628720348003351 + p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054982277252535 + p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.054982277252535 + p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1064910982758254 + p2 + -36*p3 + 43*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.884457151614456 + p2 + -42*p3 + 51*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1223467333951267 + 45*p3 + -63*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.775336723318818 + 43*p3 + -52*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.450723118771634 + 43*p3 + -55*p4 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4433408996344745 + 42*p3 + -54*p4 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.4433408996344745 + 42*p3 + -54*p4 + -1*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.204681410629166 + 41*p3 + -56*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.154149450388217 + 40*p3 + -50*p4 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7184751180193185 + 40*p3 + -53*p4 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.188592991079232 + 38*p3 + -47*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.076904651356818 + 37*p3 + -48*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.601979958505671 + 36*p3 + -44*p4 + -2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.865807427393954 + 36*p3 + -46*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.160338038849938 + 35*p3 + -41*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.672168906471715 + 34*p3 + -41*p4 + 2*p5 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.672168906471715 + 34*p3 + -41*p4 + 2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.21935822487672 + 34*p3 + -42*p4 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.73110868380988 + 34*p3 + -43*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.11730724421796808 + 33*p3 + -37*p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.926900949527398 + 33*p3 + -41*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.157848501204894 + 32*p3 + -39*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.39614087098365697 + 32*p3 + -39*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6228601965135883 + 31*p3 + -37*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.881204389985831 + 29*p3 + -29*p4 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9202906470268104 + 29*p3 + -29*p4 + -4*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.881009087642533 + 26*p3 + -27*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8057110118621758 + 26*p3 + -27*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.68122141420135 + 26*p3 + -27*p4 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.217516770474524 + 26*p3 + -27*p4 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.68122141420135 + 26*p3 + -27*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.695166777956026 + 23*p3 + -21*p4 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.532097664889202 + 22*p3 + -19*p4 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.718688397253913 + 21*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.233576226057191 + 21*p3 + -25*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7385261500996143 + 21*p3 + -26*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.239413305207561 + 20*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.742517019967224 + 20*p3 + -25*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.209806420939671 + 19*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7460097728663153 + 19*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.244652251524956 + 19*p3 + -25*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2468761500578465 + 18*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.711015763827537 + 17*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2504418577196716 + 16*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6051690326132313 + 15*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.676716187304861 + 14*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.049156691780278 + 14*p3 + -16*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6213956907382396 + 14*p3 + -17*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5782129289183213 + 14*p3 + -17*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6213956907382396 + 14*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.097168771142148 + 14*p3 + -18*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.722013922115713 + 14*p3 + -23*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.722013922115713 + 14*p3 + -23*p4 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.516810159936375 + 13*p3 + -14*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1207439805463866 + 13*p3 + -17*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6200262969088084 + 13*p3 + -18*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.269945580041492 + 12*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4673958660568192 + 12*p3 + -15*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.771016684354282 + 12*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1225030978994717 + 12*p3 + -16*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2647420469112785 + 12*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5570459163176678 + 12*p3 + -17*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13559288425818747 + 12*p3 + -18*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.934207229845462 + 12*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.750376403623563 + 12*p3 + -19*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.41181065403257 + 12*p3 + -20*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9461119376420735 + 11*p3 + -11*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.525103815503877 + 11*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1316781277425974 + 11*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1316643396415067 + 11*p3 + -13*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.77014454332706 + 11*p3 + -14*p4 + 4*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.104573871089143 + 11*p3 + -14*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5075005652079205 + 11*p3 + -14*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6213358174465797 + 11*p3 + -16*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1448804963363837 + 11*p3 + -21*p4 + 2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1448516984037256 + 11*p3 + -21*p4 + 2*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.14009356480030527 + 11*p3 + -21*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1152285825737924 + 10*p3 + -10*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1152285825737924 + 10*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6353707250902003 + 10*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.065502049291055 + 10*p3 + -11*p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.657705712026288 + 10*p3 + -12*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.771307805273515 + 10*p3 + -13*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6298450041800694 + 10*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0930012909508693 + 10*p3 + -13*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.124677080015756 + 10*p3 + -14*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1250092161724106 + 10*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5577109037593106 + 10*p3 + -14*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0356080498628963 + 10*p3 + -15*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.001928639813353 + 10*p3 + -15*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.257207277499177 + 10*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2063695015800118 + 10*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3769612817988828 + 10*p3 + -16*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.647352410405141 + 10*p3 + -17*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2306409143245536 + 10*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0408009534813045 + 10*p3 + -19*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.031092725551695 + 10*p3 + -21*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0167386141845185 + 10*p3 + -21*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0422936995972694 + 9*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.273856871393527 + 9*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.565031512773876 + 9*p3 + -9*p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.257253022122213 + 9*p3 + -9*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6394064499195866 + 9*p3 + -10*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.265117990832158 + 9*p3 + -10*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8449277214831294 + 9*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.75358224139026 + 9*p3 + -10*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1359287026029046 + 9*p3 + -11*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.047608601730392 + 9*p3 + -11*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.775813381235854 + 9*p3 + -12*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.634220727646061 + 9*p3 + -12*p4 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.772178200971484 + 9*p3 + -12*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6304457465086057 + 9*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4266647682371771 + 9*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1304935642809522 + 9*p3 + -13*p4 + 4*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1278130876157395 + 9*p3 + -13*p4 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1278130876157395 + 9*p3 + -13*p4 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1304935642809522 + 9*p3 + -13*p4 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.15872495456534472 + 9*p3 + -15*p4 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.026948432744518 + 9*p3 + -17*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2346282935336603 + 9*p3 + -17*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2291352187788585 + 9*p3 + -17*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.040788021048207 + 9*p3 + -19*p4 + 3*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5335386002213317 + 8*p3 + -7*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7996105540293633 + 8*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.762230356332209 + 8*p3 + -7*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1426628894871156 + 8*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.961861805808704 + 8*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142543159900429 + 8*p3 + -8*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7835436190258624 + 8*p3 + -9*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6168458004095325 + 8*p3 + -9*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.135203692831626 + 8*p3 + -10*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.274313266494607 + 8*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7726714310180975 + 8*p3 + -11*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.041705025535522 + 8*p3 + -11*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6684658159028085 + 8*p3 + -13*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7281218678676756 + 8*p3 + -13*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8624279208683676 + 8*p3 + -14*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3308006307108948 + 8*p3 + -15*p4 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3308006307108948 + 8*p3 + -15*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.733835743769488 + 8*p3 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8755783211420285 + 8*p3 + -15*p4 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8785996606101545 + 8*p3 + -15*p4 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.8785996606101545 + 8*p3 + -15*p4 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.878404532799783 + 8*p3 + -15*p4 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.737468821140439 + 8*p3 + -15*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 3*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.08945164881648 + 8*p3 + -17*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.08945164881648 + 8*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.399213740156302 + 7*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5207165388715554 + 7*p3 + -6*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6216752839860926 + 7*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.93146324019211 + 7*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.784629213820603 + 7*p3 + -8*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6084861968912554 + 7*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.124199425891068 + 7*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.766617756507555 + 7*p3 + -8*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1429061883848437 + 7*p3 + -9*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1429061883848437 + 7*p3 + -9*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5505129828928443 + 7*p3 + -9*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8704182382118733 + 7*p3 + -9*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6389898398271354 + 7*p3 + -10*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.780582493416929 + 7*p3 + -10*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.644702144932621 + 7*p3 + -11*p4 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2243113117575883 + 7*p3 + -11*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8414284938691727 + 7*p3 + -13*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.235595039904657 + 7*p3 + -13*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0731921275116342 + 7*p3 + -13*p4 + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0731921275116342 + 7*p3 + -13*p4 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.243626521523559 + 7*p3 + -13*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2438939059649643 + 7*p3 + -13*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.29759172743442314 + 7*p3 + -14*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.395974051500433 + 7*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6256372238797026 + 6*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6256372238797026 + 6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381848237697733 + 6*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.381848237697733 + 6*p3 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.250323200825487 + 6*p3 + -6*p5 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17543700575196602 + 6*p3 + -7*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008850739169788444 + 6*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6447736864353195 + 6*p3 + -7*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6447736864353195 + 6*p3 + -7*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9586119772465407 + 6*p3 + -8*p4 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1465966870881865 + 6*p3 + -8*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.228301159922596 + 6*p3 + -8*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.315208225236061 + 6*p3 + -8*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.259107949552916 + 6*p3 + -8*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6018607440194428 + 6*p3 + -9*p4 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743453397609236 + 6*p3 + -9*p4 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7026646784293282 + 6*p3 + -9*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8824505210784883 + 6*p3 + -10*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1460821555263814 + 6*p3 + -10*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.259270614239202 + 6*p3 + -10*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.204842521515758 + 6*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.245596657681527 + 6*p3 + -10*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.739731299948116 + 6*p3 + -11*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.739000356057381 + 6*p3 + -11*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.160055287012797 + 6*p3 + -11*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7498805640813884 + 6*p3 + -11*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7498828330094165 + 6*p3 + -11*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7495632632233757 + 6*p3 + -11*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.805274015410744 + 6*p3 + -11*p4 + -2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6281682748659954 + 6*p3 + -11*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.805274015410744 + 6*p3 + -11*p4 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.010988277897972 + 6*p3 + -12*p4 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.010988277897972 + 6*p3 + -12*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1818197003214594 + 6*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.795162441890997 + 6*p3 + -13*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.795162441890997 + 6*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4134393697955816 + 5*p3 + p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6521564121746224 + 5*p3 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.757946943787014 + 5*p3 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.276113722656014 + 5*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.402326360344309 + 5*p3 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.402326360344309 + 5*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9744281679247466 + 5*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.216365891867442 + 5*p3 + -3*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.51796978218635 + 5*p3 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1382874980903415 + 5*p3 + -3*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2798801516801346 + 5*p3 + -3*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.015378453603489 + 5*p3 + -4*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1723341849027205 + 5*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.317027564946657 + 5*p3 + -6*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.317027739479582 + 5*p3 + -6*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.145036886335679 + 5*p3 + -6*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9267407028071135 + 5*p3 + -7*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0683333563969075 + 5*p3 + -7*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5371842439628975 + 5*p3 + -8*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.513653757479093 + 5*p3 + -3*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.454496852683663 + 5*p3 + -3*p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.460717912767788 + 5*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6030362317689777 + 5*p3 + -4*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0012810801692804 + 5*p3 + -5*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1079866879084928 + 5*p3 + -5*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.714882889851181 + 5*p3 + -5*p4 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.09402315573296212 + 5*p3 + -6*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.648597528293514 + 5*p3 + -6*p4 + 6*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6442799327899307 + 5*p3 + -6*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6538511438749426 + 5*p3 + -6*p4 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6538511438749426 + 5*p3 + -6*p4 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.761365894753696 + 5*p3 + -6*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.259564012584779 + 5*p3 + -6*p4 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.692643197892252 + 5*p3 + -6*p4 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.009145001681674689 + 5*p3 + -7*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.211286983744139 + 5*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5957096971332727 + 5*p3 + -7*p4 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.10685900518382921 + 5*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.676873100902932 + 5*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.209837121737874 + 5*p3 + -8*p4 + 3*p5 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07973885753586493 + 5*p3 + -8*p4 + 3*p5 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0867353589083346 + 5*p3 + -8*p4 + 3*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0867353589083346 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.08178927034110788 + 5*p3 + -8*p4 + 3*p5 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.08178927034110788 + 5*p3 + -8*p4 + 3*p5 + -3*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.220677187189085 + 5*p3 + -8*p4 + 3*p5 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.01748578113898 + 5*p3 + -8*p4 + p5 + 5*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.01748578113898 + 5*p3 + -8*p4 + p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.386615430016631 + 5*p3 + -8*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7803264111240779 + 5*p3 + -8*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.045114692263901 + 5*p3 + -8*p4 + d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.183989170076638 + 5*p3 + -8*p4 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.747140580187 + 5*p3 + -8*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.272881223843346 + 5*p3 + -9*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.799083847654377 + 5*p3 + -9*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.244126566852572 + 5*p3 + -9*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1045588442609426 + 5*p3 + -9*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1045588442609426 + 5*p3 + -9*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.424128970868638 + 5*p3 + -9*p4 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.424128970868638 + 5*p3 + -9*p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.250950297625728 + 5*p3 + -9*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7868921907321056 + 5*p3 + -11*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.377696099407238 + 4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.836847719711021 + 4*p3 + -2*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0978904817844812 + 4*p3 + -4*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6174563080835633 + 4*p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.287794504709595 + 4*p3 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6930454792882035 + 4*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6815392216615055 + 4*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.148603266634254 + 4*p3 + -2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.29144540143555 + 4*p3 + -2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.14986426701881989 + 4*p3 + -2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.08914042261758279 + 4*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.52230796407679 + 4*p3 + -3*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8417258979737117 + 4*p3 + -3*p5 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.31769355709426783 + 4*p3 + -3*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.459286210684061 + 4*p3 + -3*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1380180447487835 + 4*p3 + -4*p5 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.012184492574022812 + 4*p3 + -4*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1148409194519749 + 4*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17981062632453862 + 4*p3 + -5*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.879042093077219 + 4*p3 + -5*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.315571611284643 + 4*p3 + -5*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9414409129649615 + 4*p3 + -6*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.024046848358028 + 4*p3 + -6*p5 + 5*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.015125023297782859 + 4*p3 + -6*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.156717676887576 + 4*p3 + -6*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5015647174185207 + 4*p3 + -6*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4483606240995015 + 4*p3 + -7*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3067679705097085 + 4*p3 + -7*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.659767644004595 + 4*p3 + -7*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.256752968294883 + 4*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.256752968294883 + 4*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.783956887497785 + 4*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2769273866549773 + 4*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.340989696849429 + 4*p3 + -3*p4 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6457896425929057 + 4*p3 + -3*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9848774541564365 + 4*p3 + -4*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5823050448791802 + 4*p3 + -4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.319960084152491 + 4*p3 + -4*p4 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5110479384142824 + 4*p3 + -5*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.736445385562019 + 4*p3 + -6*p4 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.736445385562019 + 4*p3 + -6*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.680325868765519 + 4*p3 + -6*p4 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3058275956070506 + 4*p3 + -6*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.554078026416235 + 4*p3 + -7*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6086643865095671 + 4*p3 + -7*p4 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.750257040099361 + 4*p3 + -7*p4 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6149912050480464 + 4*p3 + -7*p4 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6166438573167599 + 4*p3 + -7*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.170028106857011 + 4*p3 + -7*p4 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7238622172952582 + 4*p3 + -7*p4 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7243507349528915 + 4*p3 + -7*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.842946755785482 + 4*p3 + -7*p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5881068428837101 + 4*p3 + -7*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.211493622229259 + 4*p3 + -8*p4 + 5*p5 + -5*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.863733435647176 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.057499391099761 + 4*p3 + -8*p4 + 3*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.057521556781261 + 4*p3 + -8*p4 + 3*p5 + -2*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8636779341769625 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.262734752236876 + 4*p3 + -8*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.256773056577914 + 4*p3 + -8*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7308466843942056 + 4*p3 + -8*p4 + p5 + 5*p6 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.872437243588897 + 4*p3 + -8*p4 + p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.872496410250539 + 4*p3 + -8*p4 + p5 + 5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7309014877327185 + 4*p3 + -8*p4 + p5 + 5*p6 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6420954701998176 + 4*p3 + -8*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.310032119270055 + 4*p3 + -8*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.66458302440748 + 4*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8989958848232277 + 4*p3 + -10*p4 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.035918037334684 + 4*p3 + -10*p4 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8989958848232277 + 4*p3 + -10*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.522191899681533 + 4*p3 + -10*p4 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.230592079098765 + 4*p3 + -11*p4 + 2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.640380718203 + 4*p3 + -11*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.223417179581791 + 3*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.223417179581791 + 3*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.361695951025873 + 3*p3 + 4*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.218704956636015 + 3*p3 + 3*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.360297610225809 + 3*p3 + 3*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.218704956636015 + 3*p3 + 3*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.360297610225809 + 3*p3 + 3*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6030226182008125 + 3*p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6030226182008125 + 3*p3 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8228449261256374 + 3*p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.214248956522748 + 3*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.214250178253225 + 3*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.355841610112542 + 3*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4189697860980592 + 3*p3 + -2*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.487583591410812 + 3*p3 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.487337674519206 + 3*p3 + -2*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3430687330544049 + 3*p3 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1417450208334925 + 3*p3 + -3*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.25751251009040094 + 3*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.15198780911972137 + 3*p3 + -1*p5 + -5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.293956232097469 + 3*p3 + -1*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.391478091845612 + 3*p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.391478091845612 + 3*p3 + -2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.360898144028153 + 3*p3 + -2*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0447188345929155 + 3*p3 + -2*p5 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.4913009681846345 + 3*p3 + -2*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.472648285402721 + 3*p3 + -2*p5 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.153073629437286 + 3*p3 + -2*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0114809758474936 + 3*p3 + -2*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.483765500640833 + 3*p3 + -2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0006136577650012062 + 3*p3 + -3*p5 + 4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143188931723667 + 3*p3 + -3*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143245654924357 + 3*p3 + -3*p5 + 3*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.096479208551318 + 3*p3 + -3*p5 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143188931723667 + 3*p3 + -3*p5 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.139463551930236 + 3*p3 + -3*p5 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8077120403479037 + 3*p3 + -3*p5 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.420010717460582 + 3*p3 + -4*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3118781200266227 + 3*p3 + -4*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.022740942021785317 + 3*p3 + -4*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1643335956115783 + 3*p3 + -4*p5 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1769757135154744 + 3*p3 + -4*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1850169689781875 + 3*p3 + -4*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9404410138364936 + 3*p3 + -5*p5 + 5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.912246816061802 + 3*p3 + -5*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.079879756596402 + 3*p3 + -5*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0419502188004768 + 3*p3 + -5*p5 + 3*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.18354287239027 + 3*p3 + -5*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.18354287239027 + 3*p3 + -5*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0419502188004768 + 3*p3 + -5*p5 + 3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.163439812501632 + 3*p3 + -5*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.02664419636094543 + 3*p3 + -5*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.480138008323488 + 3*p3 + -5*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4719810375313664 + 3*p3 + -5*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.261672536355796 + 3*p3 + -6*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.324762515125645 + 3*p3 + -6*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.18316986153585207 + 3*p3 + -6*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.234756060133223 + 3*p3 + -6*p5 + 2*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.642224117962323 + 3*p3 + -6*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1680185092613145 + 3*p3 + -1*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.02642585567152094 + 3*p3 + -1*p4 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144391987177067 + 3*p3 + -1*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.938856629436483 + 3*p3 + -2*p4 + 2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.139067170660474 + 3*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3483703451902629 + 3*p3 + -2*p4 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.490134041046752 + 3*p3 + -2*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.476478759512073 + 3*p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0619157382457407 + 3*p3 + -3*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0619157382457407 + 3*p3 + -3*p4 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.875838715768108 + 3*p3 + -3*p4 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.06757984676892123 + 3*p3 + -3*p4 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.875838715768108 + 3*p3 + -3*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1810386654811915 + 3*p3 + -3*p4 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.018390534328264253 + 3*p3 + -3*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1091003740058736 + 3*p3 + -3*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.35934902377735 + 3*p3 + -3*p4 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5149009272709851 + 3*p3 + -4*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.064754018170284 + 3*p3 + -4*p4 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.064754018170284 + 3*p3 + -4*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.766888440077906 + 3*p3 + -4*p4 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.641384431560872 + 3*p3 + -4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.641384431560872 + 3*p3 + -4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6468089148760705 + 3*p3 + -4*p4 + d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6468089148760705 + 3*p3 + -4*p4 + d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.758468997261236 + 3*p3 + -4*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9516631148643336 + 3*p3 + -4*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5938194970550463 + 3*p3 + -4*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.017194111126022135 + 3*p3 + -5*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.293952409369748 + 3*p3 + -5*p4 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.115034842528505 + 3*p3 + -5*p4 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2281664120060265 + 3*p3 + -5*p4 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0118340474568557 + 3*p3 + -5*p4 + 3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.230665374429032 + 3*p3 + -5*p4 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.126440743723213 + 3*p3 + -5*p4 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.266218953022633 + 3*p3 + -5*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.230013119392612 + 3*p3 + -5*p4 + -4*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1320362778034236 + 3*p3 + -5*p4 + -4*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2281449189612768 + 3*p3 + -5*p4 + -4*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.784091826943913 + 3*p3 + -6*p4 + 2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.781077119726944 + 3*p3 + -6*p4 + 2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.779824671455713 + 3*p3 + -6*p4 + 2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.779824671455713 + 3*p3 + -6*p4 + 2*p5 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1797198862000684 + 3*p3 + -6*p4 + p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6425375620993479 + 3*p3 + -6*p4 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.686817637914945 + 3*p3 + -6*p4 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.246396201510182 + 3*p3 + -7*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6204938791137342 + 3*p3 + -7*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.732249439507299 + 3*p3 + -7*p4 + -1*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.732249439507299 + 3*p3 + -7*p4 + -1*d + 2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6606575873901863 + 3*p3 + -8*p4 + 3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.660765972336735 + 3*p3 + -8*p4 + 3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5219600859636014 + 3*p3 + -8*p4 + 3*p5 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.487221750663607 + 3*p3 + -8*p4 + 3*p5 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.381597740458489 + 3*p3 + -8*p4 + p5 + 5*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.381597740458489 + 3*p3 + -8*p4 + p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.086524225058743 + 3*p3 + -8*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.086524225058743 + 3*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7848880036570904 + 3*p3 + -9*p4 + 2*p8 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.53449087735617 + 3*p3 + -10*p4 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.39289822376637673 + 3*p3 + -10*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7896843514728125 + 2*p3 + 2*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7896843514728125 + 2*p3 + 2*p4 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949388810309326 + 2*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949388810309326 + 2*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9898247644541396 + 2*p3 + p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.42241300563966 + 2*p3 + 5*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.42241300563966 + 2*p3 + 5*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.359500518356422 + 2*p3 + 4*p5 + -2*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.337869248174738 + 2*p3 + 4*p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.51905101365796 + 2*p3 + 3*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.51905101365796 + 2*p3 + 3*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.649610542886322 + 2*p3 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.643832106798818 + 2*p3 + 2*p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.690455602207802 + 2*p3 + 2*p5 + -6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.690455602207802 + 2*p3 + 2*p5 + -6*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1443947542089201 + 2*p3 + 2*p5 + -7*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4501611057558583 + 2*p3 + 2*p5 + -10*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.664951786983477 + 2*p3 + p5 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6674910665122034 + 2*p3 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.496385967963687 + 2*p3 + p5 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.640897161128664 + 2*p3 + p5 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.368877789368271 + 2*p3 + p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.510470442958065 + 2*p3 + p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3758950601588396 + 2*p3 + p5 + -2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3758950601588396 + 2*p3 + p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9150114090986445 + 2*p3 + p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.368636610360595 + 2*p3 + p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.509850651045731 + 2*p3 + p5 + -9*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1648798666708193 + 2*p3 + p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.104624817706668 + 2*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5297470724492492 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.56983868163096 + 2*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1814664201859056 + 2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5148173599930805 + 2*p3 + -1*p8 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.580081503910455 + 2*p3 + -1*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.510764007338249 + 2*p3 + -1*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.512792254461991 + 2*p3 + -1*p6 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.234832181983561 + 2*p3 + -2*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.31109693614838 + 2*p3 + -2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3123059257212364 + 2*p3 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.004327892946170339 + 2*p3 + -2*p6 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1837222582441083 + 2*p3 + -2*p6 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1456500205019045 + 2*p3 + -2*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.003783873818323706 + 2*p3 + -2*p6 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12076770852589723 + 2*p3 + -4*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.681520040036366 + 2*p3 + -4*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.261772709756544 + 2*p3 + -4*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.15177889320825766 + 2*p3 + -5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.15077881954686492 + 2*p3 + -5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3004898721523097 + 2*p3 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2098803804083733 + 2*p3 + -6*p6 + 3*p7 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.49897640263613 + 2*p3 + -1*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5773264761912336 + 2*p3 + -1*p5 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9719482295905877 + 2*p3 + -1*p5 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.581537632105395 + 2*p3 + -1*p5 + -1*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.543926659389544 + 2*p3 + -1*p5 + -6*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.572505378693399 + 2*p3 + -1*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.055450681132186645 + 2*p3 + -1*p5 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5519678978556235 + 2*p3 + -1*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.142135127416264 + 2*p3 + -1*p5 + -2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.401761737832971 + 2*p3 + -1*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.1862931707238795 + 2*p3 + -1*p5 + -3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4012547026886337 + 2*p3 + -1*p5 + -3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.469388001861679 + 2*p3 + -1*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.941742697389264 + 2*p3 + -2*p5 + 2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001745503784919529 + 2*p3 + -2*p5 + 4*d + -5*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0106584021710288 + 2*p3 + -2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0106584021710288 + 2*p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008946034146947335 + 2*p3 + -2*p5 + 2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.15668189763791 + 2*p3 + -2*p5 + -6*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1828536333703408 + 2*p3 + -2*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.879399021407568 + 2*p3 + -2*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1607033107674303 + 2*p3 + -2*p5 + -3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4956302234009401 + 2*p3 + -2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3527282577995672 + 2*p3 + -3*p5 + 5*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3527282577995672 + 2*p3 + -3*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17908683828373656 + 2*p3 + -3*p5 + 3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.336057936978702 + 2*p3 + -3*p5 + 2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.19707420155479013 + 2*p3 + -3*p5 + 2*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.06286885405193814 + 2*p3 + -3*p5 + p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1543480433621434 + 2*p3 + -3*p5 + p7 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.012755389772350158 + 2*p3 + -3*p5 + p7 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3282414799236455 + 2*p3 + -3*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.317294600322212 + 2*p3 + -3*p5 + -6*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.7010427524537666 + 2*p3 + -3*p5 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8292143306978654 + 2*p3 + -3*p5 + -5*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.945462151561556 + 2*p3 + -4*p5 + 6*p6 + -3*p7 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.936397260492548 + 2*p3 + -4*p5 + 5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.925105852896771 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130123073372338 + 2*p3 + -4*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.47694176136936045 + 2*p3 + -4*p5 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3493049605063891 + 2*p3 + -4*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.488377009590452 + 2*p3 + -4*p5 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.15304674286849 + 2*p3 + -4*p5 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4753367820841765 + 2*p3 + -4*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5866568233411532 + 2*p3 + -5*p5 + 3*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.523550106407118 + 2*p3 + -5*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.210699505917917 + 2*p3 + -5*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8217012033684887 + 2*p3 + -6*p5 + 10*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.175564465777262 + 2*p3 + -6*p5 + 7*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3966121183800122 + 2*p3 + -6*p5 + 5*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.795625120177384 + 2*p3 + -6*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.83281494494473 + 2*p3 + -6*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.83281494494473 + 2*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4556327129608615 + 2*p3 + -7*p5 + 3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.073795521827315 + 2*p3 + -7*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8859867411742712 + 2*p3 + -2*p4 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5730307142999327 + 2*p3 + -2*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5730307142999327 + 2*p3 + -2*p4 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.11068530749961 + 2*p3 + -2*p4 + p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7064598968877895 + 2*p3 + -2*p4 + p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.204660998775234 + 2*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135791179156164 + 2*p3 + -2*p4 + 2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7468503064374425 + 2*p3 + -2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.252850088516523 + 2*p3 + -2*p4 + -3*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.259997386336366 + 2*p3 + -2*p4 + -4*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0934948700633336 + 2*p3 + -2*p4 + -6*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1107593094598944 + 2*p3 + -2*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.597692931758947 + 2*p3 + -2*p4 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.143026117999407 + 2*p3 + -3*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5197157670784619 + 2*p3 + -3*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6624086762287127 + 2*p3 + -3*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6624086762287127 + 2*p3 + -3*p4 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1941193846261133 + 2*p3 + -3*p4 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.627112699734389 + 2*p3 + -3*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.627112699734389 + 2*p3 + -3*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6800586588570385 + 2*p3 + -3*p4 + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.756090811622468 + 2*p3 + -3*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.775499396503421 + 2*p3 + -3*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008882504162174742 + 2*p3 + -4*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.010727142648607548 + 2*p3 + -4*p4 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.476810363571635 + 2*p3 + -4*p4 + p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1427593976964348 + 2*p3 + -4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1297408122728836 + 2*p3 + -4*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1156382028509193 + 2*p3 + -4*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.036350495930061504 + 2*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1859754868067498 + 2*p3 + -6*p4 + 2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1859754868067498 + 2*p3 + -6*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.28247159105854586 + 2*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.829950178507139 + 2*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.107964505230359 + 2*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.317527435742745 + 2*p3 + -7*p4 + d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8767387565684117 + 2*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8767387565684117 + 2*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0294096960556804 + 2*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0294096960556804 + 2*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.376979292683445 + p3 + 5*p4 + -2*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.18894098423713 + p3 + 4*p4 + -1*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.423581678106795 + p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.423581678106795 + p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.917774963436252 + p3 + 2*p4 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2037150133240198 + p3 + 2*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7228986210152322 + p3 + 2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6527437409628685 + p3 + 2*p4 + -2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.96807570154458 + p3 + p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.279770038400967 + p3 + p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.740037073134749 + p3 + p4 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.250988694869271 + p3 + p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.250988694869271 + p3 + p4 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0552560939172224 + p3 + 6*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0552560939172224 + p3 + 6*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.417390471651197 + p3 + 6*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.417390471651197 + p3 + 6*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.196439957402932 + p3 + 5*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.196439957402932 + p3 + 5*p5 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.425273400255804 + p3 + 5*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.425273400255804 + p3 + 5*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.357270685704075 + p3 + 4*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.357270685704075 + p3 + 4*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.660723926898396 + p3 + 3*p5 + -5*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.660723926898396 + p3 + 3*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9226606381164102 + p3 + 2*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9226606381164102 + p3 + 2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.722797766479417 + p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.322875099075905 + p3 + 2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.322875099075905 + p3 + 2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2074812763135316 + p3 + 2*p5 + -3*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2074812763135316 + p3 + 2*p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3613587364177542 + p3 + 2*p5 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1723013812111 + p3 + 2*p5 + -5*p6 + d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1723013812111 + p3 + 2*p5 + -5*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1464216135675778 + p3 + 2*p5 + -5*p6 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.455876369422756 + p3 + 2*p5 + -5*p6 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.307826197628459 + p3 + 2*p5 + -5*p6 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.169642870199512 + p3 + 2*p5 + -5*p6 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.491212654524484 + p3 + 2*p5 + -6*p6 + 3*p7 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.491212654524484 + p3 + 2*p5 + -6*p6 + 3*p7 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.23051527611336 + p3 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.23051527611336 + p3 + p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1700212575813442 + p3 + p5 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.31994748378861 + p3 + p5 + d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.31994748378861 + p3 + p5 + d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.320596946298227 + p3 + p5 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6404426433981791 + p3 + p5 + -1*p6 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6404426433981791 + p3 + p5 + -1*p6 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1980053602056793 + p3 + p5 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.327243692186913 + p3 + p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.216443209953305 + p3 + p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3851063928504064 + p3 + p5 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.312458816563711 + p3 + p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4373926175158025 + p3 + 3*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124054546566519 + p3 + 2*p6 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0027408735556484 + p3 + 2*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0027408735556484 + p3 + 2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.124054546566519 + p3 + 2*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.690334808426931 + p3 + p6 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.690334808426931 + p3 + p6 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8917958950566085 + p3 + p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4734952681937639 + p3 + p7 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4734952681937639 + p3 + p7 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4962585504299746 + p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.945413997470835 + p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5994600436333246 + p3 + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9621213107735258 + p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.251815631868866 + p3 + -1*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949206423402493 + p3 + -2*p8 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9485648403694595 + p3 + -2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.1908369693968375 + p3 + -1*p7 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7662620584059985 + p3 + -1*p7 + -2*p8 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7576378374781692 + p3 + -3*p7 + 2*p8 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1668105668860087 + p3 + -1*p6 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008108974237690855 + p3 + -1*p6 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.008108974237690855 + p3 + -1*p6 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01260406972620225 + p3 + -1*p6 + -4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.000362896443073 + p3 + -2*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.941311950129872 + p3 + -2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9288795953071163 + p3 + -2*p6 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8496447888592273 + p3 + -2*p6 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.29750376284012264 + p3 + -3*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2937884804614023 + p3 + -3*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9265905959931258 + p3 + -4*p6 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4626854139352448 + p3 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.45293811612534 + p3 + -5*p6 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.100378457131516 + p3 + -1*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6390791836882045 + p3 + -1*p5 + 2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6390791836882045 + p3 + -1*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.857897254656383 + p3 + -1*p5 + p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8323557488185305 + p3 + -1*p5 + p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8323557488185305 + p3 + -1*p5 + p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1831166544886167 + p3 + -1*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1496398431719634 + p3 + -1*p5 + d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.841352056946252 + p3 + -1*p5 + d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6930985287991474 + p3 + -1*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.62399954744929 + p3 + -1*p5 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.792953727722598 + p3 + -1*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0321032371953333 + p3 + -1*p5 + -3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.170724467733606 + p3 + -1*p5 + -4*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.030863529827641727 + p3 + -1*p5 + -4*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.03669729285243277 + p3 + -1*p5 + -5*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.033089522755635294 + p3 + -1*p5 + -6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.129227187368971 + p3 + -1*p5 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.414131069273097 + p3 + -1*p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8678445587002488 + p3 + -1*p5 + -2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8678445587002488 + p3 + -1*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.913158576063044 + p3 + -1*p5 + -3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.571818774663981 + p3 + -1*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8457568849191681 + p3 + -2*p5 + 7*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.754660846369676 + p3 + -2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.9995392840673745 + p3 + -2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7063571224897975 + p3 + -2*p5 + 5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.047221504698934 + p3 + -2*p5 + 4*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2620818075670717 + p3 + -2*p5 + 4*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5013632809278911 + p3 + -2*p5 + 2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.940309956606303 + p3 + -2*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3225487564990495 + p3 + -2*p5 + 4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.1076173932354045 + p3 + -2*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.948149801073336 + p3 + -2*p5 + d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.380048977771852 + p3 + -2*p5 + d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.898092187329812 + p3 + -2*p5 + -3*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.379235828873348 + p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.3468941797021925 + p3 + -2*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.026899188964661806 + p3 + -3*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.21395642234348086 + p3 + -3*p5 + 5*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0109809390167976 + p3 + -3*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0208678631668615 + p3 + -3*p5 + 3*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0978313151228387 + p3 + -3*p5 + 2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.105040048532351 + p3 + -3*p5 + 2*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.218355226647182 + p3 + -3*p5 + 2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9725662336820855 + p3 + -3*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2482308661249286 + p3 + -3*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.464731131348141 + p3 + -3*p5 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.79140596974193 + p3 + -4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.493078245460257 + p3 + -4*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.26402241366741463 + p3 + -4*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7626441399045898 + p3 + -4*p5 + 2*p6 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9096446961816875 + p3 + -4*p5 + 2*p6 + d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.532612571011806 + p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.452346449508914 + p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.701264941365862 + p3 + -1*p4 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1450384571320056 + p3 + -1*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005008920420298527 + p3 + -1*p4 + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1525430238497303 + p3 + -1*p4 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1525430238497303 + p3 + -1*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1529034343402675 + p3 + -1*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1525430238497303 + p3 + -1*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0105573221123885 + p3 + -1*p4 + -3*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0113271868454432 + p3 + -1*p4 + -6*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.267260740053148 + p3 + -1*p4 + -2*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.267260740053148 + p3 + -1*p4 + -2*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4753381783475783 + p3 + -2*p4 + 3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.12614611514884294 + p3 + -2*p4 + 2*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5894847803281597 + p3 + -2*p4 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5903563977566056 + p3 + -2*p4 + 2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.578298134979085 + p3 + -2*p4 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.589628114351331 + p3 + -2*p4 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.6508928362877615 + p3 + -2*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.445638251033924 + p3 + -2*p4 + 2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.430418830918559 + p3 + -2*p4 + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.427232383303193 + p3 + -2*p4 + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.066237373501553 + p3 + -2*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.066237373501553 + p3 + -2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.557654555119422 + p3 + -2*p4 + -4*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.567166948608641 + p3 + -2*p4 + -6*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4145506124320097 + p3 + -3*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.221654422532227 + p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.14987229553337908 + p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.994417074781987 + p3 + -3*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3992384983367296 + p3 + -4*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.840711870176619 + p3 + -4*p4 + p5 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.840711870176619 + p3 + -4*p4 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.20732123811944 + p3 + -4*p4 + 2*p6 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.7243263003433635 + p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.929443345153827 + p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8354582206019251 + p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9164057186447963 + p3 + -4*p4 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9164057186447963 + p3 + -4*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.075531592335957 + p3 + -5*p4 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.21712424592575 + p3 + -5*p4 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9035136695920148 + p3 + -7*p4 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9035136695920148 + p3 + -7*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.112647074575484 + p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.111811236396704 + p3 + -8*p4 + 3*p5 + -3*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.481637237652634 + 4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.479735543896295 + 4*p4 + -1*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.978099651037558 + 3*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8365069974477655 + 3*p4 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3163261001236468 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.5584315502074593 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.120642610910112 + 3*p4 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.629563674101281 + 3*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.000360286947512 + 2*p4 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.999757275690947 + 2*p4 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9115544354492195 + 2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.999757275690947 + 2*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.000360286947512 + 2*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401840460680552 + 2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4117195053540331 + 2*p4 + -2*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4117195053540331 + 2*p4 + -2*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.45442055630040123 + 2*p4 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.08280924075597336 + 2*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2305019691194619 + 2*p4 + -3*p5 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5022186667942936 + p4 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.46109242643199994 + p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.388856956374967 + p4 + d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17407372907323324 + p4 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.382148783394927 + p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.382148783394927 + p4 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6791226217825608 + p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.687865499604576 + p4 + -4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.998360637728551 + p4 + -1*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.062237419423517 + p4 + -1*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.062237419423517 + p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.233676250419965 + p4 + -1*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.344736429147952 + 4*p5 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.344736429147952 + 4*p5 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9897311978095995 + 4*p5 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.24451731207882677 + 4*p5 + -3*p6 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0106306429376053 + 3*p5 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.119017892407747 + 2*p5 + 4*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1555882488336605 + 2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.313635351510797 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.268902579778817 + 2*p5 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.242443903419041 + 2*p5 + -3*p6 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.248543131023061 + 2*p5 + -3*p6 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2485445272864615 + 2*p5 + -3*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.3813375458602835 + 2*p5 + -4*p6 + 2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.377032865793164 + 2*p5 + -4*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.013392311406302 + 2*p5 + -5*p6 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.911453712954746 + 2*p5 + -5*p6 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.910942331483912 + 2*p5 + -5*p6 + -2*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.013392311406302 + 2*p5 + -5*p6 + -2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.007173128692771495 + 2*p5 + -6*p6 + 4*p7 + -2*p8 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1453964241615893 + 2*p5 + -6*p6 + 3*p7 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1453957260298884 + 2*p5 + -6*p6 + 3*p7 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.027632925382200222 + 2*p5 + -7*p6 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.027632925382200222 + 2*p5 + -7*p6 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.999962002812206 + p5 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9086283739616174 + p5 + 4*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.056832334757966 + p5 + 4*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.260667592769131 + p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0026517042275045 + p5 + 2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3474004657249297 + p5 + d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6301066460315767 + p5 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.040271420586249 + p5 + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.13760491681652 + p5 + 2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.13810844430572 + p5 + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.051834052347788 + p5 + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.081542506279826 + p5 + -4*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1062900533426285 + p5 + -6*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0870217929335366 + p5 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.071627814398022 + p5 + -1*p6 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0713279668325293 + p5 + -1*p6 + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0917776406122965 + p5 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5422357504169447 + p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6069909563244383 + p5 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8513798121703183 + 3*p6 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8903746734467095 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.671824744539854 + 2*p6 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.86306603023953 + 2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.661502335246468 + p6 + 3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.661608974863766 + p6 + 3*d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5227943618443713 + p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.662805921664783 + p6 + 2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5227943618443713 + p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.564208083429419 + p6 + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.564208083429419 + p6 + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5332438226089866 + p6 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.676480576354159 + p6 + -2*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5332438226089866 + p6 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.6781698805371645 + p6 + -3*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.747238842223887 + p6 + -2*p7 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.058133818282861 + p6 + -3*p7 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1948024979970273 + p6 + -3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1948024979970273 + p6 + -3*p7 + -2*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.063285855701823 + p6 + -3*p7 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6645262757118404 + 3*p7 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6645262757118404 + 3*p7 + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.087237541124033 + 2*p7 + -4*p8 ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0021593213505673847 + 6*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.750727746900306 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0007344345492392139 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.158089854745494 + 2*d + -4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.528570903564647 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.803887176787108 + 17*p1 + -22*p3 + -5*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8264952652595503 + 9*p1 + -19*p2 + 5*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.13210903253828157 + 8*p1 + -9*p3 + p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.560910981939475 + 8*p1 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.402143598876674 + 7*p1 + -4*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.898183468049691 + 7*p1 + -6*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.292994381146695 + 5*p1 + 4*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2857198318277492 + 5*p1 + -6*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7384914180474995 + 5*p1 + -8*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.732419077012278 + 4*p1 + 29*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.38690738110890616 + 4*p1 + 13*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0683008507812368 + 4*p1 + 3*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7694132418721575 + 4*p1 + -2*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6276286020646453 + 4*p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.948711098960777 + 4*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3330369380781084 + 4*p1 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.467303397599729 + 4*p1 + -3*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7332051478124257 + 4*p1 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.734737023296901 + 4*p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1936879392350206 + 4*p1 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.582968793593714 + 4*p1 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.392739083731861 + 4*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.07752543097848573 + 4*p1 + -6*p3 + 3*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.634473302283775 + 4*p1 + -6*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.585582083581042 + 4*p1 + -29*p2 + 19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.18139419754814 + 3*p1 + 2*p2 + -6*p3 + -4*d + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.18139419754814 + 3*p1 + 2*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.171980432158291 + 3*p1 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.95238850769473 + 3*p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4819718257685577 + 3*p1 + -2*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7192124941333367 + 3*p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4585006549843715 + 3*p1 + -2*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1493668736769513 + 3*p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2426306196557375 + 3*p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2751455800216163 + 3*p1 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.462119744226357 + 3*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0906993677020975 + 3*p1 + -27*p2 + 20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.48124121394704 + 2*p1 + 31*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6268625855542616 + 2*p1 + 19*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9870587411606291 + 2*p1 + 16*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.626913906732587 + 2*p1 + 15*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4581417897952114 + 2*p1 + 14*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.633286129326569 + 2*p1 + 13*p2 + -19*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8031002078273834 + 2*p1 + 11*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7872126331827713 + 2*p1 + 10*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.087010465290032 + 2*p1 + 8*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0623883819054973 + 2*p1 + 5*p2 + -6*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6361590818150091 + 2*p1 + p2 + -10*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6361590818150091 + 2*p1 + p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.242792262639422 + 2*p1 + 3*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.891523117091155 + 2*p1 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2705138252526738 + 2*p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.608422866934357 + 2*p1 + -4*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.654930638515618 + 2*p1 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7332276540614597 + 2*p1 + -2*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7332276540614597 + 2*p1 + -2*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.180121511955902 + 2*p1 + -2*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.180121511955902 + 2*p1 + -2*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.054283753994303234 + 2*p1 + -12*p2 + 13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.732052906935209 + 2*p1 + -20*p2 + 12*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0680495233689495 + 2*p1 + -28*p2 + 25*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.132519759501176 + 2*p1 + -30*p2 + 29*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.132519759501176 + 2*p1 + -30*p2 + 29*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.244835012992589 + 2*p1 + -36*p2 + 37*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17971009535962373 + 2*p1 + -45*p2 + 38*p3 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.496242693428731 + p1 + 18*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3384902108276482 + p1 + 15*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.386014862221019 + p1 + 3*p2 + -9*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.386014862221019 + p1 + 3*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3228066991658602 + p1 + 27*p3 + -37*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.923746224412834 + p1 + p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8593098986579961 + p1 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.125017627746087 + p1 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3207941430087524 + p1 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.438256747025099 + p1 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.583822059570064 + p1 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.459342767850142 + p1 + -2*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.552537598818425 + p1 + -3*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3861565574613315 + p1 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.659220483284094 + p1 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.593004279256389 + p1 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.232148738258619 + p1 + -5*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.357014820435732 + p1 + -10*p3 + 11*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.357014820435732 + p1 + -10*p3 + 11*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.866268560378964 + p1 + -1*p2 + -2*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.685163746919122 + p1 + -3*p2 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.921505787743632 + p1 + -3*p2 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.139221300230058 + p1 + -5*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.139221300230058 + p1 + -5*p2 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.138457195083536 + p1 + -5*p2 + 4*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.138457195083536 + p1 + -5*p2 + 4*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.081096251085041 + p1 + -6*p2 + 5*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3421766952737106 + p1 + -6*p2 + 4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3421766952737106 + p1 + -6*p2 + 4*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.030492872884419 + p1 + -23*p2 + 22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6299884787429 + p1 + -23*p2 + 20*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0013557887595828 + 61*p2 + -64*p3 + 2*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.593325070772906 + 53*p2 + -63*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8366841568651595 + 51*p2 + -55*p3 + d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5869367826514897 + 49*p2 + -56*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2644702821501093 + 46*p2 + -41*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.144282929593766 + 46*p2 + -48*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9357169396484375 + 46*p2 + -50*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.78565179373103 + 44*p2 + -47*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + 2*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -2*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7743420346831564 + 43*p2 + -42*p3 + -2*p4 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6124252219817643 + 43*p2 + -43*p3 + -1*p5 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6908465219669823 + 43*p2 + -43*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7562435024370675 + 43*p2 + -44*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1506470641849726 + 43*p2 + -45*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3092390076646821 + 42*p2 + -43*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.608791629510354 + 41*p2 + -42*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9229165288797025 + 40*p2 + -39*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.531289960504646 + 40*p2 + -39*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.27433853127717744 + 40*p2 + -40*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1959800631450315 + 40*p2 + -41*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7978169046520387 + 40*p2 + -44*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0115338508255123 + 40*p2 + -45*p3 + 9*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8223401769059606 + 39*p2 + -40*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005450314188127892 + 38*p2 + -35*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18928043378000944 + 37*p2 + -35*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9636177560741854 + 36*p2 + -37*p3 + 6*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.025008856845093 + 36*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.648830031644829 + 36*p2 + -41*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0946186875686927 + 35*p2 + -32*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.351318065757223 + 35*p2 + -47*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.269218309840501 + 34*p2 + -32*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9041547290262726 + 34*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6073632690471555 + 34*p2 + -42*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.061949265564012 + 34*p2 + -44*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.263729040816788 + 33*p2 + -30*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.028347497171233 + 33*p2 + -37*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6503962901155695 + 33*p2 + -38*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4038451203644433 + 33*p2 + -40*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9028153718566085 + 33*p2 + -42*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9028153718566085 + 33*p2 + -42*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44049090900730925 + 32*p2 + -25*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4507148902292 + 32*p2 + -28*p3 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4507148902292 + 32*p2 + -28*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2204057884904 + 32*p2 + -28*p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1261697025886948 + 32*p2 + -32*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.004990802989344 + 32*p2 + -39*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8794059857279426 + 32*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5151154282360553 + 32*p2 + -40*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.198970203711132 + 32*p2 + -43*p3 + 8*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.127137313126001 + 31*p2 + -31*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748151125823904 + 31*p2 + -32*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.693373452149603 + 31*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09201044203956228 + 31*p2 + -37*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9376395688574846 + 31*p2 + -43*p3 + 11*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.127271528945479 + 30*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7486000245075175 + 30*p2 + -31*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.613367708276158 + 30*p2 + -35*p3 + 3*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.029118758167689 + 30*p2 + -36*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.501293310221519 + 30*p2 + -38*p3 + 3*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7252359659495029 + 30*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3707693772115823 + 30*p2 + -40*p3 + 5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19506550211866983 + 29*p2 + -34*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.623140696419334 + 29*p2 + -34*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.2631138292520925 + 29*p2 + -34*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.358959291755379 + 29*p2 + -34*p3 + 2*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.512819979702149 + 29*p2 + -34*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.28022119751429 + 29*p2 + -35*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.477853887433086 + 29*p2 + -35*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5213562105407281 + 29*p2 + -36*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.386449074643966 + 29*p2 + -36*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5394353696321198 + 29*p2 + -41*p3 + 10*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.130141199301608 + 28*p2 + -28*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.992364201519158 + 28*p2 + -29*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.020829308387026 + 28*p2 + -30*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0876012337468826 + 28*p2 + -32*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.033390626044871 + 28*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16880667445656478 + 28*p2 + -33*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.072692639774664 + 28*p2 + -33*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16880667445656478 + 28*p2 + -33*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.470447408219323 + 28*p2 + -34*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.309283206986341 + 28*p2 + -34*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.470447408219323 + 28*p2 + -34*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4263249611301307 + 28*p2 + -34*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.231975759133112 + 28*p2 + -34*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.231975759133112 + 28*p2 + -34*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.407209932131047 + 28*p2 + -34*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.894917582458409 + 28*p2 + -35*p3 + 5*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.895035251643261 + 28*p2 + -35*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9049734799750166 + 28*p2 + -37*p3 + 9*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3817511718963726 + 28*p2 + -39*p3 + 11*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6757154155117675 + 28*p2 + -42*p3 + 15*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.75636447924918 + 27*p2 + -20*p3 + -20*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.75636447924918 + 27*p2 + -20*p3 + -20*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.272671443765573 + 27*p2 + -27*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1295833920726706 + 27*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7497845794708455 + 27*p2 + -28*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9392334120287222 + 27*p2 + -28*p3 + -3*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0367695749784156 + 27*p2 + -28*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.268193627036656 + 27*p2 + -29*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8992296014067027 + 27*p2 + -29*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.372713175894479 + 27*p2 + -31*p3 + 4*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8817506525467556 + 27*p2 + -31*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9427682273627864 + 27*p2 + -32*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8716797367002644 + 27*p2 + -32*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5509004629834204 + 27*p2 + -32*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.464057766326088 + 27*p2 + -33*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.829573693990851 + 27*p2 + -33*p3 + 3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8985946591231437 + 27*p2 + -33*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.64297043774711 + 27*p2 + -34*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.54298697412027 + 27*p2 + -36*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.273565052342594 + 26*p2 + -26*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.277139486650678 + 26*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.608673479218311 + 26*p2 + -26*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.608673479218311 + 26*p2 + -26*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.750157730864922 + 26*p2 + -27*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.750157730864922 + 26*p2 + -27*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.75018652879758 + 26*p2 + -27*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9767534445922286 + 26*p2 + -27*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3141369336428703 + 26*p2 + -28*p3 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2651735092990055 + 26*p2 + -28*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.133536937389238 + 26*p2 + -28*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8707803685367117 + 26*p2 + -29*p3 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6995185564179995 + 26*p2 + -29*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4112570100988884 + 26*p2 + -29*p3 + -2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8717883386713225 + 26*p2 + -30*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5922326267024994 + 26*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3815741785135871 + 26*p2 + -30*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.997233695627172 + 26*p2 + -31*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.626072658033126 + 26*p2 + -31*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5118012395160765 + 26*p2 + -31*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5118012395160765 + 26*p2 + -31*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.852665438693971 + 26*p2 + -31*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6531531867070695 + 26*p2 + -31*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.35185575920817885 + 26*p2 + -32*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.409331554369771 + 26*p2 + -33*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.409331554369771 + 26*p2 + -33*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6089500969081185 + 25*p2 + -26*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.832031126075976 + 25*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5991293037400718 + 25*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5991293037400718 + 25*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.90770300039221 + 25*p2 + -27*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.218887203003191 + 25*p2 + -27*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.045236192674789 + 25*p2 + -27*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.218887203003191 + 25*p2 + -27*p3 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0745775953668177 + 25*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0218464862750882 + 25*p2 + -27*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0218464862750882 + 25*p2 + -27*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16120698729460586 + 25*p2 + -28*p3 + -1*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.325335157653224 + 25*p2 + -28*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.325335157653224 + 25*p2 + -28*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4430151872027854 + 25*p2 + -29*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8448566695859396 + 25*p2 + -29*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9834281327455807 + 25*p2 + -29*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.894472689533759 + 25*p2 + -29*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9124249971817973 + 25*p2 + -29*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.355524292257896 + 25*p2 + -29*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7973276973610215 + 25*p2 + -30*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5417817987768176 + 25*p2 + -30*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7973276973610215 + 25*p2 + -30*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.307638400200945 + 25*p2 + -30*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.527361747957182 + 25*p2 + -33*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.188600645032991 + 25*p2 + -35*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.544671391381369 + 24*p2 + -21*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.781493721321079 + 24*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.273258921591793 + 24*p2 + -24*p3 + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.273258921591793 + 24*p2 + -24*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.609275251747765 + 24*p2 + -25*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.908591547514401 + 24*p2 + -26*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6595000850302637 + 24*p2 + -26*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6595000850302637 + 24*p2 + -26*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5752561751308343 + 24*p2 + -27*p3 + 3*p4 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2396918427595462 + 24*p2 + -27*p3 + 2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3140049867514196 + 24*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.808417161864026 + 24*p2 + -27*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.808417161864026 + 24*p2 + -27*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5906173499747283 + 24*p2 + -28*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.37879526527856167 + 24*p2 + -28*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.512472842212244 + 24*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.725729587553549 + 23*p2 + -19*p3 + -11*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.009353611018871 + 23*p2 + -22*p3 + -6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276041325485323 + 23*p2 + -23*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.13444832282968 + 23*p2 + -23*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.277594144920823 + 23*p2 + -23*p3 + d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.277594144920823 + 23*p2 + -23*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.364236103219225 + 23*p2 + -23*p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1343786841925247 + 23*p2 + -23*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276041325485323 + 23*p2 + -23*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7414357884956138 + 23*p2 + -23*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5220374040494647 + 23*p2 + -24*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.740572208080044 + 23*p2 + -24*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2062673828221366 + 23*p2 + -24*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.39193043869614586 + 23*p2 + -24*p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5908131759168023 + 23*p2 + -24*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.312974901925209 + 23*p2 + -24*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.912512778744856 + 23*p2 + -25*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.07693015016053 + 23*p2 + -25*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.07693015016053 + 23*p2 + -25*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.053249348336546 + 23*p2 + -25*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.224529128848237 + 23*p2 + -26*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45401302192006054 + 23*p2 + -27*p3 + 4*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.808739175111019 + 23*p2 + -27*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.037688673860832 + 23*p2 + -27*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.037688673860832 + 23*p2 + -27*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8726984853846534 + 23*p2 + -28*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9993758787578034 + 23*p2 + -28*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.684334383455207 + 23*p2 + -31*p3 + 13*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.402166130620658 + 23*p2 + -33*p3 + 15*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44621209829534664 + 22*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7963029890622253 + 22*p2 + -21*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.353011367200874 + 22*p2 + -21*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6430124916837645 + 22*p2 + -22*p3 + 3*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1336316832726716 + 22*p2 + -22*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0668836604252507 + 22*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2623849712581436 + 22*p2 + -22*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7027936497627338 + 22*p2 + -22*p3 + -3*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.683471118112221 + 22*p2 + -23*p3 + p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3573842811434296 + 22*p2 + -23*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.221526971005248 + 22*p2 + -23*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.623932377768038 + 22*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1704047064180076 + 22*p2 + -23*p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9252582116421533 + 22*p2 + -24*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6015581209237806 + 22*p2 + -24*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4851374954675087 + 22*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6440908966353062 + 22*p2 + -24*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6876791069387795 + 22*p2 + -24*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.051393522746267 + 22*p2 + -25*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.896857332890759 + 22*p2 + -26*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.896857332890759 + 22*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.038449986480552 + 22*p2 + -26*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9821833554247417 + 22*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.129660884691459 + 22*p2 + -29*p3 + 9*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.134399304572648 + 21*p2 + -14*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19623766524430922 + 21*p2 + -15*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.234484303870371 + 21*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.234484303870371 + 21*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.854480232050194 + 21*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.46190854239023243 + 21*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.827462194661788 + 21*p2 + -19*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.981333048009803 + 21*p2 + -19*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4180835079038967 + 21*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11433651929814853 + 21*p2 + -20*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11433651929814853 + 21*p2 + -20*p3 + d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9386318225305095 + 21*p2 + -20*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7959212855548141 + 21*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4821224561813215 + 21*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.018208845553131642 + 21*p2 + -20*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.159801499142925 + 21*p2 + -20*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.592798820010163 + 21*p2 + -20*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.007262689578349 + 21*p2 + -21*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.346396752367058 + 21*p2 + -21*p3 + p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2775803568197315 + 21*p2 + -21*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5641656379353281 + 21*p2 + -21*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7847747402869525 + 21*p2 + -21*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09580059904319314 + 21*p2 + -21*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7847747402869525 + 21*p2 + -21*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.74931055654432 + 21*p2 + -21*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.614127816162035 + 21*p2 + -22*p3 + 2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.104781041671355 + 21*p2 + -22*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.892720587490949 + 21*p2 + -22*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.61007164548545 + 21*p2 + -22*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6443919744295918 + 21*p2 + -22*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6056957559848501 + 21*p2 + -22*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6056957559848501 + 21*p2 + -22*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.447304691403728 + 21*p2 + -23*p3 + 6*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.872355047079444 + 21*p2 + -23*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.872355047079444 + 21*p2 + -23*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.806992441097307 + 21*p2 + -23*p3 + 4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9485850946870995 + 21*p2 + -23*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.569796253133504 + 21*p2 + -23*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6299026255403355 + 21*p2 + -23*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.133974665965638 + 21*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.903851407798909 + 21*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.020540639427062 + 21*p2 + -23*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7437603755297117 + 21*p2 + -24*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8975839134583642 + 21*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6822265408192574 + 21*p2 + -28*p3 + 10*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5616836222027004 + 20*p2 + -12*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1106029194605989 + 20*p2 + -14*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3573189973310882 + 20*p2 + -15*p3 + -6*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7243160029007768 + 20*p2 + -16*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.588844968119328 + 20*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.10287895635758135 + 20*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.36599467147858494 + 20*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.469386265030744 + 20*p2 + -18*p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1319690826272217 + 20*p2 + -18*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8956109932719097 + 20*p2 + -18*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7426466979306476 + 20*p2 + -18*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.5630041553113925 + 20*p2 + -19*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5898441521194617 + 20*p2 + -19*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.688722324225963 + 20*p2 + -19*p3 + -1*p5 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1457257677914408 + 20*p2 + -19*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.183859658147824 + 20*p2 + -19*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9842402259482173 + 20*p2 + -20*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3276508605047708 + 20*p2 + -20*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3222614583075374 + 20*p2 + -20*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8002458538770892 + 20*p2 + -21*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.197525577692622 + 20*p2 + -21*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8002458538770892 + 20*p2 + -21*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.113413963750494 + 20*p2 + -21*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.18302067837639 + 20*p2 + -21*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.181835076215511 + 20*p2 + -21*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -6*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.760840725181771 + 20*p2 + -21*p3 + -1*p8 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.787986703702664 + 20*p2 + -21*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9426614047142478 + 20*p2 + -21*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44635242276720705 + 20*p2 + -22*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5673337680918649 + 20*p2 + -22*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7089264216816575 + 20*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.137728520120827 + 20*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.654466014872103 + 20*p2 + -23*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.428943470108581 + 20*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.898275063842154 + 20*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2088693281693264 + 20*p2 + -25*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.002788895605028 + 20*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8611962420152353 + 20*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.26314800371216546 + 20*p2 + -29*p3 + 15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.26314800371216546 + 20*p2 + -29*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.159175790107768 + 19*p2 + -14*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.808301455032936 + 19*p2 + -15*p3 + -3*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.413094518230337 + 19*p2 + -16*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.589256865822799 + 19*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6465952780773097 + 19*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.882542001826243 + 19*p2 + -18*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.745359131117805 + 19*p2 + -18*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.745359131117805 + 19*p2 + -18*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.806750879030514 + 19*p2 + -18*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.806750879030514 + 19*p2 + -18*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278802785427828 + 19*p2 + -19*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.001356993493425591 + 19*p2 + -19*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.547143790806478 + 19*p2 + -19*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.001356993493425591 + 19*p2 + -19*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.168654681773666 + 19*p2 + -19*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143694030009194 + 19*p2 + -19*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5130620738660334 + 19*p2 + -19*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9357816658687365 + 19*p2 + -19*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9357816658687365 + 19*p2 + -19*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5004878492700406 + 19*p2 + -19*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.270651740256849 + 19*p2 + -19*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5386245066582767 + 19*p2 + -20*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6630348833676944 + 19*p2 + -20*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.28455167446107266 + 19*p2 + -20*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.996099738215518 + 19*p2 + -21*p3 + 5*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.403167592047136 + 19*p2 + -21*p3 + 3*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.403167592047136 + 19*p2 + -21*p3 + 3*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.128531158561592 + 19*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.231422681289789 + 19*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.2372953481602655 + 19*p2 + -22*p3 + 5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.688923211622868 + 19*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.062176515930939 + 19*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8753580180988424 + 19*p2 + -24*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8753580180988424 + 19*p2 + -24*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.26647060400582 + 19*p2 + -24*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.655341680551095 + 19*p2 + -24*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.997497580911757 + 19*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8559049273219641 + 19*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.797975546582728 + 18*p2 + -8*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5064743031094313 + 18*p2 + -12*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3566761925675785 + 18*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7919735168214117 + 18*p2 + -13*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7919735168214117 + 18*p2 + -13*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29958733690115347 + 18*p2 + -14*p3 + 3*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.386069980632116 + 18*p2 + -14*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.75846411033933 + 18*p2 + -15*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.75846411033933 + 18*p2 + -15*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6415507529402702 + 18*p2 + -15*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.441408994685442 + 18*p2 + -16*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 4*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 4*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*l + -4*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -5*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -4*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0975278023659167 + 18*p2 + -16*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16753310770138452 + 18*p2 + -16*p3 + -3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1664586915121735 + 18*p2 + -16*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3091257612911775 + 18*p2 + -16*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.339440210536142 + 18*p2 + -16*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6142206506816072 + 18*p2 + -16*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6142206506816072 + 18*p2 + -16*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7968131488025834 + 18*p2 + -17*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.951728075105775 + 18*p2 + -17*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.939618806222513 + 18*p2 + -17*p3 + -1*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.796814196000135 + 18*p2 + -17*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7968131488025834 + 18*p2 + -17*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5864189519607397 + 18*p2 + -17*p3 + -1*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.252181452880085 + 18*p2 + -17*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.252181452880085 + 18*p2 + -17*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.108554260482925 + 18*p2 + -17*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.317043805007017 + 18*p2 + -17*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.36405390784195 + 18*p2 + -17*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.36405390784195 + 18*p2 + -17*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3107099966532125 + 18*p2 + -18*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16911734306341974 + 18*p2 + -18*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1481453262317975 + 18*p2 + -18*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.280788621050748 + 18*p2 + -18*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1393247727597515 + 18*p2 + -18*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.678605506220145 + 18*p2 + -18*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281232283746605 + 18*p2 + -18*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281232283746605 + 18*p2 + -18*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9812562195294489 + 18*p2 + -19*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6729808081447927 + 18*p2 + -19*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6729808081447927 + 18*p2 + -19*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.610726143954948 + 18*p2 + -19*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6097342733410396 + 18*p2 + -19*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1824485254543193 + 18*p2 + -19*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6352762942793506 + 18*p2 + -19*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5695124625971295 + 18*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -5*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -5*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0100054999928085 + 18*p2 + -19*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.097983682366537 + 18*p2 + -20*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.097983682366537 + 18*p2 + -20*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.119941695180829 + 18*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.544152138932268 + 18*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.041140586055426 + 18*p2 + -22*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.655522671194527 + 18*p2 + -23*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.038020635484561 + 18*p2 + -24*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.991714781501124 + 18*p2 + -24*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.991714781501124 + 18*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8501221279113312 + 18*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.42689954051652 + 17*p2 + -12*p3 + -3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.285550568883573 + 17*p2 + -12*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1309098253075531 + 17*p2 + -13*p3 + -4*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.834723113415935 + 17*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.834723113415935 + 17*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.415799953103853 + 17*p2 + -14*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1021255062178121 + 17*p2 + -14*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.34277990655815 + 17*p2 + -14*p3 + -2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.590120471733319 + 17*p2 + -15*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6016579537569946 + 17*p2 + -15*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.590120471733319 + 17*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6016579537569946 + 17*p2 + -15*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3146317259874941 + 17*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9676911800154149 + 17*p2 + -15*p3 + -1*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005388529532607294 + 17*p2 + -15*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1504898185176846 + 17*p2 + -15*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.144232987682211 + 17*p2 + -15*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0037924259316584785 + 17*p2 + -15*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.144232987682211 + 17*p2 + -15*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.738520582042641 + 17*p2 + -15*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1809588869377425 + 17*p2 + -15*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.738520582042641 + 17*p2 + -15*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3556955260541494 + 17*p2 + -16*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.941298685627558 + 17*p2 + -16*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.879387144670337 + 17*p2 + -16*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4416885709366607 + 17*p2 + -16*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.131678302275523 + 17*p2 + -16*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.131678302275523 + 17*p2 + -16*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.897540846317423 + 17*p2 + -17*p3 + 3*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5241274443270445 + 17*p2 + -17*p3 + p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.279726239135059 + 17*p2 + -17*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281349046273563 + 17*p2 + -17*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3541768980753566 + 17*p2 + -17*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3786225031775645 + 17*p2 + -17*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06568407013540499 + 17*p2 + -17*p3 + -3*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1384604857141642 + 17*p2 + -17*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6061048611615174 + 17*p2 + -17*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.036647759494943 + 17*p2 + -17*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.058030137226975 + 17*p2 + -18*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6098559227899036 + 17*p2 + -18*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2747886601895833 + 17*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.569027959196776 + 17*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.726811508658544 + 17*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.110807514540516 + 17*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14841075681775903 + 17*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9001282544419215 + 17*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9331052034608032 + 17*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2655419228091507 + 17*p2 + -22*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.052743343393126 + 17*p2 + -22*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.816233269853232 + 17*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.049338572084968 + 16*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.925274102636663 + 16*p2 + -13*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.259536236354722 + 16*p2 + -13*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.943749127897358 + 16*p2 + -13*p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.716411100144227 + 16*p2 + -14*p3 + p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3096063994722269 + 16*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6015849989942605 + 16*p2 + -14*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.763957010561207 + 16*p2 + -14*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6015849989942605 + 16*p2 + -14*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0794458252527717 + 16*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282263598801608 + 16*p2 + -14*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.989682537116736 + 16*p2 + -14*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.140670945211815 + 16*p2 + -14*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6668871655943798 + 16*p2 + -14*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.49733383928381175 + 16*p2 + -14*p3 + -3*p4 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5311052876731512 + 16*p2 + -15*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.94183450170792 + 16*p2 + -15*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.571172296210726 + 16*p2 + -15*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.087044673743371 + 16*p2 + -15*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.28379109396632 + 16*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.162462777186366 + 16*p2 + -15*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1120150823550206 + 16*p2 + -15*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.626602539994031 + 16*p2 + -15*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8368518745079594 + 16*p2 + -15*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8368518745079594 + 16*p2 + -15*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7881018614400292 + 16*p2 + -15*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.759513044721462 + 16*p2 + -15*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.759513044721462 + 16*p2 + -15*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.287588415318201 + 16*p2 + -15*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3519945553752954 + 16*p2 + -16*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.28068058517005 + 16*p2 + -16*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2818208087703775 + 16*p2 + -16*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1390327791758934 + 16*p2 + -16*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3528715663277895 + 16*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281560580178905 + 16*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1187770114760225 + 16*p2 + -16*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.86128459816697 + 16*p2 + -17*p3 + 6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4581058445109374 + 16*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.705716935720166 + 16*p2 + -17*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2820443429559742 + 16*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5719876885423079 + 16*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1619101804502344 + 16*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.394341968621943 + 16*p2 + -19*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3479860236889736 + 16*p2 + -19*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9284048572522573 + 16*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042262658231534 + 16*p2 + -20*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8546475921288273 + 16*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9006700046417405 + 16*p2 + -20*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0518071402840399 + 16*p2 + -20*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.51421084108138 + 16*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.55325421401266 + 16*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.655803494671173 + 16*p2 + -21*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.655803494671173 + 16*p2 + -21*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.039110768135357 + 16*p2 + -22*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.039110768135357 + 16*p2 + -22*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9784092639485453 + 16*p2 + -22*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9784092639485453 + 16*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8368166103587525 + 16*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8368166103587525 + 16*p2 + -22*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.56804410859911 + 16*p2 + -26*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.56804410859911 + 16*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2603792388817516 + 15*p2 + -9*p3 + -4*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2603792388817516 + 15*p2 + -9*p3 + -4*p4 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5798999556749823 + 15*p2 + -10*p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.584135205631138 + 15*p2 + -10*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.835420206417498 + 15*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.03962075334279 + 15*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8533288468409705 + 15*p2 + -11*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44904738566521146 + 15*p2 + -11*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.189371748493155 + 15*p2 + -11*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.257414439583072 + 15*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.405654171130769 + 15*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9446046882966845 + 15*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.946022593781005 + 15*p2 + -12*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5835754700417066 + 15*p2 + -12*p3 + -1*p6 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.921641914926971 + 15*p2 + -12*p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.424581394204021 + 15*p2 + -12*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6184850136430056 + 15*p2 + -12*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6184850136430056 + 15*p2 + -12*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.27994609963091005 + 15*p2 + -13*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5906712806486154 + 15*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1519044078764265 + 15*p2 + -13*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0017589428201598852 + 15*p2 + -13*p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0017589428201598852 + 15*p2 + -13*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278792837051093 + 15*p2 + -13*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2788828960404945 + 15*p2 + -13*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278792837051093 + 15*p2 + -13*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0868467619045115 + 15*p2 + -13*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9604255403739712 + 15*p2 + -13*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.848762865489878 + 15*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.800736125362291 + 15*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2560139873912717 + 15*p2 + -14*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6446616193007083 + 15*p2 + -14*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.073181523494781 + 15*p2 + -14*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.843851368435107 + 15*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.16289125551773 + 15*p2 + -14*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.021298601927937203 + 15*p2 + -14*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.112691746506019 + 15*p2 + -14*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.112691746506019 + 15*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.444443573160934 + 15*p2 + -15*p3 + 2*p4 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.054082568521449 + 15*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282008955263742 + 15*p2 + -15*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281589552644489 + 15*p2 + -15*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139536481198019 + 15*p2 + -15*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00212685822648029 + 15*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1405068842621278 + 15*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.120267697190151 + 15*p2 + -15*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -6*d + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -6*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6526048127544097 + 15*p2 + -15*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9579175277338057 + 15*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6103280343525683 + 15*p2 + -16*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.861474298460028 + 15*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.432165198869787 + 15*p2 + -16*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.744769899464016 + 15*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2896059819402397 + 15*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.717752900774843 + 15*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.749551054416928 + 15*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8294738441610037 + 15*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9374938508615767 + 15*p2 + -17*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.116807607443022 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09543460349904995 + 15*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3448639787230063 + 15*p2 + -18*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.813577576863398 + 15*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042764963990257 + 15*p2 + -19*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8522542221255675 + 15*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9011723104004645 + 15*p2 + -19*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.514309103118267 + 15*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0097361531976419 + 15*p2 + -20*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.429318749891026 + 15*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7680380714595614 + 14*p2 + -1*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.41417343828233716 + 14*p2 + -6*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6804574580928027 + 14*p2 + -8*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379078225641893 + 14*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379078225641893 + 14*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.526437753654543 + 14*p2 + -10*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9028422414287728 + 14*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.21763627453838572 + 14*p2 + -10*p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2480137471659805 + 14*p2 + -11*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.729014820804579 + 14*p2 + -11*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6189614885288 + 14*p2 + -11*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4494151265386067 + 14*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4847615345499958 + 14*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3425854428862109 + 14*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.279243481063957 + 14*p2 + -12*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1376508274741637 + 14*p2 + -12*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004969825045053853 + 14*p2 + -12*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004969825045053853 + 14*p2 + -12*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007070328799829028 + 14*p2 + -12*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007070328799829028 + 14*p2 + -12*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.55230336713449 + 14*p2 + -13*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.059894331899348 + 14*p2 + -13*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649059359410225 + 14*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649059359410225 + 14*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1632825583360273 + 14*p2 + -13*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02168990474623433 + 14*p2 + -13*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.053273782946074 + 14*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.053273782946074 + 14*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1712878600161503 + 14*p2 + -14*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.270212972981213 + 14*p2 + -14*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1202551308195363 + 14*p2 + -14*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.42108703651533713 + 14*p2 + -15*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1237271227988455 + 14*p2 + -15*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.258018008431678 + 14*p2 + -15*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2966564139865961 + 14*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8292612630581109 + 14*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0547284893826614 + 14*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2714339713326415 + 14*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9659069214227846 + 14*p2 + -17*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8669478000322574 + 14*p2 + -18*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.043227301709111 + 14*p2 + -18*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9016346481193178 + 14*p2 + -18*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9622187171424197 + 14*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4188933746700885 + 14*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054163543300424 + 14*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.730778650546644 + 13*p2 + -6*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.226910813643825 + 13*p2 + -9*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379367252166023 + 13*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.697362376660086 + 13*p2 + -9*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8549467500609356 + 13*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3079609285483964 + 13*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.153956416972946 + 13*p2 + -9*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.893473347997333 + 13*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.687979295071806 + 13*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.687979295071806 + 13*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7862605390791755 + 13*p2 + -10*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7862605390791755 + 13*p2 + -10*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.335728925418068 + 13*p2 + -10*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.477321579007861 + 13*p2 + -10*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2038928623747982 + 13*p2 + -10*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44943519782500463 + 13*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5536256200774847 + 13*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.482546737224165 + 13*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.46606923279406176 + 13*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2796592184917825 + 13*p2 + -11*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1380665649019885 + 13*p2 + -11*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18216751894643177 + 13*p2 + -11*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007496189137315645 + 13*p2 + -11*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007496189137315645 + 13*p2 + -11*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6318322360663902 + 13*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6793835485057339 + 13*p2 + -12*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.301387477989977 + 13*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9036833240936255 + 13*p2 + -12*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.912517516628787 + 13*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00032759830059933564 + 13*p2 + -13*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1201767655361223 + 13*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1107636812813406 + 13*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.752801904681693 + 13*p2 + -14*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3036002064156555 + 13*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3029195280073778 + 13*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6061186492626083 + 13*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8290066195202448 + 13*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.137333526616151 + 13*p2 + -15*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.044999326000344 + 13*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.042796222380502 + 13*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8868892424321602 + 13*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9020561451336745 + 13*p2 + -17*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1800481826323685 + 13*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.978578552387672 + 13*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6560075236607315 + 13*p2 + -18*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4078566106121775 + 13*p2 + -20*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4078566106121775 + 13*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054311372688068 + 13*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.25406531028478696 + 13*p2 + -23*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4179667368786216 + 12*p2 + p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.792194300971789 + 12*p2 + -6*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.609233704413251 + 12*p2 + -6*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1916354235363587 + 12*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.027743421720485 + 12*p2 + -7*p3 + -4*p6 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.396296596844518 + 12*p2 + -7*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.254703943254725 + 12*p2 + -7*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4752505458224947 + 12*p2 + -7*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.563294569600608 + 12*p2 + -8*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.315196557025022 + 12*p2 + -9*p3 + p5 + -3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.784812124326211 + 12*p2 + -9*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.421568789880471 + 12*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8305912039481305 + 12*p2 + -9*p3 + -2*p6 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.642999052648525 + 12*p2 + -9*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.501406399058732 + 12*p2 + -9*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4765710789311868 + 12*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45730767994905025 + 12*p2 + -10*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007905643379833514 + 12*p2 + -10*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007905643379833514 + 12*p2 + -10*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8019726911373288 + 12*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4295190796958888 + 12*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.042473860067658 + 12*p2 + -11*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.021039420534016046 + 12*p2 + -11*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0056632613535044 + 12*p2 + -11*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143811490667854 + 12*p2 + -12*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1421926977866286 + 12*p2 + -12*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20398727618901444 + 12*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0796491731072626 + 12*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1167725008301073 + 12*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1386016573557005 + 12*p2 + -12*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6132261535755046 + 12*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.742334816091633 + 12*p2 + -13*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6131228300837865 + 12*p2 + -13*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.752806093471897 + 12*p2 + -13*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5654235052255574 + 12*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6070801511475319 + 12*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8287099135474056 + 12*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.030701963328807 + 12*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.856729637885115 + 12*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.715334389532039 + 12*p2 + -14*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.467841648642729 + 12*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.38856355802939 + 12*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9201267691083646 + 12*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.044028756901627 + 12*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.044028756901627 + 12*p2 + -16*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.012989123352459 + 12*p2 + -17*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.012989123352459 + 12*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.491566266729254 + 12*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.656012585115562 + 12*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9029968776004994 + 12*p2 + -18*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9029968776004994 + 12*p2 + -18*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4762597036943146 + 12*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4897547470070264 + 12*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4897547470070264 + 12*p2 + -18*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311267288781691 + 12*p2 + -18*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311295912181424 + 12*p2 + -18*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311267288781691 + 12*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9132330676288376 + 12*p2 + -21*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9132330676288376 + 12*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0545613038369535 + 12*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.127550424061631 + 11*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2495018148862305 + 11*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7057656049113465 + 11*p2 + -6*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.90420536906953 + 11*p2 + -6*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0849233750755474 + 11*p2 + -7*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9865372622750828 + 11*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2633529053663496 + 11*p2 + -8*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.226523333553249 + 11*p2 + -8*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8973467487079683 + 11*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.861773107326286 + 11*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5133790086615626 + 11*p2 + -8*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4377104504709073 + 11*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45656347155599986 + 11*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0045563565452563974 + 11*p2 + -9*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0045563565452563974 + 11*p2 + -9*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8028409924401962 + 11*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.802312157676842 + 11*p2 + -10*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.175119564354295 + 11*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0780415418349336 + 11*p2 + -10*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.049889240460606 + 11*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0129962707040754 + 11*p2 + -11*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1619191071243695 + 11*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.257107993759688 + 11*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20148063431730023 + 11*p2 + -11*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1937863503098832 + 11*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.116321856817242 + 11*p2 + -11*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.13451828503773455 + 11*p2 + -11*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6181160425408172 + 11*p2 + -12*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.613193341385567 + 11*p2 + -12*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.553765936051028 + 11*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4641731155930118 + 11*p2 + -12*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.646545885259478 + 11*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1730785593303796 + 11*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0272076141384394 + 11*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0197520911726947 + 11*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.226757067133358 + 11*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.085703571244456 + 11*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5602936249897789 + 11*p2 + -13*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.753465976967127 + 11*p2 + -14*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.379547361646512 + 11*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.463158581193777 + 11*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9921046710593866 + 11*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4990892914454677 + 11*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.013314278192105 + 11*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.134256677179494 + 11*p2 + -16*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9251498266956044 + 11*p2 + -16*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.511498101319955 + 11*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.65598396171583 + 11*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9033574626239614 + 11*p2 + -17*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9033574626239614 + 11*p2 + -17*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311267637847542 + 11*p2 + -17*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6395672202386455 + 11*p2 + -18*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6395672202386455 + 11*p2 + -18*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8848051617689876 + 11*p2 + -18*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8848051617689876 + 11*p2 + -18*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.383840705571809 + 11*p2 + -18*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054971107145322 + 11*p2 + -20*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054663056532345 + 11*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.224101863749032 + 10*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779115195114778 + 10*p2 + -3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.656701275041766 + 10*p2 + -3*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381057778079505 + 10*p2 + -4*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381057778079505 + 10*p2 + -4*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.127269958149152 + 10*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5914702838818617 + 10*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.24535316725424 + 10*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2374668970291034 + 10*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2374668970291034 + 10*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379268117464511 + 10*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.856415636156048 + 10*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.807256351876841 + 10*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.495878085649673 + 10*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4536262569578186 + 10*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.280693675139438 + 10*p2 + -8*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0047649233908697184 + 10*p2 + -8*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0047649233908697184 + 10*p2 + -8*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.15061196607037425 + 10*p2 + -8*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4973127292981792 + 10*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7157481901010534 + 10*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.80264307210302 + 10*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8026018823326728 + 10*p2 + -9*p3 + d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944109014789119 + 10*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.942986942613011 + 10*p2 + -9*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.158201730350547 + 10*p2 + -9*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.087152709624069 + 10*p2 + -9*p3 + -2*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.289641795183171 + 10*p2 + -9*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.289641795183171 + 10*p2 + -9*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.048381625052733 + 10*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0134566885607517 + 10*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283055454683238 + 10*p2 + -10*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1422139908035027 + 10*p2 + -10*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3402046647485153 + 10*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2831099089558995 + 10*p2 + -10*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.140665709224059 + 10*p2 + -10*p3 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0904063354190043 + 10*p2 + -10*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1193424981536686 + 10*p2 + -10*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.15111095570351946 + 10*p2 + -10*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.060300112452119 + 10*p2 + -11*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.613219346791422 + 10*p2 + -11*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.612332894064334 + 10*p2 + -11*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.062764176788401 + 10*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4994415073868368 + 10*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3186835163443158 + 10*p2 + -11*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5869380043819663 + 10*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8279962484162655 + 10*p2 + -11*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0139082052382427 + 10*p2 + -12*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0007206719430983 + 10*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.180202154665661 + 10*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0869945912921555 + 10*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.84190969814058 + 10*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0284567547824075 + 10*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2026474039188915 + 10*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.044660740623773 + 10*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9526684330117992 + 10*p2 + -15*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0107493168284245 + 10*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.024999772634666 + 10*p2 + -15*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8995521212558383 + 10*p2 + -16*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8995521212558383 + 10*p2 + -16*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.041582852487882 + 10*p2 + -16*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8995519467229129 + 10*p2 + -16*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.041582852487882 + 10*p2 + -16*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8995519467229129 + 10*p2 + -16*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7755171563702076 + 10*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.871883276084314 + 10*p2 + -16*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.370829101465267 + 10*p2 + -17*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1678104490178431 + 10*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054740374618209 + 10*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.831393914864389 + 9*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.178765399625419 + 9*p2 + -3*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6295545728942209 + 9*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6295545728942209 + 9*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.272376474623669 + 9*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.272376474623669 + 9*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.256096192399041 + 9*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379170204493473 + 9*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379170204493473 + 9*p2 + -5*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.374878265329894 + 9*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.815596931306272 + 9*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2248707152778024 + 9*p2 + -6*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.513054411413958 + 9*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5970118872881858 + 9*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4539145853502481 + 9*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004943645106273938 + 9*p2 + -7*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.477941145397369 + 9*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9444415000116235 + 9*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944434867760466 + 9*p2 + -8*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9433384519243635 + 9*p2 + -8*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.451580066936047 + 9*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1641735489191705 + 9*p2 + -8*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.15837975393425 + 9*p2 + -8*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.289858390543345 + 9*p2 + -8*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.289858390543345 + 9*p2 + -8*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.066759567515434 + 9*p2 + -9*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.013906459908991 + 9*p2 + -9*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1424003919676164 + 9*p2 + -9*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141649725856333 + 9*p2 + -9*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1024213565226586 + 9*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3369237948206165 + 9*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1694034280227714 + 9*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1171458267571084 + 9*p2 + -9*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.255554999791263 + 9*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6132399416765955 + 9*p2 + -10*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6163502929365747 + 9*p2 + -10*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.857579255666669 + 9*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3216334718460365 + 9*p2 + -10*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3219706694575217 + 9*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6416261511639565 + 9*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3089252059634902 + 9*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.819417606076863 + 9*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0008035495876181893 + 9*p2 + -11*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0008035495876181893 + 9*p2 + -11*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.138576550109422 + 9*p2 + -11*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5711867569485674 + 9*p2 + -11*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.998872717331087 + 9*p2 + -11*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1424576642620305 + 9*p2 + -11*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.138128549585384 + 9*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8817152223629394 + 9*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.52667426276482 + 9*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14442634466838114 + 9*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.452206282573346 + 9*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5916648795951422 + 9*p2 + -12*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9788551785757966 + 9*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.527951669244356 + 9*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.058341329432607 + 9*p2 + -12*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8867623484972237 + 9*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.165803528904242 + 9*p2 + -13*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3108543183857195 + 9*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.813288916401751 + 9*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.006048123450203 + 9*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.959725165240096 + 9*p2 + -14*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.959725165240096 + 9*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9004118704453705 + 9*p2 + -15*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9004118704453705 + 9*p2 + -15*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.480053002290599 + 9*p2 + -15*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.480053002290599 + 9*p2 + -15*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.474354851348688 + 9*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.474354851348688 + 9*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9020762419150223 + 9*p2 + -15*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.637869713008156 + 9*p2 + -16*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4962770594183628 + 9*p2 + -16*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.35715235238079 + 9*p2 + -16*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1044860640311343 + 8*p2 + -1*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.829955938093672 + 8*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.829955938093672 + 8*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2554991152619337 + 8*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2376555671212444 + 8*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2352311302572994 + 8*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3792480461781125 + 8*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.057316306061226 + 8*p2 + -4*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8409562077735826 + 8*p2 + -4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6890230019644986 + 8*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6764896180730021 + 8*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6890230019644986 + 8*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.839936594922883 + 8*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.595665889369047 + 8*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4621731343048348 + 8*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00509409248779585 + 8*p2 + -6*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8030504319504357 + 8*p2 + -7*p3 + d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8030453704956049 + 8*p2 + -7*p3 + d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8029259899747685 + 8*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.94365156399217 + 8*p2 + -7*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8021955696828087 + 8*p2 + -7*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.486813726677758 + 8*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06653247468479945 + 8*p2 + -7*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.014351344335324 + 8*p2 + -8*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00008115781021773631 + 8*p2 + -8*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.14165531090994 + 8*p2 + -8*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0001975712713257581 + 8*p2 + -8*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1414870611700474 + 8*p2 + -8*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02487268717017119 + 8*p2 + -8*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1383231283020323 + 8*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1459505661990974 + 8*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.13634793918755 + 8*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.61326594708245 + 8*p2 + -9*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6225355652727171 + 8*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.466921336528152 + 8*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.768159405835841 + 8*p2 + -9*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.053713422886334 + 8*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3258704331381779 + 8*p2 + -9*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8238250860369238 + 8*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.097973235885975 + 8*p2 + -10*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.943612277087368 + 8*p2 + -10*p3 + 3*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0274745004760195 + 8*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.107684596909921 + 8*p2 + -10*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.102949518649262 + 8*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06591742065639664 + 8*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8421456411604997 + 8*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.355886282043076 + 8*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.920639538344284 + 8*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.620480823137611 + 8*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.087224417161377 + 8*p2 + -11*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3369225730901397 + 8*p2 + -11*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3369225730901397 + 8*p2 + -11*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.661464644632942 + 8*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.677436850749642 + 8*p2 + -12*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3628438455765925 + 8*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.678526783372563 + 8*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.824790636172395 + 8*p2 + -12*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.95277107536845 + 8*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.927583190233685 + 8*p2 + -12*p3 + -2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.927583190233685 + 8*p2 + -12*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.102465879415218 + 8*p2 + -13*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.102465879415218 + 8*p2 + -13*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.014072972817947 + 8*p2 + -13*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.037487786463927 + 8*p2 + -13*p3 + p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.037487786463927 + 8*p2 + -13*p3 + p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.14165881006676 + 8*p2 + -13*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.16573423083462 + 8*p2 + -13*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.143976258247559 + 8*p2 + -13*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.129052645945456 + 8*p2 + -13*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.947213397936374 + 8*p2 + -13*p3 + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9462162913347097 + 8*p2 + -13*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.124698223994655 + 8*p2 + -13*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.898663608126914 + 8*p2 + -13*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.135439329277278 + 8*p2 + -13*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6460966460083317 + 8*p2 + -13*p3 + -1*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6460966460083317 + 8*p2 + -13*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7337440969871248 + 8*p2 + -14*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7337440969871248 + 8*p2 + -14*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042604568231999 + 8*p2 + -14*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042604568231999 + 8*p2 + -14*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.473562995467058 + 8*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.473562995467058 + 8*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.940731985717751 + 8*p2 + -14*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4302037893580795 + 8*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.428684148175001 + 8*p2 + -15*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.428684148175001 + 8*p2 + -15*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8110353132783097 + 8*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.367083424862612 + 8*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.821982052340085 + 7*p2 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8742246267775475 + 7*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8742246267775475 + 7*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.852710110624505 + 7*p2 + -2*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377037382085994 + 7*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.237461835574273 + 7*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.139471222880628 + 7*p2 + -3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.436678105214986 + 7*p2 + -4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.874935158814351 + 7*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.593973967192164 + 7*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005217312732986649 + 7*p2 + -5*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5335420993781523 + 7*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.803204893589237 + 7*p2 + -6*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9454038745611735 + 7*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8024385195146864 + 7*p2 + -6*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8023320544303147 + 7*p2 + -6*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0547360197933955 + 7*p2 + -7*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143864374144189 + 7*p2 + -7*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0004143411644234538 + 7*p2 + -7*p3 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1292524776464923 + 7*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0008976228343006836 + 7*p2 + -7*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.30648313277578304 + 7*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2789497421508464 + 7*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1381257315636315 + 7*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09736074886155088 + 7*p2 + -7*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8125708624525307 + 7*p2 + -7*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3962306064021592 + 7*p2 + -7*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125997098023989 + 7*p2 + -8*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125997098023989 + 7*p2 + -8*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20218766719728312 + 7*p2 + -8*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6133160380319824 + 7*p2 + -8*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.470151766440669 + 7*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3290881221471547 + 7*p2 + -8*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.452661621978558 + 7*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8233819469398425 + 7*p2 + -8*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.002780309498426967 + 7*p2 + -9*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5695215383092398 + 7*p2 + -9*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.710579423016222 + 7*p2 + -9*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5695215383092398 + 7*p2 + -9*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.710579423016222 + 7*p2 + -9*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.090127631832411 + 7*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9485349782426176 + 7*p2 + -9*p3 + d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4209076251665487 + 7*p2 + -10*p3 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.731592314545608 + 7*p2 + -10*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.954017581021907 + 7*p2 + -10*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.954017581021907 + 7*p2 + -10*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3358596760739925 + 7*p2 + -10*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3358596760739925 + 7*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1916898608123876 + 7*p2 + -10*p3 + -2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1916898608123876 + 7*p2 + -10*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0277709894243496 + 7*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.646975942885486 + 7*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.045279285310681 + 7*p2 + -11*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.664800632971937 + 7*p2 + -12*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.664800632971937 + 7*p2 + -12*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0950197812274345 + 7*p2 + -12*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0950197812274345 + 7*p2 + -12*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.880270770877356 + 7*p2 + -12*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.151754841657847 + 7*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1516251636944235 + 7*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5909407594851235 + 7*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9002020818692809 + 7*p2 + -13*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.680913712654224 + 7*p2 + -13*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7610338991366998 + 7*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8390684596546256 + 7*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8390684596546256 + 7*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.865559416107246 + 7*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.048881121288021 + 7*p2 + -13*p3 + -1*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.638444449930838 + 7*p2 + -14*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.638444449930838 + 7*p2 + -14*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.49477380733362 + 7*p2 + -14*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.636366460923412 + 7*p2 + -14*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.634760408945728 + 7*p2 + -14*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.328002910411532 + 7*p2 + -14*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.054730426241472 + 7*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1673149585415183 + 6*p2 + 4*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.380860381341105 + 6*p2 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.260596349342383 + 6*p2 + -1*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.375761227398478 + 6*p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.23772625295595 + 6*p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.894112662102339 + 6*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.602189581047152 + 6*p2 + -4*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.591842396576704 + 6*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.43405954524663537 + 6*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278769798704966 + 6*p2 + -4*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005314702105247933 + 6*p2 + -4*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005314702105247933 + 6*p2 + -4*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4235928142207421 + 6*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5031847150335893 + 6*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8033293355649045 + 6*p2 + -5*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.945430054499952 + 6*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4000937266668405 + 6*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8025647068196056 + 6*p2 + -5*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06783047604950762 + 6*p2 + -5*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.831411708724444 + 6*p2 + -5*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8981330110376753 + 6*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141252663451505 + 6*p2 + -6*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141846249930108 + 6*p2 + -6*p3 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0015248941674674459 + 6*p2 + -6*p3 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0036629225011604993 + 6*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126177565068645 + 6*p2 + -7*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126177565068645 + 6*p2 + -7*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0504396748151024 + 6*p2 + -7*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0504396748151024 + 6*p2 + -7*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.117433282484912 + 6*p2 + -7*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.117433282484912 + 6*p2 + -7*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.262888698775219 + 6*p2 + -7*p3 + p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6134223285834288 + 6*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.470342007329136 + 6*p2 + -7*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.755029293873088 + 6*p2 + -7*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.751937443103181 + 6*p2 + -7*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.751937443103181 + 6*p2 + -7*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3316186750296213 + 6*p2 + -7*p3 + d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6032772532403612 + 6*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.953608667374798 + 6*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.731337994578642 + 6*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8229960546422268 + 6*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1773134602206845 + 6*p2 + -8*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0029885272781898903 + 6*p2 + -8*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9575264164450665 + 6*p2 + -8*p3 + 4*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2807544125974095 + 6*p2 + -8*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9181625840664864 + 6*p2 + -8*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.06058671251193 + 6*p2 + -8*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.058235055877794 + 6*p2 + -8*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.065830379716622 + 6*p2 + -8*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0599318649765825 + 6*p2 + -8*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6830122880485052 + 6*p2 + -8*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.942850964467648 + 6*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.058719908343996 + 6*p2 + -8*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3800002405941386 + 6*p2 + -9*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1015507862917633 + 6*p2 + -9*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1598287092826225 + 6*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1598287092826225 + 6*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1241529576413822 + 6*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0015306622523157 + 6*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.143710078539996 + 6*p2 + -9*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.333499109762353 + 6*p2 + -9*p3 + -2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.333499109762353 + 6*p2 + -9*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115040453077061 + 6*p2 + -10*p3 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115207830152327 + 6*p2 + -10*p3 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.042518365963584 + 6*p2 + -10*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0507348099916147 + 6*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9024214425461169 + 6*p2 + -10*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.509704392454414 + 6*p2 + -10*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.509704392454414 + 6*p2 + -10*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.720902845513893 + 6*p2 + -11*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.720902845513893 + 6*p2 + -11*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8423205486465 + 6*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8423205486465 + 6*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9625791191346402 + 6*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.195131850125195 + 6*p2 + -11*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7414165643788919 + 6*p2 + -11*p3 + -1*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.865116085480606 + 6*p2 + -11*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7414165643788919 + 6*p2 + -11*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5428174941515844 + 6*p2 + -12*p3 + 2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.82935222020709 + 6*p2 + -12*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8433466107171137 + 6*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8433466107171137 + 6*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7017539571273209 + 6*p2 + -12*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.492215329183121 + 6*p2 + -13*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6338079827729155 + 6*p2 + -13*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3928617548833264 + 6*p2 + -14*p3 + 4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.646275742284535 + 5*p2 + 31*p3 + -52*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.680909506867386 + 5*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6655317683922304 + 5*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377297436144543 + 5*p2 + -1*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2935383917762246 + 5*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.234612236504542 + 5*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2807746329217813 + 5*p2 + -1*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377297436144543 + 5*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.362310489953817 + 5*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.03463173817428 + 5*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.062065172422978 + 5*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.878623048022132 + 5*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6001484184869446 + 5*p2 + -3*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14072624665415318 + 5*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5891380089007385 + 5*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4537185848752491 + 5*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709654747578516 + 5*p2 + -3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5680620939887222 + 5*p2 + -3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.27904852778651 + 5*p2 + -3*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005385737005804103 + 5*p2 + -3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1361781186513316 + 5*p2 + -3*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.462317830598142 + 5*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.587280638009082 + 5*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8028762480910867 + 5*p2 + -4*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.948976214474155 + 5*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.355643681277049 + 5*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.802756169438549 + 5*p2 + -4*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06850242781152543 + 5*p2 + -4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2100950814013185 + 5*p2 + -4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2100950814013185 + 5*p2 + -4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9813239468027426 + 5*p2 + -4*p3 + -3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.156540692003107 + 5*p2 + -4*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.156540692003107 + 5*p2 + -4*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9023010318243627 + 5*p2 + -5*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.989075311575017 + 5*p2 + -5*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00031049407392979124 + 5*p2 + -5*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1304497735133605 + 5*p2 + -5*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.316548123001134 + 5*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.316548123001134 + 5*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.197067245732732 + 5*p2 + -5*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.222733559608735 + 5*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01762974530731992 + 5*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9492432158564436 + 5*p2 + -5*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.261242836293955 + 5*p2 + -5*p3 + -4*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.561778410577717 + 5*p2 + -5*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126322776462412 + 5*p2 + -6*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126322776462412 + 5*p2 + -6*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7619582170102391 + 5*p2 + -6*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9035508706000326 + 5*p2 + -6*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7619582170102391 + 5*p2 + -6*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9035508706000326 + 5*p2 + -6*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.490685041491607 + 5*p2 + -6*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.490685041491607 + 5*p2 + -6*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2730916765578693 + 5*p2 + -6*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.509847002850935 + 5*p2 + -6*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.656723108654049 + 5*p2 + -6*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1375804907053086 + 5*p2 + -6*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1375804907053086 + 5*p2 + -6*p3 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.613643810865507 + 5*p2 + -6*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4744908294940515 + 5*p2 + -6*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3279976489288257 + 5*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3322370451836028 + 5*p2 + -6*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.608111989801311 + 5*p2 + -6*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6374371864262447 + 5*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.935363169907375 + 5*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.77821389859073 + 5*p2 + -6*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.05971801115331278 + 5*p2 + -6*p3 + -1*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8302744266888937 + 5*p2 + -6*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.971867080278687 + 5*p2 + -6*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16406461487889615 + 5*p2 + -6*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1642730071915843 + 5*p2 + -6*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.239240334580372 + 5*p2 + -7*p3 + 2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.88593877011479 + 5*p2 + -7*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.88593877011479 + 5*p2 + -7*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.13981747920759 + 5*p2 + -7*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.583979156199377 + 5*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.096128073800768 + 5*p2 + -7*p3 + 3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.401654906686116 + 5*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.11379080583095 + 5*p2 + -7*p3 + d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7205419199228977 + 5*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.112038669794872 + 5*p2 + -7*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9373489885336603 + 5*p2 + -7*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.620046917288932 + 5*p2 + -7*p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0571478647917756 + 5*p2 + -8*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.729617474496976 + 5*p2 + -8*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2502704493904924 + 5*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.271589646203603 + 5*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2501954002326565 + 5*p2 + -8*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.112694696569114 + 5*p2 + -8*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5658535628515655 + 5*p2 + -8*p3 + -1*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5658535628515655 + 5*p2 + -8*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19208674868429113 + 5*p2 + -8*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19208674868429113 + 5*p2 + -8*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.474216106171471 + 5*p2 + -9*p3 + 5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.474216106171471 + 5*p2 + -9*p3 + 5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.731211624242481 + 5*p2 + -9*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0350598504431616 + 5*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2446684745886825 + 5*p2 + -9*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9038730328850006 + 5*p2 + -9*p3 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7827967501473507 + 5*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0454656864747935 + 5*p2 + -9*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.895658823791731 + 5*p2 + -10*p3 + 3*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.895658823791731 + 5*p2 + -10*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.580897279301156 + 5*p2 + -10*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4781074922717172 + 5*p2 + -10*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8854381671937356 + 5*p2 + -10*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8854381671937356 + 5*p2 + -10*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.543845650617301 + 5*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.055372349842039 + 5*p2 + -10*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5137889950011734 + 5*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.872475283268273 + 5*p2 + -11*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1688293722351575 + 5*p2 + -11*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1688293722351575 + 5*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9085910324139417 + 5*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.817983136961282 + 5*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.632785568897097 + 5*p2 + -12*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8965498483681404 + 5*p2 + -14*p3 + 15*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8472355448580915 + 4*p2 + 7*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.966362294821263 + 4*p2 + 5*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8184222787977165 + 4*p2 + 2*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8171638794103955 + 4*p2 + p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8171638794103955 + 4*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0320028892616602 + 4*p2 + p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.25575847118878 + 4*p2 + p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.25575847118878 + 4*p2 + p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.378015320127429 + 4*p2 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.466274325977804 + 4*p2 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4850088647016366 + 4*p2 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2690041154496987 + 4*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.1195278691168635 + 4*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.372094814238814 + 4*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.048749008361963 + 4*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45771067647333574 + 4*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5969017570123847 + 4*p2 + -2*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.949945404306104 + 4*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3076146552248007 + 4*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1427430000997827 + 4*p2 + -2*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.271181273151902 + 4*p2 + -2*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.271181273151902 + 4*p2 + -2*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.94504294047186 + 4*p2 + -3*p3 + d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.803210827708694 + 4*p2 + -3*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8029066168200711 + 4*p2 + -3*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3447664148178198 + 4*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2107811703302773 + 4*p2 + -3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06918851674048442 + 4*p2 + -3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1614703829736817 + 4*p2 + -3*p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1491771563872595 + 4*p2 + -3*p3 + -1*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9461512075502436 + 4*p2 + -4*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9891234826623716 + 4*p2 + -4*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0006738716241950106 + 4*p2 + -4*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142008914616394 + 4*p2 + -4*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141896515412566 + 4*p2 + -4*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0014271557293557631 + 4*p2 + -4*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19100394641635385 + 4*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04657131856266549 + 4*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1424661908804166 + 4*p2 + -4*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1422754263931734 + 4*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.163863769973575 + 4*p2 + -4*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126433255804063 + 4*p2 + -5*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126433255804063 + 4*p2 + -5*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.664502696770305 + 4*p2 + -5*p3 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8708171949839287 + 4*p2 + -5*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.012409848573721 + 4*p2 + -5*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0950530830228806 + 4*p2 + -5*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4769997402937936 + 4*p2 + -5*p3 + 3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6140911387527932 + 4*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5462955692883253 + 4*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.474349283291715 + 4*p2 + -5*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6282611178838846 + 4*p2 + -5*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.335924925893067 + 4*p2 + -5*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.335931034545449 + 4*p2 + -5*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3122299869021414 + 4*p2 + -6*p3 + p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9575717695106687 + 4*p2 + -6*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005461309762415456 + 4*p2 + -6*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005461309762415456 + 4*p2 + -6*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5605474043613357 + 4*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8752580107327032 + 4*p2 + -6*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3392227425113434 + 4*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.062761367264965 + 4*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.016580329817995 + 4*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.941905719639717 + 4*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.032816080651748 + 4*p2 + -6*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9415479016481085 + 4*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9047319094099069 + 4*p2 + -6*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8043405793335097 + 4*p2 + -7*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.21038478056219967 + 4*p2 + -7*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.447638564391318 + 4*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3164067428334056 + 4*p2 + -7*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9612542481977684 + 4*p2 + -8*p3 + 3*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.102608455818472 + 4*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9038983401591545 + 4*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.045490993748947 + 4*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.658706666850624 + 4*p2 + -9*p3 + 8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.658706666850624 + 4*p2 + -9*p3 + 8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.037361956723175 + 4*p2 + -9*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.037361956723175 + 4*p2 + -9*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8960344101484436 + 4*p2 + -9*p3 + p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8960344101484436 + 4*p2 + -9*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9507279759494316 + 4*p2 + -9*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8807071031903545 + 4*p2 + -9*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8807071031903545 + 4*p2 + -9*p3 + p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8934954796855674 + 4*p2 + -9*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.654899239585715 + 4*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.654899239585715 + 4*p2 + -9*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.804117385715447 + 4*p2 + -10*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.804117385715447 + 4*p2 + -10*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047492188269284 + 4*p2 + -10*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047492188269284 + 4*p2 + -10*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7309932835530566 + 4*p2 + -10*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.310314513543028 + 4*p2 + -10*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.04797757283258 + 4*p2 + -11*p3 + 5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.63171219140712 + 4*p2 + -11*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.996523172088686 + 4*p2 + -15*p3 + 14*p4 + -1*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.996523172088686 + 4*p2 + -15*p3 + 14*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3210610378446495 + 3*p2 + 7*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3210610378446495 + 3*p2 + 7*p3 + -19*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6971930882209594 + 3*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.405478250440485 + 3*p2 + 2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377149083158123 + 3*p2 + p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.379668670527843 + 3*p2 + p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381319053868529 + 3*p2 + p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6032469015080104 + 3*p2 + p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381319053868529 + 3*p2 + p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.378672262057879 + 3*p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3574638766556366 + 3*p2 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.815962918352098 + 3*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.815962918352098 + 3*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.360135120072448 + 3*p2 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.017917243526706 + 3*p2 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.553805721059657 + 3*p2 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.695398374649449 + 3*p2 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4589488130447005 + 3*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.642802694609359 + 3*p2 + -1*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1477102071509586 + 3*p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14307703062366436 + 3*p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.579485273943025 + 3*p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.564705310736678 + 3*p2 + -1*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8027055548902413 + 3*p2 + -2*p3 + 5*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.577678010997535 + 3*p2 + -2*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.344764844021493 + 3*p2 + -2*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8001545816555267 + 3*p2 + -2*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.487698434075592 + 3*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8032019265295085 + 3*p2 + -2*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8008698175829936 + 3*p2 + -2*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.449158771664756 + 3*p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.08351819349813346 + 3*p2 + -2*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.705351463774798 + 3*p2 + -2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5637588101850048 + 3*p2 + -2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4379106312377945 + 3*p2 + -2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7362619259626855 + 3*p2 + -2*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.273298191499964 + 3*p2 + -3*p3 + 6*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.16757327576913 + 3*p2 + -3*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.274920649572617 + 3*p2 + -3*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1934243945179692 + 3*p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.03642921027932644 + 3*p2 + -3*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.943128663348274 + 3*p2 + -3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.22787245606840725 + 3*p2 + -3*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9448334754666714 + 3*p2 + -4*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9448334754666714 + 3*p2 + -4*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.031041936470462 + 3*p2 + -4*p3 + 2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.031041936470462 + 3*p2 + -4*p3 + 2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5491121986318275 + 3*p2 + -4*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.941036188108058 + 3*p2 + -4*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.722254279448663 + 3*p2 + -4*p3 + 5*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4793030513076495 + 3*p2 + -4*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.718342472996167 + 3*p2 + -4*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6019103113701998 + 3*p2 + -4*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6019103113701998 + 3*p2 + -4*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5736073540881588 + 3*p2 + -4*p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.711565359510673 + 3*p2 + -4*p3 + d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.544590931702852 + 3*p2 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.761535706791598 + 3*p2 + -4*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.478238749529784 + 3*p2 + -4*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.717313601402116 + 3*p2 + -4*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.718342472996167 + 3*p2 + -4*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.724879254643662 + 3*p2 + -4*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5814065323836206 + 3*p2 + -4*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.72269357882139 + 3*p2 + -4*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3372951838888076 + 3*p2 + -4*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.71857652164886 + 3*p2 + -4*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.723320850154556 + 3*p2 + -4*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.733128029754438 + 3*p2 + -4*p3 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.995410856759756 + 3*p2 + -4*p3 + -1*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9352151404918556 + 3*p2 + -4*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.454638241349708 + 3*p2 + -5*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1734658563897136 + 3*p2 + -5*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1320935246028885 + 3*p2 + -5*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1320935246028885 + 3*p2 + -5*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1559547934715297 + 3*p2 + -5*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1559547934715297 + 3*p2 + -5*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9718227319190524 + 3*p2 + -5*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9542915977144704 + 3*p2 + -5*p3 + 3*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9542915977144704 + 3*p2 + -5*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.972008085885615 + 3*p2 + -5*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.972008085885615 + 3*p2 + -5*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.123554152171656 + 3*p2 + -5*p3 + 2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1239332376851894 + 3*p2 + -5*p3 + 2*p5 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.465968186728688 + 3*p2 + -5*p3 + p5 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5206041481660437 + 3*p2 + -5*p3 + 3*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5204619038320062 + 3*p2 + -5*p3 + 3*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1208834493502544 + 3*p2 + -5*p3 + 2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.120548520666797 + 3*p2 + -5*p3 + 2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.044346249289198 + 3*p2 + -5*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7678377161597492 + 3*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.282548760106434 + 3*p2 + -5*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8960860888909363 + 3*p2 + -5*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.885077075568131 + 3*p2 + -5*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1133994775177025 + 3*p2 + -5*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9738548442621004 + 3*p2 + -5*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.006259325286327 + 3*p2 + -5*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.04637255955413 + 3*p2 + -5*p3 + -2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.04637255955413 + 3*p2 + -5*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9047799059643367 + 3*p2 + -5*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9219963827997346 + 3*p2 + -6*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6854611510236617 + 3*p2 + -6*p3 + 3*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6525953709798156 + 3*p2 + -6*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6491958186627813 + 3*p2 + -6*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0349907184081495 + 3*p2 + -6*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2095061903150623 + 3*p2 + -6*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2352630782809273 + 3*p2 + -6*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7023428482135774 + 3*p2 + -6*p3 + p5 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.65870786308615 + 3*p2 + -6*p3 + 2*p6 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5492591383582117 + 3*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.437967545968043 + 3*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.17622680123176 + 3*p2 + -6*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0299563161807717 + 3*p2 + -6*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.17622680123176 + 3*p2 + -6*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.215954858330281 + 3*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.670817157464362 + 3*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.168096533977194 + 3*p2 + -6*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0974691508047334 + 3*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.057033728757012 + 3*p2 + -6*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1465963380223356 + 3*p2 + -6*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9070844387086701 + 3*p2 + -6*p3 + -1*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9070844387086701 + 3*p2 + -6*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1923424394197083 + 3*p2 + -6*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.059779472237933 + 3*p2 + -6*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.059779472237933 + 3*p2 + -6*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8246902797404045 + 3*p2 + -7*p3 + 6*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.740038843958951 + 3*p2 + -7*p3 + 4*p4 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.740038843958951 + 3*p2 + -7*p3 + 4*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.623448730035678 + 3*p2 + -7*p3 + 4*p4 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2378636018697653 + 3*p2 + -7*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.153602787771542 + 3*p2 + -7*p3 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.012010134181748582 + 3*p2 + -7*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.632047452159794 + 3*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9038800142020086 + 3*p2 + -7*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.632047452159794 + 3*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.677090743460655 + 3*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.045472667791802 + 3*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0188918013877537 + 3*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.221903263991978 + 3*p2 + -8*p3 + 4*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.207713588135289 + 3*p2 + -8*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.035233344669127 + 3*p2 + -8*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8936405165464082 + 3*p2 + -8*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8790804733241293 + 3*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.150085625757873 + 3*p2 + -9*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.905947531233921 + 3*p2 + -9*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047540184823714 + 3*p2 + -9*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.905947531233921 + 3*p2 + -9*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047540184823714 + 3*p2 + -9*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042855721111361 + 3*p2 + -9*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042176438966485 + 3*p2 + -9*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042176438966485 + 3*p2 + -9*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.310318353267382 + 3*p2 + -9*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.028896054155135 + 3*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6787896129612802 + 3*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.630625374881903 + 3*p2 + -10*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1267140622840754 + 3*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1267140622840754 + 3*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3481347257412435 + 2*p2 + 38*p3 + -56*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.171602202312751 + 2*p2 + 5*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1626442829302563 + 2*p2 + 4*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6744807441039566 + 2*p2 + 4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.240270244873657 + 2*p2 + 4*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381101062244955 + 2*p2 + 4*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.240270244873657 + 2*p2 + 4*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.382240064114806 + 2*p2 + 4*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3787223530074115 + 2*p2 + 4*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.438136459846369 + 2*p2 + 3*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3106432995808367 + 2*p2 + 3*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2476892904580343 + 2*p2 + 3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401459280771918 + 2*p2 + 3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4762183308927253 + 2*p2 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4762183308927253 + 2*p2 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.239249576327091 + 2*p2 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.362331267870232 + 2*p2 + 2*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.28703180432479 + 2*p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.466300331383659 + 2*p2 + 2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.466300331383659 + 2*p2 + 2*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.032456534327521 + 2*p2 + 2*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0580681599097193 + 2*p2 + 2*p3 + -8*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.314260711480103 + 2*p2 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9782779981921623 + 2*p2 + p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.344277407554678 + 2*p2 + p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0297200325933185 + 2*p2 + p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1563118793381704 + 2*p2 + p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.556976460711755 + 2*p2 + p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.698569114301549 + 2*p2 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.625005563728456 + 2*p2 + p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.109142087374996 + 2*p2 + p3 + -5*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4241068051871377 + 2*p2 + p3 + -8*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4241068051871377 + 2*p2 + p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2437361197022674 + 2*p2 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.068700365145335 + 2*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4067423499261209 + 2*p2 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1766538578047732 + 2*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.178919129139253 + 2*p2 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.582834386244677 + 2*p2 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142574226761115 + 2*p2 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0010782644118820968 + 2*p2 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0011074114103904022 + 2*p2 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1407898021338756 + 2*p2 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6490448561808 + 2*p2 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042903368599941 + 2*p2 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1962504146461652 + 2*p2 + -6*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944813255142298 + 2*p2 + -1*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3506467781336389 + 2*p2 + -1*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3380547511792755 + 2*p2 + -1*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7999015089139874 + 2*p2 + -1*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.49480157506536 + 2*p2 + -1*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1848537806931256 + 2*p2 + -1*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.605755829304385 + 2*p2 + -1*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4380558426315604 + 2*p2 + -1*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.298207347553184 + 2*p2 + -1*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.298207347553184 + 2*p2 + -1*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.298207347553184 + 2*p2 + -1*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.298207347553184 + 2*p2 + -1*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.290446741034192 + 2*p2 + -1*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.290446741034192 + 2*p2 + -1*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9447811325857445 + 2*p2 + -2*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9447811325857445 + 2*p2 + -2*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7032940611542307 + 2*p2 + -2*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0008176867545593435 + 2*p2 + -2*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281322866334782 + 2*p2 + -2*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2356877168879374 + 2*p2 + -2*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0010817550703860854 + 2*p2 + -2*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141183722946051 + 2*p2 + -2*p3 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1435645265786962 + 2*p2 + -2*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1393930151335048 + 2*p2 + -2*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.28300152400935 + 2*p2 + -2*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1370813265392385 + 2*p2 + -2*p3 + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.144953983196209 + 2*p2 + -2*p3 + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.152198321322462 + 2*p2 + -2*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.006424731509516326 + 2*p2 + -2*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.006416353929106754 + 2*p2 + -2*p3 + -6*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3432306996089898 + 2*p2 + -2*p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5088401054088263 + 2*p2 + -2*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3517716598331826 + 2*p2 + -2*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7918089322729488 + 2*p2 + -3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.472785293749003 + 2*p2 + -3*p3 + 2*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.27042939380846 + 2*p2 + -3*p3 + p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1430663926135438 + 2*p2 + -3*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1192067115378634 + 2*p2 + -3*p3 + p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5733544558795447 + 2*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3375513982230003 + 2*p2 + -3*p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5279535551132666 + 2*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.490017627585643 + 2*p2 + -3*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.332808640513631 + 2*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.478704403374216 + 2*p2 + -3*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5889985400968707 + 2*p2 + -3*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7334893129096 + 2*p2 + -3*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3596809429094954 + 2*p2 + -3*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.732209113903262 + 2*p2 + -3*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.739505288308299 + 2*p2 + -3*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.749050319454532 + 2*p2 + -3*p3 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7639056638879314 + 2*p2 + -3*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.252042341640384 + 2*p2 + -3*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.25247727768998 + 2*p2 + -3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.417232859921424 + 2*p2 + -3*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.417232859921424 + 2*p2 + -3*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0532152889211823 + 2*p2 + -4*p3 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.138564681870508 + 2*p2 + -4*p3 + 2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.138564681870508 + 2*p2 + -4*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1399661812598594 + 2*p2 + -4*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.149696723908945 + 2*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.33410750604464845 + 2*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1848000245521644 + 2*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.122339070943051 + 2*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2725703637069317 + 2*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.369708583088854 + 2*p2 + -4*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.390439080345266 + 2*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9048025952446128 + 2*p2 + -4*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.36176630479136 + 2*p2 + -4*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9175738760114724 + 2*p2 + -4*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.36176630479136 + 2*p2 + -4*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0039877367732732 + 2*p2 + -5*p3 + 5*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.658168398810992 + 2*p2 + -5*p3 + 4*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.658168398810992 + 2*p2 + -5*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.724860405087741 + 2*p2 + -5*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2641737507101958 + 2*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1810395211491844 + 2*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.04198670468016 + 2*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1059423667589985 + 2*p2 + -5*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19242028110434725 + 2*p2 + -5*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.401176005336002 + 2*p2 + -6*p3 + 8*p4 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.983286910114144 + 2*p2 + -6*p3 + 6*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6458917528524637 + 2*p2 + -6*p3 + 5*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.565956562772383 + 2*p2 + -6*p3 + 3*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7331210399391126 + 2*p2 + -6*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7331210399391126 + 2*p2 + -6*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7425915455262846 + 2*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.045415071926486 + 2*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.019900427162481 + 2*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.022425769552142 + 2*p2 + -7*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.022425769552142 + 2*p2 + -7*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8937511704209847 + 2*p2 + -7*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.991922284152553 + 2*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.015439059020116 + 2*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.655127877717725 + 2*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.604270196546771 + 2*p2 + -8*p3 + 9*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.604270196546771 + 2*p2 + -8*p3 + 9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.604270196546771 + 2*p2 + -8*p3 + 9*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.604270196546771 + 2*p2 + -8*p3 + 9*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.037775033665539276 + 2*p2 + -8*p3 + 7*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3025849398914537 + 2*p2 + -8*p3 + 7*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047562874103989 + 2*p2 + -8*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047562874103989 + 2*p2 + -8*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042903892198717 + 2*p2 + -8*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042830937435983 + 2*p2 + -8*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.629591267300096 + 2*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.114608633125168 + 2*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.023365088758932 + 2*p2 + -13*p3 + 15*p4 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.023365088758932 + 2*p2 + -13*p3 + 15*p4 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7158546636837415 + p2 + 37*p3 + -51*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4832504454802526 + p2 + 6*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4832504454802526 + p2 + 6*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6531189782537306 + p2 + 5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.240262739957873 + p2 + 5*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381104378370534 + p2 + 5*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381855393547666 + p2 + 5*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.425877109644069 + p2 + 5*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.237242796753148 + p2 + 5*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9914868584974466 + p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273480046309705 + p2 + 4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273480046309705 + p2 + 4*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2476926065836134 + p2 + 4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649307370696934 + p2 + 4*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649307370696934 + p2 + 4*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.303050810760394 + p2 + 4*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.237740913721667 + p2 + 3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.352092119280481 + p2 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377744240433053 + p2 + 3*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377410882545923 + p2 + 3*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2377410882545923 + p2 + 3*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5614397912078801 + p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2490197549468296 + p2 + 2*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.330803291196355 + p2 + 2*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.096114800800135 + p2 + 2*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.134298565081542 + p2 + 2*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.558713586916265 + p2 + 2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.700306240506058 + p2 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.651688872461279 + p2 + 2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4170324621300291 + p2 + p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23743598770471017 + p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.887993188678997 + p2 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.30092652803620873 + p2 + p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.001637816970071479 + p2 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1426908147551478 + p2 + p3 + -2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1426908147551478 + p2 + p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6541809941069359 + p2 + p3 + -1*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.753536837334758 + p2 + p3 + -5*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.982958132574652 + p2 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.625030015334618 + p2 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.988314539550705 + p2 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.945060742830231 + p2 + 3*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.945143645969702 + p2 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.486133920934106 + p2 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8039885464233825 + p2 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3327906636223354 + p2 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.07110000133726861 + p2 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.599082039310609 + p2 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4574893857208155 + p2 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4459188999776447 + p2 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4459188999776447 + p2 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.606962899015064 + p2 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01144709096505521 + p2 + -3*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01144709096505521 + p2 + -3*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6930915644787725 + p2 + -1*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.487667724779075 + p2 + -1*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.488623641610392 + p2 + -1*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8351479095592373 + p2 + -1*p3 + p5 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4994703053194947 + p2 + -1*p3 + p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1421132853056633 + p2 + -1*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142275775459024 + p2 + -1*p3 + 3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281227745890549 + p2 + -1*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0028808404633418406 + p2 + -1*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00037524578917878077 + p2 + -1*p3 + d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.267565483038863 + p2 + -1*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6026578443871453 + p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.138345468516458 + p2 + -1*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282883714284842 + p2 + -1*p3 + -4*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1375968968002774 + p2 + -1*p3 + -6*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141367680649211 + p2 + -1*p3 + -6*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.270365297733329 + p2 + -1*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6031871942509586 + p2 + -1*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5771678427588602 + p2 + -1*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.43557518916906723 + p2 + -1*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4200459476165225 + p2 + -1*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.134342564375325 + p2 + -2*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.134342564375325 + p2 + -2*p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126581957856333 + p2 + -2*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.126581957856333 + p2 + -2*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7930360732700259 + p2 + -2*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8833818457639855 + p2 + -2*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8833818457639855 + p2 + -2*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.853624680149183 + p2 + -2*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.947641718731447 + p2 + -2*p3 + p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.947641718731447 + p2 + -2*p3 + p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.207344276465567 + p2 + -2*p3 + 4*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4489041026319396 + p2 + -2*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.203554119461936 + p2 + -2*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4489041026319396 + p2 + -2*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7018241448582008 + p2 + -2*p3 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.203554119461936 + p2 + -2*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.260322890241863 + p2 + -2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5331160645077406 + p2 + -2*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.34140633243683 + p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.479149287800549 + p2 + -2*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.478767235227289 + p2 + -2*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.337416309738896 + p2 + -2*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4795761953355875 + p2 + -2*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.543764318274158 + p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.479538147157895 + p2 + -2*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.05316204788068 + p2 + -2*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.777235790582963 + p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5747767161886781 + p2 + -2*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5729947520190253 + p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4193425799279688 + p2 + -2*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5609352335177618 + p2 + -2*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8014611351335696 + p2 + -3*p3 + 6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8014611351335696 + p2 + -3*p3 + 6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1321453608816725 + p2 + -3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.243567903955642 + p2 + -3*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.243567903955642 + p2 + -3*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8580082406001757 + p2 + -3*p3 + p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5569787296397826 + p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9213684048365502 + p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.754466757258537 + p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.868246367487325 + p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.079516902644912 + p2 + -3*p3 + -1*d + -2*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.835734199648249 + p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9744838609245186 + p2 + -3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.307497211562775 + p2 + -3*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7197033062139475 + p2 + -3*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.783595787373864 + p2 + -4*p3 + 4*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.168410710239187 + p2 + -4*p3 + 3*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.76108663357506 + p2 + -4*p3 + 2*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.724259313693353 + p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5826666601035606 + p2 + -4*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0626351714617295 + p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.248742073062838 + p2 + -4*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.248742073062838 + p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.229746624612465 + p2 + -4*p3 + -1*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1924684521917023 + p2 + -4*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.772205611139057 + p2 + -5*p3 + 5*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.034317570410606 + p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.045330423457764 + p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0208701320948892 + p2 + -5*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8959180051856523 + p2 + -6*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8959180051856523 + p2 + -6*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.775457849168907 + p2 + -6*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6566136765099495 + p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.902239579238059 + p2 + -7*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047566190229569 + p2 + -7*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.902239579238059 + p2 + -7*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.047566190229569 + p2 + -7*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.042900925138988 + p2 + -7*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.73510076690965 + p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.74559804969577 + p2 + -8*p3 + 10*p4 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1058226456706284 + p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.618346775067931 + p2 + -37*p3 + 45*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2534745588245695 + 40*p3 + -48*p4 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.59449024408322 + 35*p3 + -44*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4522673436022158 + 35*p3 + -44*p4 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.182977202681382 + 34*p3 + -37*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.556595655363919 + 34*p3 + -43*p4 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.131087342289114 + 31*p3 + -37*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3876966274949745 + 30*p3 + -35*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.693307112641394 + 29*p3 + -31*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5168068268141629 + 28*p3 + -31*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9287881315559953 + 27*p3 + -29*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0367700815805576 + 20*p3 + -13*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8364916385503478 + 20*p3 + -16*p4 + -1*p7 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.728358393974587 + 20*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2421187315827606 + 20*p3 + -26*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.736710841642931 + 19*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.244487500941884 + 19*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.224461078004042 + 18*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743790071621945 + 18*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.248910688865213 + 18*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1073196060717472 + 18*p3 + -22*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.749061306530502 + 18*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6074695256053352 + 18*p3 + -23*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.236312561756785 + 17*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0947240969571963 + 17*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1111322778227288 + 17*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.751699371694891 + 17*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6101075907697245 + 17*p3 + -22*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.248794615971639 + 17*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.744980194642247 + 17*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748998657708673 + 16*p3 + -5*p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.651345557699096 + 16*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.698978227976532 + 16*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1043352760820784 + 16*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6134099367457397 + 16*p3 + -19*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7539506718970395 + 16*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.10884972772865395 + 16*p3 + -22*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.746257601121782 + 16*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.581990004450879 + 15*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2518215404933732 + 15*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11022941050235549 + 15*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.747374437310133 + 15*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1746617389965468 + 15*p3 + -25*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.612084542210092 + 14*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6148402255694324 + 14*p3 + -19*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2529781701886695 + 14*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.159615281010053 + 14*p3 + -21*p4 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7483764308337033 + 14*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.890469819385894 + 14*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.346796615797006 + 14*p3 + -22*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.863606575705505 + 14*p3 + -23*p4 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.863606575705505 + 14*p3 + -23*p4 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7079673377627371 + 14*p3 + -23*p4 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.863704139610692 + 14*p3 + -23*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1153547528820786 + 13*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6835830107139076 + 13*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5419692386401651 + 13*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0675929537349442 + 13*p3 + -15*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.861265365551931 + 13*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5896434392554823 + 13*p3 + -16*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1050389843381663 + 13*p3 + -17*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.25395433283931 + 13*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.749329031539441 + 13*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5467647052929449 + 12*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.163427969757669 + 12*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.54577285167567 + 12*p3 + -13*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.26996128800476 + 12*p3 + -14*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6887226308002303 + 12*p3 + -17*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.254992105612546 + 12*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1787580352492943 + 12*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2468772227503475 + 12*p3 + -21*p4 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.22034572366918168 + 12*p3 + -21*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7123915728836179 + 12*p3 + -21*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.193422457659159 + 12*p3 + -22*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.771431732148723 + 11*p3 + -12*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4410841634166953 + 11*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273276889984772 + 11*p3 + -13*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273265021745859 + 11*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.772017107081525 + 11*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1239758067223045 + 11*p3 + -15*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.265456061108269 + 11*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3554165884464144 + 11*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.759571155687236 + 11*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.256109465399673 + 11*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5243061575441321 + 11*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9565125546825834 + 11*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1613605932654143 + 11*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.161359895133714 + 11*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.625924479579631 + 10*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817498999623413 + 10*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.433795319394517 + 10*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748912263910698 + 10*p3 + -11*p4 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1341706324473706 + 10*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1286749396986906 + 10*p3 + -12*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6279555107318604 + 10*p3 + -13*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.597575088041171 + 10*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1252437884238786 + 10*p3 + -14*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.930573254314935 + 10*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.912387638637488 + 10*p3 + -15*p4 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18798382867870286 + 10*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8020285501717095 + 10*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.481870762706551 + 10*p3 + -17*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7382039453230627 + 10*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7202317664165014 + 10*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.258021299062307 + 9*p3 + -9*p4 + 6*d + -1*l + -4*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.258021299062307 + 9*p3 + -9*p4 + 2*d + l + -4*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.68993198643557 + 9*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.639405053656185 + 9*p3 + -10*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6393483304554954 + 9*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.27324826658504 + 9*p3 + -11*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1359187542261684 + 9*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6401646294449694 + 9*p3 + -11*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6307059751000783 + 9*p3 + -12*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.081771668010613 + 9*p3 + -12*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.2681314763186515 + 9*p3 + -13*p4 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5502408945607753 + 9*p3 + -13*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.2681314763186515 + 9*p3 + -13*p4 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0305078487227184 + 9*p3 + -14*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.842794056472566 + 9*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.678891574182863 + 9*p3 + -15*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.678891574182863 + 9*p3 + -15*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23695898922014014 + 9*p3 + -15*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.37972220964429587 + 9*p3 + -15*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.755109936582848 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.729269962446271 + 9*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7098514291885816 + 9*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.73345718185473 + 9*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.73345718185473 + 9*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.735800460908458 + 9*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2287383309069546 + 9*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.040786275718955 + 9*p3 + -19*p4 + 3*p6 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8549638457892885 + 8*p3 + -7*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.786755522953358 + 8*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6421391119294344 + 8*p3 + -9*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6421221822356897 + 8*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.23944315033777 + 8*p3 + -9*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115979789280484 + 8*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.524919657772841 + 8*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1370060943501605 + 8*p3 + -10*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.284514541439588 + 8*p3 + -10*p4 + 3*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.068553059356467 + 8*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6185755877328671 + 8*p3 + -11*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.754941503811714 + 8*p3 + -11*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.260936705543155 + 8*p3 + -12*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.121067913655557 + 8*p3 + -12*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6568681030233062 + 8*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9619551554287358 + 8*p3 + -13*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9619551554287358 + 8*p3 + -13*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7292430673791567 + 8*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4579716201931423 + 8*p3 + -13*p4 + -1*p6 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4579716201931423 + 8*p3 + -13*p4 + -1*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6662457740909056 + 8*p3 + -15*p4 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.837846397109013 + 8*p3 + -15*p4 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.837846397109013 + 8*p3 + -15*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.666952981503813 + 8*p3 + -15*p4 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4141488376382005 + 8*p3 + -16*p4 + 6*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1187407001292646 + 8*p3 + -16*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.15587710082486558 + 7*p3 + -8*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7009591341859627 + 7*p3 + -6*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1727045437699934 + 7*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.770307216511664 + 7*p3 + -6*p4 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1488818466778223 + 7*p3 + -7*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1487029504294926 + 7*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.954718347713217 + 7*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.1022220569187136 + 7*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.90087669411676 + 7*p3 + -8*p4 + 3*p5 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.639161929291382 + 7*p3 + -8*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8560761526199014 + 7*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3719642381158144 + 7*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1378628764799648 + 7*p3 + -9*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1378628764799648 + 7*p3 + -9*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1360032281619645 + 7*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.08416415685093 + 7*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.302588822107392 + 7*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.768973776464823 + 7*p3 + -10*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.772966042595834 + 7*p3 + -10*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7647168929242583 + 7*p3 + -10*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3449938567143045 + 7*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5191672270911933 + 7*p3 + -11*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6649416895687645 + 7*p3 + -11*p4 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5191672270911933 + 7*p3 + -11*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1648842299939492 + 7*p3 + -11*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.153791615399974 + 7*p3 + -11*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2038675551006444 + 7*p3 + -11*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.163308580738515 + 7*p3 + -12*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.742957715603353 + 7*p3 + -12*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8643889728159084 + 7*p3 + -13*p4 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.235595039904657 + 7*p3 + -13*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2561119088606256 + 7*p3 + -14*p4 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0651011556601886 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0651011556601886 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.703073294000486 + 6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5479985040361295 + 6*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.406395029404974 + 6*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09207589188651204 + 6*p3 + -6*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8313759124781437 + 6*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.35339618680598905 + 6*p3 + -8*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.494988840395782 + 6*p3 + -8*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.7234920754524925 + 6*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.405839009996872 + 6*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.595404588085074 + 6*p3 + -5*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.931840363351883 + 6*p3 + -5*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7157408512198782 + 6*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139518504306723 + 6*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.612006875058378 + 6*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.702016820709304 + 6*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5433972840307804 + 6*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.818838539824317 + 6*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.754609542187984 + 6*p3 + -7*p4 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.754609542187984 + 6*p3 + -7*p4 + -2*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.387433623373332 + 6*p3 + -7*p4 + -6*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4424743096675923 + 6*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8779097064618915 + 6*p3 + -8*p4 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1351975841792443 + 6*p3 + -8*p4 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1351975841792443 + 6*p3 + -8*p4 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1335074073316127 + 6*p3 + -8*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.217286178487069 + 6*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.395368579786283 + 6*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.184319037305264 + 6*p3 + -9*p4 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.208342430264783 + 6*p3 + -10*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.2301963959607045 + 6*p3 + -10*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.671136037617018 + 6*p3 + -10*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3687357195671588 + 6*p3 + -11*p4 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7397148938531473 + 6*p3 + -11*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1818656024807863 + 6*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.013705896082986271 + 6*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273569581700332 + 5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273569581700332 + 5*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.329169829051097 + 5*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1416882806361692 + 5*p3 + -4*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.298012909376196 + 5*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1266320403075483 + 5*p3 + -5*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.442692833388259 + 5*p3 + -5*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.35710867665790613 + 5*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1754349113568636 + 5*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.188048605888902 + 5*p3 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.405956977257673 + 5*p3 + -7*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649297945918973 + 5*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.649297945918973 + 5*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8866508219580213 + 5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5112207345085467 + 5*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.001326475726465 + 5*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.07222067724997416 + 5*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6482563249230653 + 5*p3 + -6*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.789988596354703 + 5*p3 + -6*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.789985978360823 + 5*p3 + -6*p4 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6008802265439894 + 5*p3 + -6*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6483947210344323 + 5*p3 + -6*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1072871684426095 + 5*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.895869668063689 + 5*p3 + -6*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3931041896147454 + 5*p3 + -7*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.259658434897311 + 5*p3 + -7*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.28473008960221 + 5*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.278754780375082 + 5*p3 + -7*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.43326891109548193 + 5*p3 + -7*p4 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.211193408601282 + 5*p3 + -7*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.20973448787954 + 5*p3 + -7*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2121172113743626 + 5*p3 + -7*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.205724942988933 + 5*p3 + -7*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.207540259943933 + 5*p3 + -7*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.579342540003479 + 5*p3 + -8*p4 + 5*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06555351950735581 + 5*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06504283616822228 + 5*p3 + -8*p4 + 3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0889877063080333 + 5*p3 + -8*p4 + 3*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2233819239309014 + 5*p3 + -8*p4 + 3*p5 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.218891017232594 + 5*p3 + -8*p4 + 3*p5 + -4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.717023536178753 + 5*p3 + -8*p4 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3068116037410084 + 5*p3 + -8*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.039284394402663965 + 5*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.619991398822085 + 5*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.746857662315251 + 5*p3 + -8*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748807718688504 + 5*p3 + -8*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.746921541365873 + 5*p3 + -8*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.244876011233378 + 5*p3 + -9*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.243922712395939 + 5*p3 + -9*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.667899324519194 + 5*p3 + -9*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.255836329870053 + 5*p3 + -9*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.253424284843796 + 5*p3 + -9*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.255565105704292 + 5*p3 + -9*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1187857381222828 + 5*p3 + -9*p4 + -2*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1187857381222828 + 5*p3 + -9*p4 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7733538547556265 + 5*p3 + -10*p4 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.834028472373642 + 5*p3 + -10*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6617445954449614 + 5*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.516887669551797 + 5*p3 + -14*p4 + 4*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.23362630001009 + 4*p3 + 2*p4 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.328514815481141 + 4*p3 + p4 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7212803602310998 + 4*p3 + p4 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.56224791264482 + 4*p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.576581952725599 + 4*p3 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.56224791264482 + 4*p3 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.237789084809022 + 4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3080223471414334 + 4*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0843249016750383 + 4*p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.08184060001775 + 4*p3 + -2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0843249016750383 + 4*p3 + -2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.787694710118806 + 4*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.686348825481226 + 4*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5707944239293528 + 4*p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.625908439547146 + 4*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.238197857916472 + 4*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1221032599644736 + 4*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.879456417245009 + 4*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.319526701902588 + 4*p3 + -5*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.080493937960179 + 4*p3 + -6*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9540411684617585 + 4*p3 + -6*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3594577152981654 + 4*p3 + -6*p5 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.463749366647261 + 4*p3 + -6*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3997104183698358 + 4*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5372181033503861 + 4*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.516707726105917 + 4*p3 + -3*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.222463191110967 + 4*p3 + -4*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.152811804554538 + 4*p3 + -4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04151754318059071 + 4*p3 + -4*p4 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6001197950872115 + 4*p3 + -4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7583715653973908 + 4*p3 + -4*p4 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.802819907949512 + 4*p3 + -5*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.880787605360455 + 4*p3 + -5*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9852601793664489 + 4*p3 + -5*p4 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.880787605360455 + 4*p3 + -5*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7337523170312426 + 4*p3 + -5*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.010112786751905545 + 4*p3 + -6*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.630573862174019 + 4*p3 + -6*p4 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.274990977843156 + 4*p3 + -6*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.231299452546281 + 4*p3 + -6*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.781465630018437 + 4*p3 + -7*p4 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753975289537809 + 4*p3 + -7*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753229684881357 + 4*p3 + -7*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.760851886790667 + 4*p3 + -7*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7564096747784905 + 4*p3 + -7*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.211501301677967 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.211485942780549 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.00532277311139 + 4*p3 + -8*p4 + 3*p5 + 6*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.00531840978826 + 4*p3 + -8*p4 + 3*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005323471243091 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.863730817653298 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005339353739284 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8637243599350657 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9106967551598397 + 4*p3 + -8*p4 + 3*p5 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8269801177257543 + 4*p3 + -8*p4 + 3*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8269692966843918 + 4*p3 + -8*p4 + 3*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9106688298918075 + 4*p3 + -8*p4 + 3*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.863720345677786 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005237950109744 + 4*p3 + -8*p4 + 3*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.863687009889073 + 4*p3 + -8*p4 + 3*p5 + -4*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005258719527842 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0052925789153315 + 4*p3 + -8*p4 + 3*p5 + -6*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005254530737638 + 4*p3 + -8*p4 + 3*p5 + -6*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.264683586879654 + 4*p3 + -8*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.261365192372836 + 4*p3 + -8*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.872439337983999 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.872494141322512 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.313096742903632 + 4*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.452537903629541 + 4*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.120488847403012 + 4*p3 + -9*p4 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8957293265951951 + 4*p3 + -10*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.638697522672377 + 4*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8200803245904784 + 4*p3 + -11*p4 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.118473873279901 + 4*p3 + -11*p4 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.94910168665074 + 3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.329987349771049 + 3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6802113581699548 + 3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8929210918287361 + 3*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.381955749979657 + 3*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.108718495965537 + 3*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7500711455373894 + 3*p3 + -1*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1417450208334925 + 3*p3 + -3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0857433392564513 + 3*p3 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7118868491588906 + 3*p3 + -4*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.725973750617587 + 3*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2370029970122403 + 3*p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7024037602044717 + 3*p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.285238661549608 + 3*p3 + -1*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3264072964160913 + 3*p3 + -2*p5 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3474779583437182 + 3*p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3264072964160913 + 3*p3 + -2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3471306378225711 + 3*p3 + -2*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3464309353254469 + 3*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.458765761999432 + 3*p3 + -2*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3314736381687806 + 3*p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.36874391411632634 + 3*p3 + -2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3231849120147676 + 3*p3 + -2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6626268508835285 + 3*p3 + -3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.264755852009003 + 3*p3 + -3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.135174379798509 + 3*p3 + -3*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8841475132085193 + 3*p3 + -3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.044823422306694 + 3*p3 + -3*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3424351870342477 + 3*p3 + -4*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9805280766638333 + 3*p3 + -4*p5 + 2*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7146203583384145 + 3*p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1784836524942473 + 3*p3 + -4*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6832004090469204 + 3*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.97169342851643 + 3*p3 + -5*p5 + 5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.557372850479832 + 3*p3 + -5*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.901743922727126 + 3*p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5011531687809008 + 3*p3 + -5*p5 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.074741673313138 + 3*p3 + -5*p5 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7155315862425642 + 3*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2048513971999935 + 3*p3 + -6*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5586165381115374 + 3*p3 + -6*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.564971456450974 + 3*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.573581016613087 + 3*p3 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.917467793986218 + 3*p3 + -1*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.774469975815644 + 3*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.520254758744744 + 3*p3 + -2*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20928400140296685 + 3*p3 + -2*p4 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.491670096823115 + 3*p3 + -2*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2676609525489475 + 3*p3 + -3*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04637549262059173 + 3*p3 + -3*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.098698228660621 + 3*p3 + -4*p4 + d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.63955794449866 + 3*p3 + -4*p4 + d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.781151994351855 + 3*p3 + -4*p4 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6164356480353135 + 3*p3 + -4*p4 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6164356480353135 + 3*p3 + -4*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.637426024817349 + 3*p3 + -4*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007092494481329356 + 3*p3 + -5*p4 + 2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.260117980089362 + 3*p3 + -5*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5433983397266484 + 3*p3 + -5*p4 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.230013119392612 + 3*p3 + -5*p4 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2281449189612768 + 3*p3 + -5*p4 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.781077119726944 + 3*p3 + -6*p4 + 2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.7897173721889414 + 3*p3 + -6*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.189519735417091 + 3*p3 + -6*p4 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.778376920841184 + 3*p3 + -6*p4 + 2*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.794171094875864 + 3*p3 + -6*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.978554466843995 + 3*p3 + -6*p4 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6273120078366503 + 3*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.767571404410845 + 3*p3 + -6*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.746883667721106 + 3*p3 + -6*p4 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.498905699804791 + 3*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896421366640244 + 3*p3 + -8*p4 + 5*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5190649338003932 + 3*p3 + -8*p4 + 3*p5 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6608108272985116 + 3*p3 + -8*p4 + 3*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6607743499171446 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6602270146637195 + 3*p3 + -8*p4 + 3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.660250053009846 + 3*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6604160338217104 + 3*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.48200024914041556 + 3*p3 + -9*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.931277005062606 + 2*p3 + 2*p4 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.417602869722848 + 2*p3 + p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.623673719972893 + 2*p3 + 5*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.623673719972893 + 2*p3 + 5*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.222458287192429 + 2*p3 + 4*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.222458287192429 + 2*p3 + 4*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.337869248174738 + 2*p3 + 4*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.337869248174738 + 2*p3 + 4*p5 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215514494763369 + 2*p3 + 3*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215514494763369 + 2*p3 + 3*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.739592737802141 + 2*p3 + 3*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4131555792592074 + 2*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.643738906216762 + 2*p3 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.15245503376048028 + 2*p3 + 2*p5 + -7*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.294287495589497 + 2*p3 + 2*p5 + -7*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7762200089583022 + 2*p3 + 2*p5 + -8*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.30745702649839585 + 2*p3 + 2*p5 + -10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4490496800881894 + 2*p3 + 2*p5 + -10*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9276831721048742 + 2*p3 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9208769116208717 + 2*p3 + p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9276831721048742 + 2*p3 + p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9208769116208717 + 2*p3 + p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.368359958677521 + 2*p3 + p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.368359958677521 + 2*p3 + p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.904001680647506 + 2*p3 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.811479533566209 + 2*p3 + p5 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.803872865087242 + 2*p3 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.12812200239502572 + 2*p3 + p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.374778607029605 + 2*p3 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4023346954331345 + 2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4251217141471724 + 2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.804159231125911 + 2*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.015668693359779093 + 2*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.234801464188724 + 2*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.51770448364173 + 2*p3 + -1*p8 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.315390105540752 + 2*p3 + -1*p7 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282957018113425 + 2*p3 + -2*p7 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0865788283693805 + 2*p3 + -2*p7 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.441563098760076 + 2*p3 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.299134283420602 + 2*p3 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.504627778754088 + 2*p3 + -1*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142441930803814 + 2*p3 + -2*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007926063732081849 + 2*p3 + -2*p6 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6182397863847837 + 2*p3 + -3*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.1386018743802095 + 2*p3 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.760348882900242 + 2*p3 + -3*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.08980382226626583 + 2*p3 + -5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2784584064714597 + 2*p3 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14371843912377227 + 2*p3 + -6*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14770564379995332 + 2*p3 + -7*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.244862904267355 + 2*p3 + -1*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.244862904267355 + 2*p3 + -1*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.748683808809929 + 2*p3 + -1*p5 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9189396301444255 + 2*p3 + -1*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.546768579010566 + 2*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3752253773248493 + 2*p3 + -1*p5 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4725225962016275 + 2*p3 + -1*p5 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.12033594806222 + 2*p3 + -1*p5 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.483423922709584 + 2*p3 + -1*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5091467597584018 + 2*p3 + -1*p5 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.588484915192959 + 2*p3 + -1*p5 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.569068650863297 + 2*p3 + -1*p5 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.251382266615597 + 2*p3 + -1*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.025260699357839 + 2*p3 + -1*p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4304765843201657 + 2*p3 + -1*p5 + -4*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.951652119290046 + 2*p3 + -1*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4706774511130525 + 2*p3 + -1*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6659134549030088 + 2*p3 + -2*p5 + 5*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9350362527418428 + 2*p3 + -2*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.983360754538137 + 2*p3 + -2*p5 + 3*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.074863331260318 + 2*p3 + -2*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9591771233566533 + 2*p3 + -2*p5 + 3*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.830577939445815 + 2*p3 + -2*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779346451240666 + 2*p3 + -2*p5 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7283719735494864 + 2*p3 + -2*p5 + p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143721606211376 + 2*p3 + -2*p5 + 8*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0021289526215826833 + 2*p3 + -2*p5 + 5*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004687954370856769 + 2*p3 + -2*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1429492980173683 + 2*p3 + -2*p5 + 4*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0009585348251952856 + 2*p3 + -2*p5 + 2*d + -5*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0994810003318234 + 2*p3 + -2*p5 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0429366703953873 + 2*p3 + -2*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0032473596062606493 + 2*p3 + -2*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1568951768725038 + 2*p3 + -2*p5 + -2*d + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.019901116795865342 + 2*p3 + -2*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1576228046376604 + 2*p3 + -2*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.015058526253281874 + 2*p3 + -2*p5 + -4*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6270903595199635 + 2*p3 + -2*p5 + -1*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.565200635178394 + 2*p3 + -2*p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.264155458746317 + 2*p3 + -2*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1225628051565235 + 2*p3 + -2*p5 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6631797626922435 + 2*p3 + -2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.65492871865344 + 2*p3 + -2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.782017128567118 + 2*p3 + -3*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.782017128567118 + 2*p3 + -3*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.830712363791486 + 2*p3 + -3*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.449056146304738 + 2*p3 + -3*p5 + 3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.138375662712517 + 2*p3 + -3*p5 + p6 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1600619022673224 + 2*p3 + -3*p5 + p6 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.154464282290326 + 2*p3 + -3*p5 + p7 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3176152173058036 + 2*p3 + -3*p5 + 4*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.316568717886307 + 2*p3 + -3*p5 + 4*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3176239439520634 + 2*p3 + -3*p5 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3176242930179134 + 2*p3 + -3*p5 + 2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7541257114243811 + 2*p3 + -3*p5 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.15062610323731543 + 2*p3 + -3*p5 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17650724164928894 + 2*p3 + -3*p5 + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2765554739880107 + 2*p3 + -3*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17890008805377317 + 2*p3 + -3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.318164472421406 + 2*p3 + -3*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17819322970671547 + 2*p3 + -3*p5 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.319491620784622 + 2*p3 + -3*p5 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.320235305578897 + 2*p3 + -3*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.198069064723377 + 2*p3 + -4*p5 + 5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.130091657445802 + 2*p3 + -4*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0521996733311303 + 2*p3 + -4*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.997401911373798 + 2*p3 + -4*p5 + 3*p6 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9187444598424688 + 2*p3 + -4*p5 + 3*p6 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.179867724086029 + 2*p3 + -4*p5 + 2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1887882764258966 + 2*p3 + -4*p5 + 2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3572223230871607 + 2*p3 + -4*p5 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2671069340544642 + 2*p3 + -4*p5 + p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3480186528476693 + 2*p3 + -4*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.084325808332931 + 2*p3 + -5*p5 + 6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.942733154743138 + 2*p3 + -5*p5 + 6*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.087861479334988 + 2*p3 + -5*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9389927226265555 + 2*p3 + -5*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9901664744267301 + 2*p3 + -5*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1172639685508352 + 2*p3 + -5*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.789189376096947 + 2*p3 + -5*p5 + 3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6646460137968435 + 2*p3 + -5*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.709334811729992 + 2*p3 + -6*p5 + 10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.850927465319785 + 2*p3 + -6*p5 + 10*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.428655150214468 + 2*p3 + -6*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2863933628844104 + 2*p3 + -6*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.266463971754663 + 2*p3 + -6*p5 + 4*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.26384929400225 + 2*p3 + -6*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6756766692023732 + 2*p3 + -6*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4777294539557357 + 2*p3 + -6*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.185381551262296 + 2*p3 + -7*p5 + 10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.326974204852089 + 2*p3 + -7*p5 + 10*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7822473289971397 + 2*p3 + -7*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.920414424864044 + 2*p3 + -1*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.392061904480404 + 2*p3 + -1*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2507642115341984 + 2*p3 + -1*p4 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6674816502325593 + 2*p3 + -1*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.263552588029411 + 2*p3 + -1*p4 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.392061904480404 + 2*p3 + -1*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.463236771944267 + 2*p3 + -1*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.077553049672251 + 2*p3 + -2*p4 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.077553049672251 + 2*p3 + -2*p4 + 2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.155445680928723 + 2*p3 + -2*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.133356444849632 + 2*p3 + -2*p4 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004099080281233882 + 2*p3 + -2*p4 + d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1456920829368773 + 2*p3 + -2*p4 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1492059543199176 + 2*p3 + -2*p4 + d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.115772252635789 + 2*p3 + -2*p4 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.270730288571504 + 2*p3 + -2*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1226296512668745 + 2*p3 + -2*p4 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.077827922032806 + 2*p3 + -2*p4 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.260400382860651 + 2*p3 + -2*p4 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.266464703879631 + 2*p3 + -2*p4 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.167409938446093 + 2*p3 + -3*p4 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9343159383629116 + 2*p3 + -3*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9343159383629116 + 2*p3 + -3*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.631021190061305 + 2*p3 + -3*p4 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.631021190061305 + 2*p3 + -3*p4 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6319439456368348 + 2*p3 + -3*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.631369906845854 + 2*p3 + -3*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779110308192871 + 2*p3 + -3*p4 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.009404357608521046 + 2*p3 + -4*p4 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2660700849357545 + 2*p3 + -4*p4 + 2*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.26594773735519 + 2*p3 + -4*p4 + 2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2828601438416225 + 2*p3 + -4*p4 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.293660590318814 + 2*p3 + -4*p4 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6634432904126613 + 2*p3 + -4*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.140784732180728 + 2*p3 + -4*p4 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.38217304347153 + 2*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1259351218389098 + 2*p3 + -4*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.40711445412264613 + 2*p3 + -4*p4 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.14883768134943 + 2*p3 + -4*p4 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.396826478805424 + 2*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.126947063739216 + 2*p3 + -4*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.248198603028716 + 2*p3 + -4*p4 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4040542108088325 + 2*p3 + -5*p4 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9979288432716085 + 2*p3 + -5*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.030043765674613 + 2*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.847496986681723 + 2*p3 + -6*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.415224168983621 + 2*p3 + -6*p4 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.307127367795961 + 2*p3 + -7*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.875960356718655 + 2*p3 + -7*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3159871656812263 + 2*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6082809461712206 + 2*p3 + -8*p4 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6295708214528974 + 2*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9011684706761102 + 2*p3 + -8*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.372661522646936 + p3 + 5*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.728206524834714 + p3 + 4*p4 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.866303807531538 + p3 + 4*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.357855711571026 + p3 + 3*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5938920857552956 + p3 + 2*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.202658067423962 + p3 + 2*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0451296850988347 + p3 + 2*p4 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.785983406288908 + p3 + p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0134521337080629 + p3 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7844483892117795 + p3 + p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4567451603311325 + p3 + p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.587806331179784 + p3 + 14*p5 + -12*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.535301416759113 + p3 + 10*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.219032031337839 + p3 + 5*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.219032031337839 + p3 + 5*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4395737554820194 + p3 + 5*p5 + -5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4395737554820194 + p3 + 5*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.505398865217619 + p3 + 4*p5 + -10*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.505398865217619 + p3 + 4*p5 + -10*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.211226254784486 + p3 + 3*p5 + -4*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2176055567435506 + p3 + 3*p5 + -7*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.506898618145541 + p3 + 3*p5 + -10*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.736958644403448 + p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.333664400940833 + p3 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.633948971383209 + p3 + 2*p5 + -2*p6 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.633948971383209 + p3 + 2*p5 + -2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.113187952110677 + p3 + 2*p5 + -2*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.113187952110677 + p3 + 2*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.626663652012801 + p3 + 2*p5 + -4*p6 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6407667850335415 + p3 + 2*p5 + -4*p6 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.626663652012801 + p3 + 2*p5 + -4*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.946026957104134 + p3 + 2*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1252376797714965 + p3 + 2*p5 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0308068151252685 + p3 + 2*p5 + -5*p6 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0297287252463116 + p3 + 2*p5 + -5*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1732495930987583 + p3 + 2*p5 + -5*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.491212654524484 + p3 + 2*p5 + -6*p6 + 3*p7 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3218841181232563 + p3 + 2*p5 + -6*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3142723881894582 + p3 + 2*p5 + -6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.22802922912682 + p3 + p5 + 5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.22802922912682 + p3 + p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.459469827819688 + p3 + p5 + 3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.007111003469717 + p3 + p5 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.441948118393066 + p3 + p5 + -1*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2667240173148933 + p3 + p5 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.158255469494875 + p3 + p5 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.158255469494875 + p3 + p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3819880045775514 + p3 + p5 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1829128000319833 + p3 + p5 + -2*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.181008296752207 + p3 + p5 + -2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3913358475115745 + p3 + p5 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.181982722571912 + p3 + p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20875272317865978 + p3 + p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20824291250415222 + p3 + p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.203822342574701 + p3 + p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20364519165562356 + p3 + p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.35788659540047 + p3 + p5 + -6*p6 + 3*p7 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1067630205732861 + p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.080226553518772 + p3 + p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.091195075202931 + p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.83460636788561 + p3 + p6 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4316424387655485 + p3 + p6 + -3*p7 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8586985183193394 + p3 + p7 + -2*p8 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.181109725876698 + p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6230677416566 + p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.049187784135913 + p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3450043031948664 + p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.126601164976422 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4814750880668073 + p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603964691374544 + p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8037398370049733 + p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0060765383237434585 + p3 + -1*p8 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.083012946174631 + p3 + -1*p7 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.831528296718476 + p3 + -2*p7 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.820304782430601 + p3 + -2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4344468678009195 + p3 + -2*p7 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.834540211408642 + p3 + -2*p7 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.621333033418093 + p3 + -3*p7 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.002565634000431664 + p3 + -1*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004732983865558223 + p3 + -1*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.146767205756106 + p3 + -1*p6 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.110801231355208 + p3 + -1*p6 + d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1745195116591427 + p3 + -1*p6 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1520578223176767 + p3 + -1*p6 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005174552166312788 + p3 + -1*p6 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.153763358062725 + p3 + -1*p6 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1531387047234363 + p3 + -1*p6 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.153763358062725 + p3 + -1*p6 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.014737909269690517 + p3 + -1*p6 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.129910309238203 + p3 + -2*p6 + 3*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.998740961969195 + p3 + -2*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8756268073019662 + p3 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.129912054567455 + p3 + -2*p6 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.1299052477833715 + p3 + -2*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2955174036184279 + p3 + -3*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29546609093841925 + p3 + -3*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.898329875678983 + p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9071015514336565 + p3 + -5*p6 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.888479952509061 + p3 + -1*p5 + 5*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3063597634926167 + p3 + -1*p5 + 3*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.014172248059119156 + p3 + -1*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1539720994412637 + p3 + -1*p5 + 5*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004950626423281915 + p3 + -1*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.166541088049501 + p3 + -1*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1539878074045316 + p3 + -1*p5 + d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01239515381473853 + p3 + -1*p5 + d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.196047798916642 + p3 + -1*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1733398436177196 + p3 + -1*p5 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0373339889635603 + p3 + -1*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1712360237373654 + p3 + -1*p5 + -4*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8678415916405204 + p3 + -1*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.261031476921539 + p3 + -2*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0897628325237942 + p3 + -2*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17058970282040217 + p3 + -2*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0048441783355435 + p3 + -2*p5 + 2*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.160954812712643 + p3 + -2*p5 + p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.995005782837001 + p3 + -2*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.895969692426461 + p3 + -2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1818353997864106 + p3 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1957800569110697 + p3 + -2*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.895777357142891 + p3 + -2*p5 + d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.896355235658226 + p3 + -2*p5 + d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.75430862192999 + p3 + -2*p5 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.07431875454043 + p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0924145282529825 + p3 + -2*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1957975102035894 + p3 + -2*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.329769707213325 + p3 + -2*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1919466157419896 + p3 + -2*p5 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.345782754034523 + p3 + -2*p5 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.099897461386299 + p3 + -3*p5 + 6*p6 + -3*p7 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0195618502842274 + p3 + -3*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.020113199794933 + p3 + -3*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.010977797424144 + p3 + -3*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.1794319323684395 + p3 + -3*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0060128423043624 + p3 + -3*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.020343732294171104 + p3 + -3*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.011202744869776004 + p3 + -3*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2744642119799545 + p3 + -3*p5 + p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9719452455342261 + p3 + -3*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.931550298128518 + p3 + -3*p5 + 3*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9320398629837026 + p3 + -3*p5 + 3*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.073001230983049 + p3 + -3*p5 + 3*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.077582545736609 + p3 + -3*p5 + d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.375494541088774 + p3 + -3*p5 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.07755235154055 + p3 + -3*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.185692751966243 + p3 + -3*p5 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.185692751966243 + p3 + -3*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2891883331485543 + p3 + -3*p5 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.373014079155839 + p3 + -3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.241294604106603 + p3 + -4*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.182086569662406 + p3 + -4*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09830479745395462 + p3 + -4*p5 + 3*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09830479745395462 + p3 + -4*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2410216091166406 + p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.247193293379567 + p3 + -4*p5 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4697381319062615 + p3 + -4*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.133875846336709 + p3 + -4*p5 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1154247490834 + p3 + -4*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.546159467599936 + p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5433124865240835 + p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9898506123237025 + p3 + -5*p5 + 10*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.925415823371925 + p3 + -5*p5 + 7*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2475882443926607 + p3 + -5*p5 + 4*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.426296188692422 + p3 + -5*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.688457732311361 + p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.705162627648049 + p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005039812748058826 + p3 + -1*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.790320549480114 + p3 + -1*p4 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.160989370231832 + p3 + -1*p4 + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.160989370231832 + p3 + -1*p4 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.011081619019687596 + p3 + -1*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1135975638894875 + p3 + -1*p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45987191768608027 + p3 + -2*p4 + 2*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4598019299830753 + p3 + -2*p4 + 2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5854593954329435 + p3 + -2*p4 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.60923025624633 + p3 + -2*p4 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.58226195224329 + p3 + -2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.575653786629388 + p3 + -2*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.564639537318827 + p3 + -2*p4 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4083526076906443 + p3 + -2*p4 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.536906953636339 + p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8104771569835216 + p3 + -2*p4 + -3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.820507049094274 + p3 + -3*p4 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.584168192354 + p3 + -3*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.37148722263461104 + p3 + -3*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.136792116983866 + p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5095361597111547 + p3 + -3*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.275871321917863 + p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7847766601491297 + p3 + -4*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0198019990909852 + p3 + -4*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7530757128480646 + p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7619969633196335 + p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.32349363526449537 + p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9707453316734802 + p3 + -5*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6466973968351843 + p3 + -5*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3481993029235673 + p3 + -6*p4 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0927443699866592 + p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.105191917672225 + 4*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.132112382657127 + 4*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04396414572603636 + 3*p4 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.857836151135929 + 2*p4 + 3*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.999601243255819 + 2*p4 + 3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.999080437007024 + 2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.32975064063289505 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8571998040906523 + 2*p4 + d + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8128642353031579 + 2*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.999080437007024 + 2*p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.857836151135929 + 2*p4 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3630196002322688 + 2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.246386576704346 + p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6732476689874226 + p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.620682034105416 + p4 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.585435309889265 + 6*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.585435309889265 + 6*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.585435309889265 + 6*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.585435309889265 + 6*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0531170183859784 + 4*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.245340277312725 + 4*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4198284880900405 + 4*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.670036446194995 + 4*p5 + -5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.670036446194995 + 4*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3032310692788587 + 4*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.955035440045037 + 4*p5 + -6*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.59876874421156 + 4*p5 + -9*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6615033484507528 + 4*p5 + -10*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0961100714145213 + 4*p5 + -10*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0961100714145213 + 4*p5 + -10*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6840577147755 + 4*p5 + -10*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.482493521678612 + 3*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.486456640811117 + 3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.696638439581309 + 3*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.658285876466285 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0728186780416085 + 3*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.114595926214895 + 3*p5 + -3*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.114595926214895 + 3*p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.142257441003561 + 3*p5 + -4*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8266361218285025 + 3*p5 + -4*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.142257441003561 + 3*p5 + -4*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4800751594737824 + 3*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5283277537048943 + 3*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5471462427657472 + 3*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.42990304363301085 + 3*p5 + -6*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0907054763544792 + 2*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0907054763544792 + 2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0907054763544792 + 2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0907054763544792 + 2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.604896429180703 + 2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4776472659446 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.588701169985597 + 2*p5 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.326780456308484 + 2*p5 + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.326780456308484 + 2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.569020139208408 + 2*p5 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3014309451866684 + 2*p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3842448813349888 + 2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0942069558998306 + 2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7975730736572184 + 2*p5 + -1*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.885704695967148 + 2*p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.259691255585565 + 2*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.227947730749069 + 2*p5 + -2*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.227113463366615 + 2*p5 + -2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.268902579778817 + 2*p5 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.243043598550026 + 2*p5 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.422942355503474 + 2*p5 + -5*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.469344028062845 + 2*p5 + -5*p6 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.647663934679989 + p5 + 3*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.757576427383449 + p5 + p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1278230784840595 + p5 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.086600670479981 + p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.39010412616685897 + p5 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1138642586975087 + p5 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.216325583260037 + p5 + 2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.482965973808811 + p5 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7217704571833763 + p5 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.056418491697367 + p5 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.205851687885895 + p5 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.212955177941511 + p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.190364683301248 + p5 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.193880300013539 + p5 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3269457474869646 + p5 + -4*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4027274370064164 + 5*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4027274370064164 + 5*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.155025388648209 + p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5227929655809698 + p6 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4226154298396252 + p6 + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4226154298396252 + p6 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5332438226089866 + p6 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9595977477063835 + 3*p7 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.826241153818777 + 2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.826241153818777 + 2*p7 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.930451464326413 + p7 + -2*p8 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9304516388593385 + p7 + -2*p8 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4916833783220635 + p8 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.558601736806162 + p8 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.558601736806162 + p8 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.582225823927773 + p8 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00035499996985564663 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.339689801117493 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1422049150913924 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5427186830209716 + 8*p1 + -4*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4521226643055423 + 7*p1 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.724128903604963 + 7*p1 + -4*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2993381378772355 + 5*p1 + -6*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4942116367815523 + 5*p1 + -7*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2897655390271385 + 5*p1 + -13*p3 + 7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2897655390271385 + 5*p1 + -13*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.3784802673418435 + 5*p1 + -12*p2 + 12*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.345180423913026 + 4*p1 + 5*p2 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.026293210648369376 + 4*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.43325128327003676 + 4*p1 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.282295321302411 + 4*p1 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.63526568176418 + 4*p1 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.98092656932533 + 4*p1 + -29*p2 + 18*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.384235141484444 + 3*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2724178049336743 + 3*p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7124077959473445 + 2*p1 + 34*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3839775053919 + 2*p1 + 18*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.871161399407372 + 2*p1 + 14*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4741560838418355 + 2*p1 + 14*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6958200122034653 + 2*p1 + 13*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6958200122034653 + 2*p1 + 13*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.661318735107475 + 2*p1 + 8*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2814502753701795 + 2*p1 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.144634762476019 + 2*p1 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4524539362958877 + 2*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.593906614479671 + 2*p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.776956039798818 + 2*p1 + -2*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.776956039798818 + 2*p1 + -2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.37416981069156 + 2*p1 + -4*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4789932213721545 + 2*p1 + -24*p2 + 21*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4789932213721545 + 2*p1 + -24*p2 + 21*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7389842735333126 + 2*p1 + -25*p2 + 20*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4644979298651246 + 2*p1 + -27*p2 + 24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.906339383145944 + 2*p1 + -27*p2 + 22*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5308113657287987 + 2*p1 + -28*p2 + 24*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.124718835876463 + 2*p1 + -33*p2 + 32*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.895454986331731 + 2*p1 + -42*p2 + 37*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2754494418443887 + p1 + 36*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.182109441973924 + p1 + 23*p2 + -29*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.598962092699414 + p1 + 23*p2 + -30*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3410708546596468 + p1 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3410708546596468 + p1 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2910200646968386 + p1 + 10*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.970817273231929 + p1 + p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.970817273231929 + p1 + p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.873155097510242 + p1 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.127067674488846 + p1 + -1*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0760047510961726 + p1 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1293362364539548 + p1 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9126782274596286 + p1 + -3*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6709134911407557 + p1 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.594688696517489 + p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2492651482396604 + p1 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2492651482396604 + p1 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.083108441179666 + p1 + -5*p2 + 4*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.083108441179666 + p1 + -5*p2 + 4*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.271755976081318 + p1 + -25*p2 + 25*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3572460510666713 + p1 + -25*p2 + 25*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.271755976081318 + p1 + -25*p2 + 25*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9819995637561896 + p1 + -30*p2 + 33*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.56634191447459 + 59*p2 + -58*p3 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8175249880326336 + 52*p2 + -60*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.038682779409501516 + 51*p2 + -58*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8255793249664203 + 50*p2 + -56*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.647885774526234 + 46*p2 + -51*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.45748064207792283 + 43*p2 + -42*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.013590006220653844 + 43*p2 + -43*p3 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8814876144318464 + 43*p2 + -51*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9097333334127387 + 42*p2 + -44*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.23304822996519642 + 41*p2 + -41*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5939386945446405 + 41*p2 + -42*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5939386945446405 + 41*p2 + -42*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9460122623451516 + 40*p2 + -40*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2979966438208858 + 40*p2 + -40*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9406596865951354 + 40*p2 + -40*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.137963948040289 + 40*p2 + -43*p3 + 5*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3507092609208604 + 38*p2 + -36*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.361499443948731 + 38*p2 + -37*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.361499443948731 + 38*p2 + -37*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.632660569329387 + 38*p2 + -37*p3 + -3*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0357548235546725 + 38*p2 + -37*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.913267301577127 + 38*p2 + -37*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.142339130910871 + 38*p2 + -45*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.782885089302451 + 37*p2 + -35*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0877487225669924 + 36*p2 + -29*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24069870620838835 + 36*p2 + -34*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.027388255716021 + 35*p2 + -30*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24465222603000594 + 35*p2 + -33*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.649369687449546 + 35*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.5203519820823965 + 35*p2 + -46*p3 + 7*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.758353447966437 + 33*p2 + -30*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.0769461901930155 + 33*p2 + -42*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.551037130762168 + 32*p2 + -27*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3998020651521985 + 32*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.618206659122263 + 31*p2 + -37*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1768416552322878 + 31*p2 + -37*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.060718459375506 + 31*p2 + -39*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7992945003967766 + 31*p2 + -39*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4847412887306727 + 30*p2 + -25*p3 + -1*p5 + -3*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4981644584714693 + 30*p2 + -37*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2348544882047188 + 29*p2 + -24*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.011454987438272 + 29*p2 + -33*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.869050091607868 + 29*p2 + -33*p3 + d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4611483024630134 + 29*p2 + -34*p3 + p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.028631985839309 + 29*p2 + -34*p3 + p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.960161497553095 + 29*p2 + -36*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9304880907457542 + 29*p2 + -36*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.504067353531273 + 28*p2 + -31*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0161493740324117 + 28*p2 + -32*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9142673667402024 + 28*p2 + -34*p3 + -1*p7 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.805777193834092 + 28*p2 + -34*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5012048220284435 + 28*p2 + -35*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5012048220284435 + 28*p2 + -35*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2724555040455174 + 27*p2 + -19*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6643990242127366 + 27*p2 + -31*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.03431303255455 + 27*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7898812246124376 + 27*p2 + -31*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.008856881815437 + 27*p2 + -32*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9195139840079896 + 27*p2 + -32*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2102151430572226 + 27*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7164922154628618 + 27*p2 + -33*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4782378598685244 + 27*p2 + -33*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5138252808529811 + 27*p2 + -34*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9023460613190637 + 26*p2 + -28*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24613540682835072 + 26*p2 + -29*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.869315556187097 + 26*p2 + -29*p3 + p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.380394029364972 + 26*p2 + -29*p3 + -1*p8 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0213616338088842 + 26*p2 + -29*p3 + -2*p8 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.627792173408824 + 26*p2 + -29*p3 + -4*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2413870725636915 + 26*p2 + -30*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.247190858416932 + 26*p2 + -30*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8936124167454511 + 26*p2 + -30*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.455878472316176 + 26*p2 + -31*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.137265267245765 + 26*p2 + -35*p3 + 8*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.628943384085123 + 25*p2 + -21*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.275356283753914 + 25*p2 + -25*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.314207470439601 + 25*p2 + -26*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.610824929590611 + 25*p2 + -26*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.723424348179199 + 25*p2 + -27*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.841206470991685 + 25*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2636398629903276 + 25*p2 + -29*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8167315613546773 + 25*p2 + -29*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2960251283961497 + 25*p2 + -30*p3 + 5*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.116529218929013 + 25*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.0892167359974785 + 25*p2 + -31*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.03597598226585 + 25*p2 + -31*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.521649451350013 + 24*p2 + -22*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.749306184722874 + 24*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2610901284827225 + 24*p2 + -26*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.158175209844233 + 24*p2 + -27*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.1001883907759735 + 24*p2 + -27*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.077608551142464 + 24*p2 + -28*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.012691544714994 + 24*p2 + -29*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.871964748967115 + 24*p2 + -29*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.553388097762921 + 24*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8837748769149016 + 24*p2 + -30*p3 + 8*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.089873154329153 + 24*p2 + -30*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8645603641484543 + 23*p2 + -21*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.918909601982974 + 23*p2 + -22*p3 + -2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1317573741889544 + 23*p2 + -23*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2068766772640076 + 23*p2 + -24*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6324167468328834 + 23*p2 + -24*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.422242653006349 + 23*p2 + -24*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.196594461533317 + 23*p2 + -25*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.709966288849997 + 23*p2 + -25*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.982032235406469 + 23*p2 + -25*p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3876840611243602 + 23*p2 + -26*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.476425326942012 + 23*p2 + -26*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.882664681476025 + 23*p2 + -26*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.137055853230476 + 23*p2 + -26*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.059066530733443 + 23*p2 + -26*p3 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.270725559185891 + 23*p2 + -26*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.251881762850884 + 23*p2 + -26*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6683865779547681 + 23*p2 + -27*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9916337727288819 + 23*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8888750780550796 + 23*p2 + -28*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8726984853846534 + 23*p2 + -28*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5127753077716144 + 23*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7964277801037432 + 22*p2 + -21*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5018045341560615 + 22*p2 + -21*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.696226882445372 + 22*p2 + -22*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7023087972965298 + 22*p2 + -22*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.95119207599417 + 22*p2 + -23*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.101466486888892 + 22*p2 + -23*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.360311040762732 + 22*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3162454744105214 + 22*p2 + -23*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9378177754724295 + 22*p2 + -24*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.124123678601531 + 22*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.972524379773304 + 22*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4071668140002059 + 22*p2 + -24*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.11830632167171 + 22*p2 + -24*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.677122691484284 + 22*p2 + -25*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.960204756223594 + 22*p2 + -25*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.169290356182192 + 22*p2 + -25*p3 + -2*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7087590361080753 + 22*p2 + -27*p3 + 5*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8734056927975615 + 22*p2 + -27*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.553101863765595 + 22*p2 + -28*p3 + 7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.553101863765595 + 22*p2 + -28*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.44851226771655 + 21*p2 + -19*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.44332898890397726 + 21*p2 + -19*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6035324373736364 + 21*p2 + -19*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.718133348558512 + 21*p2 + -20*p3 + 2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7965133012370909 + 21*p2 + -20*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7968168139940126 + 21*p2 + -20*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7965133012370909 + 21*p2 + -20*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3440256970832736 + 21*p2 + -20*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.972337421017149 + 21*p2 + -20*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.282716145680017 + 21*p2 + -21*p3 + 3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.277532011199451 + 21*p2 + -21*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.377263240756111 + 21*p2 + -21*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.687352057731906 + 21*p2 + -21*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24169546374420234 + 21*p2 + -21*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24169546374420234 + 21*p2 + -21*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9290935641750943 + 21*p2 + -22*p3 + 2*p5 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.070686392297812 + 21*p2 + -22*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9994380294758076 + 21*p2 + -22*p3 + p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2421838238655436 + 21*p2 + -22*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2324663456908982 + 21*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.372970262893298 + 21*p2 + -22*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.924424667886351 + 21*p2 + -22*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.366376766543429 + 21*p2 + -23*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.093224710091758 + 21*p2 + -23*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6539689620977684 + 21*p2 + -23*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.918106759025373 + 21*p2 + -23*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.46590342651512223 + 21*p2 + -24*p3 + 6*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.039176567048157 + 21*p2 + -25*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8740851494753629 + 21*p2 + -26*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2218257798715064 + 20*p2 + -15*p3 + -8*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2218257798715064 + 20*p2 + -15*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.264305348535796 + 20*p2 + -17*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.603287742212507 + 20*p2 + -18*p3 + d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.603287742212507 + 20*p2 + -18*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8205030178403615 + 20*p2 + -18*p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.275304098409281 + 20*p2 + -18*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4311488766497176 + 20*p2 + -18*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5636160422521919 + 20*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5898441521194617 + 20*p2 + -19*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.114102138576239 + 20*p2 + -19*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0507281862387736 + 20*p2 + -19*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3481575895544446 + 20*p2 + -19*p3 + -2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1641395065004403 + 20*p2 + -19*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1641395065004403 + 20*p2 + -19*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07745195261697675 + 20*p2 + -19*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.056329854466316 + 20*p2 + -20*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.665971931931267 + 20*p2 + -20*p3 + 2*p7 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.278224906912493 + 20*p2 + -20*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.27827115813767 + 20*p2 + -20*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1343844437790565 + 20*p2 + -20*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1682078774851554 + 20*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3250405460754875 + 20*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.252947469390468 + 20*p2 + -20*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.187944775795041 + 20*p2 + -21*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.583122565599131 + 20*p2 + -21*p3 + 2*p7 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.823239370536588 + 20*p2 + -21*p3 + p7 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.467736230755908 + 20*p2 + -21*p3 + 2*p8 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.18302067837639 + 20*p2 + -21*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.244482763057954 + 20*p2 + -21*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5214157262682209 + 20*p2 + -21*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5404946184534718 + 20*p2 + -21*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -2*d + 4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.716810397483817 + 20*p2 + -21*p3 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.56198627929163 + 20*p2 + -21*p3 + -3*p7 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.23442250221821676 + 20*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.6156521952290435 + 20*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.299364649885232 + 20*p2 + -23*p3 + 7*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8747361572863568 + 20*p2 + -25*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.3764152022692 + 19*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.3764152022692 + 19*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6274186559522636 + 19*p2 + -16*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7895061448578674 + 19*p2 + -16*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.685824537072244 + 19*p2 + -17*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.435335206396918 + 19*p2 + -17*p3 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5050440057874219 + 19*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4171843057749525 + 19*p2 + -18*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.937410615652889 + 19*p2 + -18*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6322945737852435 + 19*p2 + -18*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8757910427845785 + 19*p2 + -18*p3 + -4*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.010349976997251573 + 19*p2 + -18*p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5263021330733464 + 19*p2 + -18*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8612053347239788 + 19*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.66081188299438 + 19*p2 + -19*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6887364443962714 + 19*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.13004975254712 + 19*p2 + -19*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.469424819810579 + 19*p2 + -20*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.435054242380614 + 19*p2 + -20*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.87843001460686 + 19*p2 + -20*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.005850701216852 + 19*p2 + -21*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.130848581247441 + 19*p2 + -21*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.130848581247441 + 19*p2 + -21*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.15771842318571958 + 19*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.910149436903047 + 19*p2 + -21*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8989300859104274 + 19*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5303142874595141 + 19*p2 + -24*p3 + 8*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.949242028119234 + 18*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.9489495109365995 + 18*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.176888821613674 + 18*p2 + -16*p3 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 4*d + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.43212851296222876 + 18*p2 + -16*p3 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -3*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -4*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.086925127187926 + 18*p2 + -16*p3 + -1*p7 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.946552807811128 + 18*p2 + -16*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14104270034249 + 18*p2 + -16*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14104270034249 + 18*p2 + -16*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1350340553266487 + 18*p2 + -16*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.550955091789008 + 18*p2 + -16*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9127869614720279 + 18*p2 + -17*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9127220352238539 + 18*p2 + -17*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9127220352238539 + 18*p2 + -17*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5696513823072716 + 18*p2 + -18*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2794454156584125 + 18*p2 + -18*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.081971691241208 + 18*p2 + -18*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3781355563162583 + 18*p2 + -18*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.735437100354826 + 18*p2 + -18*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9799220898492244 + 18*p2 + -19*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9799220898492244 + 18*p2 + -19*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.767716092205835 + 18*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7543065275348875 + 18*p2 + -20*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7662597979762875 + 18*p2 + -20*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.108129281308381 + 18*p2 + -20*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.149099863796347 + 18*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.783677634817465 + 18*p2 + -23*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7838472893190764 + 18*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.025076575620071 + 17*p2 + -5*p3 + -19*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.981217856279171 + 17*p2 + -13*p3 + -4*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5874429451312015 + 17*p2 + -14*p3 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.283230145144729 + 17*p2 + -14*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.039754437065176 + 17*p2 + -14*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2178668580275245 + 17*p2 + -14*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7827449308651997 + 17*p2 + -14*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5900138151193888 + 17*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.48706275116875036 + 17*p2 + -15*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7960877899654546 + 17*p2 + -15*p3 + -1*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.691705057924355 + 17*p2 + -15*p3 + -3*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.151181692528126 + 17*p2 + -16*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7974269811005097 + 17*p2 + -16*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0006986807945233 + 17*p2 + -16*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1656448614786017 + 17*p2 + -16*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.246827638402958 + 17*p2 + -16*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1052349848131653 + 17*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6576854407120153 + 17*p2 + -16*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.272369642344636 + 17*p2 + -16*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9182692151854672 + 17*p2 + -16*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.306926139831522 + 17*p2 + -16*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.123089047420949 + 17*p2 + -17*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.070307149247987 + 17*p2 + -17*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.010835353062231197 + 17*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.273305696415748 + 17*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6436516227575293 + 17*p2 + -18*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3342080625045134 + 17*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.610880256527899 + 17*p2 + -18*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6328221868181214 + 17*p2 + -18*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.743178682784972 + 17*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5745716484998853 + 17*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.831669842920813 + 17*p2 + -18*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2254316131094932 + 17*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.041720908031715 + 17*p2 + -21*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.655676783767477 + 17*p2 + -22*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.0385815843061525 + 17*p2 + -23*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.174529451537562 + 16*p2 + -8*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.84948266476835 + 16*p2 + -12*p3 + -5*p5 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.17827613284618518 + 16*p2 + -12*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.162951320338949 + 16*p2 + -12*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5281416931083149 + 16*p2 + -13*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8643703232878623 + 16*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3371300927382026 + 16*p2 + -13*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3371300927382026 + 16*p2 + -13*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.91217453393582 + 16*p2 + -14*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6522583479012554 + 16*p2 + -14*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.893766205747502 + 16*p2 + -14*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2686164948194643 + 16*p2 + -14*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.192052391192977 + 16*p2 + -14*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.364038340418341 + 16*p2 + -15*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6707480084327163 + 16*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8002114793891417 + 16*p2 + -15*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.948929439650202 + 16*p2 + -15*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.144352891801822 + 16*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4785108378618532 + 16*p2 + -16*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6109928302646526 + 16*p2 + -17*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6044565722159339 + 16*p2 + -17*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5934508750187082 + 16*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.715462679730377 + 16*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.74454649731976 + 16*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8296452354935497 + 16*p2 + -17*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.889041433427745 + 16*p2 + -18*p3 + 6*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9031167817201113 + 16*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.042262658231534 + 16*p2 + -20*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.14504385915437 + 15*p2 + -5*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.040426205795952 + 15*p2 + -6*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.06975052975626 + 15*p2 + -9*p3 + -6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2311639895013764 + 15*p2 + -10*p3 + -2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0336684569668384 + 15*p2 + -11*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.667722697198893 + 15*p2 + -11*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5261300436090997 + 15*p2 + -11*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1189194303429852 + 15*p2 + -11*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.397449910414236 + 15*p2 + -12*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.881703545653584 + 15*p2 + -12*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.881703545653584 + 15*p2 + -12*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944144619505859 + 15*p2 + -12*p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.12335620633953003 + 15*p2 + -12*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.45905108933886735 + 15*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.262437182097728 + 15*p2 + -13*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.604665862688198 + 15*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8007059311662315 + 15*p2 + -14*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9258490055939534 + 15*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282253999490722 + 15*p2 + -15*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3513864656672676 + 15*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5738520492492882 + 15*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.522501346557912 + 15*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8856966504559559 + 15*p2 + -19*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.903534788075964 + 15*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9228576772906436 + 15*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0523040355220827 + 15*p2 + -19*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.571009614527807 + 15*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5164732943941068 + 14*p2 + -9*p3 + 3*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1131067858021435 + 14*p2 + -10*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6908934713238609 + 14*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6908934713238609 + 14*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.396876918820807 + 14*p2 + -11*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.868176520323978 + 14*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.868176520323978 + 14*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.252607487750496 + 14*p2 + -11*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.395851005788168 + 14*p2 + -11*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.568176430051361 + 14*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.269802297008218 + 14*p2 + -12*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8011934016263136 + 14*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8011590186400495 + 14*p2 + -13*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3698450508397262 + 14*p2 + -13*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.661058472522736 + 14*p2 + -13*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282424867224492 + 14*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282647920302897 + 14*p2 + -14*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281908424298828 + 14*p2 + -14*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1400000406473483 + 14*p2 + -14*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.349696637885487 + 14*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1106924718478592 + 14*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.645111590676822 + 14*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6057933198900363 + 14*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.939418949026526 + 14*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1299783345874469 + 14*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8628663475764685 + 14*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7051362476813936 + 14*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.156545595921646 + 13*p2 + -7*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5527344294664662 + 13*p2 + -8*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.394215981344899 + 13*p2 + -10*p3 + 2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.37210912593868 + 13*p2 + -10*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.12438629966405708 + 13*p2 + -10*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.004046371337823654 + 13*p2 + -11*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.004046371337823654 + 13*p2 + -11*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8016091390541384 + 13*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.801570218211819 + 13*p2 + -12*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.010910968310426 + 13*p2 + -12*p3 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.0683794330891585 + 13*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.0683794330891585 + 13*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281943156350942 + 13*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.283032765402963 + 13*p2 + -13*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.258448057559369 + 13*p2 + -14*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.772937942794877 + 13*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.814706821886072 + 13*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9665514715155461 + 13*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.043648798723468 + 13*p2 + -17*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.514414870070938 + 13*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.040546999576823 + 13*p2 + -19*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.838688335441858 + 13*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9202906640234443 + 12*p2 + -6*p3 + -3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.520348316890968 + 12*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1916354235363587 + 12*p2 + -7*p3 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.028825725884596 + 12*p2 + -7*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.028825725884596 + 12*p2 + -7*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9902212777652429 + 12*p2 + -8*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.237360606477657 + 12*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.237360606477657 + 12*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5808028399919896 + 12*p2 + -8*p3 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.753972846076857 + 12*p2 + -8*p3 + -2*p7 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.753972846076857 + 12*p2 + -8*p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.784812124326211 + 12*p2 + -9*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.776516216827316 + 12*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.207106230552228 + 12*p2 + -9*p3 + -3*p5 + -3*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4497376633843752 + 12*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.278085280572333 + 12*p2 + -10*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00431550110848118 + 12*p2 + -10*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.067589322536782 + 12*p2 + -12*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.067589322536782 + 12*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282345629276452 + 12*p2 + -12*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.28247076938382 + 12*p2 + -12*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1414701314763027 + 12*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3085824232983985 + 12*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.765495160732672 + 12*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3312957891180022 + 12*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9671865968303468 + 12*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0100803321261351 + 12*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0100803321261351 + 12*p2 + -17*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7291126912840328 + 12*p2 + -18*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.866536102356662 + 12*p2 + -18*p3 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0195106951405108 + 11*p2 + -3*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.127701918640704 + 11*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2448728526440913 + 11*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2448728526440913 + 11*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.379103532916047 + 11*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.278470125672398 + 11*p2 + -9*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.923608028329343 + 11*p2 + -10*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.456202745992879 + 11*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0016688838307569777 + 11*p2 + -11*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1465451998752525 + 11*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.260056378465082 + 11*p2 + -12*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.850425666163203 + 11*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.891280167259278 + 11*p2 + -12*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.752776422874614 + 11*p2 + -12*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3141646843779773 + 11*p2 + -12*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3136759921874188 + 11*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.631877614626942 + 11*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7248237276784986 + 11*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.080274724606127 + 11*p2 + -13*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.97404787767737 + 11*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.92610752284944 + 11*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.230500274780111 + 11*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9678154389598405 + 11*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.095534793896431 + 11*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0753278954156162 + 11*p2 + -15*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.216920549005409 + 11*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.117017728088329 + 11*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2729559239353305 + 11*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.032185650729294 + 11*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4756998020702747 + 11*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7888148199411524 + 11*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.630457648740786 + 11*p2 + -17*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5261705182511125 + 11*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.295470122192332 + 11*p2 + -20*p3 + 4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.054907228094699 + 11*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2537111999761907 + 10*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.607088039122432 + 10*p2 + -6*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.519940424946459 + 10*p2 + -7*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.22465411991763 + 10*p2 + -7*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8025655794842317 + 10*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.329781217888072 + 10*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.355258312578209 + 10*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000725184304203644 + 10*p2 + -10*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0006340781172495399 + 10*p2 + -10*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.161448566358032 + 10*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1179366354411875 + 10*p2 + -11*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.6978374722791125 + 10*p2 + -11*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3186435483044452 + 10*p2 + -11*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1092768182949335 + 10*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2800074116775555 + 10*p2 + -12*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.369412583746032 + 10*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.193656706339727 + 10*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8194914505008555 + 10*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6778987969110623 + 10*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8576221737696343 + 10*p2 + -14*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.211746320409997 + 10*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8790773147348424 + 10*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.921385010959394 + 10*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.655920257198131 + 10*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4750662475518004 + 10*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.249551399233621 + 9*p2 + 8*p3 + -21*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5253130634845573 + 9*p2 + -3*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6067398119433929 + 9*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8028001517356995 + 9*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.002952922561449206 + 9*p2 + -9*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.871300859712924 + 9*p2 + -10*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.571197752522855 + 9*p2 + -10*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4642324822825294 + 9*p2 + -10*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.75384107371833 + 9*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.983566877922797 + 9*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.9663048989838225 + 9*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2367598896440715 + 9*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.04530040379463 + 9*p2 + -13*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.946216133798418 + 9*p2 + -13*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.045300578327555 + 9*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7461952758708523 + 9*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.652488233258693 + 9*p2 + -13*p3 + -3*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.652488233258693 + 9*p2 + -13*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9529576340688546 + 9*p2 + -14*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8794234135255129 + 9*p2 + -14*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8794234135255129 + 9*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0101883680068335 + 9*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0101883680068335 + 9*p2 + -14*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.552022020059069 + 9*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.04441656906142 + 9*p2 + -15*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.867206832388203 + 9*p2 + -15*p3 + 3*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.867206832388203 + 9*p2 + -15*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9000989329104879 + 9*p2 + -15*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.03320594471506 + 9*p2 + -15*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.158153044162733 + 9*p2 + -15*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.03320594471506 + 9*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.273599601363466 + 9*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.632338573079027 + 9*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.422533075793881 + 8*p2 + -1*p3 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2359831926319833 + 8*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.251642635746727 + 8*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.955286975983516 + 8*p2 + -5*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4550534211854909 + 8*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944638722217099 + 8*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1418043450314268 + 8*p2 + -7*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3509668715184548 + 8*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.480409240987565 + 8*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2830133922482645 + 8*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1161279507373454 + 8*p2 + -9*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.12479418311024815 + 8*p2 + -9*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.946561376921095 + 8*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3255828028774492 + 8*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5703949010669378 + 8*p2 + -10*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.711987554656731 + 8*p2 + -10*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.981802175516106 + 8*p2 + -10*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.971654307646235 + 8*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.140106705759596 + 8*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.865977763030632 + 8*p2 + -10*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.93989507484647 + 8*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.108276263526348 + 8*p2 + -11*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4579700663934485 + 8*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4400575607506725 + 8*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.045117842354871 + 8*p2 + -12*p3 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2338821652784326 + 8*p2 + -12*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.196330201687931 + 8*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.34179501726125 + 8*p2 + -13*p3 + 2*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9532105322774684 + 8*p2 + -13*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.807675388433612 + 8*p2 + -13*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.807675388433612 + 8*p2 + -13*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8804990599435171 + 8*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0097920037337056 + 8*p2 + -13*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0000993177327553 + 8*p2 + -13*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.044653410240915 + 8*p2 + -14*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.947680490535792 + 8*p2 + -14*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5250091931634686 + 8*p2 + -15*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.368076368169023 + 7*p2 + -2*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2384496919309016 + 7*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.230340892226136 + 7*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2381376270606452 + 7*p2 + -3*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2381376270606452 + 7*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.363301845467266 + 7*p2 + -4*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7695853058414543 + 7*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.711083657135439 + 7*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4684318850024865 + 7*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0020313887163962 + 7*p2 + -5*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4276992248848344 + 7*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4303549178746688 + 7*p2 + -6*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8128748903099117 + 7*p2 + -6*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.156982975432196 + 7*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.02051481705245 + 7*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.487324933615667 + 7*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06717440678368296 + 7*p2 + -6*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00030229102644541785 + 7*p2 + -7*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.001334304213149665 + 7*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00019477874452256718 + 7*p2 + -7*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141763870389414 + 7*p2 + -7*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0005403539364174444 + 7*p2 + -7*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0013700834628155487 + 7*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2934623039191546 + 7*p2 + -7*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.050259033237521 + 7*p2 + -8*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6117162692396043 + 7*p2 + -8*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.727365650696052 + 7*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.11854735164141 + 7*p2 + -8*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.11057433855245 + 7*p2 + -9*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2804589283550465 + 7*p2 + -9*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.962350481002629 + 7*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.092386960549118 + 7*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.090127108233635 + 7*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0053403839402018 + 7*p2 + -10*p3 + 4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.3648756003554725 + 7*p2 + -10*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1115417405635633 + 7*p2 + -10*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6792905224566026 + 7*p2 + -11*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6792905224566026 + 7*p2 + -11*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6746950705361014 + 7*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8163114606037216 + 7*p2 + -11*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0098651500259974 + 7*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9065484480953827 + 7*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.226717431162704 + 7*p2 + -11*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.953427127637641 + 7*p2 + -12*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3644991243375006 + 7*p2 + -12*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.355262999472239 + 7*p2 + -12*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9032598987187749 + 7*p2 + -13*p3 + 2*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9032598987187749 + 7*p2 + -13*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.044852552308568 + 7*p2 + -13*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.044852552308568 + 7*p2 + -13*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.044852552308568 + 7*p2 + -13*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7258244909732754 + 7*p2 + -13*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7258244909732754 + 7*p2 + -13*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.047079600932429 + 7*p2 + -14*p3 + 5*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.047079600932429 + 7*p2 + -14*p3 + 5*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.379833953208006 + 6*p2 + -2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.235521902110681 + 6*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2382002843807918 + 6*p2 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2382002843807918 + 6*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1883578697340385 + 6*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.79532110081832 + 6*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4831523409796571 + 6*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.136090677655806 + 6*p2 + -4*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7442593651628568 + 6*p2 + -5*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.393902694744166 + 6*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2802297241326759 + 6*p2 + -5*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.802642897570095 + 6*p2 + -5*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.813647398531794 + 6*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.059579449007338 + 6*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0344416293271553 + 6*p2 + -5*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8923660941232354 + 6*p2 + -6*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.151655174859241 + 6*p2 + -6*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0013850932943826999 + 6*p2 + -6*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.001190838148635731 + 6*p2 + -6*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0005211553146455068 + 6*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1420153723346265 + 6*p2 + -6*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141849042456911 + 6*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00733492071443137 + 6*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.232564773762394 + 6*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.09860377235482123 + 6*p2 + -6*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.129660386587634 + 6*p2 + -7*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.767624113354255 + 6*p2 + -7*p3 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.472701867010756 + 6*p2 + -7*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.235852326931351 + 6*p2 + -8*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3762013569442477 + 6*p2 + -8*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1209733168100988 + 6*p2 + -8*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9143177982572683 + 6*p2 + -8*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.872845284571379 + 6*p2 + -8*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.060578509464445 + 6*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.919755720607707 + 6*p2 + -8*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.060589505038733 + 6*p2 + -8*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.918990742796558 + 6*p2 + -8*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02661086057223234 + 6*p2 + -9*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02661086057223234 + 6*p2 + -9*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.729843320102185 + 6*p2 + -9*p3 + 2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2109788991378951 + 6*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2453898106702155 + 6*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.364214644167743 + 6*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5474122479403842 + 6*p2 + -10*p3 + 4*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.822271061867582 + 6*p2 + -10*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6806784082777885 + 6*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7232038791014059 + 6*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9611186106199382 + 6*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.045395175173013 + 6*p2 + -10*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.653119352814531 + 6*p2 + -10*p3 + -1*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.095617905562093 + 6*p2 + -11*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.095617905562093 + 6*p2 + -11*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8804514124549375 + 6*p2 + -11*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.0117462913887465 + 6*p2 + -11*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.665351467382183 + 6*p2 + -11*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.806944120971976 + 6*p2 + -11*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.563292100644705 + 6*p2 + -12*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8085504795239287 + 6*p2 + -12*p3 + 4*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.832837634225006 + 6*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.832837634225006 + 6*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7050182719222757 + 5*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.22756130635436 + 5*p2 + -1*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2364996355576485 + 5*p2 + -1*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5042877546225328 + 5*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8033926910167517 + 5*p2 + -4*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.945369666107834 + 5*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.946525597671429 + 5*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.025946239193072904 + 5*p2 + -4*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.167538892782866 + 5*p2 + -4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7683983244138064 + 5*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.178102847146412 + 5*p2 + -5*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0014018484552018456 + 5*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.007722034742523712 + 5*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.002057568655176115 + 5*p2 + -5*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.220204926588445 + 5*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.262144315849244 + 5*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.26774664821522 + 5*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.561778410577717 + 5*p2 + -5*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.333460695522176 + 5*p2 + -6*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.42755543524942 + 5*p2 + -6*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3330175564250946 + 5*p2 + -6*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.445406488305893 + 5*p2 + -6*p3 + d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6108963135570176 + 5*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6153599931189928 + 5*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3330116223056379 + 5*p2 + -6*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.441869378548851 + 5*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.391031253563835 + 5*p2 + -6*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0031646309997161184 + 5*p2 + -7*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0031646309997161184 + 5*p2 + -7*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9693073634010787 + 5*p2 + -7*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.280728058125703 + 5*p2 + -7*p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0683582891102605 + 5*p2 + -7*p3 + 2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.280728058125703 + 5*p2 + -7*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.098708368566915 + 5*p2 + -7*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.098685853819565 + 5*p2 + -7*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.010743374210651096 + 5*p2 + -7*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9154988625620932 + 5*p2 + -7*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.227721536078009 + 5*p2 + -8*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.227721536078009 + 5*p2 + -8*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.605670448710696 + 5*p2 + -8*p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.605670448710696 + 5*p2 + -8*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2543819215094154 + 5*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.451361551713697 + 5*p2 + -8*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7048309810969036 + 5*p2 + -8*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4057935974430535 + 5*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9716705222116455 + 5*p2 + -8*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.31487903914250176 + 5*p2 + -8*p3 + -2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.31487903914250176 + 5*p2 + -8*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7246004915688518 + 5*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4523640433410931 + 5*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.225816143136974 + 5*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8805964493157782 + 5*p2 + -10*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7567340974931698 + 5*p2 + -10*p3 + 3*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7567340974931698 + 5*p2 + -10*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.788280434117458 + 5*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.145851972092993 + 5*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1149666001547516 + 5*p2 + -10*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.375617935866889 + 5*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.413730856777298 + 5*p2 + -11*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.476723961275345 + 5*p2 + -11*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.6556685722216775 + 5*p2 + -11*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.676829625207924 + 4*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.1774190441421135 + 4*p2 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.227548041852044 + 4*p2 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2630583107852464 + 4*p2 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6520543104133807 + 4*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.181526859567925 + 4*p2 + -1*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.19564495143033195 + 4*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.622944338380168 + 4*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5369330910835355 + 4*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5736810069825926 + 4*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5736810069825926 + 4*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8034179982909055 + 4*p2 + -3*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.535073127692952 + 4*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4133583780199725 + 4*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944606957224713 + 4*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.796909141911443 + 4*p2 + -3*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5381073571025938 + 4*p2 + -3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9891234826623716 + 4*p2 + -4*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0016348499103430885 + 4*p2 + -4*p3 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.013810092239330331 + 4*p2 + -4*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.012906186219722468 + 4*p2 + -4*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.22784976678813132 + 4*p2 + -4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.279155691002581 + 4*p2 + -5*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.10685135123007 + 4*p2 + -5*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9908028384686407 + 4*p2 + -5*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.476999391227943 + 4*p2 + -5*p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3345778807763777 + 4*p2 + -5*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.235515993486175 + 4*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3328892747250731 + 4*p2 + -5*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.756472332098637 + 4*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.506888303706321 + 4*p2 + -5*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.725452071704167 + 4*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6425180144117257 + 4*p2 + -5*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5675411132070018 + 4*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2457504041919942 + 4*p2 + -6*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2457504041919942 + 4*p2 + -6*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.704424170343214 + 4*p2 + -6*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.08329554047548 + 4*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.181551294177453 + 4*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.026212976492678 + 4*p2 + -6*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1019377087902975 + 4*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.272767070811948 + 4*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7261026964560434 + 4*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9038983401591545 + 4*p2 + -8*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8381470748475476 + 4*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.093590356570051 + 4*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.02020394841772 + 4*p2 + -9*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.472633633135321 + 4*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6464376663475379 + 4*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3502495326975685 + 4*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7860012171455955 + 4*p2 + -9*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.87258593714285 + 4*p2 + -10*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7349956895903635 + 3*p2 + 5*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7349956895903635 + 3*p2 + 5*p3 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.813004602266601 + 3*p2 + 3*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7294493652967424 + 3*p2 + 2*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.227570556599395 + 3*p2 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.693956192091894 + 3*p2 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4662970152580805 + 3*p2 + p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.0604605167086945 + 3*p2 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8908890219772725 + 3*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6851375499837088 + 3*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5779083689638482 + 3*p2 + -1*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.283002920272752 + 3*p2 + -1*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.283002920272752 + 3*p2 + -1*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00863972886322233 + 3*p2 + -1*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00863972886322233 + 3*p2 + -1*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.267694105306418 + 3*p2 + -1*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8027036350280645 + 3*p2 + -2*p3 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8030610784588728 + 3*p2 + -2*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944509044253676 + 3*p2 + -2*p3 + d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7714949045693285 + 3*p2 + -2*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8033234014454473 + 3*p2 + -2*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.483480496872298 + 3*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4647642841056125 + 3*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.477894047002516 + 3*p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.025986556298793973 + 3*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.297308852054258 + 3*p2 + -2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.297308852054258 + 3*p2 + -2*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.209423653238076 + 3*p2 + -3*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2828655628606205 + 3*p2 + -3*p3 + 4*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282849505831502 + 3*p2 + -3*p3 + 2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00020559978588493205 + 3*p2 + -3*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.263640063018203 + 3*p2 + -3*p3 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.259473263961991 + 3*p2 + -3*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.19755434163201374 + 3*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.116781576542217 + 3*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0916465663854713 + 3*p2 + -3*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.182859218423947 + 3*p2 + -3*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1878459731627453 + 3*p2 + -3*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1771951014024498 + 3*p2 + -3*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.230077381502351 + 3*p2 + -3*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8082741939033379 + 3*p2 + -3*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.752446381113062 + 3*p2 + -3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.22787245606840725 + 3*p2 + -3*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5290009186990716 + 3*p2 + -3*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5431005695596247 + 3*p2 + -4*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1187065001742416 + 3*p2 + -4*p3 + p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.718100570361841 + 3*p2 + -4*p3 + 5*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6003861153344328 + 3*p2 + -4*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.73564235107486 + 3*p2 + -4*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6155348751100427 + 3*p2 + -4*p3 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.268535537037122 + 3*p2 + -5*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.770430062196053 + 3*p2 + -5*p3 + 4*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5206041481660437 + 3*p2 + -5*p3 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5204619038320062 + 3*p2 + -5*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.034197683287626 + 3*p2 + -5*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.899460682999667 + 3*p2 + -5*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9019711645957353 + 3*p2 + -5*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.021377192734177 + 3*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.021377192734177 + 3*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.924810743215208 + 3*p2 + -5*p3 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.924810743215208 + 3*p2 + -5*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.902062445315615 + 3*p2 + -5*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9644038608676007 + 3*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7635792873178082 + 3*p2 + -5*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8367281476606263 + 3*p2 + -6*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.634482710065102 + 3*p2 + -6*p3 + 4*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8806416533434049 + 3*p2 + -6*p3 + 4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6525953709798156 + 3*p2 + -6*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6491958186627813 + 3*p2 + -6*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.039188443785387 + 3*p2 + -6*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.241090558120411 + 3*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5745034061261325 + 3*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5665008969728134 + 3*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0413698968241887 + 3*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.40432960676816393 + 3*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0413698968241887 + 3*p2 + -6*p3 + -3*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.19382911087655705 + 3*p2 + -6*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5769847492220093 + 3*p2 + -7*p3 + 4*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6102168653775326 + 3*p2 + -7*p3 + 4*p4 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.576819117475995 + 3*p2 + -7*p3 + 4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.073559519319179 + 3*p2 + -7*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.045718725223066255 + 3*p2 + -7*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.045718725223066255 + 3*p2 + -7*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.575046935648471 + 3*p2 + -7*p3 + p6 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.433454282058677 + 3*p2 + -7*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.906039335552576 + 3*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8853666086944039 + 3*p2 + -7*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.186107642224393 + 3*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.16477797343577 + 3*p2 + -7*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8853666086944039 + 3*p2 + -7*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0749543949556897 + 3*p2 + -7*p3 + -1*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.359421271910065 + 3*p2 + -8*p3 + 4*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2103757133484059 + 3*p2 + -8*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.800110807884568 + 3*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6018818710017086 + 3*p2 + -8*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.367848053607911 + 3*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.506616240869202 + 3*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.043414226472 + 3*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.552054666214398 + 2*p2 + 4*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6598201784150795 + 2*p2 + 3*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6598201784150795 + 2*p2 + 3*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.272604589156904 + 2*p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.260748367520232 + 2*p2 + 3*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8625340623818394 + 2*p2 + 2*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.02945456801409 + 2*p2 + 2*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.793219890433527 + 2*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.956873139706046 + 2*p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5871549658046225 + 2*p2 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1605198511680957 + 2*p2 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5807370240825556 + 2*p2 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1397459207082576 + 2*p2 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.279350295214178 + 2*p2 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.9447156912371115 + 2*p2 + -1*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.001882205556934 + 2*p2 + -1*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8039440405274567 + 2*p2 + -1*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8034391167748547 + 2*p2 + -1*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.436503738324395 + 2*p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3483961760631922 + 2*p2 + -1*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3442093057205833 + 2*p2 + -1*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.044271672740237765 + 2*p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.436703037928339 + 2*p2 + -1*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2293664749047477 + 2*p2 + -1*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.263943575775125 + 2*p2 + -2*p3 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.147410210547491 + 2*p2 + -2*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5302617530490288 + 2*p2 + -2*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.20904436769666798 + 2*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.012838816510595487 + 2*p2 + -2*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.266660704354629 + 2*p2 + -2*p3 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1456798656321134 + 2*p2 + -2*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1404382928225245 + 2*p2 + -2*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.20904436769666798 + 2*p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.236794081100777 + 2*p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1465364732289927 + 2*p2 + -2*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1468111880532565 + 2*p2 + -2*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281456384022561 + 2*p2 + -2*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00766723140401109 + 2*p2 + -2*p3 + -6*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281914009352434 + 2*p2 + -2*p3 + -6*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6141318049243647 + 2*p2 + -2*p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.217481638366659 + 2*p2 + -2*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.146972988573233 + 2*p2 + -3*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7804946608639702 + 2*p2 + -3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.702261673406726 + 2*p2 + -3*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0505993724416598 + 2*p2 + -3*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0505993724416598 + 2*p2 + -3*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8979919714374804 + 2*p2 + -3*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.258061467130053 + 2*p2 + -3*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1652600163785367 + 2*p2 + -3*p3 + p5 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.721415823276004 + 2*p2 + -3*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713118178946173 + 2*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.478143978151401 + 2*p2 + -3*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.478152530264736 + 2*p2 + -3*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5546888576611662 + 2*p2 + -3*p3 + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5543385700802907 + 2*p2 + -3*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5924867551399062 + 2*p2 + -3*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3376231312552571 + 2*p2 + -3*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.728647245965792 + 2*p2 + -3*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4781251285954795 + 2*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.732737250534916 + 2*p2 + -3*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.253951033710365 + 2*p2 + -3*p3 + -1*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.095788922333838 + 2*p2 + -3*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.253951033710365 + 2*p2 + -3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.557542679514369 + 2*p2 + -3*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08663552607512053 + 2*p2 + -3*p3 + -3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.55741649220945 + 2*p2 + -3*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0729158503893603 + 2*p2 + -4*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0729158503893603 + 2*p2 + -4*p3 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.260217821420892 + 2*p2 + -4*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.831855545953225 + 2*p2 + -4*p3 + p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1389634896045884 + 2*p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1389634896045884 + 2*p2 + -4*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1399661812598594 + 2*p2 + -4*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.383051982784518 + 2*p2 + -4*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2520028802026553 + 2*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9048025952446128 + 2*p2 + -4*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.849975869320014 + 2*p2 + -5*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.082169786111309 + 2*p2 + -5*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1938774564968373 + 2*p2 + -5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.398182067537131 + 2*p2 + -6*p3 + 8*p4 + -3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.671627173268529 + 2*p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.824483798791576 + 2*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.903702688750006 + 2*p2 + -8*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.903702688750006 + 2*p2 + -8*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.179061390469924 + p2 + 6*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.6857360573774836 + p2 + 5*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6521019579019602 + p2 + 4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2498754898790825 + p2 + 4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.39738393696851 + p2 + 4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.39738393696851 + p2 + 4*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.397340303737211 + p2 + 4*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.379367077633098 + p2 + 3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2364882909175106 + p2 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.634789189881752 + p2 + 3*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.595522265768242 + p2 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.595522265768242 + p2 + 3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.730419627821193 + p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8302852647268892 + p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.333675230480512 + p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.378394056575112 + p2 + p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3458848387991313 + p2 + p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3278237971386933 + p2 + p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3014991960587383 + p2 + p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.036178631988639 + p2 + p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5821922796128682 + p2 + p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5821922796128682 + p2 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0009026842891314673 + p2 + p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1438820019696343 + p2 + p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9478375361752038 + p2 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.634162450645678 + p2 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8036522214765234 + p2 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.929409851828822 + p2 + 2*d + -3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71896956979641 + p2 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.947590597580997 + p2 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4737778369996615 + p2 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3589332523562578 + p2 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.204493970765818 + p2 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06290131717602523 + p2 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1588858994173283 + p2 + -1*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.017293245827535414 + p2 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.612319838088211 + p2 + -2*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.612319838088211 + p2 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.658655362668932 + p2 + -3*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.60457684239803 + p2 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0004689699700108763 + p2 + -1*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1390593081805234 + p2 + -1*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14272746666944 + p2 + -1*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2823779178676125 + p2 + -1*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5515963002612406 + p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141951144218153 + p2 + -1*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5515963002612406 + p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.311911664341528 + p2 + -1*p3 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281094926334472 + p2 + -1*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8887268911032685 + p2 + -1*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282797320486869 + p2 + -1*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141102390602908 + p2 + -1*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.789304933890062 + p2 + -2*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.687662551805835 + p2 + -2*p3 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.126859290674474 + p2 + -2*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.126859290674474 + p2 + -2*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7811313569750977 + p2 + -2*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8561573274267524 + p2 + -2*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0984667895034894 + p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.218334108163232 + p2 + -2*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.531495726325139 + p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.757760734152459 + p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.995646144139559 + p2 + -2*p3 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.995646144139559 + p2 + -2*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0036039303724430907 + p2 + -3*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0036039303724430907 + p2 + -3*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.139264035301782 + p2 + -3*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1399694973854384 + p2 + -3*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5595612933339587 + p2 + -3*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.893750514780867 + p2 + -3*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.399841684126219 + p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9002865558050773 + p2 + -3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5190022764802467 + p2 + -4*p3 + 4*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5190022764802467 + p2 + -4*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.185900646175106 + p2 + -4*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.241988555515512 + p2 + -4*p3 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.387299599083413 + p2 + -4*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.059832338717635 + p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.219698065977034 + p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.258125171647751 + p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.613079379883729 + p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.19322034003346142 + p2 + -4*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8160550632382875 + p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.389082278381399 + p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9048107982920971 + p2 + -5*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.75263260774425 + p2 + -6*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7840398161322035 + p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5150210229201555 + p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.802707317216126 + p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3110009430395206 + 40*p3 + -48*p4 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.216463813336795 + 37*p3 + -45*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.883028242057532 + 37*p3 + -48*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.238802090903513 + 30*p3 + -33*p4 + -1*p5 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.189638417806227 + 29*p3 + -32*p4 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.336500220407791 + 29*p3 + -33*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.336500220407791 + 29*p3 + -33*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4950338443955337 + 28*p3 + -31*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.460954404881434 + 19*p3 + -17*p4 + -3*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.749845142395889 + 17*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6082545832011987 + 17*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.252737672316061 + 17*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.255004156882701 + 17*p3 + -30*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.613384629471586 + 16*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1144122750860017 + 16*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.612358890971872 + 16*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.723573756861487 + 15*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2539260755020605 + 15*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.112342323091453 + 15*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1171922355185784 + 15*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.755841387075725 + 15*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.614244719228652 + 15*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7574296366950395 + 14*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.11164818865130166 + 14*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7587265908621967 + 13*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2457716972088684 + 13*p3 + -21*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2386226540597747 + 13*p3 + -21*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6875182045783794 + 12*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5988835613813908 + 12*p3 + -15*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1115576145614399 + 12*p3 + -16*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.751058827361093 + 12*p3 + -19*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.508659280800003 + 11*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.084847985350178 + 11*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0053972731755008 + 11*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4693471441605488 + 11*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.925698941271548 + 11*p3 + -18*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.730797674635491 + 11*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.730795754773315 + 11*p3 + -19*p4 + 3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.699387124627008 + 11*p3 + -20*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1579060545786257 + 11*p3 + -21*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6874524056655793 + 10*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.060736261733876 + 10*p3 + -10*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.776974897853057 + 10*p3 + -11*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.27576887109077 + 10*p3 + -12*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.29456310007502 + 10*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0775367926152573 + 10*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7726084246321 + 10*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3696260290152344 + 10*p3 + -15*p4 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8169289325981274 + 10*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.11567867749293216 + 10*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8488946548450365 + 10*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.155627378202172 + 10*p3 + -17*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.385791975177224 + 10*p3 + -19*p4 + 3*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.385789880782121 + 10*p3 + -19*p4 + 3*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7382039453230627 + 10*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.720232988146978 + 10*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.788983286705553 + 9*p3 + -10*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5742088030467123 + 9*p3 + -10*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6288437087882004 + 9*p3 + -12*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9995439539647706 + 9*p3 + -13*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.266600141429584 + 9*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6579090173891957 + 9*p3 + -14*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7357985410462806 + 9*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2349721233963034 + 9*p3 + -17*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0407840067909273 + 9*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0010995574287564276 + 8*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.276738235455644 + 8*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.780689482100076 + 8*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1429220623827208 + 8*p3 + -10*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.278228040006829 + 8*p3 + -10*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1370181371219994 + 8*p3 + -10*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6228260050568823 + 8*p3 + -10*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.734526370554502 + 8*p3 + -15*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7344471326064617 + 8*p3 + -15*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7372733442642163 + 8*p3 + -15*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7373756205583826 + 8*p3 + -15*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.837374626113882 + 8*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.53771572221508 + 8*p3 + -19*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.225561865661591 + 7*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0839692120717985 + 7*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7555441320091602 + 7*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.007164402046511523 + 7*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.931719803592153 + 7*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.212104662000382 + 7*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1230387479452255 + 7*p3 + -9*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.277014512577918 + 7*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.320527133128147 + 7*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.203111303935755 + 7*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.368939050425016 + 7*p3 + -12*p4 + 3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.243626172457709 + 7*p3 + -13*p4 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5034842390281815 + 7*p3 + -15*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3692317421405755 + 7*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0453417426029523 + 6*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.943750349627834 + 6*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.3582360188150355 + 6*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.637667229319974 + 6*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1143894197711175 + 6*p3 + -7*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4376013503960239 + 6*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.029630148136841 + 6*p3 + -8*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.275369539757914 + 6*p3 + -8*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.279704763086942 + 6*p3 + -8*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.27676650129121 + 6*p3 + -8*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.04284279717658 + 6*p3 + -9*p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.04284279717658 + 6*p3 + -9*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6468860499306919 + 6*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.701479599867224 + 6*p3 + -9*p4 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.245613761908197 + 6*p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7369597170959494 + 6*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3848943438446053 + 6*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3848943438446053 + 6*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7200968524653222 + 6*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.762708035951846 + 5*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4548869337714834 + 5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.501442212301665 + 5*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2682245193644155 + 5*p3 + -5*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1754349113568636 + 5*p3 + -6*p5 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.718019246517016 + 5*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.409475578026327 + 5*p3 + -4*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.808339511708946 + 5*p3 + -6*p4 + 2*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6947735297806026 + 5*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.960170913832738 + 5*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.1621413045347815 + 5*p3 + -6*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.78288754126172 + 5*p3 + -6*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5682059261157195 + 5*p3 + -7*p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.42637800214275795 + 5*p3 + -7*p4 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5682059261157195 + 5*p3 + -7*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1566068484800742 + 5*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2463008895363896 + 5*p3 + -8*p4 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2140559316057944 + 5*p3 + -8*p4 + 3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.76739268269544 + 5*p3 + -8*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.696198748651148 + 5*p3 + -10*p4 + 3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.379518048613396 + 4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.35016492672043 + 4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.505050139934754 + 4*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.826506294827104 + 4*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.281216924849186 + 4*p3 + -4*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.074769581584537 + 4*p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.54861776385137 + 4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1297725687669535 + 4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.792950769161187 + 4*p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.118712068231215 + 4*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1089258325823577 + 4*p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.272410691575325 + 4*p3 + -4*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.907673678860777 + 4*p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.321951313299458 + 4*p3 + -5*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3215155045852347 + 4*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2016894011907886 + 4*p3 + -5*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.41070165482922 + 4*p3 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.699824338102949 + 4*p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4084541943514273 + 4*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1733738775381335 + 4*p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1527131934518 + 4*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5815901580175638 + 4*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.759806094001188 + 4*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.120327570481811 + 4*p3 + -5*p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9782093982542422 + 4*p3 + -5*p4 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.120327570481811 + 4*p3 + -5*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7331993967242108 + 4*p3 + -5*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6274675251713195 + 4*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5606758775909157 + 4*p3 + -6*p4 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.24501616967063 + 4*p3 + -6*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.750257040099361 + 4*p3 + -7*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6111109890550128 + 4*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7573497091136145 + 4*p3 + -7*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.759709219729387 + 4*p3 + -7*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.005333070553977 + 4*p3 + -8*p4 + 3*p5 + 3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.005390840952218 + 4*p3 + -8*p4 + 3*p5 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.863735180976428 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8636892788171007 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.005188557291913 + 4*p3 + -8*p4 + 3*p5 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.005264130048523 + 4*p3 + -8*p4 + 3*p5 + -3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.872439337983999 + 4*p3 + -8*p4 + p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.872494141322512 + 4*p3 + -8*p4 + p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.234348359718274 + 4*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.731347619384478 + 4*p3 + -9*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9482922029436653 + 3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8451168981774115 + 3*p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3635609928679207 + 3*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6823951141300502 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7726241240970517 + 3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.308134780338528 + 3*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.139169629985882 + 3*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3378500240580167 + 3*p3 + -2*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.28261650437636 + 3*p3 + -3*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1602807920504725 + 3*p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9284565189981162 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9123553500463264 + 3*p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3486448854816016 + 3*p3 + -2*p5 + 5*d + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5983030903671285 + 3*p3 + -2*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.490489739148308 + 3*p3 + -2*p5 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.579337470050332 + 3*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4022776486615443 + 3*p3 + -2*p5 + -5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3700962037190882 + 3*p3 + -3*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3765165719054744 + 3*p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.13607636595594 + 3*p3 + -3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1916511230013098 + 3*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.264404674766868 + 3*p3 + -4*p5 + 5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3866108581673091 + 3*p3 + -4*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1248727229265879 + 3*p3 + -4*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3807088697653978 + 3*p3 + -4*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.262434887674751 + 3*p3 + -4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3658627500820844 + 3*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1860446188417617 + 3*p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1850822442922118 + 3*p3 + -4*p5 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.039471344660502 + 3*p3 + -5*p5 + 2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.36027732191490186 + 3*p3 + -5*p5 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5010351845234657 + 3*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6480582045580144 + 3*p3 + -6*p5 + 5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5593499254632255 + 3*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.075879619487122 + 3*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.522362767415303 + 3*p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.425263302841093 + 3*p3 + -2*p4 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.483126544099995 + 3*p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.325364811253875 + 3*p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.494671373503161 + 3*p3 + -2*p4 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.203696206259681 + 3*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2822990034904738 + 3*p3 + -3*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.131642714555415 + 3*p3 + -4*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.853450862352319 + 3*p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.765325872293546 + 3*p3 + -4*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6133574108335718 + 3*p3 + -4*p4 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6153596525514593 + 3*p3 + -4*p4 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5959868469201726 + 3*p3 + -4*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5961163503506706 + 3*p3 + -4*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.762398431539176 + 3*p3 + -4*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.209991949439159 + 3*p3 + -5*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5460931280917274 + 3*p3 + -5*p4 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3983193909559963 + 3*p3 + -5*p4 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.266169560204801 + 3*p3 + -5*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.779732692604132 + 3*p3 + -6*p4 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.791362511043555 + 3*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.791515750951881 + 3*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.795214627235632 + 3*p3 + -6*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6236562411854227 + 3*p3 + -6*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1723026199382085 + 3*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.148998634699731 + 3*p3 + -6*p4 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.742872028435397 + 3*p3 + -6*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5201535126514956 + 3*p3 + -7*p4 + d + 3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5550896022540575 + 3*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5300236816407404 + 3*p3 + -8*p4 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6670857840632567 + 3*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5602363781903134 + 3*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6602582560573302 + 3*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8991866493104705 + 3*p3 + -9*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.218868493986927 + 2*p3 + 4*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.218868493986927 + 2*p3 + 4*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.733813079984161 + 2*p3 + 3*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.381262330667839 + 2*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2396696770780458 + 2*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.076591207219793 + 2*p3 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.805669157953394 + 2*p3 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1051494636798174 + 2*p3 + p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3643111268821112 + 2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.679620240647254 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.145415797316287 + 2*p3 + -2*p8 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.346693807405747 + 2*p3 + -1*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.179895500316085 + 2*p3 + -3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.173225724579589 + 2*p3 + -3*p7 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.171603615572786 + 2*p3 + -3*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0233020908712516 + 2*p3 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.145511615892221 + 2*p3 + -2*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0429150453092957 + 2*p3 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.763666404742432 + 2*p3 + -3*p6 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2753773767429144 + 2*p3 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2950776061418754 + 2*p3 + -5*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1390865098219045 + 2*p3 + -6*p6 + 3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3385671968442945 + 2*p3 + -6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.193342181011884 + 2*p3 + -1*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3943965974275303 + 2*p3 + -1*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.497164227273784 + 2*p3 + -1*p5 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3884591618451712 + 2*p3 + -1*p5 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.497164227273784 + 2*p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.262425820460957 + 2*p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.774395641786143 + 2*p3 + -1*p5 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4809923299957053 + 2*p3 + -1*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.478965828201215 + 2*p3 + -1*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0272971495290664 + 2*p3 + -1*p5 + -1*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.107055231181652 + 2*p3 + -1*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.393868145723293 + 2*p3 + -1*p5 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3307547285515674 + 2*p3 + -1*p5 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.340068695101469 + 2*p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.45683192019159 + 2*p3 + -2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8666847874122985 + 2*p3 + -2*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.588922435243167 + 2*p3 + -2*p5 + p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1437193372833483 + 2*p3 + -2*p5 + 6*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14068386064828 + 2*p3 + -2*p5 + 2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.142483295107086 + 2*p3 + -2*p5 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1473347868288544 + 2*p3 + -2*p5 + -1*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1710920340740762 + 2*p3 + -2*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.165196486393764 + 2*p3 + -2*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8862785602252043 + 2*p3 + -2*p5 + -2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.858700612714442 + 2*p3 + -2*p5 + -2*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.916835635731146 + 2*p3 + -2*p5 + -2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.63641915287019 + 2*p3 + -2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.636481461124486 + 2*p3 + -2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.419337718501013 + 2*p3 + -3*p5 + 2*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.025978527784234796 + 2*p3 + -3*p5 + p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.025102896098509245 + 2*p3 + -3*p5 + p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.14132000766568165 + 2*p3 + -3*p5 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.817339642564389 + 2*p3 + -3*p5 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7344766201725037 + 2*p3 + -3*p5 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.817339642564389 + 2*p3 + -3*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18527193608695403 + 2*p3 + -3*p5 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0236068253586494 + 2*p3 + -4*p5 + 6*p6 + -3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.129853594535829 + 2*p3 + -4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.093814465344323 + 2*p3 + -4*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.047072768653397 + 2*p3 + -4*p5 + 4*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.167000641739868 + 2*p3 + -4*p5 + 3*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9989243620803125 + 2*p3 + -4*p5 + 3*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.041345628249269274 + 2*p3 + -4*p5 + 2*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.267610512533564 + 2*p3 + -4*p5 + 2*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4896113064374625 + 2*p3 + -4*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.35265162934708827 + 2*p3 + -4*p5 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.484524544332525 + 2*p3 + -4*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.488776166390383 + 2*p3 + -4*p5 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2869546522735351 + 2*p3 + -5*p5 + 4*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0173128020134745 + 2*p3 + -5*p5 + 4*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6055254033515386 + 2*p3 + -5*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18047646943417447 + 2*p3 + -5*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.327637246936605 + 2*p3 + -5*p5 + 2*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6494403562876188 + 2*p3 + -5*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.0462653963380575 + 2*p3 + -6*p5 + 8*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.457603372717604 + 2*p3 + -6*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8260805920259093 + 2*p3 + -6*p5 + 3*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.506061383703359 + 2*p3 + -6*p5 + 2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3468475454178976 + 2*p3 + -7*p5 + 10*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7886781691590379 + 2*p3 + -7*p5 + 5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5424417332619464 + 2*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.077957616992863 + 2*p3 + -2*p4 + 2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.140948801628732 + 2*p3 + -2*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.876610674896265 + 2*p3 + -2*p4 + d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.878407491361194 + 2*p3 + -2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.268873781846158 + 2*p3 + -2*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.073514698350669 + 2*p3 + -3*p4 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.753583471619053 + 2*p3 + -3*p4 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6187499546234583 + 2*p3 + -3*p4 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.701740709621639 + 2*p3 + -3*p4 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6187499546234583 + 2*p3 + -3*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.783557058061102 + 2*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.010726968115682349 + 2*p3 + -4*p4 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1392434319182922 + 2*p3 + -4*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.159839713355227 + 2*p3 + -4*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.196671422055013 + 2*p3 + -4*p4 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.196671422055013 + 2*p3 + -4*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.165799523145279 + 2*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.291856085906861 + 2*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9727201632237948 + 2*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5328801129895044 + 2*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.026570236892244 + 2*p3 + -8*p4 + 5*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8988258897540834 + p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.979926819234838 + p3 + 3*p5 + -5*p6 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.979926819234838 + p3 + 3*p5 + -5*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.755559707931085 + p3 + 3*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7409156973751525 + p3 + 3*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.055925968280771 + p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5239642475436664 + p3 + 2*p5 + -3*p6 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5239642475436664 + p3 + 2*p5 + -3*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.282199179155576 + p3 + 2*p5 + -5*p6 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.172110616723857 + p3 + 2*p5 + -5*p6 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.491212654524484 + p3 + 2*p5 + -6*p6 + 3*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9839045906347417 + p3 + 2*p5 + -7*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9839045906347417 + p3 + 2*p5 + -7*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5829932282032417 + p3 + 2*p5 + -8*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.459466511694108 + p3 + p5 + 3*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.494871562768365 + p3 + p5 + d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.045127241637882 + p3 + p5 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3421269533900289 + p3 + p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.270442117715367 + p3 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.009971589615419203 + p3 + p5 + -2*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.198597550420881 + p3 + p5 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.181912036737206 + p3 + p5 + -4*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9702325454409273 + p3 + 2*p6 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1053164916892333 + p3 + 2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.891191836602493 + p3 + p6 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.406898207828324 + p3 + p6 + -3*p7 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4616956207198057 + p3 + p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.09962828062574192 + p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9541395710383052 + p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4502630499808085 + p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5516706597856922 + p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0523928727810092 + p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.441677077258547 + p3 + -2*p8 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00774385135817364 + p3 + -1*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.005007000558121333 + p3 + -1*p6 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1495541475056905 + p3 + -1*p6 + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.150784081029571 + p3 + -1*p6 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1495541475056905 + p3 + -1*p6 + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.007818900516009397 + p3 + -1*p6 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.955917546445628 + p3 + -1*p6 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.014159681688504795 + p3 + -1*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.12990786577725 + p3 + -2*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9883169575167083 + p3 + -2*p6 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9883169575167083 + p3 + -2*p6 + d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.991743238866249 + p3 + -2*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.990773533933841 + p3 + -2*p6 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4385546662300968 + p3 + -3*p6 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.222684681891363 + p3 + -4*p6 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.409957987031579 + p3 + -5*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.495151173012851 + p3 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.764352459678125 + p3 + -1*p5 + 4*p6 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8706953710021395 + p3 + -1*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0038697440175218274 + p3 + -1*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.01286901070665499 + p3 + -1*p5 + 3*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.011440982312673228 + p3 + -1*p5 + 2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02843734763444441 + p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1602095571220405 + p3 + -1*p5 + d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1602095571220405 + p3 + -1*p5 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1721615718396987 + p3 + -1*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.810855046261528 + p3 + -1*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1539876328716066 + p3 + -1*p5 + -1*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1684768327228876 + p3 + -1*p5 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.008585274590560106 + p3 + -1*p5 + -6*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8678412425746698 + p3 + -1*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5788011048762434 + p3 + -2*p5 + 6*p6 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.171944627413675 + p3 + -2*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.529940987027462 + p3 + -2*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1433526691024545 + p3 + -2*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06134430895032109 + p3 + -2*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.160954463646793 + p3 + -2*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.895774564616088 + p3 + -2*p5 + 3*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.756857151703752 + p3 + -2*p5 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.332749856911105 + p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.282805838606936 + p3 + -2*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.342280925423321 + p3 + -2*p5 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.895934960374347 + p3 + -2*p5 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.895756238658942 + p3 + -2*p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.336628676640737 + p3 + -2*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.2640074463274305 + p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.3392110658019885 + p3 + -2*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6998306127899396 + p3 + -2*p5 + -2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.605389659227317 + p3 + -2*p5 + -5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.012121686215901 + p3 + -3*p5 + 5*p6 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.095587885898958 + p3 + -3*p5 + 4*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8403964636858348 + p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.131818477709408 + p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9436182027085076 + p3 + -3*p5 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.093659995207205 + p3 + -3*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2278820723759267 + p3 + -4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7939956722894057 + p3 + -4*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.10487229689628408 + p3 + -4*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.884446688137261 + p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.832111594252809 + p3 + -6*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2283414430350517 + p3 + -1*p4 + 3*p5 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.011280935620265348 + p3 + -1*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4209877527758485 + p3 + -2*p4 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5894847803281597 + p3 + -2*p4 + 2*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5903563977566056 + p3 + -2*p4 + 2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4439524375094233 + p3 + -2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.955033562674442 + p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.272810878576173 + p3 + -2*p4 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3511574699710893 + p3 + -2*p4 + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3511396676127183 + p3 + -2*p4 + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.066390089811103 + p3 + -2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.989857942706561 + p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.558544149439163 + p3 + -2*p4 + -4*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.395175546371012 + p3 + -4*p4 + 3*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8922690538168245 + p3 + -4*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0380419200031192 + p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9271587176612837 + p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.112688613411683 + p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.879542129907915 + 3*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.688741871913586 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.6899353280561 + 3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5429598875235971 + 3*p4 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.381012050453103 + 2*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.999935997406351 + 2*p4 + d + -1*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8580073679355493 + 2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3347227516026097 + 2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.473808371763255 + 2*p4 + -2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.245990212431218 + p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.245990212431218 + p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.763466747574321 + p4 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.046401672559371644 + 4*p5 + -4*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4196654743379045 + 4*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3032310692788587 + 4*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2869077199132897 + 4*p5 + -7*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.428600372370905 + 4*p5 + -8*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.227518728818929 + 3*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.8877842812658505 + 3*p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1031854531708647 + 3*p5 + -4*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1107313841918627 + 3*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.480075857605483 + 3*p5 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3193664721789373 + 2*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6882236581637184 + 2*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.873712913237496 + 2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3193664721789373 + 2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.855320276015813 + 2*p5 + -5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.898776007330743 + 2*p5 + -5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2634091049682638 + 2*p5 + -6*p6 + 3*p7 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7523515842397286 + 2*p5 + -6*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7659754498478712 + 2*p5 + -6*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.115584480703224 + p5 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.148790067854117 + p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.69731194514302 + p5 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.494132066764295 + p5 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.168371789396868 + p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2439177999790836 + p5 + -3*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.135892608280654 + p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0870219674664625 + p5 + -1*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0917776406122965 + p5 + -1*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.526272654005621 + 3*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.526272654005621 + 3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.132404525278961 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8508007119245066 + 3*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9626196107732867 + 2*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.671596106407844 + 2*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.672397736133285 + 2*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6967715912066033 + 2*p6 + -3*p7 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.544391964168126 + p6 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.545828195609592 + p6 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2474662458779466 + p7 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.13993512289749 + p7 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.140429400141656 + p7 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2178993211516116 + p7 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.680065116575271 + 2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.680065116575271 + 2*p8 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.232934634525841 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.749857002136486 + 4*p1 + 11*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9085768697520505 + 4*p1 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7328220480416128 + 4*p1 + -3*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2402246832818633 + 4*p1 + -5*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5030107142054816 + 4*p1 + -6*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.160973313202714 + 3*p1 + -3*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7248392526105247 + 2*p1 + 19*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.7881999829372575 + 2*p1 + 17*p3 + -26*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.0711710787294075 + 2*p1 + -1*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.48830738794993 + 2*p1 + -4*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.48830738794993 + 2*p1 + -4*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8785788741954224 + 2*p1 + -8*p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.721450912892286 + 2*p1 + -22*p2 + 16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6686112103278166 + p1 + 18*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5202411281799453 + p1 + p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1212572988760314 + p1 + -1*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.06058356242096 + p1 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.06058356242096 + p1 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.657330291704184 + p1 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9430815139635194 + p1 + -7*p2 + 9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6143801737752397 + p1 + -20*p2 + 17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1841973453648176 + p1 + -20*p2 + 16*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5752589506610042 + p1 + -43*p2 + 41*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.531822102895263 + 47*p2 + -52*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.531822102895263 + 47*p2 + -52*p3 + 4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.943524678555551 + 43*p2 + -45*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5353951069466781 + 42*p2 + -42*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6910029034679609 + 41*p2 + -42*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0872779902710963 + 41*p2 + -42*p3 + 2*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.130390108747893 + 41*p2 + -43*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.1432640063764525 + 40*p2 + -38*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7734939791996125 + 40*p2 + -41*p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.457209102839579 + 39*p2 + -39*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.697069493414968 + 38*p2 + -36*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.404858292493543 + 38*p2 + -37*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.870013679389577 + 38*p2 + -37*p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.165724640022051 + 38*p2 + -37*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.146471904544986 + 36*p2 + -32*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9375880901428673 + 36*p2 + -35*p3 + 2*p5 + -3*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.250783950751378 + 35*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.2104980949222375 + 33*p2 + -29*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.424558015290362 + 32*p2 + -31*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.897903325708113 + 32*p2 + -39*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.6334976632319105 + 30*p2 + -36*p3 + p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8617900200233968 + 29*p2 + -36*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.271734376490177 + 28*p2 + -28*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2701483957988895 + 28*p2 + -30*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.446380905627281 + 28*p2 + -31*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.46408479343454423 + 27*p2 + -33*p3 + 7*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.60859701680044 + 26*p2 + -27*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.795373984294656 + 26*p2 + -28*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1944742015647276 + 26*p2 + -29*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1055982048271384 + 26*p2 + -30*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.035197565419461 + 26*p2 + -32*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6432131960494276 + 26*p2 + -32*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.035197565419461 + 26*p2 + -32*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1331738834098735 + 25*p2 + -27*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.131640611661996 + 24*p2 + -24*p3 + 2*d + -5*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.379314002627204 + 24*p2 + -24*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7410027723081942 + 24*p2 + -26*p3 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8706505330369962 + 24*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.937259644672592 + 23*p2 + -22*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8052111495644045 + 23*p2 + -22*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1325392816938478 + 23*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9728399183054313 + 23*p2 + -24*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.911156483383131 + 23*p2 + -25*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.286465295944543 + 23*p2 + -27*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.130297240235053 + 23*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.130297240235053 + 23*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23668392533002583 + 22*p2 + -22*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.090353626475594 + 22*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.485091950872348 + 22*p2 + -22*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.107293792195451 + 22*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.39189029612334997 + 22*p2 + -24*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.128529919834483 + 22*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.128529919834483 + 22*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8042695444329537 + 21*p2 + -20*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.142006820221291 + 21*p2 + -21*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.60322823498333 + 21*p2 + -21*p3 + -1*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.928040815563557 + 21*p2 + -21*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3737421880281877 + 21*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9977761354603754 + 21*p2 + -22*p3 + 2*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.034259983043605 + 21*p2 + -22*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26941635372070305 + 21*p2 + -23*p3 + p7 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26941635372070305 + 21*p2 + -23*p3 + p7 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.959539453709367 + 21*p2 + -23*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.738701398153147 + 21*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.959539453709367 + 21*p2 + -23*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5428330275819273 + 21*p2 + -29*p3 + 15*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.172766869020923 + 20*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6774724214731167 + 20*p2 + -19*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.733583360661333 + 20*p2 + -19*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2782247323795675 + 20*p2 + -20*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2174483280728965 + 20*p2 + -20*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2791692535808474 + 20*p2 + -20*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9018924502464705 + 20*p2 + -20*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0391119643708835 + 20*p2 + -20*p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5061257863527584 + 20*p2 + -20*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.8257575485779975 + 20*p2 + -21*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.070201905894091 + 20*p2 + -21*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.031529589961787 + 20*p2 + -21*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.951653200480863 + 20*p2 + -21*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9601859321626227 + 20*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.201387999825603 + 19*p2 + -7*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7971990411001995 + 19*p2 + -18*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.749870624202969 + 19*p2 + -19*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.774333150500605 + 19*p2 + -19*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.612044582668538 + 19*p2 + -20*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801967480644524 + 19*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.21678053960613292 + 19*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -3*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -3*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.882537280938946 + 19*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.376880332514856 + 18*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.023670678914322698 + 18*p2 + -14*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.412117657447997 + 18*p2 + -15*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.390665283514641 + 18*p2 + -16*p3 + p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4629726696351734 + 18*p2 + -16*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4629726696351734 + 18*p2 + -16*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.362526893784431 + 18*p2 + -16*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.232061820861869 + 18*p2 + -16*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.185842692745623 + 18*p2 + -17*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.800524067858174 + 18*p2 + -17*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.103765975175027 + 18*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.125929562280254 + 18*p2 + -17*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.797885653627934 + 18*p2 + -17*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.892257002546669 + 18*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.253021645883678 + 18*p2 + -17*p3 + -2*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4155241570887722 + 18*p2 + -18*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.133635697529951 + 18*p2 + -18*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3820407305175952 + 18*p2 + -18*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.318756654138291 + 18*p2 + -19*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.082564422051818 + 18*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.117683396665039 + 18*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.3670288130536585 + 17*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0959906908936854 + 17*p2 + -14*p3 + -3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.050389226301403085 + 17*p2 + -15*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.050389226301403085 + 17*p2 + -15*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8064156012812058 + 17*p2 + -16*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.401063772166782 + 17*p2 + -16*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.280054011968583 + 17*p2 + -17*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.140413334614221 + 17*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.740464521265196 + 17*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.826870195976145 + 17*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6867802538756859 + 17*p2 + -22*p3 + 11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6867802538756859 + 17*p2 + -22*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.185615633908256 + 17*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7790069422095702 + 17*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.745733138179874 + 16*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1539801024608729 + 16*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3798314757537875 + 16*p2 + -14*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.181535411681259 + 16*p2 + -14*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.985195121076933 + 16*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7980017180231915 + 16*p2 + -15*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.170992550306713 + 16*p2 + -15*p3 + -1*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9354327830495792 + 16*p2 + -15*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4473732743450152 + 16*p2 + -17*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.30281881401122096 + 16*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.979169022768572 + 16*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.043891399489495 + 15*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2361006447923262 + 15*p2 + -13*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.76229160039232 + 15*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.258292723255943 + 15*p2 + -13*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9174839830566783 + 15*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5049836343919365 + 15*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.268838875261118 + 15*p2 + -13*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2667727544926075 + 15*p2 + -13*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9255179081365335 + 15*p2 + -13*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1724951042597542 + 15*p2 + -13*p3 + -3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.945905307655272 + 15*p2 + -14*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.173722943388532 + 15*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.759099925287515 + 15*p2 + -16*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.797266419307643 + 15*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.611416621701987 + 14*p2 + -10*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.377774290157728 + 14*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.600187696893431 + 14*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0710858896652775 + 14*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.281956246320332 + 14*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.140121341030362 + 14*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4407764703678856 + 14*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6114954850892271 + 14*p2 + -15*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.897437165261538 + 14*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.129213756832049 + 14*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.512303213205584 + 14*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5810897636227 + 14*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5116540997618169 + 14*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9554057989123105 + 14*p2 + -21*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9973925120907867 + 13*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.1263276803809505 + 13*p2 + -10*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.529847088313705 + 13*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.281971779750674 + 13*p2 + -13*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3477731105168638 + 13*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.144067355936196 + 13*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.180854358712181 + 13*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8459326650697934 + 13*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.941180509840564 + 13*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7306485810257878 + 13*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1267308089465777 + 13*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.019448761447015 + 13*p2 + -18*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8989416050834906 + 13*p2 + -19*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.054650664694655 + 13*p2 + -22*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.054650664694655 + 13*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.42278925613480717 + 13*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6045192380343973 + 12*p2 + -7*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6045192380343973 + 12*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.087577871829855 + 12*p2 + -8*p3 + -1*p7 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9488981982565905 + 12*p2 + -8*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3798793147719253 + 12*p2 + -9*p3 + -1*p5 + -3*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8017166513360614 + 12*p2 + -11*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.667968954658033 + 12*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282472165647221 + 12*p2 + -12*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00016074482410867775 + 12*p2 + -12*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.144962011710768 + 12*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282107566366479 + 12*p2 + -12*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2012389317108494 + 12*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8197439996436193 + 12*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8904108017622256 + 12*p2 + -16*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7013544512615393 + 12*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0792627402142376 + 12*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.548937325139094 + 11*p2 + -8*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4500654362178998 + 11*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282942182814783 + 11*p2 + -9*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.0932716679469525 + 11*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.130943003559974 + 11*p2 + -11*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0004326671215693943 + 11*p2 + -11*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.454921674321915 + 11*p2 + -12*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7817537753796255 + 11*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8900341597096455 + 11*p2 + -15*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8997280504444394 + 11*p2 + -17*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.379364459639221 + 10*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.379364459639221 + 10*p2 + -6*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.568776482746514 + 10*p2 + -9*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.094343125574753 + 10*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.277828193573514 + 10*p2 + -10*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.260294615907981 + 10*p2 + -11*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.763180845646211 + 10*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.752711322093514 + 10*p2 + -11*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1381737281180615 + 10*p2 + -12*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5922424005463106 + 10*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8795120762515142 + 10*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.151798125823296 + 10*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.151798125823296 + 10*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1514258215988957 + 9*p2 + -1*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.090390784992028 + 9*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2379257440894533 + 9*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.579966835778601 + 9*p2 + -6*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2780553844522246 + 9*p2 + -7*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8028518134815588 + 9*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0008206538142877338 + 9*p2 + -9*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.675248016338083 + 9*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7107717328048417 + 9*p2 + -10*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.6682000362509966 + 9*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.872470064277151 + 9*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0726343287810136 + 9*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.021016067115306 + 9*p2 + -14*p3 + p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.021016067115306 + 9*p2 + -14*p3 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.655820424364918 + 9*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.044760398924063 + 9*p2 + -15*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.163161091918405 + 9*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.280040747466268 + 8*p2 + -6*p3 + -2*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0009923942126839759 + 8*p2 + -8*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.438091638877859 + 8*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.754310218221267 + 8*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.125496205525301 + 8*p2 + -10*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6885210622682583 + 8*p2 + -12*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08597230095936267 + 8*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.082517281165382 + 8*p2 + -14*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.684371533473325 + 8*p2 + -15*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1681425851744978 + 8*p2 + -15*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1149289010429086 + 8*p2 + -15*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.054863943929249 + 8*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.054863943929249 + 8*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.451592982372512 + 7*p2 + 4*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.271107271191619 + 7*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.271107271191619 + 7*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4836904344863635 + 7*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1419970463774805 + 7*p2 + -7*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1589471604740735 + 7*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.118077483511823 + 7*p2 + -8*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.504934258570738 + 7*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.740918481403639 + 7*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6349340352130346 + 7*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.071950202205815 + 7*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.948112608563635 + 7*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.948294820937543 + 7*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8486888805262267 + 7*p2 + -9*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.948294820937543 + 7*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.11032069122223476 + 7*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1934493357296398 + 7*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6709747436991838 + 7*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.833297370946615 + 7*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.35181230050980417 + 7*p2 + -13*p3 + 3*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.35181230050980417 + 7*p2 + -13*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7870866204107774 + 6*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7870866204107774 + 6*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.271473790334538 + 6*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.271473790334538 + 6*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.002582563694176009 + 6*p2 + -4*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.944818840195905 + 6*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0004941027112395946 + 6*p2 + -6*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1415067833905947 + 6*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0003925245487735247 + 6*p2 + -6*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.02856859639419438 + 6*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.081846568130473 + 6*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.573372956369616 + 6*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7256918799433905 + 6*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6353127716607174 + 6*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.058068376934227 + 6*p2 + -8*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.700825475958527 + 6*p2 + -9*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2014965253118102 + 6*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.115050925052572 + 6*p2 + -10*p3 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.115197707242666 + 6*p2 + -10*p3 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.716694175552267 + 6*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.434977622426451 + 6*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6265910038243347 + 6*p2 + -11*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6221704338948834 + 6*p2 + -11*p3 + 3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8802871769723247 + 6*p2 + -11*p3 + p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8802871769723247 + 6*p2 + -11*p3 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.442096986479945 + 6*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6447099904159383 + 6*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.0450138207314525 + 6*p2 + -12*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.042710509717596 + 6*p2 + -12*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2477006350981723 + 5*p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.3301348045978925 + 5*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.659973601354646 + 5*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.043894383545857 + 5*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.03323845033073 + 5*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00023561944901923448 + 5*p2 + -5*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1424557189049045 + 5*p2 + -5*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1419781968215585 + 5*p2 + -5*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.142701461263585 + 5*p2 + -5*p3 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141492646223654 + 5*p2 + -5*p3 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2170058871075153 + 5*p2 + -5*p3 + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.25941509350799996 + 5*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.222179766637078 + 5*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7527460541456295 + 5*p2 + -6*p3 + 2*d + 3*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7533525560606975 + 5*p2 + -6*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.473841217946459 + 5*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.16406461487889615 + 5*p2 + -6*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.09774437223113923 + 5*p2 + -6*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.09773582011780445 + 5*p2 + -6*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1642730071915843 + 5*p2 + -6*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.874325323777071 + 5*p2 + -7*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2658607689685402 + 5*p2 + -7*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9553141861232137 + 5*p2 + -7*p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.096127201136141 + 5*p2 + -7*p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.407741750950763 + 5*p2 + -7*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9553141861232137 + 5*p2 + -7*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9312410342833815 + 5*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9606192804192593 + 5*p2 + -7*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9606192804192593 + 5*p2 + -7*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.381371920348231 + 5*p2 + -8*p3 + 3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2502856337549846 + 5*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.053231354448617 + 5*p2 + -9*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.045137739108344 + 5*p2 + -11*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9014960689767093 + 5*p2 + -11*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.062766096650579 + 5*p2 + -13*p3 + 6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.062766096650579 + 5*p2 + -13*p3 + 6*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.271989360595577 + 4*p2 + p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2448763433025953 + 4*p2 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.378281308305433 + 4*p2 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.695522467559266 + 4*p2 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.61148327628278 + 4*p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.780716875271016 + 4*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.297528239941234 + 4*p2 + -3*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282153468525807 + 4*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1466813355569077 + 4*p2 + -4*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0012011355912224977 + 4*p2 + -4*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1427187400231795 + 4*p2 + -4*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3152848536885404 + 4*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3152848536885404 + 4*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1382726882866496 + 4*p2 + -4*p3 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282126241389476 + 4*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9210153332271886 + 4*p2 + -5*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9210153332271886 + 4*p2 + -5*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0528403752012205 + 4*p2 + -5*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.109097764510312 + 4*p2 + -5*p3 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6096913382414408 + 4*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5972642449013903 + 4*p2 + -5*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3345989992603269 + 4*p2 + -5*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7137366981381297 + 4*p2 + -5*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.885490718600854 + 4*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.10476413747256 + 4*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.020068893926882 + 4*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1656846379889139 + 4*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8765366474410308 + 4*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.323167450223931 + 4*p2 + -9*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.272332317793593 + 3*p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.315356063122022 + 3*p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.583323269964794 + 3*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3446716434394363 + 3*p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.513685663011138 + 3*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.935342225956351 + 3*p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.795526351538355 + 3*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5380256926902343 + 3*p2 + -3*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5304619423142327 + 3*p2 + -3*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1400860853794716 + 3*p2 + -3*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00014782938764391971 + 3*p2 + -3*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.366339224967878 + 3*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1352637406562116 + 3*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0016976817634148844 + 3*p2 + -3*p3 + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0519551442046091 + 3*p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.87426510141956 + 3*p2 + -4*p3 + 2*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4571867371302036 + 3*p2 + -4*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.720934644499547 + 3*p2 + -4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.719392812140018 + 3*p2 + -4*p3 + 5*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.913678309619338 + 3*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3303337636343031 + 3*p2 + -4*p3 + d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3318923426563338 + 3*p2 + -4*p3 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5898380434670798 + 3*p2 + -4*p3 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.970540089451762 + 3*p2 + -5*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.123638975173303 + 3*p2 + -5*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5241232555368396 + 3*p2 + -5*p3 + 3*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5241232555368396 + 3*p2 + -5*p3 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1358990405039373 + 3*p2 + -5*p3 + 2*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1358990405039373 + 3*p2 + -5*p3 + 2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.45985097373505635 + 3*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8069406048185224 + 3*p2 + -5*p3 + l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.975812380056186 + 3*p2 + -5*p3 + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9422233440686303 + 3*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8069406048185224 + 3*p2 + -5*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.883143774355697 + 3*p2 + -5*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.080889953167456 + 3*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7166496526597084 + 3*p2 + -5*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7166496526597084 + 3*p2 + -5*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.039188443785387 + 3*p2 + -6*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5632331170143041 + 3*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0243827817474531 + 3*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8591217606629478 + 3*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.12023259057723577 + 3*p2 + -6*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5769845746890843 + 3*p2 + -7*p3 + 4*p4 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5768192920089206 + 3*p2 + -7*p3 + 4*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.09320935119434 + 3*p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.654822968697403 + 3*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.272581201744928 + 2*p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.24256101501185 + 2*p2 + 2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.227183591609278 + 2*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.238278475131281 + 2*p2 + 2*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.240375139161702 + 2*p2 + p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.040727475119796 + 2*p2 + p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5775162104775586 + 2*p2 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1559905472262452 + 2*p2 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.447754479748601 + 2*p2 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8027324329607224 + 2*p2 + -1*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8012923617949017 + 2*p2 + -1*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1672252571162827 + 2*p2 + -1*p3 + -1*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9705475943675457 + 2*p2 + -1*p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.1021119266429125 + 2*p2 + -1*p3 + -2*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.357920446289642 + 2*p2 + -1*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0003007457250686 + 2*p2 + -2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0007190756518216638 + 2*p2 + -2*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00010943214410004447 + 2*p2 + -2*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1421427813700213 + 2*p2 + -2*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2721931980555756 + 2*p2 + -2*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0002001892652037496 + 2*p2 + -2*p3 + d + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.10287965448928214 + 2*p2 + -2*p3 + d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2721931980555756 + 2*p2 + -2*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.262699679617228 + 2*p2 + -2*p3 + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.021112375296749405 + 2*p2 + -2*p3 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.007582408402364165 + 2*p2 + -2*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1709858925606049 + 2*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.735081576786195 + 2*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.047183788590457 + 2*p2 + -3*p3 + -3*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.047183788590457 + 2*p2 + -3*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1401450775081887 + 2*p2 + -4*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.267546982548792 + 2*p2 + -4*p3 + 2*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.267546982548792 + 2*p2 + -4*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.31619082860830067 + 2*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5491647160456787 + 2*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.117359829618352 + 2*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.117359829618352 + 2*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.763543342033534 + 2*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.094396358116939 + 2*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0863171865178733 + 2*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.209339536866446 + 2*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1887144320019043 + 2*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.900617861788689 + 2*p2 + -5*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6481767294108587 + 2*p2 + -5*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.545514351416816 + 2*p2 + -6*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.043523318048566 + 2*p2 + -7*p3 + 3*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.304826483246423 + 2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.416588467364955 + 2*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.563035047639153 + 2*p2 + -8*p3 + 9*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.563035047639153 + 2*p2 + -8*p3 + 9*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.043609703348223 + 2*p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.274920790112276 + p2 + 5*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.256692047805672 + p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2719687317171362 + p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7864498988047001 + p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9226573474857815 + p2 + 2*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.886707396120736 + p2 + p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.17397058011444036 + p2 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.087670906377303 + p2 + p3 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3429514639253046 + p2 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.617860185770792 + p2 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8034689619050637 + p2 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.705037304509439 + p2 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.007927285462558244 + p2 + -1*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08548168890662708 + p2 + -1*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.007927285462558244 + p2 + -1*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.144268766931876 + p2 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.436785068403183 + p2 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.436785068403183 + p2 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.499462485331127 + p2 + -1*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.019613188459187 + p2 + -1*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1415427371731863 + p2 + -1*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3117455004984215 + p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141930200267129 + p2 + -1*p3 + 4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.282911115954098 + p2 + -1*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0010637781790905436 + p2 + -1*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.384645459893272 + p2 + -1*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7811311824421725 + p2 + -2*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7811311824421725 + p2 + -2*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.591432950832503 + p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.364844158933987 + p2 + -2*p3 + d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.338184603675624 + p2 + -2*p3 + d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8645511224017355 + p2 + -2*p3 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.156098625598527 + p2 + -2*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8710814463309975 + p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4711430879608511 + p2 + -2*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.140090448702601 + p2 + -3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9828863740474447 + p2 + -3*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9298904985081884 + p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.381721343762797 + p2 + -4*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.140513001412827 + p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.648799313849994 + p2 + -5*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.049584139910725 + p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5523033416395404 + 33*p3 + -40*p4 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.2757262765587045 + 31*p3 + -34*p4 + -3*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.369001733240112 + 30*p3 + -35*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.8571434469524455 + 26*p3 + -24*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.929208615366067 + 17*p3 + -32*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.245991808722494 + 16*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.754999623275804 + 16*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.2560150515854565 + 16*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6177613916368119 + 15*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.25878349284497 + 15*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.741169817314243 + 14*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1188436745551322 + 14*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6158999894912432 + 14*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.754188402737794 + 13*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.61261215524297 + 13*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.262815727015853 + 13*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.865374951801944 + 13*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.759773788413393 + 12*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6887917713335594 + 11*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.226407826750033 + 11*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.760631792273674 + 11*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.593392572523375 + 11*p3 + -16*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3357898289106458 + 11*p3 + -17*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.252059071306253 + 11*p3 + -19*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5457895898398555 + 10*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.2662517567142535 + 10*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.266063610220889 + 10*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.3366590368714055 + 10*p3 + -15*p4 + p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.3366590368714055 + 10*p3 + -15*p4 + p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.71579775745181 + 10*p3 + -19*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.71579775745181 + 10*p3 + -19*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6831824576505747 + 9*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1155992820086 + 9*p3 + -11*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.300463360144313 + 9*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.428459490307003 + 9*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7073150997229504 + 9*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7073161469205016 + 9*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.197437455562031 + 9*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.671867322075286 + 9*p3 + -15*p4 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3445419824726463 + 9*p3 + -15*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3916709082363743 + 9*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.755109936582848 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2346282935336603 + 9*p3 + -17*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2291350442459335 + 9*p3 + -17*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8051148073896945 + 8*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0710070007830867 + 8*p3 + -11*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7322378778426538 + 8*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.485554654653685 + 8*p3 + -12*p4 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5432782525757944 + 8*p3 + -12*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7274740016493352 + 8*p3 + -13*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2491040628480183 + 8*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7512272516339107 + 8*p3 + -15*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.056751334484039 + 8*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.784204749746518 + 7*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6411732467213804 + 7*p3 + -8*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.769044113233678 + 7*p3 + -10*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.773377765766379 + 7*p3 + -10*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2348928939465793 + 7*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2441365067309915 + 7*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.218767822482353 + 7*p3 + -17*p4 + -2*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.16728195482202252 + 6*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3088746084118155 + 6*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.129312350938152 + 6*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8019892717652228 + 6*p3 + -6*p4 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.00952897411711344 + 6*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.152226770189269 + 6*p3 + -6*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6307527584223482 + 6*p3 + -7*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6461191522573655 + 6*p3 + -9*p4 + d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.657559610971263 + 6*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.245582695047511 + 6*p3 + -10*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7503997995338567 + 6*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2594803688220245 + 5*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.428492161957283 + 5*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.410092202851057 + 5*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.986304260819942 + 5*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.409650809083227 + 5*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.186153510390453 + 5*p3 + -4*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.133333755569356 + 5*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.928019173480833 + 5*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.393708597134711 + 5*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.648395244633208 + 5*p3 + -6*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0578656932181712 + 5*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.029192900667632755 + 5*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.030288269306184393 + 5*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.76420517088589 + 5*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.16011336398530618 + 5*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.784905980548386 + 5*p3 + -8*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.76564246652154 + 5*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0889955772863003 + 4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2351510196446323 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7321504538437624 + 4*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6902231073548033 + 4*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.289913176885224 + 4*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.077048832549666 + 4*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.68820568977074 + 4*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2359995902286356 + 4*p3 + -3*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3346087731041378 + 4*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.042193858265738515 + 4*p3 + -4*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.03446135154770284 + 4*p3 + -4*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.115746098191958 + 4*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.691618681123015 + 4*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7194348660766745 + 4*p3 + -4*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.867122899047816 + 4*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7254794563767892 + 4*p3 + -5*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.055233081066047 + 4*p3 + -6*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.913728068499653 + 4*p3 + -6*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.961312376160176 + 4*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.2728075709489115 + 4*p3 + -6*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.275101457184807 + 4*p3 + -6*p4 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.41050527979342066 + 4*p3 + -6*p4 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5605055334559204 + 4*p3 + -6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.243985378214402 + 4*p3 + -6*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.2453980477109665 + 4*p3 + -6*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.761764170390683 + 4*p3 + -7*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.005321900446764 + 4*p3 + -8*p4 + 3*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.005270762299681 + 4*p3 + -8*p4 + 3*p5 + -6*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.8724358473254945 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.872497806513941 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.30964291084686 + 4*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.304800852401369 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.0780111986008984 + 3*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.996097294754565 + 3*p3 + -5*p6 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.3177450867987845 + 3*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1166373953493693 + 3*p3 + -5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8975690951563555 + 3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8490920515834377 + 3*p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.522176898348282 + 3*p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.278417765794838 + 3*p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.296210507857661 + 3*p3 + -4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.3424130213527468 + 3*p3 + -4*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5011730655343736 + 3*p3 + -5*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3862146854237394 + 3*p3 + -5*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7754894226317344 + 3*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.473738418053516 + 3*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.482780270776398 + 3*p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.225019591862997 + 3*p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1461701031240487 + 3*p3 + -3*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.271525784149613 + 3*p3 + -3*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.131642714555415 + 3*p3 + -4*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.501399800800841 + 3*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.78672203812667 + 3*p3 + -4*p4 + d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.777787174086935 + 3*p3 + -4*p4 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.760639488719017 + 3*p3 + -4*p4 + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.727660619837957 + 3*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.623603191674479 + 3*p3 + -4*p4 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.2643627953631364 + 3*p3 + -5*p4 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.265596743144297 + 3*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.262831268944511 + 3*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9033232881638895 + 3*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.624758974200099 + 3*p3 + -7*p4 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5189263546577848 + 3*p3 + -8*p4 + 3*p5 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5050829266297414 + 3*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.660244118890389 + 3*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.1026636337177855 + 3*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.102785283166649 + 3*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.316148459599061 + 3*p3 + -8*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0012927653769521997 + 3*p3 + -9*p4 + p7 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.64295368258629 + 2*p3 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2961469693745724 + 2*p3 + 2*p5 + -7*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7756351491259592 + 2*p3 + 2*p5 + -8*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4344723326113655 + 2*p3 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3586238054798792 + 2*p3 + p5 + -2*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.382723486324342 + 2*p3 + p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.501519704920453 + 2*p3 + p5 + -5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.050259416296638 + 2*p3 + p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.0095934192580955 + 2*p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.552840047381162 + 2*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.02393108203872025 + 2*p3 + -2*p7 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.524786331614623 + 2*p3 + -1*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141689519363279 + 2*p3 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141689519363279 + 2*p3 + -2*p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000598647933434055 + 2*p3 + -2*p6 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.28180143561568 + 2*p3 + -2*p6 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1453046198429346 + 2*p3 + -2*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7627539466094895 + 2*p3 + -3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6253673619840778 + 2*p3 + -3*p6 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.759869091888869 + 2*p3 + -3*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.11404976170204587 + 2*p3 + -4*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.27863396109926075 + 2*p3 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26527032408259055 + 2*p3 + -7*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.405958531057367 + 2*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.400254986591408 + 2*p3 + -1*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.59160784132187 + 2*p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.344923694478374 + 2*p3 + -1*p5 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4892219064847094 + 2*p3 + -1*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9600981336029304 + 2*p3 + -1*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.134156703806621 + 2*p3 + -2*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7470956997302727 + 2*p3 + -2*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0031815606934604635 + 2*p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1435774420151614 + 2*p3 + -2*p5 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0994810003318234 + 2*p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.016803680972351003 + 2*p3 + -2*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.014214834092867817 + 2*p3 + -2*p5 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1610265457449 + 2*p3 + -2*p5 + -3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.157219109981674 + 2*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1587251545932196 + 2*p3 + -2*p5 + -6*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7995271442877514 + 2*p3 + -2*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.075187787968265 + 2*p3 + -2*p5 + -1*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4630019996649237 + 2*p3 + -3*p5 + 5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3268071513477233 + 2*p3 + -3*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.025262244659216324 + 2*p3 + -3*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.17544154360802122 + 2*p3 + -3*p5 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3174829213485015 + 2*p3 + -3*p5 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.327441246461606 + 2*p3 + -3*p5 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3294906120692978 + 2*p3 + -3*p5 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.17547487939673428 + 2*p3 + -3*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18201934049293744 + 2*p3 + -3*p5 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.1059521745960765 + 2*p3 + -3*p5 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18118088432027935 + 2*p3 + -3*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18161843836375435 + 2*p3 + -3*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3160987007187455 + 2*p3 + -3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.182550312142978 + 2*p3 + -4*p5 + 4*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.27324071917767306 + 2*p3 + -4*p5 + p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.34276852792474516 + 2*p3 + -4*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.37406315407762947 + 2*p3 + -4*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4889561098362636 + 2*p3 + -4*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.087616260575083 + 2*p3 + -5*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.326206085448286 + 2*p3 + -5*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7086007347449192 + 2*p3 + -5*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7351264232496546 + 2*p3 + -5*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7351264232496546 + 2*p3 + -5*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3966023445362008 + 2*p3 + -6*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.817998495858699 + 2*p3 + -6*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.813895401320186 + 2*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.03831346773977952 + 2*p3 + -2*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.26245341365977 + 2*p3 + -2*p4 + -2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.264506618991819 + 2*p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2645296573379445 + 2*p3 + -2*p4 + -6*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.767248003398767 + 2*p3 + -3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.754969088512211 + 2*p3 + -3*p4 + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.631302013537951 + 2*p3 + -3*p4 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0740354876028313 + 2*p3 + -4*p4 + l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1491836056071754 + 2*p3 + -4*p4 + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1491836056071754 + 2*p3 + -4*p4 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0740354876028313 + 2*p3 + -4*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.413508510328911 + 2*p3 + -6*p4 + 4*p6 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.3158456194788894 + 2*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.20377211108551 + p3 + 2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.267708408507968 + p3 + 2*p4 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0402116963325652 + p3 + p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.505398865217619 + p3 + 4*p5 + -10*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.505398865217619 + p3 + 4*p5 + -10*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18594231705264508 + p3 + 3*p5 + -7*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2074812763135316 + p3 + 2*p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2074812763135316 + p3 + 2*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.128129515809126 + p3 + 2*p5 + -5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.304083688113408 + p3 + 2*p5 + -5*p6 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.168161260197494 + p3 + 2*p5 + -5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.281970200456031 + p3 + 2*p5 + -7*p6 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.985599130805503 + p3 + 2*p5 + -7*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.34646530981339435 + p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5999112027466484 + p3 + p5 + -1*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1956096957794417 + p3 + p5 + -5*p6 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1535757181715025 + p3 + 2*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.845195629523309 + p3 + p6 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.83563995186864 + p3 + p6 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8923706319792903 + p3 + p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5180252496632967 + p3 + p7 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6225268301281406 + p3 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9183250572232143 + p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.90103565961835 + p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5623417773653108 + p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0815938019632012 + p3 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2560997170508115 + p3 + -1*p7 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.12691510721727167 + p3 + -1*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.172259335772759 + p3 + -1*p7 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2928512471513982 + p3 + -2*p7 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2571184657352 + p3 + -1*p6 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8548125342414576 + p3 + -2*p6 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9883171320496338 + p3 + -2*p6 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.996480411522011 + p3 + -2*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.604938474619043 + p3 + -3*p6 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.29121795953906504 + p3 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.927840426270479 + p3 + -4*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.927840426270479 + p3 + -4*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.898571254714534 + p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.468273975196764 + p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8460171220089572 + p3 + -1*p5 + 5*p6 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8406229989244268 + p3 + -1*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.93498826468573 + p3 + -1*p5 + p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.93498826468573 + p3 + -1*p5 + p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.831253058295436 + p3 + -1*p5 + d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.018570477774144865 + p3 + -1*p5 + 4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.157980422601394 + p3 + -1*p5 + 2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.078319955843893 + p3 + -1*p5 + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.01690019767998629 + p3 + -1*p5 + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.85014205865807 + p3 + -1*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.03858678630064183 + p3 + -1*p5 + -2*d + 4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.029234963102605815 + p3 + -1*p5 + -3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.03017709183283236 + p3 + -1*p5 + -6*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.489166788073613 + p3 + -1*p5 + -5*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.489166788073613 + p3 + -1*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.553764914348427 + p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.646607171811173 + p3 + -2*p5 + 5*p6 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8973010040849327 + p3 + -2*p5 + 3*p6 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.944358596872154 + p3 + -2*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.799883208451792 + p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0116565559702444 + p3 + -3*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8216891520983334 + p3 + -3*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.392732285446096 + p3 + -3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.712336769545105 + p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.10487247142920927 + p3 + -4*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.261212126997436 + p3 + -4*p5 + d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.47188506141914 + p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.471370712888578 + p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1458351999355405 + p3 + -5*p5 + 5*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1458351999355405 + p3 + -5*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2220682146029245 + p3 + -5*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.208792542180555 + p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4713703468260944 + p3 + -6*p5 + 5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.786397223854556 + p3 + -1*p4 + d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6191388054824858 + p3 + -1*p4 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4061658931691374 + p3 + -2*p4 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4400816462943498 + p3 + -2*p4 + 2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.436871636734082 + p3 + -2*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6278293234269414 + p3 + -2*p4 + -3*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.406249128377824 + p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.141959164234395 + p3 + -4*p4 + 2*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7291729051432265 + p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.311750919517419 + p3 + -5*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4259053754796345 + p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.999600719657044 + 2*p4 + 3*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.577258957444131 + 2*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2616538443361667 + 2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.473808371763255 + 2*p4 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5327244041252764 + p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5187811432640189 + p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.033030879692768286 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.047867974653872 + 3*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.860843378932064 + 3*p5 + -2*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.860843378932064 + 3*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.227518728818929 + 3*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.887783932199999 + 3*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2180527185962282 + 3*p5 + -3*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.970316014670756 + 3*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1031854531708647 + 3*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.475907138687095 + 3*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.840365430818416 + 2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.3454837536387063 + 2*p5 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.259690557453864 + 2*p5 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.975796523054943 + 2*p5 + -5*p6 + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.975796523054943 + 2*p5 + -5*p6 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2596233112877629 + 2*p5 + -6*p6 + 3*p7 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7523515842397286 + 2*p5 + -6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.893918905060418 + 2*p5 + -6*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9211376638111202 + 2*p5 + -6*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.893918905060418 + 2*p5 + -6*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7659751007820208 + 2*p5 + -6*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6504617059692528 + p5 + 2*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7057916188155176 + p5 + 3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0363925838599846 + p5 + 2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.1724258401834 + p5 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.1964410385937505 + p5 + -2*p6 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.205594243322909 + p5 + -2*p6 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2058544804126985 + p5 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.37123436691758 + 5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8973158478818917 + 2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.827252555123674 + p8 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141623196851703 + d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9853851534392084 + 11*p1 + -22*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.708000856582692 + 6*p1 + -3*p3 + -5*d + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8595107775565842 + 3*p1 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0365705989453713 + 3*p1 + -2*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0077794560749143244 + 3*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1485851407049834 + 2*p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.14667906662888 + 2*p1 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.56429585649416 + 2*p1 + -7*p2 + 3*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7485261970801576 + 2*p1 + -56*p2 + 58*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.077408710943111 + p1 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.069152413919918 + p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.3847564543353816 + p1 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6960003302101465 + p1 + -4*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6798015803565365 + p1 + -4*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.167062741467972 + 61*p2 + -61*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.614104054189258 + 55*p2 + -65*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.817215200588721 + 45*p2 + -50*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.805286215718873 + 39*p2 + -36*p3 + -3*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3769440200359213 + 38*p2 + -28*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.97613875662631 + 31*p2 + -35*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.226714647134218 + 31*p2 + -37*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.5762307839817815 + 30*p2 + -35*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.138340415559944 + 29*p2 + -34*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.138340415559944 + 29*p2 + -34*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.037666525175966 + 28*p2 + -30*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1667770565643707 + 28*p2 + -32*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.272658877394958 + 27*p2 + -27*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.795606811216871 + 26*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1055982048271384 + 26*p2 + -30*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.619001997164079 + 26*p2 + -31*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.272703200259642 + 25*p2 + -21*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.281093181005222 + 25*p2 + -25*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6089439882557366 + 25*p2 + -26*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + d + 2*l + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + d + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6046689787859014 + 25*p2 + -26*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.011915396796632 + 25*p2 + -30*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.1568321959814565 + 24*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6642395096174207 + 23*p2 + -19*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.364182347078264 + 23*p2 + -23*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.364121435087369 + 23*p2 + -23*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.364182347078264 + 23*p2 + -23*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.751183460866319 + 23*p2 + -24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.23878931600670658 + 23*p2 + -24*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4890077545854896 + 23*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4926813150967705 + 23*p2 + -27*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4926813150967705 + 23*p2 + -27*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1296608676948259 + 22*p2 + -14*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.365778616713821 + 22*p2 + -20*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3586058455852172 + 22*p2 + -22*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.153424964215713 + 22*p2 + -24*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7872501322667395 + 22*p2 + -24*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9258804130221725 + 21*p2 + -16*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9418301043915229 + 21*p2 + -21*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.856645679049778 + 21*p2 + -22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6994967483006667 + 21*p2 + -23*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1027241711478792 + 21*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.132018309410444 + 21*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.132018309410444 + 21*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -3*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4933581537806939 + 20*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.81461342127614 + 20*p2 + -19*p3 + -3*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3421738942485907 + 20*p2 + -20*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9473931923442795 + 20*p2 + -20*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.005312118104636 + 20*p2 + -21*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.130147141919381 + 20*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6471324904210733 + 19*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2794781768584504 + 19*p2 + -19*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.27506271937373 + 19*p2 + -19*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.214110743442624 + 19*p2 + -19*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.790661237750104 + 19*p2 + -20*p3 + 3*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.127904917429344 + 19*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7684258921176712 + 18*p2 + -13*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9389854092403307 + 18*p2 + -16*p3 + -2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8065164813119712 + 18*p2 + -17*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.1790992726130085 + 18*p2 + -17*p3 + -2*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0235354243956098 + 18*p2 + -18*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7156301973453018 + 18*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.057463777884704 + 18*p2 + -18*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2202912863931528 + 18*p2 + -22*p3 + 8*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.481118542795575 + 17*p2 + -13*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2770246099926297 + 17*p2 + -14*p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.765969549721682 + 17*p2 + -14*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.765969549721682 + 17*p2 + -14*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2764791776047485 + 17*p2 + -15*p3 + -2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.224325457422846 + 17*p2 + -16*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.93973015822879 + 17*p2 + -16*p3 + -2*d + 3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.93973015822879 + 17*p2 + -16*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1638154073566613 + 17*p2 + -16*p3 + -1*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2948789621780484 + 17*p2 + -16*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.400833580235077 + 16*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.277910224048359 + 16*p2 + -14*p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.398158837661446 + 16*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1120012942539304 + 16*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.268760509977704 + 16*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.02073503511246823 + 16*p2 + -16*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.745844847750319 + 16*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.017951967080505 + 16*p2 + -21*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9145225253785276 + 16*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.023426898909403 + 15*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.601018290586138 + 15*p2 + -13*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.601018290586138 + 15*p2 + -13*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.707764181437805 + 15*p2 + -13*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.1977320501431326 + 15*p2 + -14*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.798561270581381 + 15*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.054082568521449 + 15*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.281942632752167 + 15*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.130188348686362 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.016161267766275 + 14*p2 + -9*p3 + -6*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.903304098040435 + 14*p2 + -11*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.389662234295204 + 14*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.03327018132985 + 14*p2 + -12*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.18237259513354107 + 14*p2 + -12*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.799033905742821 + 14*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.29076575322819 + 14*p2 + -17*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.904015102686113 + 14*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.490323766834759 + 13*p2 + -8*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.490323766834759 + 13*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.057467102508599 + 13*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8004853215487795 + 13*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7995095079639893 + 13*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1636091094390753 + 13*p2 + -12*p3 + -1*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1404227593921816 + 13*p2 + -13*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282005115539389 + 13*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6138361461490764 + 13*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.152445834505345 + 13*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.5011605076620755 + 13*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.019615614923506 + 13*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.667561420277693 + 12*p2 + -7*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4347318715694537 + 12*p2 + -8*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3171827247171595 + 12*p2 + -8*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.738483913131716 + 12*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8009101346887149 + 12*p2 + -11*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1408255813835417 + 12*p2 + -12*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3455809769763585 + 12*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282081037361849 + 12*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9427856891536233 + 12*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9313443577750995 + 11*p2 + -5*p3 + -4*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.544029808348336 + 11*p2 + -6*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5902525761610615 + 11*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8081190426311524 + 11*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00044366269585695864 + 11*p2 + -11*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282998906015473 + 11*p2 + -11*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.14117429816809 + 11*p2 + -11*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8997102480860688 + 11*p2 + -17*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4759493671566765 + 10*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1365495247161554 + 10*p2 + -10*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.775730295065143 + 10*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.090055200668453 + 10*p2 + -12*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.175132322254467 + 10*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.235654547133833 + 9*p2 + -4*p3 + -1*p6 + -3*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.281186207054352 + 9*p2 + -7*p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00003979350694547071 + 9*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282608126795951 + 9*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.264554773082539 + 9*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4563954048473495 + 9*p2 + -10*p3 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.8151818920101475 + 9*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.358010173209828 + 9*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.229648005011411 + 9*p2 + -14*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.259841179368313 + 9*p2 + -17*p3 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4516179065875487 + 8*p2 + -6*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.514694812384641 + 8*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8030478139565576 + 8*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0008330456519768935 + 8*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.118884174692095 + 8*p2 + -9*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7179343895221015 + 8*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5846170655426641 + 8*p2 + -9*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9475989581647735 + 8*p2 + -10*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.248840867196817 + 8*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1581537167994838 + 8*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.820031646900981 + 8*p2 + -12*p3 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.820031646900981 + 8*p2 + -12*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.230616496711659 + 8*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.1273837621146985 + 8*p2 + -13*p3 + 4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9898620890051825 + 8*p2 + -13*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9934911521188541 + 8*p2 + -13*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.067899974147004 + 8*p2 + -13*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.951933857922902 + 8*p2 + -14*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5592446991059634 + 7*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5592446991059634 + 7*p2 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7472557549209977 + 7*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.995784723282166 + 7*p2 + -4*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4920479436095384 + 7*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.042413297142615 + 7*p2 + -7*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.005606695689106584 + 7*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.328888107414876 + 7*p2 + -8*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6833246764896623 + 7*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.07930011575518 + 7*p2 + -13*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.259485638803047 + 7*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.767330531977436 + 7*p2 + -19*p3 + 11*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.767330531977436 + 7*p2 + -19*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.03987105055416 + 6*p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0011576768928478387 + 6*p2 + -6*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00023247785636564471 + 6*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.137294805801707 + 6*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.384095000043826 + 6*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.715523591721271 + 6*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.07376359080032 + 6*p2 + -10*p3 + 3*p5 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.0737676050576 + 6*p2 + -10*p3 + 3*p5 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.45918044373139 + 6*p2 + -10*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6265910038243347 + 6*p2 + -11*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.077944518525157 + 6*p2 + -12*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.271772590702478 + 5*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.271772590702478 + 5*p2 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.201740207268655 + 5*p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3108452426736092 + 5*p2 + -4*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.951931056897781 + 5*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.000009948376736367678 + 5*p2 + -5*p3 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6025428186911221 + 5*p2 + -6*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.755526014578205 + 5*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.333165734878589 + 5*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9114886195397864 + 5*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8116254175967255 + 5*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2661490973609697 + 5*p2 + -7*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.881777181551386 + 5*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9606349883825271 + 5*p2 + -7*p3 + -4*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.662476752567857 + 5*p2 + -8*p3 + 2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.260846271992952 + 5*p2 + -8*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5018394152461518 + 5*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6542487128819132 + 5*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.6331948486066885 + 5*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.266671516897675 + 5*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.272058126568106 + 4*p2 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.233821078754613 + 4*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.314636455373108 + 4*p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.0323842776964876 + 4*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.94532655647531 + 4*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.94470190313602 + 4*p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1606947586540954 + 4*p2 + -3*p3 + -1*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.030064394553054 + 4*p2 + -4*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00400727596257898 + 4*p2 + -4*p3 + 4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141990763192173 + 4*p2 + -4*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2707174966780649 + 4*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.264406786158603 + 4*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0014686945655532284 + 4*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3199010750271403 + 4*p2 + -4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5667037042318952 + 4*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.278244454600115 + 4*p2 + -5*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.139347811105878 + 4*p2 + -6*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.934072856489691 + 4*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.950058999745459 + 4*p2 + -6*p3 + d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.040741446252128 + 4*p2 + -6*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.446937325091134 + 4*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.27230770865114 + 3*p2 + 2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2027207077474755 + 3*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.23174691247490947 + 3*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.941304968812864 + 3*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.288539594265588 + 3*p2 + -2*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.280500616229219 + 3*p2 + -3*p3 + p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282916177408928 + 3*p2 + -3*p3 + 4*d + -2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.259383728571364 + 3*p2 + -3*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141847471660584 + 3*p2 + -3*p3 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1348080351885157 + 3*p2 + -3*p3 + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1413531944164195 + 3*p2 + -3*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0397928258104034 + 3*p2 + -3*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0397928258104034 + 3*p2 + -3*p3 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3477254630282847 + 3*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4571867371302036 + 3*p2 + -4*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3577912834266779 + 3*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.123134749552402 + 3*p2 + -5*p3 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8996081633214605 + 3*p2 + -5*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8388893803750546 + 3*p2 + -5*p3 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8171779910823871 + 3*p2 + -5*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0860751093506218 + 3*p2 + -6*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.416491967653953 + 3*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.675784356017221 + 3*p2 + -8*p3 + 6*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9528857265036723 + 3*p2 + -8*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.379622419302665 + 2*p2 + 4*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.259866627182124 + 2*p2 + 3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.34910337497778376 + 2*p2 + p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.34789072021349815 + 2*p2 + p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8029884727619898 + 2*p2 + -1*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.944598928710153 + 2*p2 + -1*p3 + d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.830104457114699 + 2*p2 + -1*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1946511864491964 + 2*p2 + -1*p3 + -1*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.4685889816317994 + 2*p2 + -1*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.530730407946456 + 2*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00018779742751458986 + 2*p2 + -2*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.258900097835636 + 2*p2 + -2*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0038601447066358586 + 2*p2 + -2*p3 + -2*d + 4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.008384910792431158 + 2*p2 + -2*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.004910309317560846 + 2*p2 + -2*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.354617942777335 + 2*p2 + -2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.035574382004966 + 2*p2 + -3*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9735835776047564 + 2*p2 + -3*p3 + 2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.05288033474277459 + 2*p2 + -3*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.736213073740263 + 2*p2 + -3*p3 + 4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.576487147353949 + 2*p2 + -3*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.585849093461647 + 2*p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5595316227366747 + 2*p2 + -4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2900693583583276 + 2*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.96291579314735 + 2*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9602136743994127 + 2*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2777119291503825 + 2*p2 + -5*p3 + 3*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0473101249333514 + 2*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.664925458006722 + 2*p2 + -6*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.093267819724282 + 2*p2 + -7*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.744314202494635 + 2*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7421298974408153 + 2*p2 + -7*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6632747001052355 + 2*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6233728167115324 + p2 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.237383844851659 + p2 + 3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.394338162890855 + p2 + 3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5805921787512727 + p2 + p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5694995641572977 + p2 + p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.144076082582456 + p2 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.154893982352167 + p2 + p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.744538992403976 + p2 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8035787431150143 + p2 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1409837082137724 + p2 + -1*p3 + d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00018099064343181197 + p2 + -1*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141816404799899 + p2 + -1*p3 + -4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1413043251973636 + p2 + -1*p3 + -6*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1248723908573703 + p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6450696772798246 + p2 + -3*p3 + 3*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.118297220464649 + p2 + -3*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8138145840775017 + p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.207709416341718 + p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.256990865170247 + p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.24426511200191361 + p2 + -5*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9387056159646026 + p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.093295919525239 + p2 + -6*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.660449535645032 + p2 + -6*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.041713769178414 + p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.04369487541572 + p2 + -7*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7010342003404317 + p2 + -11*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2040686085321574 + 48*p3 + -69*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.971462512958074 + 32*p3 + -35*p4 + -4*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.8698532751330026 + 17*p3 + -28*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.759351601765652 + 15*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.260428648696216 + 14*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.762978221418371 + 14*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6213895820858577 + 14*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.28934385898154 + 14*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1537095849251304 + 14*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.11270149485488025 + 13*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.092526378363085 + 12*p3 + -14*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.264307285394607 + 12*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.2654447164681315 + 11*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1628713417676242 + 11*p3 + -15*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2524083201878935 + 11*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7524538690322125 + 11*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.256715643743841 + 10*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.081122780089671 + 10*p3 + -15*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.046498231758591 + 10*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5415138822383199 + 9*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.521401597599596 + 9*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0673520982981692 + 9*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7542627367672954 + 9*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0407845303897028 + 9*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6753595428772856 + 8*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.188241813837098 + 8*p3 + -14*p4 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.188241813837098 + 8*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7466050961758537 + 8*p3 + -15*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7368118792099887 + 8*p3 + -15*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.056751334484039 + 8*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0577191110559534 + 8*p3 + -17*p4 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.605963157422889 + 7*p3 + -9*p4 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.766959142909245 + 7*p3 + -10*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6231603931449314 + 7*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.203385844227094 + 7*p3 + -11*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2358468909157194 + 7*p3 + -13*p4 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0282008725174325 + 7*p3 + -13*p4 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7183607649600469 + 6*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.801539500416984 + 6*p3 + -6*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.7831664533745055 + 6*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.262236809801283 + 6*p3 + -8*p4 + 2*d + -4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6921822309418502 + 6*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7401210319700864 + 6*p3 + -11*p4 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6830560958127307 + 6*p3 + -11*p4 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8045669400391768 + 6*p3 + -12*p4 + 3*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.214929817962268 + 6*p3 + -12*p4 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.214929817962268 + 6*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.946126789937349 + 6*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.373029255022014 + 5*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0443038122934247 + 5*p3 + -5*p5 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.18635807997542 + 5*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3579164150357292 + 5*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.499509068625522 + 5*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.603693531263595 + 5*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00666663414384274 + 5*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1283609634645737 + 5*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.744756984027551 + 5*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.746850506465317 + 5*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.241367724903944 + 5*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.3568718779699935 + 5*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.336980535017939 + 5*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.029727179944935 + 5*p3 + -11*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.139624096726469 + 4*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.127748701962974 + 4*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4644258562653336 + 4*p3 + -6*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7013515011984444 + 4*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8429692450378828 + 4*p3 + -4*p4 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2814657833055714 + 4*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.784341234494024 + 4*p3 + -5*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.780610767750812 + 4*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.822669354501203 + 4*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.418717053924054 + 4*p3 + -6*p4 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.418717053924054 + 4*p3 + -6*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.243190729805969 + 4*p3 + -6*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.005320504183364 + 4*p3 + -8*p4 + 3*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.021190259472972 + 4*p3 + -8*p4 + 3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.97113037680142 + 4*p3 + -8*p4 + 3*p5 + 4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.971123570017337 + 4*p3 + -8*p4 + 3*p5 + -4*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.021227434986039 + 4*p3 + -8*p4 + 3*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.005290659053154 + 4*p3 + -8*p4 + 3*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.262427225222674 + 4*p3 + -8*p4 + 2*p5 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.262427225222674 + 4*p3 + -8*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.201458153563216 + 4*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.464854351593331 + 4*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.798468627591367 + 4*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.495074195494522 + 3*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3428694164538268 + 3*p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6184033237356954 + 3*p3 + -4*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.736734229054908 + 3*p3 + -4*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.449413215174746 + 3*p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.180952620749068 + 3*p3 + -1*p5 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7873969144568322 + 3*p3 + -1*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.027024878165755 + 3*p3 + -1*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3092931213698105 + 3*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4750166886993603 + 3*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3701045812994979 + 3*p3 + -3*p5 + p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6899689959140294 + 3*p3 + -3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.272811244638658 + 3*p3 + -3*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.902661093249049 + 3*p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2525472229014023 + 3*p3 + -4*p5 + 5*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3127262010051166 + 3*p3 + -4*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2525472229014023 + 3*p3 + -4*p5 + d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.162468187707047 + 3*p3 + -5*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.815704235062003 + 3*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5683495667131586 + 3*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2623633291754186 + 3*p3 + -3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.339004925420695 + 3*p3 + -3*p4 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.78115216888478 + 3*p3 + -4*p4 + d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.098302737052118 + 3*p3 + -4*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.257674170070719 + 3*p3 + -5*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.113108365096787 + 3*p3 + -6*p4 + 3*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.7808561610436415 + 3*p3 + -6*p4 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.779824496922788 + 3*p3 + -6*p4 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.622782214289291 + 3*p3 + -7*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.632446102357584 + 2*p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3826994007806646 + 2*p3 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.24901819264882 + 2*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.19466372732486073 + 2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.100951640254505 + 2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.14377780581329 + 2*p3 + -2*p8 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.511353754092498 + 2*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.2819475196740715 + 2*p3 + -2*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1451302614506607 + 2*p3 + -2*p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.10570237548853258 + 2*p3 + -4*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2665072644184288 + 2*p3 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.931380852153099 + 2*p3 + -1*p5 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.4989921105993975 + 2*p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.142134952883338 + 2*p3 + -1*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.730028831605038 + 2*p3 + -1*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2665000830735457 + 2*p3 + -1*p5 + -5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9525680850781257 + 2*p3 + -2*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.9478614726809065 + 2*p3 + -2*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.947816094120355 + 2*p3 + -2*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.10475850142905405 + 2*p3 + -2*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.002493377369399099 + 2*p3 + -2*p5 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0021263346277046913 + 2*p3 + -2*p5 + 2*d + l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1659621623366143 + 2*p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2727422701399367 + 2*p3 + -3*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3331585790286558 + 2*p3 + -3*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.10385180288264298 + 2*p3 + -3*p5 + p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.17601837492580533 + 2*p3 + -3*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.317328983308476 + 2*p3 + -3*p5 + 4*d + -2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.319724273173913 + 2*p3 + -3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.17720572241593707 + 2*p3 + -3*p5 + 2*d + -5*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3218692828246144 + 2*p3 + -3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.594136274314283 + 2*p3 + -4*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.130074378686207 + 2*p3 + -4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.9984032067656671 + 2*p3 + -4*p5 + 3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.039170249869583534 + 2*p3 + -4*p5 + 2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.049689557797545 + 2*p3 + -5*p5 + 5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.176305864646875 + 2*p3 + -5*p5 + 4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0879911318034612 + 2*p3 + -5*p5 + 4*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3836129061111584 + 2*p3 + -6*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3966016464045001 + 2*p3 + -6*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7167014804401758 + 2*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.459929373011738 + 2*p3 + -1*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.774212565245924 + 2*p3 + -3*p4 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0758665210194147 + 2*p3 + -4*p4 + 3*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2902271446210245 + 2*p3 + -6*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2926496616227927 + 2*p3 + -6*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.202952155402923 + p3 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0608994330223045 + p3 + 2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.8481473303542835 + p3 + p4 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.504925191356945 + p3 + 3*p5 + -5*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.194443500766526 + p3 + 2*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.524538494860839 + p3 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1437667932423692 + p3 + 2*p5 + -5*p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.985599130805503 + p3 + 2*p5 + -7*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.461540137378403 + p3 + p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.287540933864229 + p3 + p5 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.789492041684193 + p3 + p5 + -1*p6 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1976615303430367 + p3 + p5 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2040975809977405 + p3 + p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.129910309238203 + p3 + -2*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.990712971008796 + p3 + -2*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6046400233169518 + p3 + -3*p6 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6046400233169518 + p3 + -3*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9031862543226572 + p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1680567319719324 + p3 + -1*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1614482172921816 + p3 + -1*p5 + d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.171862247872981 + p3 + -1*p5 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.03110770138999573 + p3 + -1*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.018635578555244253 + p3 + -1*p5 + -4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.363009153751706 + p3 + -1*p5 + -1*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.553770848467884 + p3 + -1*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5062062290346416 + p3 + -2*p5 + 5*p6 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.239390598930652 + p3 + -2*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.093533118268902 + p3 + -2*p5 + 4*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.093533118268902 + p3 + -2*p5 + 4*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1858041124708367 + p3 + -2*p5 + p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1858041124708367 + p3 + -2*p5 + p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.895931818781693 + p3 + -2*p5 + -1*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0534236642372372 + p3 + -3*p5 + 3*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0534236642372372 + p3 + -3*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.241498990660328 + p3 + -3*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.390853613039249 + p3 + -3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.086779383697068 + p3 + -3*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.073000532851348 + p3 + -3*p5 + -1*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.3918091808047155 + p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.170754146829207 + p3 + -4*p5 + 4*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.536638871063232 + p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.402045187801812 + p3 + -5*p5 + 3*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.714073231611182 + p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.005345768965933432 + p3 + -1*p4 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.012834104121615102 + p3 + -1*p4 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3900198522589378 + p3 + -2*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4166153539337523 + p3 + -2*p4 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.628649104576603 + p3 + -2*p4 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5256724182792265 + p3 + -2*p4 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.770701826957222 + p3 + -2*p4 + -3*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.561309449106023 + p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.1263093374271715 + p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6532828476738595 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6460592789657054 + 4*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.857947852208057 + 2*p4 + d + 3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.857947852208057 + 2*p4 + d + -3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1800427721116873 + 2*p4 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.002903878809468165 + 2*p4 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.389103920464124 + p4 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.0551144071752265 + p4 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.329940915514629 + 4*p5 + -5*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8354992358393472 + 4*p5 + -11*p6 + 3*p7 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.679610134734226 + 3*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.110704855187232 + 3*p5 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.982024862532027 + 3*p5 + -7*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4090849393464646 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.804728208462061 + 2*p5 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.008687908448894 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.268821072902747 + 2*p5 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.590907781260578 + 2*p5 + -4*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.58497244007332 + 2*p5 + -4*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2612442070624066 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0864897995808958 + 2*p5 + -5*p6 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3697935636267924 + p5 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0463639989424784 + p5 + -2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5613719148966108 + p5 + -3*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.880923208945018 + p5 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.301813521358705 + p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.3542477499446703 + p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.659233930817651 + p6 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.647841992256959 + p6 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.675839516919901 + p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.277849486590389 + 2*p7 + -2*p8 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8581965446298325 + p8 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0019231783027725516 + 4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.14354620062155 + 2*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.28220355947534 + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2611225576135427 + 9*p1 + -1*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.3217650611733202 + 6*p1 + -39*p2 + 27*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.62958166798921 + 5*p1 + -7*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.43215050411080397 + 4*p1 + -4*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.826976128963424 + 3*p1 + -1*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.826976128963424 + 3*p1 + -1*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.379061112916907 + 2*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2374672375966376 + 2*p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.248866723564696 + p1 + -1*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2593959118828613 + p1 + -7*p2 + 9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.275580184001996 + 43*p2 + -45*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.230488564077488 + 38*p2 + -38*p3 + -1*p5 + -3*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.589103625914474 + 36*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.250710829954037 + 30*p2 + -24*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0460091650072316 + 27*p2 + -32*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1319538982627293 + 25*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.447954852045045 + 25*p2 + -29*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.169331694990514 + 24*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6675386970041491 + 24*p2 + -28*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.190516876012022 + 23*p2 + -24*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.859370470081357 + 23*p2 + -24*p3 + -1*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.159554909614567 + 23*p2 + -25*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.116249102082385 + 23*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.74338793926397 + 23*p2 + -26*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.013412680768651224 + 22*p2 + -22*p3 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.0243515828454255 + 22*p2 + -22*p3 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.893065098488659 + 22*p2 + -26*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.954379230239554 + 21*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.272722058313881 + 21*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.2822067010679925 + 21*p2 + -21*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.2822067010679925 + 21*p2 + -21*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.367410857128603 + 21*p2 + -21*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.245999845735371 + 21*p2 + -21*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.170494084272343 + 21*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.229668084796126 + 20*p2 + -19*p3 + p5 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7893829331109932 + 20*p2 + -19*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8819506587807173 + 20*p2 + -19*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.7801398694203066 + 20*p2 + -21*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.0977534734381997 + 20*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.919684536669176 + 20*p2 + -29*p3 + 15*p4 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.438579815967959 + 19*p2 + -16*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6863160217896054 + 19*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.278881848842943 + 19*p2 + -19*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*l + 4*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*l + -4*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -4*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6061689317416987 + 18*p2 + -16*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.8209662282238407 + 18*p2 + -16*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.9396231695456425 + 18*p2 + -17*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.939628405533399 + 18*p2 + -17*p3 + d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.9396231695456425 + 18*p2 + -17*p3 + -3*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.127471194611907 + 18*p2 + -17*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6604554782628047 + 18*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.735039339818297 + 18*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.319446050694512 + 18*p2 + -21*p3 + 6*p4 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.994351284367505 + 17*p2 + -14*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5299905203849525 + 17*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.93956836620713 + 17*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.060207976064247 + 17*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.276898456680978 + 17*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4853464198772888 + 17*p2 + -17*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.750793903377273 + 17*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.115187924900538 + 16*p2 + -13*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4894079585829716 + 16*p2 + -14*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4894079585829716 + 16*p2 + -14*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.539061720134218 + 16*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.9385063248589747 + 16*p2 + -17*p3 + 8*p4 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.214991977178589 + 16*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.684236802553388 + 15*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.600281063510096 + 15*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.45858910068586445 + 15*p2 + -13*p3 + -4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6538057568160736 + 15*p2 + -14*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.308330589283969 + 15*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6226425539558644 + 15*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.53053803866962 + 15*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.271515329170734 + 14*p2 + -7*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.910833605969829 + 14*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4288436287770503 + 14*p2 + -11*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4141701306550751 + 14*p2 + -11*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.5910365780610576 + 14*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.800024554626253 + 14*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.280693849672365 + 14*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.332354880403062 + 13*p2 + -10*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.907191635918009 + 13*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2957230119026293 + 13*p2 + -16*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.7012230534638144 + 12*p2 + -6*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2855290758388227 + 12*p2 + -9*p3 + -3*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7999814449937286 + 12*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.4893842476000945 + 12*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8012981213814332 + 11*p2 + -10*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.80044203738333 + 11*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1659352842661335 + 11*p2 + -10*p3 + -1*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.142466016347491 + 11*p2 + -11*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.480284799011898 + 11*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.590713866682364 + 10*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8046498516769633 + 10*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.801648758028159 + 10*p2 + -9*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.00005532693728822025 + 10*p2 + -10*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.282985816046083 + 10*p2 + -10*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.157182109001532 + 10*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.186929675305448 + 10*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7064269101649274 + 10*p2 + -11*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.7277859259799335 + 10*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9361598787176436 + 10*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2295141297594663 + 9*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.801961346497191 + 9*p2 + -8*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.752609569398123 + 9*p2 + -10*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.454338908884675 + 9*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.455043498303705 + 9*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9364321500809548 + 9*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.2139789625857818 + 9*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9003635248250903 + 9*p2 + -15*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.148067650581767 + 8*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.941966623132296 + 8*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3255491180228858 + 8*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.088429575508196 + 8*p2 + -11*p3 + 3*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1298483160564898 + 8*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.138420683708902 + 8*p2 + -12*p3 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9971367958604198 + 8*p2 + -13*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.063419713957135 + 8*p2 + -13*p3 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.0566076938866 + 8*p2 + -13*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9980979486794932 + 8*p2 + -13*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.931842674771494 + 8*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.944791787592498 + 7*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.131628594385107 + 7*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9941550923629463 + 7*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.736700012103252 + 7*p2 + -10*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.442082334212545 + 7*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5464847714775583 + 7*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.05424209161508 + 7*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.248129671021579 + 7*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4672162716767891 + 6*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3313354080920226 + 6*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9529061553542375 + 6*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.090994711404802 + 6*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.239411053276166 + 6*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.667104667612445 + 6*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.303141908449032 + 6*p2 + -9*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6575912014307244 + 6*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.813379848055781 + 6*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8033343970197349 + 5*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.340524409067481 + 5*p2 + -5*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6120939584897358 + 5*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.898385036581663 + 5*p2 + -7*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.2544898083521385 + 5*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2595222652223892 + 5*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9894384975957232 + 5*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.336699677548027 + 4*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.517717399078195 + 4*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.48881614292857 + 4*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.422985116070148 + 4*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.4512726974581374 + 4*p2 + -4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.002428102055374511 + 4*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.280630145154666 + 4*p2 + -4*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.22075936670190438 + 4*p2 + -4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6240854176484882 + 4*p2 + -5*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.740177938202018 + 4*p2 + -5*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.710141868972746 + 4*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.622551971367686 + 4*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1245814359727466 + 4*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.660372417587044 + 4*p2 + -8*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.881424991104966 + 4*p2 + -12*p3 + 7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2294450147210876 + 3*p2 + p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2892661748331933 + 3*p2 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.1242358947741184 + 3*p2 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.47748703622095 + 3*p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.455852283879079 + 3*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.140971839974859 + 3*p2 + -3*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.08200272410862677 + 3*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1150526278902418 + 3*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.0543003601171472 + 3*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.2733533439043265 + 3*p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.737115400465227 + 3*p2 + -3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.9569053943039405 + 3*p2 + -4*p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6298680425261958 + 3*p2 + -4*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3356709804869018 + 3*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5814274763346443 + 3*p2 + -4*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5811944748795033 + 3*p2 + -4*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1241114358018183 + 3*p2 + -5*p3 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.0868614226702284 + 3*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.860346134628172 + 3*p2 + -5*p3 + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.892776621058254 + 3*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.033371269886808 + 3*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.56921419432628 + 3*p2 + -7*p3 + 4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5690876579555106 + 3*p2 + -7*p3 + 4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.246739516272366 + 3*p2 + -7*p3 + 2*p4 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.4753870560649505 + 3*p2 + -7*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.279688514528265 + 2*p2 + 21*p3 + -26*p4 + -3*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.381405273133578 + 2*p2 + 4*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.379199875090757 + 2*p2 + 4*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.238278475131281 + 2*p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.200353692215921 + 2*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.238278475131281 + 2*p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.710801062834592 + 2*p2 + 2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.8296433496246385 + 2*p2 + p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.321471347755159 + 2*p2 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.486883365314911 + 2*p2 + -1*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.084089465257261 + 2*p2 + -1*p3 + -1*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0280539157944144 + 2*p2 + -1*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.047218537639205 + 2*p2 + -2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.142163899853971 + 2*p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3469383195356346 + 2*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.0526051048180516 + 2*p2 + -3*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.651827277070963 + 2*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.491417556178668 + 2*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.094455682314873 + 2*p2 + -7*p3 + 7*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.096042710203712 + 2*p2 + -7*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03490885396791418 + p2 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.278036577387886 + p2 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.296403026172474 + p2 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.047003147012876 + p2 + -1*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.0058948495486108475 + p2 + -1*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.00020629791758572976 + p2 + -1*p3 + 2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1478339509949245 + p2 + -1*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141300660005934 + p2 + -1*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6949318396420754 + p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.024453833644643 + p2 + -2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.8218354361846005 + p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0571012560024307 + p2 + -2*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1568545107009323 + p2 + -3*p3 + 2*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.048137104424529 + p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.015711487919719 + p2 + -3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8834814870676413 + p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9519352116947197 + p2 + -4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5398863797074682 + p2 + -8*p3 + 12*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.539884634378216 + p2 + -8*p3 + 12*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.2657168217968335 + 13*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.765948771805266 + 13*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6172081137656131 + 13*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5808946358123275 + 11*p3 + -12*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.730797151036715 + 11*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1151636563256186 + 10*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.047270889018448 + 10*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.8169289325981274 + 10*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.19139142650693 + 10*p3 + -18*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.38578953171627 + 10*p3 + -19*p4 + 3*p6 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.385792324243074 + 10*p3 + -19*p4 + 3*p6 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.76491692465317 + 9*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.755109936582848 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.186695443621514 + 9*p3 + -17*p4 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.186643781875655 + 9*p3 + -17*p4 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.591997547848889 + 8*p3 + -9*p4 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.535412402702906 + 8*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.477642868628203 + 8*p3 + -11*p4 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9121568891137413 + 8*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.239579277521109 + 8*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.733985667552234 + 8*p3 + -15*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.090052914743792 + 8*p3 + -17*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.662586001680715 + 7*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.078075584253664 + 7*p3 + -7*p4 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.927240216039035 + 7*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.243625648858933 + 7*p3 + -13*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.028328107019903 + 7*p3 + -13*p4 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.758494802639215 + 7*p3 + -14*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6416806224332516 + 6*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.527523348449283 + 6*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.183677611808523 + 6*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4429233828841304 + 6*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1351717533063144 + 6*p3 + -8*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.276763010632706 + 6*p3 + -8*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.8015323700620005 + 6*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.787032523702282 + 6*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.889919657612398 + 6*p3 + -10*p4 + 3*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.529624192771592 + 6*p3 + -10*p4 + d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.713952088764459 + 6*p3 + -11*p4 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.946126789937349 + 6*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.7189858013584525 + 6*p3 + -13*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7200968524653222 + 6*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.571443528874802 + 5*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.420740963219617 + 5*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.32284978330343467 + 5*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.267567577433965 + 5*p3 + -5*p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.8797857608748605 + 5*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6482097161337212 + 5*p3 + -6*p4 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7868002288771585 + 5*p3 + -6*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7918780898029105 + 5*p3 + -6*p4 + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.700336260169193 + 5*p3 + -6*p4 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1514418871263308 + 5*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.745250214074164 + 5*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.256340031892178 + 5*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.7131970593300463 + 5*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.189631287451244 + 4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1539912810664024 + 4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.778322815634372 + 4*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1017328071361132 + 4*p3 + -3*p5 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.26987677157737916 + 4*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.409659169667004 + 4*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.410852642806151 + 4*p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.166856469045336 + 4*p3 + -4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.929866255428219 + 4*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8727758119688336 + 4*p3 + -8*p4 + 3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8611412726421142 + 4*p3 + -8*p4 + 3*p5 + 2*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8330894682394352 + 4*p3 + -8*p4 + 3*p5 + 2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8330833595870533 + 4*p3 + -8*p4 + 3*p5 + -2*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8611114275119052 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8727089658584823 + 4*p3 + -8*p4 + 3*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.210438047097652 + 4*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.684661641188272 + 4*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.720918038376702 + 3*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.718961366748925 + 3*p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.620382901668257 + 3*p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3056068114566735 + 3*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.14643696396667863 + 3*p3 + -1*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.9842948632521207 + 3*p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.527884465569838 + 3*p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2296678847682505 + 3*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.44023664852856 + 3*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3214236832699469 + 3*p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6774750479653115 + 3*p3 + -3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.894596101308508 + 3*p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1916677036292038 + 3*p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.295620586570488 + 3*p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.890254437257881 + 3*p3 + -4*p5 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1456299492155066 + 3*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9372467122394936 + 3*p3 + -5*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.990107001190821 + 3*p3 + -5*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.0841231501118247 + 3*p3 + -4*p4 + p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9515100494889339 + 3*p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.268953360361731 + 3*p3 + -5*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.2673605728863615 + 3*p3 + -5*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7582429771231025 + 3*p3 + -6*p4 + 2*p5 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.758041740660348 + 3*p3 + -6*p4 + 2*p5 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.52161924015732 + 3*p3 + -7*p4 + -1*d + 4*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1443947542089201 + 2*p3 + 2*p5 + -7*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1443947542089201 + 2*p3 + 2*p5 + -7*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.19979604252327526 + 2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.765109792033832 + 2*p3 + -3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.275458883618983 + 2*p3 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.498891754167409 + 2*p3 + -1*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.6126257858077695 + 2*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.142134952883338 + 2*p3 + -1*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4749978391434393 + 2*p3 + -1*p5 + -5*p6 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9526796116173286 + 2*p3 + -2*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.0015514231720977593 + 2*p3 + -2*p5 + 6*d + -4*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.0021266836935550904 + 2*p3 + -2*p5 + 4*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.1714498520656855 + 2*p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1330871405460496 + 2*p3 + -2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.8913501379656497 + 2*p3 + -2*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.376472083006182 + 2*p3 + -3*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.163426547999317 + 2*p3 + -3*p5 + p6 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1744261110492109 + 2*p3 + -3*p5 + 6*d + -4*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.18102589908270225 + 2*p3 + -3*p5 + 4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1814077771230386 + 2*p3 + -3*p5 + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1760298940988685 + 2*p3 + -3*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.129542053264348 + 2*p3 + -4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3112915403599774 + 2*p3 + -4*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.488924519376803 + 2*p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.98580367489552 + 2*p3 + -5*p5 + 5*p6 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3206491231445447 + 2*p3 + -5*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.006987600193284497 + 2*p3 + -2*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1456922574698023 + 2*p3 + -2*p4 + d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7236494701577567 + 2*p3 + -2*p4 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.77894711990781 + 2*p3 + -3*p4 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9224180288520663 + 2*p3 + -3*p4 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7893018092940425 + 2*p3 + -3*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.010964332893953578 + 2*p3 + -4*p4 + 2*p6 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4078544737254917 + 2*p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8753341155864067 + 2*p3 + -6*p4 + 3*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.3158957104284217 + 2*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.194443500766526 + p3 + 2*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1708600628198529 + p3 + 2*p5 + -5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.335295402628506 + p3 + 2*p5 + -6*p6 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.335295402628506 + p3 + 2*p5 + -6*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3183611540314724 + p3 + p5 + 3*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.457162328015626 + p3 + p5 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3183611540314724 + p3 + p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.284511391348619 + p3 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.777581042203957 + p3 + p5 + -1*p6 + 3*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.780652821687467 + p3 + p5 + -1*p6 + d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.780652821687467 + p3 + p5 + -1*p6 + d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.777581042203957 + p3 + p5 + -1*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1268123328192794 + p3 + p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.832708671389917 + p3 + p6 + d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9922394189759576 + p3 + p6 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.0863433834532867 + p3 + p7 + -2*p8 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7424925683610633 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.737475295855305 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.30008459820168 + p3 + -2*p8 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.969870406617772 + p3 + -1*p6 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.992927095697876 + p3 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.1299082148431 + p3 + -2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.250663540029624 + p3 + -1*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1619227723157985 + p3 + -1*p5 + -2*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1702125626639965 + p3 + -1*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7049156295656251 + p3 + -2*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.43308167126001 + p3 + -2*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.075851362149873 + p3 + -2*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.139526192253749 + p3 + -2*p5 + 3*p6 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.193550930888739 + p3 + -2*p5 + p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7544765226040318 + p3 + -2*p5 + 3*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.201994825311571 + p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.012211570672379 + p3 + -3*p5 + 5*p6 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.242324182330671 + p3 + -3*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.089803341159074 + p3 + -3*p5 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.417962066981224 + p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7637361924175625 + p3 + -4*p5 + 2*p6 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.381553451587072 + p3 + -4*p5 + 2*p6 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.381553451587072 + p3 + -4*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.46704020194853 + p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.725890855976435 + p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3703349817573947 + p3 + -2*p4 + p5 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3703349817573947 + p3 + -2*p4 + p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.5729069874526 + p3 + -2*p4 + 4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.42368740256788345 + p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.024258033197518 + p3 + -4*p4 + -1*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.024258033197518 + p3 + -4*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5978450819781376 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.970316014670756 + 3*p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.5040378659652305 + 2*p5 + -4*p6 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.167473817496718 + 2*p5 + -5*p6 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.168584370499762 + 2*p5 + -5*p6 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.217314835880068 + p5 + 4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8400821298875505 + p5 + d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1529444325810563 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.10075301328731 + p5 + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.086563145901063 + p5 + -4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.703627776605528 + p6 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.655819368669049 + p6 + -2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.71098852819289 + p6 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.009844006047098416 + 4*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.143766635706077 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1940404957439235 + 4*p1 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2612810335096236 + 3*p1 + -4*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1445012447882417 + 2*p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4296014507382663 + p1 + 21*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.4195366775374243 + p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.029381613251356 + p1 + -35*p2 + 28*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.734784521747505 + 44*p2 + -45*p3 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + 3*d + -1*l + -3*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + -1*d + l + -3*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.190394877497307 + 40*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4371908404576384 + 35*p2 + -32*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9419259229674574 + 33*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3053964992818081 + 31*p2 + -39*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6150119744661453 + 29*p2 + -30*p3 + 4*d + -3*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.030827086439542 + 28*p2 + -34*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.27355248597198 + 26*p2 + -26*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.570489008306887 + 26*p2 + -26*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.791518875547901 + 26*p2 + -28*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9086721732275262 + 26*p2 + -31*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.132559527513171 + 24*p2 + -24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.28105321296535 + 24*p2 + -24*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1327565751857214 + 24*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6092691430953832 + 24*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1917612532771107 + 24*p2 + -25*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.20977216999474965 + 24*p2 + -26*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.764531564452646 + 23*p2 + -24*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7501774530854695 + 23*p2 + -26*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1358056653889554 + 22*p2 + -22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1368589715925337 + 21*p2 + -21*p3 + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.24206826607242832 + 21*p2 + -21*p3 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.743558291897281 + 21*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7763877605943685 + 21*p2 + -23*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.75012614040546 + 20*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.837894742729293 + 20*p2 + -21*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.18557864142643 + 19*p2 + -15*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2874536504049967 + 19*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.25434979895286197 + 19*p2 + -21*p3 + 3*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.25434979895286197 + 19*p2 + -21*p3 + 3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.092333702511982 + 19*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -5*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.18104567229315 + 18*p2 + -18*p3 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6020389421360715 + 18*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.64966740662667 + 17*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.9284282786575 + 17*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.0679261710824175 + 16*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.253884719697106 + 16*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7995285320528362 + 15*p2 + -14*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.942742072918956 + 15*p2 + -14*p3 + -3*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.018587266928231 + 15*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8962463016179523 + 14*p2 + -11*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8656955262939514 + 13*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.905415763404105 + 13*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5870422175349437 + 13*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1194412837893317 + 13*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8466311203414921 + 12*p2 + -8*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.74448382300298 + 12*p2 + -8*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.108711880711013 + 12*p2 + -8*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.957592555925401 + 12*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.16352533363498 + 12*p2 + -11*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.89447586511968 + 12*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8993494885296817 + 12*p2 + -18*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.343078174828999 + 11*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1410803994543324 + 11*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.923677143367722 + 11*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.944241817348562 + 11*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.459460228508801 + 10*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.46762418061793 + 10*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7150546047546276 + 10*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.21381456106856 + 10*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.104068623765641 + 9*p2 + -3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.45147845478031434 + 9*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.077709090605696 + 9*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0052143456732582595 + 9*p2 + -9*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2162588861876618 + 9*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4187713421621075 + 9*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6778984478452119 + 9*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.11316230426899 + 9*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.317817517962743 + 9*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.802235363189754 + 8*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1679118696440174 + 8*p2 + -7*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.077474518354228 + 8*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0000609119908946021 + 8*p2 + -8*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2440728022132936 + 8*p2 + -8*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.66640022723139 + 8*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.375550566157762 + 8*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6813653698713735 + 8*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9958986592890551 + 8*p2 + -13*p3 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9698101757619446 + 8*p2 + -13*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.908387544019792 + 8*p2 + -14*p3 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4245925388162846 + 7*p2 + p3 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.214732089154651 + 7*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.45288902988177626 + 7*p2 + -5*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.281779444467104 + 7*p2 + -5*p3 + -2*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8023835416432483 + 7*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.27036356940071 + 7*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7181693108394196 + 7*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.77348754697633 + 7*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.588115054429511 + 7*p2 + -8*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.4706422039604785 + 7*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3286144397881634 + 7*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8840883465468767 + 7*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2056375019934085 + 7*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9072884676982284 + 7*p2 + -13*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.319539783373661 + 7*p2 + -19*p3 + 11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.049295121884911 + 6*p2 + -3*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7270490224747912 + 6*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.791754337460628 + 6*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4974689362662326 + 6*p2 + -8*p3 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.951381959318471 + 6*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.058634212677724 + 6*p2 + -8*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.732755908561279 + 6*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1112101280056845 + 6*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.217171527351846 + 6*p2 + -10*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3747035238785028 + 5*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6151538697343324 + 5*p2 + -6*p3 + 2*d + -4*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0578751434910822 + 5*p2 + -7*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7702031693932936 + 5*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.888051814745231 + 5*p2 + -7*p3 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.392672935753211 + 5*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.287244044860149 + 5*p2 + -9*p3 + 3*p4 + d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.008069729824471 + 5*p2 + -9*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.9505702236800015 + 4*p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.06920195577572477 + 4*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.260952779568907 + 4*p2 + -4*p3 + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.195898424227622 + 4*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.146294587591299 + 4*p2 + -8*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.838502815440687 + 4*p2 + -49*p3 + 55*p4 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.30246716416021 + 3*p2 + -1*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.724961119083898 + 3*p2 + -3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0687335094044895 + 3*p2 + -3*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.279059348827871 + 3*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6195058482241804 + 3*p2 + -3*p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.4801612297008555 + 3*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.476480853907175 + 3*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5763693376294396 + 3*p2 + -4*p3 + -3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.11007407619892796 + 3*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2369401396642186 + 3*p2 + -5*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9531895968247612 + 3*p2 + -5*p3 + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.108442244338213 + 3*p2 + -5*p3 + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.5769849237549347 + 3*p2 + -7*p3 + 4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.57681894294307 + 3*p2 + -7*p3 + 4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9218125741345495 + 3*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.853188347836185 + 2*p2 + 27*p3 + -28*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.238153858622689 + 2*p2 + p3 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.56389462229576 + 2*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.870904678471037 + 2*p2 + -2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0009702285311836478 + 2*p2 + -2*p3 + 4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1414088704195584 + 2*p2 + -2*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1466956472567746 + 2*p2 + -2*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.009428792218048966 + 2*p2 + -2*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5749582389292023 + 2*p2 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5920109783858127 + 2*p2 + -3*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3437722752758838 + 2*p2 + -3*p3 + d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7094011512382 + 2*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.723092561088395 + 2*p2 + -3*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.3723075273830484 + 2*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.2791202608187655 + 2*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.164744280082889 + 2*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.960208812972455 + 2*p2 + -5*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9059244928877946 + 2*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.72622560162865 + p2 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8036324992559758 + p2 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4837822388050184 + p2 + -2*d + 3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.060986516453662265 + p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.767913497442553 + p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.092309293397403 + p2 + -1*p3 + p5 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.092309293397403 + p2 + -1*p3 + p5 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.345987115093298 + p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.218934492927602 + p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5997569241390888 + p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.240998064168371 + p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.223155214159384 + p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3232700755839484 + p2 + -5*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.543436711475242 + 44*p3 + -61*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.011182358510794 + 26*p3 + -22*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.707594394894853 + 20*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.226689305866797 + 14*p3 + -23*p4 + 4*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.721366579496148 + 14*p3 + -23*p4 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1212888723388594 + 13*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.764002738187609 + 12*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.791033341946629 + 12*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6000799845836329 + 11*p3 + -14*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.860271941138329 + 10*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.1435540291082344 + 10*p3 + -16*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.77204415968493 + 9*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.772976689104272 + 9*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.12058934437466 + 9*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.3745312513830144 + 9*p3 + -15*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.5336825898846213 + 8*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.0911603091575492 + 8*p3 + -10*p4 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9312288084803007 + 8*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.632926906573241 + 8*p3 + -11*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.632926906573241 + 8*p3 + -11*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2565307793827873 + 8*p3 + -12*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2287727223915357 + 8*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7348033543067936 + 8*p3 + -15*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.875136752841273 + 8*p3 + -15*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.5557414912279945 + 8*p3 + -16*p4 + 6*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.5557414912279945 + 8*p3 + -16*p4 + 6*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.260776641854114 + 7*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0609252808918668 + 7*p3 + -10*p4 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1854316592084615 + 7*p3 + -13*p4 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1869771482611022 + 7*p3 + -13*p4 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.0363140355453284 + 7*p3 + -13*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.0364259111503813 + 7*p3 + -13*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0651011556601886 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3806486474078876 + 6*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.671088041062589 + 6*p3 + -10*p4 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.7496245242801205 + 6*p3 + -11*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7200968524653222 + 6*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0986973305010446 + 5*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2202534127483844 + 5*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0505770492238677 + 5*p3 + -8*p4 + p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0485257637539984 + 5*p3 + -8*p4 + p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.042045356241344 + 5*p3 + -8*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.1964213078748855 + 5*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9330179539948373 + 4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1201371295654683 + 4*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.17981690950984577 + 4*p3 + -5*p5 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.245606623054896 + 4*p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.868069382602855 + 4*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.617697180516972 + 4*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.72058799661515 + 4*p3 + -5*p4 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.748103827401175 + 4*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.168240540637118 + 4*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0698932891907564 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.069908648088174 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.870058185285503 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.87010845076796 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.4869568436764204 + 3*p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1079564937124333 + 3*p3 + -3*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9882509925692995 + 3*p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3471306378225711 + 3*p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.281771241419619 + 3*p3 + -3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.25139373479875926 + 3*p3 + -4*p5 + 5*d + -4*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.650400636442066 + 3*p3 + -6*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.8586161472769622 + 3*p3 + -1*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.489560351321622 + 3*p3 + -2*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.10223353360019384 + 3*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.627242228659838 + 3*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.260901109324731 + 3*p3 + -5*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6436299806748043 + 3*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.38395777467303577 + 3*p3 + -8*p4 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.38948662867750344 + 3*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7699258280768353 + 2*p3 + 2*p5 + -8*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1713185608143515 + 2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5713689863191087 + 2*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.141923742548897 + 2*p3 + -2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.2812879597497435 + 2*p3 + -2*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2763554592557322 + 2*p3 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9892892889413116 + 2*p3 + -1*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.3266877623285702 + 2*p3 + -1*p5 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0022546163277262746 + 2*p3 + -2*p5 + 4*d + -2*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.557354865090221 + 2*p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.005434606224859943 + 2*p3 + -2*p5 + l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.143314944495661 + 2*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6557629860358936 + 2*p3 + -2*p5 + -5*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.06286885405193814 + 2*p3 + -3*p5 + p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.06286885405193814 + 2*p3 + -3*p5 + p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.104777052909026 + 2*p3 + -3*p5 + 2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.1171720321908385 + 2*p3 + -4*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.174170279774135 + 2*p3 + -4*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.174170279774135 + 2*p3 + -4*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5088783451160785 + 2*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1098417983704376 + 2*p3 + -5*p5 + 6*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3206491231445447 + 2*p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.7734590641162558 + 2*p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.028332453346399552 + 2*p3 + -2*p4 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1194266230236147 + 2*p3 + -2*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.778492461637666 + 2*p3 + -3*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.073340514491321 + 2*p3 + -3*p4 + d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7134696712608912 + 2*p3 + -4*p4 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.710167508316118 + 2*p3 + -4*p4 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4210936687664947 + 2*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.134786244067817 + 2*p3 + -5*p4 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2823974230636528 + 2*p3 + -6*p4 + 2*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.06135950181313 + p3 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.030780286120638 + p3 + 2*p5 + -5*p6 + d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6793927987507696 + p3 + p5 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.64408846167267 + p3 + p5 + -1*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.64408846167267 + p3 + p5 + -1*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0633771194250685 + p3 + p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.378276421383527 + p3 + p5 + -3*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.18122085236015 + p3 + p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.1905197920818506 + p3 + p5 + -5*p6 + d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.68857918173235 + p3 + p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.832571663043634 + p3 + p6 + d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.832571663043634 + p3 + p6 + d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9074336875903106 + p3 + d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.819325478187308 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1879368878201408 + p3 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6223095451345841 + p3 + -3*p7 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.98853689449741 + p3 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.29573801323587995 + p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6046408959815777 + p3 + -3*p6 + d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9050013967447317 + p3 + -5*p6 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2578593070127722 + p3 + -1*p5 + 2*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.170412228330424 + p3 + -1*p5 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.028675236011491235 + p3 + -1*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5019633336230436 + p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.075851536682798 + p3 + -2*p5 + 4*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3346908205756147 + p3 + -2*p5 + 2*p6 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.3597062501836493 + p3 + -2*p5 + 2*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.193550930888739 + p3 + -2*p5 + p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.895164746575442 + p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1753853610027405 + p3 + -2*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.193748493661748 + p3 + -2*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.334866068629148 + p3 + -2*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0559611984367114 + p3 + -3*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0557110927549007 + p3 + -3*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.072307462605381 + p3 + -3*p5 + d + -3*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.403831706824153 + p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7458170970152125 + p3 + -4*p5 + 5*p6 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.475199267135752 + p3 + -4*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.274371211425772 + p3 + -5*p5 + 2*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.644624311746298 + p3 + -5*p5 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.644624311746298 + p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.006151587481579214 + p3 + -1*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.007321481679191012 + p3 + -1*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.004378332961552976 + p3 + -1*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.411866130007834 + p3 + -2*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.505254684024771 + p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.770241758166397 + p3 + -2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3946266403212597 + p3 + -2*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.4623436699693877 + p3 + -2*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3915405491378836 + p3 + -2*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.389488391003389 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.27616711273449196 + 2*p4 + -2*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.025711717931505 + 4*p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.22896485764723049 + 4*p5 + -10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.23330479336523963 + 4*p5 + -10*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.197982870953279 + 2*p5 + -1*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8534496151268915 + p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0427841541137135 + p5 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.37013721895651 + p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.556057727891822 + p7 + -2*p8 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.551985700213994 + p7 + -2*p8 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1418706845396356 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.2828805726921875 + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.807441016210018 + 4*p1 + 3*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.12883169576047 + 3*p1 + 13*p2 + -20*p3 + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3542519302365585 + p1 + -2*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3542519302365585 + p1 + -2*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8996381744862783 + 46*p2 + -50*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + 3*d + -3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + -1*d + -3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.479747237602283 + 30*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.0903831055433193 + 28*p2 + -34*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.0903831055433193 + 28*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.795606811216871 + 26*p2 + -28*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1055982048271384 + 26*p2 + -30*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.274404730245728 + 25*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2817336658508027 + 23*p2 + -23*p3 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.000823297303116 + 23*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.752982546259275 + 23*p2 + -24*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.1468281007503671 + 23*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6281839743309465 + 22*p2 + -23*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8543172097997416 + 22*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.171677792065996 + 21*p2 + -20*p3 + -3*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.16060193263284 + 21*p2 + -23*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.489877643681317 + 20*p2 + -18*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7983666663697837 + 19*p2 + -18*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.939754767371243 + 19*p2 + -18*p3 + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.38148501768376 + 19*p2 + -19*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.752137981434235 + 19*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.8781907129697792 + 18*p2 + -17*p3 + p5 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.796812625203808 + 18*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.164058531721464 + 18*p2 + -17*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.84937848560864 + 17*p2 + -8*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8001929788990705 + 17*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.93880635545571 + 17*p2 + -16*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8860429322778682 + 17*p2 + -16*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7985471334144398 + 16*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4767956773109685 + 15*p2 + -6*p3 + -11*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.207293653418942 + 15*p2 + -11*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5151080978531968 + 15*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.207122811180122 + 15*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.258081189350602 + 14*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.626837627345958 + 14*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.019082591369947 + 14*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.724951336741769 + 13*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.969664640797278 + 12*p2 + -2*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.98205386049256 + 12*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4646720967278404 + 12*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.251869038943978 + 12*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.2634956817974794 + 12*p2 + -15*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.9733839374332782 + 11*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4659826644631629 + 11*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.006586872597026601 + 11*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.254335538242897 + 11*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3159484108735153 + 11*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.2844577927439484 + 10*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4650340780147039 + 10*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.165286894449018 + 10*p2 + -9*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.282100585049472 + 10*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.6755967331226316 + 9*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.000004537856055185257 + 9*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1415800872191784 + 9*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.213917710027353 + 9*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.3868944656724414 + 8*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.274427070460154 + 8*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.752801032017068 + 8*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.293060712156587 + 8*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5217389612456904 + 8*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.104883867059247 + 8*p2 + -10*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.920335186916003 + 8*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.815653663005278 + 8*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1679270540085094 + 7*p2 + -6*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.283102578573041 + 7*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.389614935872475 + 7*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.565828970705746 + 7*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.21459211374864 + 6*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6494492489684873 + 6*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.944898601742721 + 6*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.310206652195254 + 6*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.399148979942736 + 6*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.167889354896666 + 6*p2 + -5*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.274837746433149 + 6*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.295041652359284 + 6*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.472392943733154 + 6*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.094126006615805 + 6*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.90055709883577 + 6*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.4260247729971045 + 6*p2 + -10*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5281439790329756 + 5*p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.026903071180599 + 5*p2 + -2*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.944934555525312 + 5*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.087187433177868 + 5*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1672652251561533 + 5*p2 + -4*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.20365990341124 + 5*p2 + -5*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0006831218692305806 + 5*p2 + -5*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.721184541655165 + 5*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6113392781211735 + 5*p2 + -6*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6113392781211735 + 5*p2 + -6*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3471648462759103 + 5*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.005521574611509 + 5*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.040653822225362 + 4*p2 + -1*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.274855199725668 + 4*p2 + -4*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3354257617269965 + 4*p2 + -5*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5608003025699493 + 4*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.475913796433202 + 4*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9993003229978252 + 4*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.00798179072512 + 4*p2 + -6*p3 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.49165527002279 + 3*p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.94523492668958 + 3*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.943305639734425 + 3*p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.06989031363271132 + 3*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.00043737951054977894 + 3*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1384529807983808 + 3*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.5826330007439475 + 3*p2 + -3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.6053240178508084 + 3*p2 + -3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.795390207358382 + 3*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.7257807172023165 + 3*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3489440349153934 + 3*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5769896276455986 + 3*p2 + -4*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5769896276455986 + 3*p2 + -4*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5870031051630655 + 3*p2 + -4*p3 + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.71574943732648 + 3*p2 + -4*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.734491655499021 + 3*p2 + -4*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.144969691159477 + 3*p2 + -5*p3 + 2*p5 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1455934718341396 + 3*p2 + -5*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9153124613979804 + 3*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9210690808698327 + 3*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5812571321996498 + 3*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.6643360518200065 + 3*p2 + -7*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.580945607924802 + 2*p2 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1466813355569077 + 2*p2 + -2*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.005066516285614339 + 2*p2 + -2*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.149153594442358 + 2*p2 + -2*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.093041075959498 + 2*p2 + -3*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3368513466600254 + 2*p2 + -3*p3 + d + -2*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.580827781203659 + 2*p2 + -3*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9049588192092997 + 2*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.8918309846728905 + 2*p2 + -6*p3 + 5*p4 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.142607221982295 + 2*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.085767084232595 + 2*p2 + -7*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8035665258102502 + p2 + 3*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0014393730341197236 + p2 + -1*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.061961465872143 + p2 + -2*p3 + 2*p5 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.061961465872143 + p2 + -2*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.23955748640041 + p2 + -2*p3 + p5 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.028542416455414468 + p2 + -2*p3 + p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.796764471113086 + p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.478290585808569 + p2 + -2*p3 + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.337481934118771 + p2 + -2*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.635277375470168 + p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.541958085529586 + p2 + -8*p3 + 12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5419394105065893 + p2 + -8*p3 + 12*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.852476270498004 + 48*p3 + -67*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.03694704946839316 + 37*p3 + -46*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.507817193429182 + 23*p3 + -20*p4 + 2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1241309749911235 + 13*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.624359783406902 + 13*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6224240472318314 + 12*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6182654342264713 + 12*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.09927031359615787 + 12*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.273920392879983 + 11*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.2152732902607437 + 11*p3 + -19*p4 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.771178650908866 + 10*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.0952946365913567 + 10*p3 + -14*p4 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.8169289325981274 + 10*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.668710877126422 + 10*p3 + -17*p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.07697879385676111 + 9*p3 + -9*p4 + 4*d + l + -4*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.07697879385676111 + 9*p3 + -9*p4 + 4*d + -1*l + -4*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.273904867947958 + 9*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0657799142062894 + 9*p3 + -9*p4 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.1682488757259442 + 8*p3 + -12*p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.2431730679872575 + 8*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.2333454680351277 + 8*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.7374018004971625 + 8*p3 + -15*p4 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.4897879252594475 + 7*p3 + -10*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.767540861148935 + 7*p3 + -10*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.7491881919671224 + 7*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7003032479513798 + 6*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5115579321200319 + 5*p3 + -4*p4 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.239408243752731 + 5*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.20227130246172 + 5*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.7087188935352793 + 5*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.236518659646495 + 4*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.911665421393013 + 4*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.560730157330653 + 4*p3 + -6*p4 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.245239048216109 + 4*p3 + -6*p4 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.99535851387883 + 4*p3 + -8*p4 + 3*p5 + 2*d + 3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.995319767569435 + 4*p3 + -8*p4 + 3*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.829633741815436 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.829642817527546 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.690486494535562 + 3*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.475848695652103 + 3*p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.9105103709923594 + 3*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.1964920107062245 + 3*p3 + -3*p5 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.987863031371531 + 3*p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.490997629960638 + 3*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.009985028650659561 + 3*p3 + -3*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.00978431578668021 + 3*p3 + -3*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.884617887940249 + 3*p3 + -4*p4 + 2*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.769868789803561 + 3*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.861961079286725 + 3*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.388975630265786 + 3*p3 + -7*p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.371494237944885 + 3*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.32517159480736274 + 2*p3 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3634611770313403 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.120621649962455 + 2*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1419045439271245 + 2*p3 + -2*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.2805997764256825 + 2*p3 + -2*p6 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.145171800286858 + 2*p3 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.765568813627107 + 2*p3 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9605431925621892 + 2*p3 + -1*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0020052087776162852 + 2*p3 + -2*p5 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.54114232713552 + 2*p3 + -3*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.54114232713552 + 2*p3 + -3*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1845586455166144 + 2*p3 + -4*p5 + 2*p6 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.34992804304935105 + 2*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.049952761947062 + 2*p3 + -4*p5 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.086407271002226 + 2*p3 + -5*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.7122643553777808 + 2*p3 + -5*p5 + 3*p6 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.336746120302763 + 2*p3 + -5*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5207352138945518 + 2*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.775273376365288 + 2*p3 + -3*p4 + -4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.194053777242871 + 2*p3 + -4*p4 + 3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.194829052496607 + 2*p3 + -4*p4 + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.228916554518534 + 2*p3 + -4*p4 + -4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0012872058182962 + 2*p3 + -5*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.13162644900010517 + 2*p3 + -6*p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.1722692671528625 + p3 + 2*p5 + -5*p6 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.168637386017438 + p3 + 2*p5 + -5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3375964447143347 + p3 + 2*p5 + -6*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3375131925090153 + p3 + 2*p5 + -6*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.833612053810749 + p3 + p6 + 3*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.621685091823171 + p3 + d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.57615119696789 + p3 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.8038293723956005 + p3 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9689197257742106 + p3 + -1*p6 + d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9689197257742106 + p3 + -1*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.129910309238203 + p3 + -2*p6 + d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.996879393789017 + p3 + -2*p6 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4629098377821016 + p3 + -3*p6 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.29696183810737836 + p3 + -3*p6 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.011041301913966527 + p3 + -1*p5 + 4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1276806341221466 + p3 + -1*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.179426853916975 + p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.198602786408636 + p3 + -1*p5 + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.012804433524331197 + p3 + -1*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.687107686141677 + p3 + -1*p5 + -1*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.011380070321778627 + p3 + -1*p5 + -1*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.180859769232862 + p3 + -1*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.023642928179215986 + p3 + -1*p5 + -6*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.22349272684345267 + p3 + -2*p5 + 2*p6 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.338943157761808 + p3 + -2*p5 + 3*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7544492954677007 + p3 + -2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1299001608335906 + p3 + -2*p5 + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0098229130580996 + p3 + -3*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.0236062932615573 + p3 + -3*p5 + p6 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.053187006088983 + p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.4774653771415918 + p3 + -2*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.000890168908417 + 2*p4 + d + -3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.239832865363107 + p4 + -1*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6783627054262424 + p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6820940448340811 + p4 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5335916667289091 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.460277200135027 + 2*p5 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.19775418183136712 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.7705239864047595 + 2*p5 + -5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.7813750474302585 + 2*p5 + -5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.987889360348287 + 2*p5 + -6*p6 + 3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9894770863688263 + 2*p5 + -6*p6 + 3*p7 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.200371354034632 + 2*p5 + -7*p6 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.9641375151254294 + p5 + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.980789352452857 + p5 + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.512303562271434 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.5182743336425055 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.952088643132604 + p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.496831559020038 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.664191014959165 + p6 + 2*d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.675048184637046 + p6 + -2*d + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.348505118601784 + p6 + -3*p7 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.348505118601784 + p6 + -3*p7 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6499876745444109 + p7 + -2*p8 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.76382136448506 + p7 + -2*p8 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.143380917941387 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.486685444977736 + 5*p1 + -32*p2 + 18*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.164685977587556 + 3*p1 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1617320078285553 + 3*p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.785304647742808 + p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.1702868966934976 + 46*p2 + -49*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6070384377784093 + 24*p2 + -25*p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.0569066857841 + 24*p2 + -30*p3 + 6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.609571783187679 + 23*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.750072035198649 + 23*p2 + -24*p3 + l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6098417856229625 + 22*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.118567222899933 + 21*p2 + -23*p3 + 2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + -1*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.24483984892459532 + 20*p2 + -20*p3 + -1*d + l + -3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9472561754996813 + 20*p2 + -20*p3 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.2572475691099482 + 20*p2 + -22*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.349387374040349 + 20*p2 + -22*p3 + -1*p5 + -3*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1489396170760635 + 19*p2 + -19*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -3*d + l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -3*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0863028918146407 + 18*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.4565142532710936 + 17*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.4242843051720655 + 16*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6453833214447249 + 16*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7858758855086694 + 15*p2 + -9*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7858758855086694 + 15*p2 + -9*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.45807422855652613 + 15*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.06892322669418127 + 15*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.257539613683707 + 15*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.42690770957073815 + 13*p2 + -9*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.4653744172188428 + 13*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.258099864373596 + 13*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.139886070647193 + 12*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8012082369249556 + 10*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1414680370812005 + 10*p2 + -10*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.340215660322803 + 10*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.258183465644768 + 10*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.802709394614596 + 9*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.165470154020477 + 9*p2 + -8*p3 + -1*p5 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.281539112629106 + 9*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.254972757952799 + 9*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.450325000670938 + 9*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.077610828568808 + 9*p2 + -11*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.364119166159342 + 8*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.3913450637633435 + 8*p2 + -11*p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0107255803505975 + 8*p2 + -13*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0376790490549963 + 8*p2 + -13*p3 + d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0359743859745734 + 8*p2 + -13*p3 + -1*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0115699706427121 + 8*p2 + -13*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.300317608155138 + 8*p2 + -16*p3 + -3*d + l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8031623075554886 + 7*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.00007051130178057091 + 7*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4665870804814451 + 7*p2 + -8*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.729106093026142 + 7*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.45331471568633763 + 6*p2 + -4*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8026666340479218 + 6*p2 + -5*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0002478367537831948 + 6*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3666757244476626 + 6*p2 + -7*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.831320760073781 + 6*p2 + -8*p3 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.645916545026159 + 6*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0481852500169344 + 5*p2 + -5*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.002392497338633827 + 5*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3434654633900163 + 5*p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0592782136767602 + 5*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.106073308944482 + 5*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2832536815946811 + 5*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.281300526120358 + 4*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.278766308046461 + 4*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.335412497224681 + 4*p2 + -5*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.335411275494205 + 4*p2 + -5*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.477431534750736 + 4*p2 + -5*p3 + -1*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.63281241297431 + 4*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.094922923952265 + 4*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.094922923952265 + 4*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4995012146438884 + 3*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.949116189880165 + 3*p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.145499224054532 + 3*p2 + -3*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1780752709442313 + 3*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1780752709442313 + 3*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.717504540422285 + 3*p2 + -4*p3 + 3*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5859175103683252 + 3*p2 + -4*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.0590644023450744 + 3*p2 + -6*p3 + 4*p4 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0498682540179993 + 3*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.132422353132281 + 3*p2 + -6*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.5749502189129596 + 3*p2 + -7*p3 + 4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3324321899906093 + 3*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.25997256866772 + 2*p2 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.34910337497778376 + 2*p2 + p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.34789072021349815 + 2*p2 + p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.23612856156204123 + 2*p2 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.455815964034004 + 2*p2 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.00015812683023068628 + 2*p2 + -2*p5 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.07054969902411479 + 2*p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.280578657941732 + 2*p2 + -2*p3 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.147524155052696 + 2*p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.92580346949711 + 2*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.35011219228207 + 2*p2 + -3*p3 + p5 + 2*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.062739550649315 + 2*p2 + -3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5880277879669116 + 2*p2 + -3*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.02100678287700375 + 2*p2 + -4*p3 + 2*p4 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.4942672957880578 + 2*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.084268020938057 + 2*p2 + -7*p3 + 7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.148068706277635 + 2*p2 + -7*p3 + 7*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.148544483031728 + 2*p2 + -7*p3 + 7*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.811499770887215 + p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.140598015944032 + p2 + p3 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.142345414096178 + p2 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7761509194148735 + p2 + 4*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8035365061471162 + p2 + d + 2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8035386005422185 + p2 + d + -2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.953159943224111 + p2 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6031674720304112 + p2 + -1*p3 + p5 + d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1416600232989205 + p2 + -1*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9303165333786 + p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.184040308223722 + p2 + -5*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.762518476198446 + 23*p3 + -20*p4 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.709052442951968 + 20*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.269956052017003 + 12*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.77142160923906 + 11*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.095453819117455 + 11*p3 + -13*p4 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.769876809819804 + 11*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.775781267177617 + 10*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7750873072703914 + 8*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.239580499251586 + 8*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4858281137542062 + 7*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.250323200825487 + 6*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.583065135768424 + 6*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.789986676492525 + 5*p3 + -6*p4 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.647768671431742 + 5*p3 + -6*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0607947302638183 + 4*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.3580082193543841 + 4*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.8429453340271306 + 4*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.00009773843811168246 + 3*p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.073727645516047 + 3*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.6185544777472347 + 3*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.2887291455206706 + 3*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.18048571967921 + 3*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4668902611691497 + 3*p3 + -5*p5 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.369727973240184 + 3*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.477274804183907 + 3*p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.7386816759326 + 3*p3 + -4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.2069794856552667 + 3*p3 + -6*p4 + p5 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.965251069181468 + 3*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.142422408611142 + 3*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.38093154828300274 + 3*p3 + -8*p4 + p5 + 5*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.6235988368496654 + 3*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.3851662576437502 + 2*p3 + p5 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.17113319834947321 + 2*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.120621649962455 + 2*p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.141912223375834 + 2*p3 + -2*p6 + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.09377863510475773 + 2*p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.561844209490517 + 2*p3 + -1*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.932841867269944 + 2*p3 + -2*p5 + 2*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.142660969624939 + 2*p3 + -2*p5 + -2*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0012316788531323982 + 2*p3 + -2*p5 + -4*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9842376079543387 + 2*p3 + -4*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.7640424892029709 + 2*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.013718287920675431 + 2*p3 + -2*p4 + 4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.14190943084903 + 2*p3 + -2*p4 + 3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1357382956798285 + 2*p3 + -2*p4 + l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1258775344719107 + 2*p3 + -2*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.017024988721503886 + 2*p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.260493924010242 + 2*p3 + -4*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.197797857554249 + 2*p3 + -4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.312563004221739 + 2*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.47574554669331 + p3 + p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4211561600520326 + p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.9724718283661864 + p3 + 2*p5 + -2*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0610916107695827 + p3 + 2*p5 + -3*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.46349804773329 + p3 + 2*p5 + -6*p6 + 3*p7 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.392262434313142 + p3 + p5 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.298275406895696 + p3 + p5 + -4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.382117367468391 + p3 + p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.3913358475115745 + p3 + p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9540919235497256 + p3 + 3*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.024059363738741832 + p3 + -1*p8 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.024059363738741832 + p3 + -1*p8 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.02966466316444682 + p3 + -1*p8 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.949504874704584 + p3 + -2*p8 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.949657241948283 + p3 + -2*p8 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0039772562994446784 + p3 + -1*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.011953585513983962 + p3 + -1*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.606791490685885 + p3 + -1*p5 + p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1539871092728307 + p3 + -1*p5 + 3*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.2096728862552615 + p3 + -1*p5 + -3*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.11860384931927466 + p3 + -1*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.1339653817273363 + p3 + -2*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9578319896038243 + p3 + -3*p5 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9236587919156256 + p3 + -4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.01112629944853865 + p3 + -1*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.011438364318795238 + p3 + -1*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.393404211713163 + p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.453738175054455 + p3 + -2*p4 + l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.5130798762244044 + p3 + -3*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.17404720006860291 + p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.5901302455771305 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.1903950180369662 + 2*p4 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.3511825857156846 + p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.7977917889074435 + 3*p5 + -2*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9033555512601008 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.512631509637884 + p5 + d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.10342630860764 + p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.1544389665178554 + p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.378163307051364 + p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.282022045233133 + 2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.6425998873502774 + 7*p1 + -5*p3 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.17884493564941015 + 4*p1 + -15*p2 + 6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.17884493564941015 + 4*p1 + -15*p2 + 6*p3 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.281179574803194 + 2*p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1397122358536946 + 2*p1 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.528881223105651 + p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.7335899844141739 + 33*p2 + -39*p3 + d + l + -3*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.092932524978341 + 25*p2 + -27*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.275222766066138 + 24*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5847631411027393 + 23*p2 + -23*p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.276805081565995 + 22*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.276887103542523 + 21*p2 + -20*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.37327883710505 + 21*p2 + -22*p3 + -1*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.88327835623766 + 20*p2 + -19*p3 + l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5964586009186699 + 20*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.749551228949854 + 20*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1372884971214496 + 19*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.161237930612266 + 19*p2 + -21*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.27467263828591 + 18*p2 + -18*p3 + -1*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1467082136273885 + 18*p2 + -18*p3 + -4*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.9577012899378 + 18*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.2800894421523985 + 17*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.0795568451898316 + 17*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.106761841334393 + 17*p2 + -19*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.79899795196023 + 16*p2 + -15*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.2503708143207986 + 15*p2 + -12*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.47887366631839295 + 15*p2 + -13*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3614433848864758 + 15*p2 + -13*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.46313655605193566 + 14*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.8223098166752925 + 14*p2 + -15*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6199879081635813 + 13*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.71763526558326 + 12*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.942734568003173 + 11*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9447622745315067 + 10*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.7373778979847265 + 8*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.283184958113736 + 8*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3257264434748883 + 8*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.326259143457547 + 8*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.9487875103887479 + 8*p2 + -13*p3 + l + 2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.9487875103887479 + 8*p2 + -13*p3 + -1*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.936271971347205 + 8*p2 + -14*p3 + 4*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.972509020875886 + 8*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.278589855259085 + 7*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3289327878437271 + 7*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.8556508073828736 + 7*p2 + -10*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.2738423511674686 + 7*p2 + -11*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.2738423511674686 + 7*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.00043825217517577615 + 6*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.229330031516647 + 6*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.461393878787086 + 6*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.949363660571464 + 6*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.949363660571464 + 6*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.123331648186976 + 6*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.714140243756141 + 6*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6531654040118333 + 6*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.781659519101701 + 5*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.282772362278565 + 5*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.752629466151596 + 5*p2 + -6*p3 + 4*d + l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.915738147202542 + 5*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.603326488521901 + 4*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.415263055832674 + 4*p2 + -3*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.016544499578429846 + 4*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.120514312213458 + 4*p2 + -4*p3 + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.302079343502101 + 4*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.008007097999275 + 4*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.323404482932985 + 4*p2 + -7*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.006672402228691 + 4*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.146834051866457 + 4*p2 + -8*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.6791891188270618 + 3*p2 + 30*p3 + -44*p4 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.092653987426356 + 3*p2 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.4746018324344785 + 3*p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.225110847087926 + 3*p2 + -2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3374147389425692 + 3*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.279675799119676 + 3*p2 + -5*p3 + 2*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.4362235874844997 + 3*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.719478865370458 + 3*p2 + -7*p3 + 4*p4 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.719543442552782 + 3*p2 + -7*p3 + 4*p4 + -1*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.5749449829252034 + 3*p2 + -7*p3 + 4*p4 + -4*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.347709405999166 + 3*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.4191097869990195 + 2*p2 + -1*p3 + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.949168200691874 + 2*p2 + -1*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.495454153672681 + 2*p2 + -1*p3 + -2*d + 2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.165171702718386 + 2*p2 + -1*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.9163357309417912 + 2*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.1821312245963067 + p2 + 6*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.337767295451472 + p2 + -2*d + 2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.337283315649894 + p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.866710652278495 + p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.0881447207776367 + p2 + -4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.1227837468431925 + 12*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.274926924259608 + 10*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.48187006457485 + 10*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.648770864983187 + 8*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.784224812534599 + 8*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.874642999195884 + 8*p3 + -15*p4 + -1*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5208963077845108 + 7*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.383270830076084 + 7*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.7271108241269455 + 7*p3 + -12*p4 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.108730721768618 + 6*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.798652402263285 + 6*p3 + -7*p4 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.207675348428037 + 6*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.141812748106786 + 5*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.006136952210812 + 5*p3 + -8*p4 + p5 + 5*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.746912465653764 + 5*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.248350089109473 + 5*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.8223681021739924 + 5*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.747960544367904 + 4*p3 + -2*p5 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1380180447487835 + 4*p3 + -4*p5 + 2*d + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1437526730720613 + 4*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.327189220917618 + 4*p3 + -5*p5 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.8822210187801676 + 4*p3 + -2*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6641519025872875 + 4*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.76808593597265 + 4*p3 + -6*p4 + 2*p5 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.762667901877366 + 4*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.7207986578558656 + 3*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3196017340637898 + 3*p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.2619767217494688 + 3*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.3234070924285466 + 3*p3 + -3*p4 + -4*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5124846934545242 + 3*p3 + -8*p4 + 3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.46840937025513574 + 3*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.2382475913018376 + 2*p3 + -4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.09377898417060812 + 2*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.13295202656699484 + 2*p3 + -5*p6 + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.100129241110964 + 2*p3 + -2*p5 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.34773259338326745 + 2*p3 + -4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.4116687247711168 + 2*p3 + -6*p5 + 5*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.8489234612760117 + 2*p3 + -6*p5 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.768330282067929 + 2*p3 + -3*p4 + 2*d + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.7483395873898527 + p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.010827009475088 + p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.502030903360045 + p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.311667492779174 + p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.165118487172833 + p3 + 2*p5 + -4*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.127415501612135 + p3 + 2*p5 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6916163951983536 + p3 + p5 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6890783458984204 + p3 + p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.909412043792396 + p3 + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.858872195576546 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.949521106266628 + p3 + -2*p8 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.990416265035957 + p3 + -2*p6 + d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.4038569716067239 + p3 + -2*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5013632809278911 + p3 + -2*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.3245625173899995 + p3 + -2*p5 + 2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.3783303520574135 + p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.489542033862791 + p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.1041567288995995 + p3 + -4*p5 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.5814746087227647 + 2*p4 + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.9302212299031245 + 3*p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.3813375458602835 + 2*p5 + -4*p6 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.512598173849169 + p5 + d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.121848807956166 + p5 + l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.4280324252356733 + p5 + -1*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.1104699508665465 + p5 + -3*p6 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.1104699508665465 + p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.760512071185303 + 3*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5305034811504303 + p6 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.042515522446881074 + 4*p1 + -4*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6838999455094361 + 3*p1 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.679498076097932 + p1 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.236746110041296 + 39*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.7035401355821285 + 34*p2 + -30*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1316924479407806 + 24*p2 + -24*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1337709605469803 + 24*p2 + -24*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.829187635658626 + 23*p2 + -22*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.021822200703535504 + 23*p2 + -23*p3 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.372456429463193 + 23*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.9380391087165325 + 22*p2 + -21*p3 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6073501535828156 + 21*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.727466871294352 + 20*p2 + -18*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.6429721660797276 + 20*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5929621828281495 + 19*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.23338141331940215 + 18*p2 + -13*p3 + -7*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.606270858970015 + 18*p2 + -16*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.733907144732527 + 18*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.150017034318269 + 18*p2 + -20*p3 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1416141211395927 + 17*p2 + -17*p3 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8005183082716423 + 16*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.072092071979052 + 16*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5939898326917241 + 15*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.56437005848232 + 14*p2 + -9*p3 + -2*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.246858364696109 + 14*p2 + -9*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6152571932260504 + 14*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2973690319201854 + 14*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.198741391046195 + 14*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.140693451460849 + 13*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6145201406829333 + 12*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1601725561418985 + 11*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.1705911075821205 + 11*p2 + -14*p3 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.3369358375924554 + 9*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8029211030528627 + 8*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.281693923333757 + 8*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.184758668747209 + 8*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.0117254794790649 + 8*p2 + -13*p3 + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.0111990881766635 + 8*p2 + -13*p3 + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.195030629526896 + 8*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.940803169656282 + 8*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.816041283635513 + 7*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.45238201173407183 + 7*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2657537887837098 + 7*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.438697791727077 + 7*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.823549864610518 + 6*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.803274008627616 + 6*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5962290901220326 + 6*p2 + -7*p3 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3308809243548032 + 6*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.0581660898773895 + 5*p2 + -5*p3 + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.792388041017077 + 5*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.8096783282832005 + 5*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.040597588630181 + 5*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6778309121014763 + 4*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.089965988848726 + 4*p2 + -6*p3 + 2*p5 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5526038873367336 + 4*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.05582034186775905 + 3*p2 + -3*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.18761858225616 + 3*p2 + -4*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5757333396500128 + 3*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.725091835746555 + 3*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.30451649577463585 + 3*p2 + -5*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.027848000935945 + 3*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.010208830850664 + 3*p2 + -5*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.2249288007486268 + 2*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.0020313887163962 + 2*p2 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.488084500906134 + 2*p2 + -1*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1393031306770274 + 2*p2 + -2*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.287595903237351 + 2*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.0595532775668746 + 2*p2 + -5*p3 + -2*p7 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.3197218297129605 + p2 + p3 + -1*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4519041490831923 + p2 + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3417911520419448 + p2 + -2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.9374776277978496 + p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.5280689298751398 + p2 + -8*p3 + 12*p4 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.5280689298751398 + p2 + -8*p3 + 12*p4 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.722449032698235 + 14*p3 + -23*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.722084084351643 + 14*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.1283691580137414 + 12*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.2358983696303367 + 11*p3 + -21*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.236402246185387 + 11*p3 + -21*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.598228373278509 + 10*p3 + -11*p4 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6149690393665463 + 10*p3 + -13*p4 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.6191459698307358 + 10*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.264146200002965 + 9*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.0017552776287306972 + 8*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.279286931264015 + 8*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.296401629909071 + 7*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6135670163784193 + 7*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.447031913438275 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.0211431185865347 + 6*p3 + -6*p4 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4692703496734614 + 6*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.529543384027225 + 6*p3 + -10*p4 + d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.0964622618609408 + 5*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.1738807126545963 + 5*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.2053669759593495 + 5*p3 + -7*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.2164004323899986 + 5*p3 + -8*p4 + 3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1945160979650917 + 3*p3 + -1*p5 + -5*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.5521542990197363 + 3*p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.058365257439992 + 3*p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.487390208929691 + 3*p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.270160953671187 + 3*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.120736658661845 + 3*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.2637852659136515 + 3*p3 + -5*p4 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.3925333009147343 + 2*p3 + -1*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.334322398567153 + 2*p3 + -1*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.126793159692458 + 2*p3 + -1*p5 + -2*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.230635180232973 + 2*p3 + -1*p5 + -4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9723374295154654 + 2*p3 + -2*p5 + 3*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.14254420709798 + 2*p3 + -2*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.0032194343382287408 + 2*p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.0074635514803033515 + 2*p3 + -2*p5 + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.5133358905307218 + 2*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.316996149020121 + 2*p3 + -3*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.3236989114794797 + 2*p3 + -3*p5 + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.4828361128141454 + 2*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.133859972338832 + 2*p3 + -2*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.717306777621401 + 2*p3 + -4*p4 + p5 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.276940859683484 + 2*p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.029952118892250284 + p3 + -1*p8 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.834897829372377 + p3 + -2*p7 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.141523014952639 + p3 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1471490837964424 + p3 + -1*p6 + d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.209755457325514 + p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.155848502920083 + p3 + -1*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.154409129885963 + p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.028487962182752243 + p3 + -1*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.7544609891736893 + p3 + -2*p5 + d + 2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.1196021946480488 + p3 + -2*p5 + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.196326204427286 + p3 + -3*p5 + 2*p6 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.9526834428433661 + p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.0651016707606478 + p3 + -4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.7181930388189303 + p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5781701683516474 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.377032691260239 + 2*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9672562524641344 + 2*p5 + -5*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.684808240347124 + p6 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.689064051195188 + p6 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6932852790291106 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.050420816760864184 + 4*p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6700858390128261 + 3*p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.052201095089482 + p1 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.0978560987982164 + p1 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.12016522086810878 + 49*p2 + -55*p3 + p5 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.00774353628559 + 31*p2 + -36*p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.275529769481564 + 26*p2 + -26*p3 + 3*d + -2*l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.1752931991199185 + 25*p2 + -26*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.360187637486299 + 22*p2 + -22*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1366359185141297 + 22*p2 + -22*p3 + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1438374960737083 + 21*p2 + -21*p3 + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6100979999571552 + 21*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1391917786707495 + 20*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.7460040217781 + 20*p2 + -21*p3 + -4*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.018431949621437 + 18*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.938876517691639 + 18*p2 + -17*p3 + -3*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.2814731391833805 + 18*p2 + -18*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6712052931950556 + 17*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.747879203526443 + 17*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.280617578784053 + 16*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.123368474634194 + 16*p2 + -18*p3 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.398584723493883 + 15*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + 2*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.052473025885259 + 14*p2 + -16*p3 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.821350409185471 + 13*p2 + -14*p3 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.4650134831295304 + 10*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.3338919663803437 + 10*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.3488063199390944 + 9*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.4577054404855797 + 9*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.8017629025612394 + 9*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.45498988270240176 + 8*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.135055348343523 + 8*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.966091768787204 + 8*p2 + -10*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.0548620325653895 + 8*p2 + -10*p3 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.467898695414319 + 8*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6116604187035404 + 6*p2 + -7*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.4536150868506058 + 5*p2 + -3*p3 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.944983599277292 + 5*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.00276407793638342 + 5*p2 + -5*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.2809998058902385 + 5*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.576849677734538 + 5*p2 + -6*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.75261114019445 + 5*p2 + -6*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.1813810820837995 + 5*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.01181605356892681 + 4*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.656448708902369 + 4*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.717414481432882 + 3*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5817357014805464 + 3*p2 + -4*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.00930417570945657 + 2*p2 + p3 + -8*p4 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.0013165018547793227 + 2*p2 + -2*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.549746085219518 + 2*p2 + -3*p3 + l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.573574392860246 + 2*p2 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.34007601698601 + 2*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.0195882047559324 + 2*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9519226453241052 + 2*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.2054790515922775 + 2*p2 + -13*p3 + 15*p4 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.383366150548193 + p2 + 2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.945105074193231 + p2 + d + l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.936953339388866 + p2 + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1419178084294397 + p2 + -1*p3 + 3*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.145171974819783 + p2 + -1*p3 + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6265173594282172 + 12*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.6298401257564805 + 11*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.4651454470176146 + 10*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1323413613566724 + 9*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9410324889233613 + 9*p3 + -13*p4 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.286042743234318 + 9*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.6349048797162097 + 9*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.69982067291152 + 9*p3 + -16*p4 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.5557414912279945 + 8*p3 + -16*p4 + 6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.5557414912279945 + 8*p3 + -16*p4 + 6*p5 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.0010213836749005 + 7*p3 + -9*p4 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.727451163331084 + 7*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.7423122928459653 + 7*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.630975811500753 + 6*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.17232298930055773 + 5*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.761583877878953 + 5*p3 + -8*p4 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.8637584108521126 + 5*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.7799398461897113 + 4*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.739291643011222 + 4*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.759995977325489 + 3*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.8792298735081 + 3*p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.3455790401175483 + 3*p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.3764073057959831 + 3*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.469415935628027 + 3*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.781180268685737 + 3*p3 + -4*p4 + 3*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9563549089595449 + 3*p3 + -4*p4 + d + l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9563549089595449 + 3*p3 + -4*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.14470681907917665 + 2*p3 + 2*p5 + -7*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.509551527106889 + 2*p3 + -1*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1438554729650035 + 2*p3 + -2*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.143858963623508 + 2*p3 + -2*p5 + 4*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.016643110681167528 + 2*p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.116011886342088 + 2*p3 + -2*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.17237116038791275 + 2*p3 + -3*p5 + 4*d + -4*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.155067310543524 + 2*p3 + -4*p5 + 4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.5120974048935066 + 2*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.276504535868802 + 2*p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.772365308765614 + 2*p3 + -3*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.722688151304075 + 2*p3 + -4*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.67710643442729 + 2*p3 + -4*p4 + p5 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.67630550283355 + 2*p3 + -4*p4 + p5 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.2881957898978955 + 2*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.868233618085468 + p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.3914451051227505 + p3 + p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.15336243043859213 + p3 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.0076621784474968 + p3 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.1682178088652586 + p3 + -4*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.2615269504012296 + p3 + -4*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.949665794061619 + p3 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.0038538615213286795 + p3 + -1*p6 + -4*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.985240491139168 + p3 + -2*p6 + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.8560700439675195 + p3 + -1*p5 + -2*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.339366749171266 + p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.9901141315458037 + p3 + -3*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.322543869577143 + p3 + -3*p5 + d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.905979330219574 + p3 + -4*p5 + 2*p6 + d + -2*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.794698541874134 + p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.257016879074418 + p3 + -4*p5 + d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.918969607315976 + p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.467082613449353 + p3 + -2*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9899615727725459 + p3 + -2*p4 + -1*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.387979230294139 + p4 + d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.242446346879993 + 2*p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.966637533244303 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.040039300294052 + 2*p5 + -5*p6 + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.040039300294052 + 2*p5 + -5*p6 + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.3184911980573792 + 2*p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.095660649132133 + p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.46903175466639696 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.3712603298318518 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.0789578481905475 + p5 + -1*p6 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.0821380126206064 + p5 + -1*p6 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.402225122749376 + p5 + -5*p6 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.5031367439741095 + p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5263260355857817 + p6 + -1*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.671719467192693 + 3*p1 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.169969787365044 + 3*p1 + -3*p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.2880447764260141 + 37*p2 + -37*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.422115942102654 + 25*p2 + -28*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.276020556067225 + 23*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.232825010852183 + 21*p2 + -22*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.127404872100331 + 19*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1408812573866802 + 18*p2 + -18*p3 + -4*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1466759250362264 + 16*p2 + -16*p3 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.39941266519944557 + 15*p2 + -11*p3 + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.0641822398090137 + 15*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2542651589824567 + 14*p2 + -11*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6180671733217615 + 11*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.845496830860621 + 10*p2 + -6*p3 + -3*d + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.943104577804595 + 10*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.610354912423049 + 10*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.1792140812845235 + 10*p2 + -13*p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.155317224695776 + 9*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.4692219955548644 + 8*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.467051014491575 + 8*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.44713869359523045 + 7*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.050259033237521 + 7*p2 + -8*p3 + 2*p5 + 4*d + -4*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6315891117015875 + 6*p2 + -5*p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.749778819884314 + 6*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.262564748669416 + 6*p2 + -8*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9238738249777882 + 6*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.918998073179417 + 6*p2 + -8*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9475146587619014 + 6*p2 + -8*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.40028816484383 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.8033602278926644 + 4*p2 + -3*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.9449968637796085 + 4*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.477049133111625 + 4*p2 + -5*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.469722589977604 + 4*p2 + -5*p3 + d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.606559378892004 + 4*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.2229606014494694 + 3*p2 + 5*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1480201776261127 + 3*p2 + -3*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.182755047762552 + 3*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.017674774802021377 + 3*p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.73083274725514 + 3*p2 + -4*p3 + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5859955265858892 + 3*p2 + -4*p3 + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.119078080771992 + 3*p2 + -5*p3 + 2*p6 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.000312813991857 + 3*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.120009937554581 + 3*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.158177312737652 + 2*p2 + p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2395616326990306 + 2*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.942987989810563 + 2*p2 + -1*p3 + -1*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.143061348155346 + 2*p2 + -2*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.147784383644168 + 2*p2 + -2*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.483349771711325 + 2*p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.164621051339382 + 2*p2 + -4*p3 + 2*p5 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.2942672412718577 + 2*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.030319370160137 + p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.945826078205548 + p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.190004613378245 + 44*p3 + -56*p4 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.6013406274040318 + 28*p3 + -31*p4 + -3*p7 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.7276487176057767 + 14*p3 + -23*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.380216005781269 + 13*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.6191400187146457 + 11*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.8074743519987315 + 9*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.014906682608358368 + 7*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.593378975951843 + 7*p3 + -8*p4 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6783037217958416 + 7*p3 + -10*p4 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.0089886371773296 + 7*p3 + -13*p4 + -1*p5 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.0089886371773296 + 7*p3 + -13*p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.257758652504832 + 5*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.519298990951402 + 5*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.276829865241374 + 4*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.267144850190816 + 4*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.747118589038425 + 4*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.717989392888489 + 4*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.591270809744993 + 3*p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.676351588024119 + 3*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.781119880293617 + 3*p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.742302535998788 + 3*p3 + -4*p4 + -4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.40163970532499027 + 3*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.747439555087865 + 3*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.5191394593594533 + 3*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.616923493056196 + 2*p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.2503526713948947 + 2*p3 + -4*p6 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.469090597757139 + 2*p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.144054789565582 + 2*p3 + -2*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.3163533442566115 + 2*p3 + -3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.34924666650937247 + 2*p3 + -4*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.737170012274181 + 2*p3 + -2*p4 + d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.252225260644309 + 2*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.7757001093674 + 2*p3 + -3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.476782795867771 + p3 + 4*p5 + -10*p6 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.640421558907496 + p3 + 2*p5 + -4*p6 + d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.834536197151364 + p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.01223161646382666 + p3 + -1*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.2931165286993844 + p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.5132063871002238 + p3 + -2*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.262564233568956 + p3 + -2*p5 + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.1922391329246236 + p3 + -2*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.396619482756138 + p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.21764383044407 + p3 + -4*p5 + 3*p6 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.004944517770899936 + p3 + -1*p4 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6502641346979265 + p3 + -1*p4 + d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.5374448386168535 + p3 + -2*p4 + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.243043598550026 + 2*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.313639706335611 + 2*p5 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9026027992520325 + 2*p5 + -5*p6 + l + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9026027992520325 + 2*p5 + -5*p6 + -1*l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.258937073320829 + p5 + d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.148765084150864 + p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.966856423027453 + 2*p7 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.966856423027453 + 2*p7 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.2550173958900666 + 2*p1 + -3*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1331211574698299 + 28*p2 + -33*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.13296095324113 + 25*p2 + -25*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9794344618528505 + 22*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.690525938976657 + 21*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.674623196964187 + 19*p2 + -20*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.320264112009872 + 16*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.80094957912981 + 15*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.281878230102768 + 15*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.106285017382747 + 15*p2 + -17*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.0537839171914816 + 14*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6073663851448587 + 13*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3035644271659896 + 13*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.18902741202837 + 13*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.990155678880318 + 12*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.4456455644201493 + 11*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.945803363430321 + 9*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.8014159311059428 + 8*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.949905402272967 + 8*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.4606370700301546 + 7*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.8030877819964284 + 7*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.282430975876874 + 7*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.750365075980058 + 7*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3289696142909442 + 7*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.469829753193675 + 7*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.429889114992262 + 7*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.287730302088071 + 6*p2 + -9*p3 + d + -2*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.8028069585197821 + 5*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.280349321678021 + 5*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5265724760761634 + 5*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9542636724464386 + 5*p2 + -7*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1521967505261355 + 4*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.024514196541811556 + 4*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.494657061803295 + 4*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.495071228434792 + 3*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.12402868170032344 + 3*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5758958298033738 + 3*p2 + -4*p3 + d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.465387366648574 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.145329054452463 + 2*p2 + -2*p3 + l + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.14484961250694 + 2*p2 + -2*p3 + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5954970990337463 + 2*p2 + -3*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.5649562890831152 + 2*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.1922052735371347 + 30*p3 + -33*p4 + -3*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.2751391138050673 + 21*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.100929615112662 + 10*p3 + -12*p4 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.257271331082726 + 10*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.6514280862777652 + 9*p3 + -14*p4 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.753629356781747 + 7*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.525937342263046 + 6*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.881367203710092 + 5*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.224902803841089 + 5*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.722224957917229 + 4*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.2554853101642095 + 3*p3 + -4*p5 + 3*d + -4*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.182870039465309 + 3*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.460739729383438 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.84577018341475 + 3*p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.22896857382856 + 2*p3 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.614282975932538 + 2*p3 + -1*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.606504217989324 + 2*p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.469081696577954 + 2*p3 + -1*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.006405881953594788 + 2*p3 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.20414749741434754 + 2*p3 + -3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.028260554279534 + 2*p3 + -4*p5 + 3*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.9902996430486574 + 2*p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.678367443310173 + 2*p3 + -5*p5 + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.145511615892221 + 2*p3 + -2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.7338154894518483 + 2*p3 + -2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.7338154894518483 + 2*p3 + -2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.136218959355828 + 2*p3 + -2*p4 + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.777064607776609 + 2*p3 + -3*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.744792763277217 + p3 + p4 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1611162386718188 + p3 + 2*p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.9521998291042717 + p3 + p5 + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.954092098082651 + p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.012435819986309996 + p3 + -1*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.998766967375049 + p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.01239515381473853 + p3 + -1*p5 + d + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.2183554011801085 + p3 + -3*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.520798262772132 + p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.36589798023802445 + p3 + -3*p4 + -1*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.999757275690947 + 2*p4 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.999753785032444 + 2*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.766434505434413 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.333032225689128 + 2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1039565481327127 + 2*p6 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.9861047526898057 + 2*p1 + -2*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.9861047526898057 + 2*p1 + -2*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.162663166479445 + 25*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.741309435156086 + 24*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.753802676474787 + 21*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.7978346900137758 + 20*p2 + -19*p3 + d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.745457210123451 + 20*p2 + -21*p3 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.6084593103224576 + 18*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.281861998540724 + 13*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.690401846066841 + 11*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.943314017314834 + 9*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.3243609148647613 + 8*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.110170294830613 + 7*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.5039746425547251 + 6*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.44520835944252474 + 6*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.2226214669791737 + 6*p2 + -9*p3 + d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.771385297892303 + 5*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.583608963366712 + 5*p2 + -6*p3 + d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.028860790005928 + 5*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.605538710345438 + 5*p2 + -9*p3 + -1*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.4541235012617117 + 4*p2 + -2*p3 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.3391462970901062 + 3*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.3344028242524026 + 3*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.031274605856386 + 3*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.7604326332093876 + 3*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.349342693611499 + 3*p2 + -8*p3 + 4*p4 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.473257754377517 + 2*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.60131550316112 + 2*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5820879089235993 + 2*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.744316113858497 + 2*p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.7172915932569084 + 2*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.610183555083769 + 2*p2 + -13*p3 + 15*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.078252752169375 + 2*p2 + -13*p3 + 15*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.3322487388895912 + p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.863761211877233 + 14*p3 + -23*p4 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.892651480950885 + 12*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.1141316261422811 + 11*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.263903067139845 + 8*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.7610600875737963 + 8*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.926532510522301 + 4*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.258339315048653 + 4*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.754638514653567 + 4*p3 + -7*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.0698932891907564 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.069908648088174 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.512722947894055 + 3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.1850618239399635 + 3*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.732588382448038 + 3*p3 + -4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.738966513666526 + 2*p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.3311924741246006 + 2*p3 + p5 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.1310515630394486 + 2*p3 + -2*p7 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.5313533074581755 + 2*p3 + -1*p6 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.1422893890271895 + 2*p3 + -2*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.826058085776875 + 2*p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.0017397441983879477 + 2*p3 + -2*p5 + 4*d + -4*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.148748328990045 + 2*p3 + -2*p5 + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.008078780041631354 + 2*p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.033487159749139 + 2*p3 + -2*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.449367679077902 + 2*p3 + -3*p5 + 2*p6 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.1755361404534793 + 2*p3 + -3*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.9904202452999701 + 2*p3 + -5*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.282733441436245 + 2*p3 + -2*p4 + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.296262003568912 + 2*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.09005794220535619 + 2*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.29180456470066035 + 2*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.6633471142725597 + p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.408403937367287 + p3 + p4 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.834794854946509 + p3 + -2*p7 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.025837505180673657 + p3 + -1*p5 + -3*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.1953405830054176 + p3 + -2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.199536912119254 + p3 + -3*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.280668018799435 + p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.011450407090633998 + p3 + -1*p4 + -4*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.3531975853337457 + p3 + -2*p4 + l + 2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.5011070835903313 + p3 + -2*p4 + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.3531975853337457 + p3 + -2*p4 + -1*l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.204523807397711 + p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.8577682578280266 + 2*p4 + 3*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.8577682578280266 + 2*p4 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.455242997935525 + p6 + -3*p7 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.822142448098343 + 2*p8 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.822142448098343 + 2*p8 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7588155856574148 + 4*p1 + -3*p3 + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.2825391437989149 + 4*p1 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.680662359746987 + 3*p1 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.128490841455872 + p1 + -5*p2 + 4*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.529521069307749 + 38*p2 + -37*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.8558522268768702 + 28*p2 + -34*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.790690899849071 + 23*p2 + -22*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7962145008691492 + 21*p2 + -20*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.3858931957755223 + 20*p2 + -20*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.051085612672948824 + 20*p2 + -22*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7981174333525989 + 19*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.080383607656501 + 18*p2 + -18*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.74149688351775 + 18*p2 + -19*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.5773114833563 + 17*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.796010122813741 + 17*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.748282723649504 + 16*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.282501138112805 + 14*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.04414690719367 + 13*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.818405340605657 + 12*p2 + -13*p3 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.076883175308702 + 12*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.704342663467145 + 10*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.1645962506673702 + 9*p2 + -12*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.00029321531433504735 + 8*p2 + -8*p3 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.719614102892537 + 8*p2 + -12*p3 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5799940374199815 + 7*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.516814714789064 + 6*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.8033389348757904 + 5*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1428012940967993 + 5*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.0005337216852598659 + 4*p2 + -4*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3725157536611279 + 4*p2 + -5*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1412840793780403 + 3*p2 + -3*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.228574303950534 + 3*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.4765686184736009 + 3*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.561046743060331 + 3*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.098802765384498 + 2*p2 + -1*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.336532475005686 + 2*p2 + -3*p3 + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5561659298071289 + 2*p2 + -3*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.2213918740228271 + p2 + p3 + d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3589688570729983 + p2 + -4*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.868695964302638 + p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.394363636199618 + 37*p3 + -48*p4 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.4513952195716278 + 20*p3 + -18*p4 + -3*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.259426978743547 + 11*p3 + -21*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.2599762338591494 + 11*p3 + -21*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.244199147054505 + 10*p3 + -19*p4 + 3*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.776547117653393 + 8*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.7648359328775607 + 8*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7823057975270813 + 7*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7690187804645736 + 7*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.1697404765962816 + 6*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.358241254802792 + 5*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.6477585485220803 + 5*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1804339088953757 + 4*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.0413364119975 + 4*p3 + -9*p4 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.082724268716351 + 3*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.482744666059658 + 3*p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3244235551882746 + 3*p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.5175759934155169 + 3*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.145752471328996 + 2*p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1432887645568814 + 2*p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.01512188170512927 + 2*p3 + -2*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.317571758607429 + 2*p3 + -3*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.319976996849602 + 2*p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.0009379484383385 + 2*p3 + -4*p5 + 3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.1589009177472125 + 2*p3 + -5*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.5602955448519561 + 2*p3 + -5*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.3309240509839606 + 2*p3 + -5*p5 + 2*p6 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.282985816046083 + 2*p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.0967251169446075 + 2*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.817750501568625 + 2*p3 + -6*p4 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.6648571816397018 + p3 + 2*p5 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.9819721620869333 + p3 + 2*p5 + -7*p6 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.459464940897782 + p3 + p5 + d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.89579306510616 + p3 + -2*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.9377565144156847 + p3 + -3*p5 + d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.9377565144156847 + p3 + -3*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.682050096530197 + 3*p4 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.355335273099905 + p5 + -1*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.0870219674664625 + p5 + -1*p6 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.378214445198448 + p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.618534938557929 + 12*p1 + -12*p3 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.2704323183766055 + 4*p1 + -5*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.9018610343199347 + 26*p2 + -28*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.136078311313067 + 24*p2 + -26*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.799328368282583 + 23*p2 + -22*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.6215688443966707 + 19*p2 + -17*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -2*l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.7510743522931194 + 16*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8013677600185878 + 14*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.8322121252177235 + 13*p2 + -7*p3 + -3*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.0669639710657925 + 13*p2 + -15*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.4535916994386291 + 12*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6007165061618354 + 12*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1417258222117206 + 9*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.63416853380311 + 9*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.943496578754593 + 8*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.129651983512274 + 8*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.8259838922870326 + 8*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.4572239126432711 + 8*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.3312186625616973 + 7*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.45036109499318755 + 6*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8032094314452922 + 6*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.060342890015428 + 6*p2 + -8*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.44965720370585827 + 5*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.4910078934099583 + 5*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.9558494786048004 + 5*p2 + -7*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.2397410525461359 + 5*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.4474460715714565 + 5*p2 + -9*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.94500227430029 + 4*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.802918834124835 + 4*p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1362214028167803 + 4*p2 + -4*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1431742709579504 + 4*p2 + -4*p3 + l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.334533374880452 + 4*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.9555806978999937 + 4*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.971263379388739 + 4*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.41362278690333293 + 3*p2 + -1*p3 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.086487722182427 + 3*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.09175248237611751 + 3*p2 + -3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.928449380144816 + 3*p2 + -5*p3 + 3*p5 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.435990236963508 + 3*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.523307314111532 + 3*p2 + -5*p3 + 3*p6 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6314585610735384 + 3*p2 + -6*p3 + 2*p4 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6008336177546445 + 2*p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.842760371618002 + 2*p2 + -4*p3 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.395164542298408 + 2*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.604270196546771 + 2*p2 + -8*p3 + 9*p4 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.731456702462727 + p2 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.141912048842908 + p2 + -1*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1406915400969884 + p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.5890060365143376 + 34*p3 + -41*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.13168458546083 + 11*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.730795754773315 + 11*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.674015298785717 + 9*p3 + -15*p4 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1048279910282335 + 8*p3 + -8*p4 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.8159446008932685 + 8*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.523912777327366 + 7*p3 + -11*p4 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.8083030343275786 + 6*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.099510836963716 + 6*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.25803090687151 + 6*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.545233885504337 + 5*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.2279899422220164 + 5*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.2177062877363407 + 5*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.183864728100971 + 5*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.702458048442525 + 5*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.001209206597365 + 4*p3 + -8*p4 + 3*p5 + 4*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8665455101379893 + 4*p3 + -8*p4 + 3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8665050184993428 + 4*p3 + -8*p4 + 3*p5 + -3*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.001159290180758 + 4*p3 + -8*p4 + 3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.0489713463120323 + 3*p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.8352350099872283 + 3*p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.222245190989077 + 3*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.530341016492019 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.773226096654381 + 3*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.289844934511471 + 2*p3 + -5*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.319433518317164 + 2*p3 + -1*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.17539721224502053 + 2*p3 + -3*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.317571584074504 + 2*p3 + -3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.1763012927975536 + 2*p3 + -3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.131216696681637 + 2*p3 + -4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.394054197821555 + 2*p3 + -1*p4 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.063819568888766 + 2*p3 + -1*p4 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.150362234949364 + 2*p3 + -2*p4 + d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.122381989046017 + 2*p3 + -2*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.252613587904562 + 2*p3 + -4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.154639138786426 + 2*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.2829375939688284 + 2*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.056598767212465 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.352446761686171 + p3 + p5 + -4*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.1317062445401875 + p3 + 2*p6 + d + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.1317062445401875 + p3 + 2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.204052951558789 + p3 + -1*p7 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.984917081628773 + p3 + -2*p6 + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.419016420382354 + p3 + -5*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.153714339805695 + p3 + -3*p5 + 5*p6 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.14981228170206 + p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.0917776406122965 + p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.267819926548854 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.3089878802802697 + p7 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.280023094145873 + p7 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.6662201092525843 + 3*p1 + -1*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.530942439955623 + 2*p1 + 16*p2 + -20*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.412108058137111 + 18*p2 + -15*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -4*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1987221669294734 + 18*p2 + -18*p3 + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.431706841414947 + 11*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.064323960544276 + 11*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + 2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.115759171164716 + 8*p2 + -13*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.07208440102866 + 8*p2 + -13*p3 + 3*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.05112037871833 + 8*p2 + -13*p3 + -3*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.8023152992694955 + 7*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.139916439376178 + 7*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.030904770587889 + 7*p2 + -9*p3 + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.282867831788648 + 6*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.3312383677856114 + 6*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.372152925204588 + 5*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.0011088076737919975 + 5*p2 + -5*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.263922282758251 + 5*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.317373646740694 + 5*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.101231765599449 + 5*p2 + -7*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.956075498742934 + 5*p2 + -7*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.096126677537365 + 5*p2 + -7*p3 + d + l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.8335731074734793 + 4*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.282551578128187 + 3*p2 + -3*p3 + 2*d + 2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.0299563161807717 + 3*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.106541755315717 + 2*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.944991278726002 + p2 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1061769560071 + p2 + -2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.905368098918892 + p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.905368098918892 + p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.5403916355292875 + 34*p3 + -39*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.6283621724475754 + 11*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.613332627158193 + 9*p3 + -10*p4 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.9816894187481102 + 8*p3 + -13*p4 + d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.0217642727690026 + 6*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.2773304171725295 + 6*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1538788988592072 + 5*p3 + -5*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.308190456341667 + 5*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.515051906749599 + 4*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.239795017213289 + 4*p3 + -8*p4 + 2*p5 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.195101830462061 + 3*p3 + -1*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.3157635720074125 + 3*p3 + -2*p5 + -5*p6 + 3*d + -3*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.2467241063850484 + 3*p3 + -4*p5 + d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.475388801394202 + 3*p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.098728248323755 + 3*p3 + -4*p4 + d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.732881946828223 + 3*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.0676269876553586 + 3*p3 + -5*p4 + l + -2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.18583550290242304 + 2*p3 + -3*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1750809840795093 + 2*p3 + -3*p5 + p6 + 4*d + -3*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.18895286097436 + 2*p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.7090670952193685 + 2*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.5286658154826889 + p3 + 2*p5 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.834497276309044 + p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.9883155612533068 + p3 + -2*p6 + -1*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.489970163128306 + p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.7991822587292403 + p3 + -2*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.420621250629563 + p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.7549337988680542 + p3 + -2*p5 + -1*d + l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.219220037291545 + p3 + -3*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.0176048125939663 + p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.093062552007614 + 2*p5 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.0896809765818753 + 2*p5 + -5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.455666406313741 + p7 + -2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.453876920231672 + p7 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.42875849070282 + 4*p1 + -5*p3 + -2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.04170795860198329 + p1 + 15*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.04170795860198329 + p1 + 15*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.203285313262179 + p1 + -2*p3 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.420451230065469 + p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.7133754234812835 + 24*p2 + -26*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.131286484356767 + 23*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.163615069053483 + 23*p2 + -25*p3 + -4*p4 + -3*d + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7977161821575651 + 20*p2 + -19*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.271774868128822 + 20*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.6085935261419362 + 17*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1639311226860682 + 15*p2 + -15*p3 + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.74845882737103 + 15*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.4456963535013823 + 12*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.309156113023529 + 12*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.618334732296092 + 11*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1494180118240354 + 10*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.120890439165579 + 8*p2 + -13*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.6443741720712215 + 6*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.5067544284543763 + 5*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.432102716082566 + 5*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.001152091839241457 + 5*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.5788908063014792 + 4*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.5181104132324775 + 4*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1947126220388666 + 3*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.737303380923984 + 3*p2 + -4*p3 + -3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.5767800136024337 + 3*p2 + -4*p3 + -3*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.9392971250447366 + 3*p2 + -5*p3 + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.479023798627331 + 2*p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.470121397711684 + 2*p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.09675477054525845 + 2*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1382218992054165 + p2 + -1*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1424042316919705 + p2 + -1*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.5930943042525256 + 9*p3 + -12*p4 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.0407861011860295 + 9*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.287416500386879 + 5*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.7241617412898504 + 5*p3 + -10*p4 + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.2574709967491535 + 4*p3 + -5*p5 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.192775481102078 + 4*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.6721662799795203 + 4*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.483880351803931 + 3*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.778074978880588 + 3*p3 + -4*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.522854758734807 + 3*p3 + -7*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.5240928783095384 + 3*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.013971884260990206 + 2*p3 + -2*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.9335928654504437 + 2*p3 + -2*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.17755792985898952 + 2*p3 + -3*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.300867561402441 + 2*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.189103308355882 + 2*p3 + -4*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.521725024106624 + 2*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.008871508587887177 + 2*p3 + -4*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.009643991314819867 + 2*p3 + -4*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.27984700742098 + 2*p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.895402285886638 + 2*p3 + -5*p4 + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.0022246221595417 + p3 + 3*p5 + -5*p6 + d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.1634469513549321 + p3 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.3372026984350853 + p3 + p5 + -5*p6 + d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.568231739992016 + p3 + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.0570656427873735 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.9770292151123603 + p3 + -4*p6 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.421753620248257 + p3 + -1*p5 + -5*p6 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.169897705266936 + p3 + -2*p5 + p6 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.189916648783945 + p3 + -2*p5 + 4*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.006878691647960052 + p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.886135460223175 + 2*p4 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.090272311129084 + p5 + 3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.110030136393362 + p5 + -3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.762302953530775 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.874658873193759 + 4*p1 + -3*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.3935567534897877 + p1 + -3*p3 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.1917610787441857 + 24*p2 + -25*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.716488235198849 + 23*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.745022099540928 + 19*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.7984338615459854 + 17*p2 + -16*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.282457155815654 + 12*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.17818874284056 + 12*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.444033229257157 + 10*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.697147194559948 + 9*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.094372255576628 + 9*p2 + -18*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.6471131172663762 + 8*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.468323010450429 + 8*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.1447696764271984 + 7*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.6393169060306427 + 7*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.550765033931782 + 6*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.5698868357216822 + 6*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.704937803745442 + 5*p2 + -7*p3 + d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.029403063804523 + 5*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.6438097325911265 + 4*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.5320966176916506 + 3*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.8028069585197821 + 3*p2 + -2*p3 + 3*d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.0021312215496102757 + 3*p2 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.4511014721602002 + 3*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.5617677470726465 + 3*p2 + -7*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.5614769752192643 + 3*p2 + -7*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.7610234186628712 + 2*p2 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.295195773430552 + 2*p2 + -1*p3 + 2*d + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.06402426201675838 + 2*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.273246180688253 + 2*p2 + -2*p3 + -4*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.115712404839079 + p2 + 2*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.80357926671379 + p2 + 2*d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.141426498245003 + p2 + -1*p3 + -4*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.672168906471715 + 34*p3 + -41*p4 + 2*p5 + -1*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.6490999915885298 + 8*p3 + -13*p4 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.867641087302733 + 7*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.7435195370895693 + 7*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.041199020592101745 + 5*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.211566593988625 + 4*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.243468935288736 + 4*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.0852345757794946 + 3*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.030009940280392 + 3*p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.278981132582432 + 3*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.256650010865648 + 3*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.689104193767983 + 3*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.164528897954877 + 2*p3 + -3*p5 + p6 + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.3210025523180735 + 2*p3 + -3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.040959229349511 + 2*p3 + -4*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.34641050647488175 + 2*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.27129297422403 + 2*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.289295870925427 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.00716248218433433 + p3 + -1*p6 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.110801231355208 + p3 + -1*p6 + d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.236724983059031 + p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.9713801079224302 + p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.24614467407002 + p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.995932561168127 + 2*p4 + d + -1*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.2153506423398746 + 2*p5 + -2*p6 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.241149392712837 + 2*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.370405850623342 + 2*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.365794516206647 + 2*p5 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.777294991237873 + p5 + 2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.753638440992175 + p6 + -2*d + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.002975437308799933 + 4*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.283155811115227 + 2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.9379094052581596 + 5*p1 + -4*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.4961271526322495 + p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.450602508022005 + 26*p2 + -29*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.020395445029929 + 21*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.135494996782101 + 20*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.6022518723048147 + 20*p2 + -21*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.938926608641172 + 19*p2 + -18*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -2*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.46455463606918107 + 16*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.8017560957771566 + 13*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.1501030535554424 + 12*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.04421235704062 + 10*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.4345206612350123 + 9*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.4629384611818343 + 8*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.726008482669703 + 8*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.9467159960961897 + 8*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.3228843663175742 + 6*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.471844212216327 + 6*p2 + -7*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.1651030942821494 + 6*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.576915476647338 + 4*p2 + -5*p3 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5567376996700824 + 4*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.4363056179593434 + 3*p2 + -5*p3 + p5 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.5266534508551394 + 2*p2 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.707358068815815 + 2*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5829054211452331 + 2*p2 + -3*p3 + 2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.703653083879682 + p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.6901059957619946 + p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.4433408996344745 + 42*p3 + -54*p4 + -1*p6 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.649973894941637 + 10*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.292996484040114 + 10*p3 + -15*p4 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.1284661898218358 + 9*p3 + -13*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.1284661898218358 + 9*p3 + -13*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.272978779250215 + 8*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.5566291486889248 + 6*p3 + -7*p4 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.141691256194214 + 6*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.0432508551556965 + 6*p3 + -9*p4 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.317027564946657 + 5*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.378638551708366 + 5*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.5015980532072346 + 4*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.716310020085587 + 4*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.251707238424001 + 4*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.122077420593227 + 4*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.8815089159470375 + 4*p3 + -8*p4 + 3*p5 + -1*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.107688602668885 + 3*p3 ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.0998723031501205 + 3*p3 + -3*p6 ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.2821649537056037 + 3*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.280544973087169 + 2*p3 + -2*p4 + -3*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.9449559975801611 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.016608421120637 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.986084183299582 + p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.6867362800768524 + p3 + -1*p5 + d + l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.6867362800768524 + p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.052560773455051 + p3 + -3*p5 + 3*p6 ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.5857773519310732 + p3 + -2*p4 + 2*p6 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.5865929442905302 + p3 + -2*p4 + 2*p6 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.534369419436864 + p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.999560228018398 + 2*p4 + d + l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.4800666073604478 + 3*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.4610294285443195 + 3*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.250691980398115 + 2*p5 + -3*p6 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.250739104287919 + 2*p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.01379740232569 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.7536113883887685 + 20*p2 + -21*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.750254422105482 + 17*p2 + -18*p3 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1436681991362647 + 16*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.2167643335390395 + 15*p2 + -9*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.4558457921675798 + 14*p2 + -12*p3 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.810666550702313 + 11*p2 + -12*p3 + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.4855713673229212 + 7*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.942129113285656 + 7*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8032855278006792 + 5*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.2439900566101159 + 5*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.0328986092304167 + 5*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.7355108937889188 + 3*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8032022755953592 + 3*p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.744280509141756 + 3*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.8111449114570183 + 3*p2 + -5*p3 + d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.8563990300332035 + 3*p2 + -6*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1436844306983085 + 2*p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1469317903045693 + 2*p2 + -2*p3 + -3*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.669431889637054 + 2*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.3520161634647538 + 2*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.945285541237888 + p2 + -1*d + l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.50388165049886 + p2 + -1*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1415134156417523 + p2 + -1*p3 + 4*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.1056261215968535 + 9*p3 + -11*p4 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.35741519896614 + 7*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.0680717060470832 + 5*p3 + -5*p4 + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.0421362878953726 + 5*p3 + -8*p4 + d + -2*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.711812132070272 + 4*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.235661038845332 + 4*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.4189128798661278 + 4*p3 + -6*p4 + d + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.043824038278684 + 4*p3 + -8*p4 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8534380874555119 + 4*p3 + -8*p4 + 3*p5 + d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8814858776009111 + 4*p3 + -8*p4 + 3*p5 + d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8534178416361888 + 4*p3 + -8*p4 + 3*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.043821594817732 + 4*p3 + -8*p4 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.3378315235679454 + 3*p3 + -2*p6 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.9566774458053133 + 3*p3 + -4*p4 + d + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.271739254913765 + 3*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.699217678651589 + 3*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.763907085646283 + 2*p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.16929259961527 + 2*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.03939522281016561 + 2*p3 + -4*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.7778067217745575 + 2*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.9322897856342715 + 2*p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.773884617879475 + 2*p3 + -3*p4 + -4*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.012489261054688 + p3 + 2*p5 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.1338203363681787 + p3 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.466194755960547 + p3 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.393215733150581 + p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.872905323897648 + p3 + p6 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.6860311670590464 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.600793300648923 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.005898165674189637 + p3 + -1*p4 + 2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.009220399905360844 + p3 + -1*p4 + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.5425939344710375 + p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.125004537776696 + p3 + -3*p4 + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.225878119322053 + 2*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.242011934429173 + 2*p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.086907673895406 + p5 + -1*p6 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.701094082130409 + p5 + -5*p6 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.9384117195151997 + 2*p6 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.3825686926163234 + 20*p2 + -20*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.301244377987947 + 15*p2 + -9*p3 + -4*p4 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.149319949815022 + 14*p2 + -12*p3 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.5110908735138815 + 13*p2 + -11*p3 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.1423131255050163 + 13*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.605838174851813 + 10*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.00032934362985133 + 7*p2 + -7*p3 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.1564485471169186 + 7*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.0438322243295355 + 7*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.802594901015665 + 6*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.472186296749718 + 6*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.5899031442481792 + 5*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.9085170219553405 + 5*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.4392328841807884 + 3*p2 + -5*p3 + p5 + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.944985344606545 + 2*p2 + -1*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.47710637991109 + 2*p2 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.003963468198353922 + 2*p2 + -2*p3 + 3*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.283110607087601 + p2 + -1*p3 + -2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.283018628236021 + p2 + -1*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.28303643059439 + p2 + -1*p3 + -3*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.799343186584591 + p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.049188665298857 + p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.11081531753224995 + 11*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.730795754773315 + 11*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.7107727800023929 + 10*p3 + -19*p4 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.0407854030543287 + 9*p3 + -19*p4 + 3*p6 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.168849975618648 + 7*p3 + -10*p4 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.258406510224855 + 4*p3 + -6*p4 + d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.9641974054137235 + 4*p3 + -8*p4 + 3*p5 + l + -2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.24658835376251 + 4*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.3236290983094006 + 3*p3 + -4*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.3831216129233552 + 3*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.5193674163563973 + 3*p3 + -7*p4 + d + 2*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.5204275293440586 + 3*p3 + -7*p4 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.3220769770056013 + 2*p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.9182313330423822 + 2*p3 + -4*p5 + 3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.488210505179812 + 2*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.3173253011204138 + p3 + p5 + 3*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.173707260920215 + p3 + -1*p7 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.440346089170977 + p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.2480769280849024 + p4 + d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.101889214132042 + 6*p1 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.7581747007560826 + 4*p1 + -3*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1886242154762097 + 4*p1 + -4*p3 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.364241862805757 + 23*p2 + -23*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 6.058136793840905 + 22*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.5961210712379676 + 22*p2 + -28*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.04174723700847 + 21*p2 + -23*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1366322533227 + 17*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.143619329917209 + 14*p2 + -14*p3 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1437723952926087 + 14*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.46272535648016583 + 13*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.0312763256906883 + 9*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.313507567914601 + 9*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.941694883866076 + 9*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.034436244301424 + 8*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.9280155167877195 + 8*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.45600042833930643 + 4*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.8033146747991875 + 4*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.00914465261582429 + 3*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.945180297883993 + 2*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.146829688543327 + 2*p2 + -2*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.2879929401472299 + 2*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.698703828224852 + p2 + 43*p3 + -59*p4 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.3696864004107199 + p2 + -4*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.479941143682179 + p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.7307964529050155 + 11*p3 + -19*p4 + 3*p6 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.155688273196433 + 11*p3 + -21*p4 + 2*p5 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.1558458764278883 + 11*p3 + -21*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.040786275718955 + 9*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.4995321154699655 + 7*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.4747492872613217 + 6*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.3297841679511664 + 5*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.200485822138613 + 4*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.179083722186033 + 4*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.8624521894432868 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.9646199496256305 + 4*p3 + -8*p4 + 3*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.8624260095045069 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.632258628500969 + 3*p3 + -4*p4 + -1*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.235193456640406 + 3*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.475719349757897 + 2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.14122034936539277 + 2*p3 + d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.145617906443668 + 2*p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.903577931701755 + 2*p3 + -2*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.014368597599968516 + 2*p3 + -2*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.316313899815516 + 2*p3 + -3*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.20046659802189148 + 2*p3 + -5*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.316102531944783 + 2*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.687298625161845 + p3 + -1*p5 + d + -1*l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.895770550358808 + p3 + -2*p5 + d + l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.25917163707398 + 2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.004131019806545379 + 2*d + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.4086208647966756 + 7*p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.278858810496818 + 19*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1405466777690725 + 17*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.595319075450043 + 16*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.4580077315120252 + 15*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1420823929779025 + 15*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.893271064337028 + 13*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.0519237707696565 + 12*p2 + -14*p3 ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.00027366762671271087 + 11*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.314176029018115 + 11*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1414322578315352 + 8*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.5647227555308816 + 7*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.0138504348400015 + 6*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.4088760234350006 + 4*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.5553475449208687 + 4*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.6125665936511762 + 4*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.431549804273851 + 3*p2 + 7*p3 + -19*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.944489671098978 + 3*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.143525431203451 + 3*p2 + -3*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.0561352502547185 + 3*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.005179788154068771 + 2*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.689961150430713 + 2*p2 + -3*p3 + 3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.42763045041398906 + p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.143381267007237 + p2 + -1*p3 + d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.28295178212567 + p2 + -1*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.7079401106264063 + 14*p3 + -23*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1381168303844467 + 8*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.7237730479671147 + 8*p3 + -15*p4 + 2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.6447736864353195 + 6*p3 + -7*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.03833092103229947 + 4*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.1200674909283137 + 4*p3 + -3*p5 ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.614958392858109 + 4*p3 + -3*p4 ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.8846506916318693 + 3*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.4396849329553714 + 2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1423562351375405 + 2*p3 + -2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.13270453887906206 + 2*p3 + -4*p6 ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.158801949080307 + 2*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.4952169549290177 + 2*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.6297811336277634 + 2*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.5768829880283015 + p3 + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.19495210670719 + p3 + -1*p7 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.495436534345552 + p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.1988000001157952 + p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.0184448395629513 + p3 + -3*p5 + 5*p6 + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.1145140702729766 + p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.149630443888952 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.040703730143652 + 6*p1 + -2*p5 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.757306599481091 + 21*p2 + -22*p3 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.3965397042126875 + 20*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.46327548426039444 + 18*p2 + -16*p3 + 3*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.016344344306493 + 18*p2 + -18*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.4066826851606526 + 18*p2 + -18*p3 + -2*d + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.45960034445446996 + 15*p2 + -13*p3 + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.915373215852583 + 14*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.5706905513439091 + 12*p2 + -10*p3 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.80142657761438 + 12*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.167479751616174 + 11*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.4874322373713976 + 6*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.612523658551577 + 5*p2 + -6*p3 + l + -2*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.944628599307437 + 3*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.723434820154711 + 3*p2 + -4*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.878970326051695 + 3*p2 + -6*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.994651630036822 + p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.124754921700395 + 10*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.7264055280778976 + 8*p3 + -15*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.56849931596298 + 5*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.6987729517615477 + 4*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.7324600582564327 + 4*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.120510131921569 + 4*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.342988447908813 + 3*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.384696248974504 + 3*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.7618421866082485 + 2*p3 + -3*p6 + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.33080359777062324 + 2*p3 + -1*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.143831038355476 + 2*p3 + -2*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.153064187662693 + 2*p3 + -4*p5 + 3*p6 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.284966930781706 + 2*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.118362870339474 + p3 + -2*p5 + 4*p6 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.315560283641139 + p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.4363496172531267 + p3 + -2*p4 + p5 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.5790343148575765 + p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.259569257070852 + 2*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.6734356664428125 + p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.153217593605626 + 18*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.137669327964235 + 18*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.139310461059885 + 14*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.745178830107758 + 14*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.45314384795256735 + 13*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.864000671050606 + 12*p2 + -6*p3 + p5 + l + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.1429885679255385 + 11*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.140410542087417 + 9*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.1457444428144368 + 9*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.095479492454094 + 8*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.098418277848601 + 8*p2 + -13*p3 + -4*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.316548123001134 + 5*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.2094939730102985 + 5*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.044941232031204 + 4*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.006745574015933 + 3*p2 + -5*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.282692775264674 + 2*p2 + -2*p3 + d + l + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.902174495453593 + 2*p2 + -2*p3 + -1*p4 + d + -2*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.677883821072762 + 2*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.413837313363353 + 2*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.4215830590887539 + p2 + p3 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.1420364823202585 + 10*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.229410648731457 + 6*p3 + -10*p4 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.8566688664338784 + 4*p3 + -8*p4 + 3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.8566250586696535 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.476790475316479 + 2*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.983360754538137 + 2*p3 + -2*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.024289049068304282 + 2*p3 + -2*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.012664458118321256 + 2*p3 + -4*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.169461722019788 + p3 + p5 + -2*p6 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.011677474426318462 + p3 + -1*p6 + -4*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.29265454004638153 + p3 + -3*p6 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.1618653509834083 + p3 + -1*p5 + l + 2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.316720927593715 + p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.374879137994521 + p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.312383609869584 + p3 + -4*p5 + 2*p6 ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.008737692824159 + 2*p4 + -1*d + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.115803668562325 + 4*p5 + -10*p6 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.115803668562325 + 4*p5 + -10*p6 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.060098011823055 + p1 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.388529681645268 + p1 + -3*p3 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.808417161864026 + 24*p2 + -27*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.46323743608270096 + 18*p2 + -16*p3 + -5*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.140730984538083 + 15*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.802462779591289 + 11*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.172602616541677 + 10*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.747409535424731 + 10*p2 + -11*p3 + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.678311584275792 + 8*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.5235940632093184 + 5*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.1797277316833854 + 5*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.9472300210558515 + 4*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.6191080791893342 + 3*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 6.266104118856168 + 3*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.710693393016377 + 3*p2 + -4*p3 + d + -3*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.478903370908943 + 3*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.70540398118865 + 3*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.0011746065865921838 + 2*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 6.270191505431414 + 2*p2 + -3*p3 + p5 ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.077531407589525 + 2*p2 + -13*p3 + 15*p4 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.1430936367465083 + p2 + -1*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.2877320474173235 + p2 + -4*p3 ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.508268186507897 + 7*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.248246233520663 + 6*p3 + -12*p4 ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.3349527690013893 + 5*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.782897323603849 + 5*p3 + -6*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.246458335231552 + 4*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.1524555573592559 + 2*p3 + 2*p5 + -7*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.1374155570909954 + 2*p3 + -2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.501771372900274 + 2*p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.563798105588125 + 2*p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.038140190538323 + 2*p3 + -5*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.650740626580354 + 2*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.87721909667351 + 2*p3 + -2*p4 + d + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.0780551469047828 + p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.331147976726992 + p3 + 2*p5 + -6*p6 ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 6.282976042202271 + p3 + -1*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.3763350746599006 + p3 + -2*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.887251074681049 + p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.5378115237943808 + 3*p5 + -5*p6 + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.5381005503185112 + 3*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.541746577119194 + 2*p5 + -2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.270800965907894 + 2*p5 + -3*p6 ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.4507148902292 + 32*p2 + -28*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.2215274946040238 + 22*p2 + -23*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.743170479737487 + 16*p2 + -17*p3 ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.4606993782844508 + 15*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.00008726646259971648 + 10*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.696768981711041 + 7*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.9893667815600997 + 7*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.944095401220953 + 6*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.1619630724248864 + 6*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.66852673639202 + 5*p2 + -4*p3 ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.8028326148597866 + 5*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.5564449994562062 + 4*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.803282909806801 + 4*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.5367681659675387 + 4*p2 + -5*p3 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.484792286338098 + 3*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1418441555350056 + 2*p2 + -2*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.143396625904655 + 2*p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.3590063816519162 + 2*p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.6297081703667131 + 10*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.517532019616683 + 8*p3 + -11*p4 ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.217251454933271 + 8*p3 + -14*p4 ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.27773916478503 + 7*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.6816915889052044 + 4*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.796982479733294 + 3*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.715318873098329 + 3*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.239662197657212 + 3*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1429423167003603 + 2*p3 + -2*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.316899632312486 + 2*p3 + -3*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.1619894268965916 + p3 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.3190722011687348 + p3 + p5 + d + 2*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.464532504380947 + p3 + p5 + d + -1*l + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.3152080422048193 + p3 + p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.2049939821015648 + p3 + p5 + -5*p6 + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.268789482443287 + 2*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.141897039011341 + d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.277594144920823 + 23*p2 + -23*p3 + d + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.9125056228949227 + 23*p2 + -25*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.6056957559848501 + 21*p2 + -22*p3 + -1*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.02833542040612794 + 20*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.8484897299602574 + 18*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.590120471733319 + 17*p2 + -15*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.628272304987731 + 16*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.139560217675846 + 13*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.5011554122139785 + 11*p2 + -9*p3 ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.5669728340025526 + 9*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.5762108617333588 + 8*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.9766150824741295 + 8*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.1419069873880776 + 6*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.474765718851241 + 5*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.9447127326757006 + 4*p2 + -6*p3 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.996523172088686 + 4*p2 + -15*p3 + 14*p4 + -1*d + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.478308911765714 + 3*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.047306153167654 + 3*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.363108454487828 + 3*p2 + -8*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.1378628764799648 + 7*p3 + -9*p4 + 2*d + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.1492089043830127 + 7*p3 + -11*p4 + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.468565436683531 + 7*p3 + -15*p4 ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.938060933830498 + 6*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.8424831708412024 + 3*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.781184108410092 + 3*p3 + -4*p4 + 3*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.260368958435797 + 3*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.618863392526521 + 2*p3 + -3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.586328211836269 + 2*p3 + -1*p5 + -4*d + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.10441367535876 + 2*p3 + -3*p5 + 2*p7 + 2*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.1858704179857795 + p3 + -2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.9451225019908014 + p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.635181033295458 + p3 + -5*p5 ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.569079654935901 + p3 + -2*p4 + 4*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.466159683340899 + p3 + -2*p4 + 3*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.4672868169718365 + p3 + -2*p4 + -3*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.51685870558453 + 2*p5 + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.960213699894363 + 2*p7 ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.0596314683173635 + p7 + 2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.0255088851774734 + p7 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.18139419754814 + 3*p1 + 2*p2 + -6*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 5.75636447924918 + 27*p2 + -20*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.9026179836165245 + 26*p2 + -28*p3 + d + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.750190193989009 + 22*p2 + -23*p3 ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.939618282623737 + 18*p2 + -17*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 6.077123009042875 + 18*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.1392389025605536 + 8*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.159708298560868 + 7*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.1414844431761697 + 6*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.751937443103181 + 6*p2 + -7*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.4298817591144533 + 5*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.432423856664933 + 5*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.95365682146552 + 4*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.717408198247575 + 3*p2 + -4*p3 + d + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.717024749410911 + 3*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.0022396064961591237 + 2*p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.0116240928461573 + 2*p2 + -4*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.00023265238929084413 + p2 + -1*p3 + l + 2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 6.282883190686066 + p2 + -1*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.479192571965999 + p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.16954512326308355 + 9*p3 + -15*p4 + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.0217180300421416 + 8*p3 + -13*p4 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 5.283634546430733 + 6*p3 + -8*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.191149174806753 + 6*p3 + -8*p4 + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.338040115908509 + 6*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.2270104634457977 + 5*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.5046411837960617 + 3*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.02552125152021228 + 2*p3 + -3*p5 + p6 + 2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.857008533001267 + 2*p3 + -3*p5 + d + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.014869856161141289 + 2*p3 + -4*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.9630733878804885 + 2*p3 + -4*p4 + d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 6.171012472555135 + p3 + -1*p7 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.02492469798188062 + p3 + -1*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.165226156991048 + p3 + -1*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.952872985600133 + p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 5.347741711586961 + p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.556213079191883 + p8 + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.556213079191883 + p8 + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.686928615360422 + 3*p1 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1457098852952474 + 2*p1 + -2*p3 ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.7963075269182807 + 22*p2 + -21*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1410920931603212 + 21*p2 + -21*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.001356993493425591 + 19*p2 + -19*p3 + -1*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.725229891290388 + 19*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.412456251322883 + 18*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.45928478892570934 + 15*p2 + -13*p3 + -4*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1418677174799075 + 13*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.3188657287182237 + 10*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.544071496222509 + 6*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 6.082593918116177 + 6*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.768435167857657 + 5*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.1632752024582191 + 5*p2 + -6*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.16346282535280848 + 5*p2 + -6*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.5828097856005408 + 3*p2 + -7*p3 + 4*p4 + 2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.5826563711592905 + 3*p2 + -7*p3 + 4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1468771614989817 + 2*p2 + -2*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.541689296326462 + p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.610299593984077 + 8*p3 + -9*p4 ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.6736377500752434 + 8*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.117845529254233 + 7*p3 + -7*p4 ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 6.271235735922882 + 5*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.276344646712686 + 4*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.8062344446031657 + 3*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.1103761926924482 + 3*p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.194846314259569 + 3*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.285185079941571 + 3*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.416486731666197 + 2*p3 + -1*p5 + d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.1926532825594885 + 2*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.6495654963949873 + 2*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.355546649468954 + 2*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.1740068914611987 + p3 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.162608163113057 + p3 + -1*p5 + 2*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.011941542742145204 + p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.3064531216109652 + p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.472218419306271 + 3*p5 + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.0884508685250696 + p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.093838874458901 + p5 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.004214795610641107 + 17*p2 + -17*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.6015849989942605 + 16*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.1379428210580222 + 15*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.6596431850322937 + 15*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.137206466646606 + 14*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.142928354066344 + 13*p2 + -13*p3 + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.0677343593976225 + 11*p2 + -13*p3 ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.5568270605277843 + 7*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.5233663062402498 + 6*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.7960734782655885 + 4*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.267294782471879 + 4*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.766564839037953 + 3*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.8030909235890817 + 3*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 5.940994657770177 + 3*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.108004864827663 + 3*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.059726788789473 + 3*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.777590266954043 + 2*p2 + -1*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.477908184169457 + 2*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.732288351851303 + 2*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 5.686823929598569 + 2*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.3028868903503652 + p2 + -2*d + 2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.2303370694984155 + 6*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.8689015300952563 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.8688709868333464 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.342979372196703 + 3*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.331840680910475 + 3*p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.18349903063277823 + 2*p3 + -3*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.2672914663462995 + 2*p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.268885999150921 + 2*p3 + -4*p4 + 2*p5 + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.463513406630708 + p3 + p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.1539549952145944 + p3 + -1*p5 + d + 2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 5.376137869451059 + p3 + -3*p5 + d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.4634009734336128 + p4 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.050230452329371 + 2*p5 + -5*p6 + 3*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.0502112537076 + 2*p5 + -5*p6 + -3*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1320668210653326 + p1 + -1*p3 ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.3139732217590336 + 26*p2 + -29*p3 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.218887203003191 + 25*p2 + -27*p3 + l + -2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.11433651929814853 + 21*p2 + -20*p3 + d + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1396581306468825 + 21*p2 + -21*p3 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.4619392601850676 + 19*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1389692491911205 + 16*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.48747918672827617 + 14*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.7862605390791755 + 13*p2 + -10*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.140205116834458 + 12*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.146867213122245 + 12*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.9534854301329743 + 5*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.745731226816014 + 4*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.0859309366560904 + 3*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.005328715729164 + 3*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.478767235227289 + p2 + -2*p3 + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.6390240482804748 + 9*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.096496129746746 + 8*p3 + -10*p4 ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.6834918960286367 + 8*p3 + -15*p4 + 2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.18706369109705143 + 7*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.276950982593146 + 6*p3 + -8*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.183634693705558 + 5*p3 + -8*p4 + d + -1*l + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.067349837868458 + 4*p3 + -4*p5 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.3442970957819584 + 4*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.8714570411860267 + 4*p3 + -8*p4 + 3*p5 + 2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.8714114880925494 + 4*p3 + -8*p4 + 3*p5 + -2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.3394257073067173 + 3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.140974807034587 + 2*p3 + -2*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.9986543596450289 + 2*p3 + -4*p5 + 3*p6 + 2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.269965659826206 + 2*p3 + -4*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.229836526065577 + 2*p5 + -2*p6 ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.983808980584998 + p5 + 4*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.3771403525801373 + p5 + -1*d + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.1944740355301184 + 4*p1 + -4*p3 + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.48977604002390074 + 16*p2 + -14*p3 ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.8027357490863012 + 10*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 6.009667953315472 + 6*p2 + -8*p3 + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 6.2831535421872005 + 3*p2 + -3*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.173691710493238 + 3*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.173691710493238 + 3*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.7259372392429542 + 8*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 2.684447812859954 + 8*p3 + -15*p4 + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.822382073306326 + 5*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.043971327070919 + 3*p3 + -1*p5 ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.3561353065340689 + 2*p3 + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.0009793042432940182 + 2*p3 + -2*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 6.13467227406766 + 2*p3 + -4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.1535961555203835 + 2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.206603558731021 + p3 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.831933562170789 + p3 + -1*p5 + d + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.1696826807030907 + p3 + -1*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.608306061915816 + p3 + -2*p4 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.6091731414882069 + p3 + -2*p4 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.54971413719589 + p3 + -4*p4 + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 2.3242752107001716 + 2*p5 + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.825340938485549 + 2*p8 ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + l + -3*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -1*l + -3*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.740583727253107 + 23*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.1336610048041047 + 22*p2 + -22*p3 + l + -2*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.3358596760739925 + 7*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.335658937715063 + 4*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.357179571018803 + 3*p2 + -8*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.01536535513578248 + 2*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.10247840329424865 + 2*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 6.282988434039962 + 2*p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.1477208366627623 + 8*p3 + -12*p4 ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.1310098326736924 + 8*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.048798043615626 + 6*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.469666739441538 + p3 + p5 + -1*d + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.48001214458946884 + p3 + -2*p4 + 2*p6 + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.48039943315048644 + p3 + -2*p4 + 2*p6 + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.513405746192385 + 3*p5 + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.6584024474636845 + p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1396277619178976 + 16*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.986133916684947 + 12*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.141167316851082 + 11*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1394965131581474 + 11*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.151077645409756 + 8*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.949337829698535 + 7*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.33088685847426 + 6*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.528443826598468 + 6*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.4744908294940515 + 5*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.3368735123415258 + 5*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.331992716084957 + 4*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 6.264417432667041 + 4*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.9356117047928585 + 3*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.146908751958443 + 2*p2 + -2*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.687233898941546 + 2*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.169135353947982 + 2*p2 + -5*p3 ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.00013892820845874863 + p2 + -1*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.648599273622766 + 5*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.2429587585517456 + 5*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.3433944114928271 + 4*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.061696533390007 + 3*p3 + -5*p4 + 2*l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.6720018784622988 + 3*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1408812573866802 + 2*p3 + -2*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1384875383175697 + 2*p3 + -3*p5 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.4386019646528254 + p3 + -3*p6 + d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.6044721226429104 + p3 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.29391414416754585 + p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.02869478369911357 + p3 + -1*p5 + 4*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.472143536183045 + p3 + -2*p5 + 5*p6 + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.6347266900978976 + 23*p2 + -24*p3 ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.1376267419304864 + 21*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.4644715583967861 + 10*p2 + -8*p3 ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 6.283159301773732 + 9*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.750816767190475 + 9*p2 + -10*p3 + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.776287761726547 + 8*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.1421097946471592 + 7*p2 + -7*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.2459643730599719 + 6*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.114154698481674 + 6*p2 + -10*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.5649042697730888 + 4*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.478944386146366 + 2*p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.3370140113463114 + p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.5631976783321723 + 10*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.385790927979672 + 10*p3 + -19*p4 + 3*p6 ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.2263198281624663 + 9*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.649261800606823 + 5*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.723230250569744 + 5*p3 + -6*p4 + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.77813711260196 + 4*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.18016597536024462 + 4*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.302568044190976 + 4*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.38071061509465 + 3*p3 + -4*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.5288780475197312 + 3*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.2677567456299315 + 2*p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.325475490623401 + 2*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.0025028021473598684 + 2*p3 + -2*p5 + 2*d + 2*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.767591658728485 + 2*p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.9883173065825588 + p3 + -2*p6 + d + -1*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.2881432129958266 + p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.352255656631394 + p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.0170127969116898 + p3 + -3*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 6.036532933826795 + p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.4715675520349363 + 3*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.47466900211573 + 3*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.64429827574371 + p6 + 2*d + l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.3098228287977909 + 26*p2 + -29*p3 + -3*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.9878487026750316 + 12*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.129460869959181 + 10*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 6.177049391904858 + 10*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.15086192271421 + 9*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.655940669052064 + 6*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 5.114297815480337 + 6*p2 + -10*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.6119848754114865 + 5*p2 + -6*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.478460057278936 + 5*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.143473245858817 + 4*p2 + -4*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 6.0255794219742045 + 4*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.5079375871543034 + 2*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.385792149710149 + 10*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.385789706249195 + 10*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 2.3275208249771806 + 6*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.2454856547411 + 6*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.8367974202352972 + 4*p3 + -8*p4 + 3*p5 + l + 2*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.8367862501280845 + 4*p3 + -8*p4 + 3*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.478719762271633 + 3*p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.5202685128525685 + 3*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 5.626849180512287 + 2*p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 5.643866664318008 + 2*p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.13982373689794692 + 2*p3 + -3*p5 + d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.6633179927690014 + 2*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.094960955133326 + 2*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.9883169575167083 + p3 + -2*p6 + d + l + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.9883169575167083 + p3 + -2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.39929328467860914 + p3 + -2*p5 + 2*p6 ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 5.397476439418866 + p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.011310431684624053 + p3 + -1*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.647313157493605 + p6 + -2*d + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.752629640684521 + 15*p2 + -16*p3 ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 5.731203638219505 + 8*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.620252325545258 + 4*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.607815815925564 + 3*p2 + -7*p3 + 4*p4 + 2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.607737101576299 + 3*p2 + -7*p3 + 4*p4 + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.332651062777126 + 3*p2 + -8*p3 + 4*p4 ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.3491566160182862 + p2 + -4*d + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.2316628046015965 + 9*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.009413258787706217 + 5*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.221778839012944 + 5*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 5.791332848944588 + 4*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.4573483801138885 + 3*p3 + -7*p4 ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 5.641323719597852 + 2*p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.051882031905584 + 2*p3 + -4*p5 + 4*p6 + -2*p7 + 2*d + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 5.354988144108316 + p3 + p5 + -3*p6 ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.170676296646251 + p3 + -1*p5 + -2*d + -2*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 5.323011966882529 + p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.89632713585727 + p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.004695459286640345 + p5 + -4*d ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.791882270094798 + p5 + -3*p6 ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 2.3847499966171495 + p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.748686941904266 + 20*p2 + -21*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.6034926438666908 + 18*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.748723244752707 + 13*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.9885796465657672 + 12*p2 + -8*p3 + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.145393980700637 + 10*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.1665780890296427 + 7*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.000365646478292812 + 6*p2 + -6*p3 + d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 2.9184994326121223 + 6*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.2389701406155298 + 6*p2 + -9*p3 + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.335699969949118 + 3*p2 + -2*p3 ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.1244690282706016 + p2 + p3 + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 5.816380941704584 + 4*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.3185592489015738 + p3 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.20647733743283475 + p3 + p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.015342665855506553 + p3 + -1*p8 ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 3.0119105013764096 + p3 + -3*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.3444087968540859 + p5 + d + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.036744242209311426 + 22*p2 + -22*p3 ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 6.283081983687868 + 21*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.6016579537569946 + 17*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.1391804340306115 + 16*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.6699406276190603 + 14*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.1481161707349727 + 8*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.947319722481087 + 5*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.387636962729506 + 4*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.8005591489761388 + 3*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.4042229756491837 + 3*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.261204439050411 + 2*p2 + -5*p3 + l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.898141580147643 + p2 + -2*p3 + d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.4192479830825107 + 4*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.495193052416582 + 3*p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.949285137751758 + p3 + -2*p8 ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.996015281276355 + p3 + -2*p6 + 2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.9644740146052138 + p3 + -2*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.667943813418487 + p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 6.018774732286529 + 10*p2 + -12*p3 ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.142071921002391 + 5*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.944062763563941 + 3*p2 + -2*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 6.082174166431072 + 3*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5855810108885404 + 3*p2 + -6*p3 + l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.7460244251337156 + p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.7307175215312416 + 8*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.767294071592703 + 7*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.0021560052249885954 + 2*p3 + -2*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.327059542954195 + 2*p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.1777419130571 + p3 + p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.604257289608622 + p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.675106993734522 + 2*p4 + l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.8622849953992624 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 5.458616719379629 + 3*p1 + -2*p3 + -3*d + l + f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.750157730864922 + 26*p2 + -27*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.42027828493323 + 4*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.283587397045979 + 4*p2 + -5*p3 ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 6.226673814928038 + 3*p2 + -4*p3 + p5 ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.710380280948569 + 3*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.479344241077997 + p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.1358779135216714 + 9*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.767808237092024 + 9*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 5.80781294587362 + 5*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.9711479876302316 + 4*p3 + -4*p5 ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.149348722252731 + 3*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.4574394778025255 + 3*p3 + -5*p5 ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 0.17815553059487238 + 2*p3 + -3*p5 + d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.8861071688926585 + p3 + p6 + -2*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.599471562806388 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 0.007165100178212321 + p3 + -1*p6 + 2*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 2.2597758700610204 + 18*p2 + -17*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 6.280175312351596 + 17*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.8029649108170878 + 9*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.3226077146344997 + 9*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.6273238760755637 + 5*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 6.1186527695282305 + 5*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.47810435917738 + 2*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.7894057969241945 + p2 + -1*d + l + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.143395055108328 + 2*p3 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.330039011516908 + 2*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.1967056135117184 + p3 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 0.20429550133491664 + p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 0.2962527108322931 + p3 + -3*p6 + d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.171535173171157 + p3 + -1*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.54536638998783 + p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.4196501154404868 + p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.994491783372289 + 18*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.3343581438235517 + 5*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 6.11814924203903 + 5*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.489789338519482 + 3*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.477373764352496 + p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.5025883275298659 + 28*p3 + -31*p4 + -2*d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.445546612749878 + 6*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 5.778355802357234 + 3*p3 + -6*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 6.107052438654851 + 2*p3 + -1*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.4780525144002796 + 2*p3 + -1*p5 + -5*p6 ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.281439960930959 + p3 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.2973252156576436 + p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.06907925912930957 + p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.10791824550686457 + p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 2.0375666583494842 + 20*p2 + -19*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.386980361366589 + 20*p2 + -20*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.140746168902576 + 19*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.6048812278195776 + 18*p2 + -16*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.7976481143167373 + 18*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.311217887465543 + 18*p2 + -18*p3 ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.4800138899187209 + 17*p2 + -15*p3 ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.46348335297430693 + 9*p2 + -7*p3 ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.755157401040185 + 8*p2 + -9*p3 + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.2521218946610078 + 6*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.483029154727733 + 3*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.3479855000901981 + 3*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.00010262536001726657 + p2 + -1*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.2023992096009415 + 7*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.779178201500775 + 3*p3 + -6*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.244553465889293 + 2*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.0021612412127445784 + 2*p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 6.130234076312765 + 2*p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.778377968038734 + 2*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 2.318736757384818 + 2*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 2.9081506773453465 + p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.343128980906865 + p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.194055339540882 + p7 + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.191322328465184 + p7 + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.5939386945446405 + 41*p2 + -42*p3 + -2*d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.857819072404209 + 29*p2 + -33*p3 + d + -2*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.38675748282111 + 20*p2 + -20*p3 + d + l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.2670742963974519 + 19*p2 + -21*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.2670742963974519 + 19*p2 + -21*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.751528861525288 + 14*p2 + -15*p3 ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.753972846076857 + 12*p2 + -8*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.141821989853505 + 12*p2 + -12*p3 + l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.524909202793963 + 11*p2 + -14*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.00013997540600994523 + 8*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.1816557969080637 + 6*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.7798928798361993 + 4*p2 + -3*p3 ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.7227679298475245 + 3*p2 + -4*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 2.657879363788545 + 10*p3 + -17*p4 ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.630604396937612 + 9*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.9761483389405622 + 2*p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 6.282463439000962 + 2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.139657781581032 + 21*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.752439225263129 + 5*p2 + -6*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 2.203261410749743 + 2*p2 + -2*d + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.944449703059108 + 2*p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.944420905126449 + 2*p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 6.283177278665027 + 2*p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.409803316866585 + p2 + -2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.1595889010433984 + 7*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.6501210176992631 + 6*p3 + -9*p4 + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.014734942209962125 + 2*p3 + -2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.156650481711374 + p3 + -1*p5 + d + -2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.034749373365865 + p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.620032448052774 + p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 6.262342410719345 + 2*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 2.841559908663531 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.002140995393421444 + 4*d + -2*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.8083124251122733 + 18*p2 + -15*p3 + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.138310736464343 + 15*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.820348424160218 + 8*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.7527460541456295 + 5*p2 + -6*p3 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.7527460541456295 + 5*p2 + -6*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.486669737014468 + 2*p2 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 0.00018133970928221082 + p2 + -1*p3 + 2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.3730578529267974 + p2 + -2*p3 + d + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.336500220407791 + 29*p3 + -33*p4 + -2*d + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.1634462702198642 + 7*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 2.2963916560373856 + 6*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.7379351816148887 + 6*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.1240981712995026 + 5*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.1171529656104084 + 4*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.6221421680593178 + 2*p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 6.130215924888543 + 2*p3 + -4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.450697977532089 + 2*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.345454283069298 + p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.959606814920177 + p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.4627716501969275 + p3 + -4*p5 + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.6924838578298615 + 2*p6 + -1*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.3861248009672615 + 20*p2 + -20*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.1416418718746995 + 9*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.153169605549514 + 8*p2 + -13*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.1285672698804765 + 8*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.1228251281430985 + 3*p2 + -5*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.1412242145846974 + p2 + -1*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 2.5229250955036626 + p2 + -8*p3 + 12*p4 ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 6.2338047066529105 + 2*p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 5.072526326893581 + p3 + -3*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 1.5049804843009658 + 3*p5 + -5*p6 ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 5.6971328913583985 + 2*p6 + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 2.385631736955257 + p1 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.1481233265849053 + 8*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.604620833193496 + 5*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.14274491996196 + 5*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.907013263268454 + 3*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.2721931980555756 + 2*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.2721931980555756 + 2*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 0.26359027014462083 + 9*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 0.017899922275528644 + 5*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.2997104081083695 + 2*p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 5.755085676506245 + 2*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 5.414346268369869 + 3*p5 ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 5.2897655390271385 + 5*p1 + -13*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.7556923189609712 + 20*p2 + -15*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 5.401447761598854 + 18*p2 + -17*p3 + -3*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.9679210568745362 + 12*p2 + -8*p3 ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.09173293468849517 + 5*p2 + -6*p3 + -4*p4 + l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.09182456447422488 + 5*p2 + -6*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.1432320413561916 + 4*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.74683916182518 + 2*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 2.746635639437764 + 2*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.107067082423934 + 2*p2 + -7*p3 + 7*p4 ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.3650780500503874 + 9*p3 + -9*p4 + 4*d + -4*f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.3329655711083355 + 4*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.3134702178686086 + 3*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 2.6753731479471345 + 3*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.656352383724292 + 3*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.4344089941561515 + 2*p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.492674891371805 + 2*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.303990138465501 + p3 + p4 ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.013180202912285579 + p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.03814417080233608 + p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.649057081983881 + p1 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 2.9090179314506632 + 21*p2 + -23*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.6048581894734513 + 18*p2 + -16*p3 + l + 2*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.6538678905374447 + 13*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.17753873123721758 + 5*p2 + -6*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.17775497753153968 + 5*p2 + -6*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.1394024399114655 + 3*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.510762611074847 + 2*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.004055621582859223 + 2*p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.850145872887475 + p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.4378177712232714 + 6*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.246901814896169 + 6*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 2.897899835049609 + 4*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 2.510543031658314 + 3*p3 + -7*p4 + d + l + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 5.585852792646343 + p3 + -2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 5.550148766671219 + p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 6.272564804148275 + 2*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 6.111006831141094 + 24*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.2513101420259052 + 23*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.133618767836207 + 18*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.151384133724723 + 8*p2 + -13*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.151919077140459 + 8*p2 + -13*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.145102161649703 + 7*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.215446967517951 + 4*p2 + -7*p3 ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.8015946528213473 + 2*p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 2.5729025986345198 + 7*p3 + -8*p4 ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.2331465174970337 + 7*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 2.0444278967049243 + 7*p3 + -13*p4 + -1*p5 ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 5.7767064662141 + 3*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 0.016505578736110374 + 2*p3 + -2*d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 0.6931625738843787 + 2*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 0.019422896580818895 + p3 + -1*p5 + 3*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.896298686990462 + p3 + -2*p5 + d + -2*l + f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.010067782752154 + p3 + -3*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.8813223402499994 + p3 + -4*p5 + 5*p6 ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.1316400880632203 + 24*p2 + -24*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.6048391653846044 + 18*p2 + -16*p3 + -3*l + -2*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.1366428998311373 + 17*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.141765964784516 + 4*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.742952139048064 + 3*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.8056813412648918 + 2*p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.476441933064856 + 2*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 6.154836411981801 + 2*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.1975936200385002 + 7*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 5.785612357788251 + 4*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 2.3149357793398253 + 2*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.6048585385393013 + 18*p2 + -16*p3 + d ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 6.013562481008373 + 9*p2 + -11*p3 ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 0.010028661881959416 + 4*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 4.682284668781666 + 2*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.3406966560680194 + p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.181507984517053 + 2*p3 + -4*p5 + 2*p6 ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 5.756296062342502 + 2*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.1979479388732885 + p3 + p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 5.832681967852361 + p3 + p6 + d + f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 2.427408985128544 + p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 0.0020029398495886924 + 4*d + -1*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 0.4789932213721545 + 2*p1 + -24*p2 + 21*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 2.6723338315877117 + 7*p2 + -11*p3 ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.709162564729453 + 2*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 2.237649109403012 + 9*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 3.3279515807348896 + 2*p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 0.008450360639380945 + p3 + -1*p6 + -2*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.552296909416258 + p6 + 2*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.553209367549201 + p6 + -2*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.7544116218508075 + 22*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 3.604838816318754 + 18*p2 + -16*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 0.00009896016858807848 + 7*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.744053267273147 + 7*p2 + -8*p3 + l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.94470993165058 + 4*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 2.6424928901688136 + 8*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 2.0394308445235394 + 7*p3 + -9*p4 ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 6.166267794983589 + p3 + -3*p5 + 2*p6 ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 5.472785302247319 + p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 5.839516502670246 + 2*p5 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 2.276458774249133 + 18*p2 + -17*p3 + -1*d + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.397445721624031 + 15*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 1.8038901098535698 + 8*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.1240501917417065 + 6*p2 + -10*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 4.441893140521628 + 4*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 3.124184739630402 + 3*p2 + -5*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 1.7656042183159721 + 2*p2 + -4*p3 + l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 4.5318639907973095 + 3*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 3.154602337834159 + p3 + -1*p5 + 3*d ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.337727012339018 + p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.840680986347176 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.361499443948731 + 38*p2 + -37*p3 + -2*d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.748639294415687 + 13*p2 + -14*p3 ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.765171925755203 + 12*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 3.1412029215678223 + 11*p2 + -11*p3 + l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 6.156385042627095 + 9*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 0.4541643419662085 + 8*p2 + -6*p3 ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.124130651420224 + 6*p2 + -10*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 2.2438307165477256 + 9*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.274748900675904 + 4*p3 + -6*p4 + d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.786752406855654 + 3*p3 + -4*p4 + d + -2*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 0.20282959929616662 + p3 + p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 0.012989438425042597 + p3 + -1*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.372979687671258 + 21*p2 + -22*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + d + -1*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.712978203540162 + 3*p2 + -4*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.805093190801919 + p2 + 2*d ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 3.1419027985978727 + p2 + -1*p3 + 3*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 0.01830379146444013 + 3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 0.029487163179518994 + 2*p3 + -2*d ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 3.5136109799157857 + 2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.003706772756969 + p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.1102388777718994 + p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.603287742212507 + 20*p2 + -18*p3 + d + -2*f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 2.259896297779408 + 18*p2 + -17*p3 + l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.6316791706909906 + 12*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.3260837123727716 + 8*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.635040874858207 + 6*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.9677331019107305 + 4*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 0.0025078636021906523 + 3*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.2409394126071884 + 7*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.128826442776081 + 6*p3 + -6*p4 ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.222858857252395 + 3*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.749513363803401 + 3*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.58032096308383 + 2*p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.1377303974914217 + p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.107250874092485 + p5 + -2*p6 + l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 1.804158890558377 + 21*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.4635892944599031 + 16*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 6.280746907681626 + 16*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 1.0144337068793845 + 8*p2 + -13*p3 + d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.429179289585476 + 7*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.00512812640820974 + 5*p2 + -5*p3 + d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 3.747583536252839 + 6*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.870229402085124 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.870280714765133 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 2.274792508412254 + 3*p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.624205172730124 + 2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.17721898691825222 + 2*p3 + -3*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 6.261667142831748 + 2*p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 1.0307788898572368 + p3 + 2*p5 + -5*p6 + d + f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 5.54056516374852 + p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 6.28052821792635 + 2*p5 + -6*p6 + 3*p7 + l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 6.28052821792635 + 2*p5 + -6*p6 + 3*p7 + -1*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.157200958557454 + 17*p2 + -17*p3 ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 0.4664008453519407 + 14*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 0.9718242857187462 + 8*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 1.6313320247027687 + 8*p3 + -11*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 1.0860337450473494 + p3 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 0.31475634249608664 + 2*p5 + -2*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 4.531822102895263 + 47*p2 + -52*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.797207593213534 + 19*p2 + -18*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.8684903475201198 + 18*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 0.3788528611438775 + p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.727693764097111 + 7*p3 + -12*p4 ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.277094448657659 + 6*p3 + -8*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.01566664145626 + 5*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.753696045355807 + 3*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 0.17731079123690713 + 2*p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 2.9161205488416537 + p3 + p6 ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 2.969264428301479 + p3 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.8548121851756068 + p3 + -2*p6 + d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.153653925918625 + p3 + -1*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.5551028837530065 + p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 4.949863888931719 + 18*p2 + -15*p3 + -3*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 0.4661053611095781 + 17*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 3.1422106746779246 + 6*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 2.2086146846314603 + 2*p2 + -2*d ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 4.483216603089398 + 2*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 6.235461896777679 + p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 1.8424983637040115 + p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 0.40974623610172833 + 9*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 5.262021610704512 + 6*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 3.265955740374799 + 3*p3 + -4*p5 + l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 0.015581077831328977 + p3 + -1*p5 + -3*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 2.4724985191562663 + p3 + -2*p4 + d ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 2.8574465936468836 + 2*p4 + 3*d + -1*f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.6997681469993515 + p1 + -4*p3 + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 5.070880132343101 + 6*p2 + -10*p3 + 3*p5 + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 5.071002828989515 + 6*p2 + -10*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 1.115251778456211 + 9*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.243539787158051 + 5*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.313769384299034 + 4*p3 + -4*p4 + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.1426450871287464 + 2*p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 5.771474841781247 + 2*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.834560806293816 + p3 + -2*p7 ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.5013046633599743 + p3 + -2*p5 + 5*p6 ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 0.3415059567438525 + 4*p1 + -15*p2 + 6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 3.6960485012975015 + p1 + -4*p3 + -1*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 1.116495325548257 + 4*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 4.189203847819114 + 4*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 2.643066579893944 + 3*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 0.0229615516392374 + p3 + -1*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 5.052396222899855 + p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 4.895973881216666 + p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 6.0274823544576535 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.3331145967315055 + p1 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 0.12576912403041218 + 8*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 0.0005283111645786835 + 6*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 2.1304127640349013 + 3*p2 + -3*p3 + -3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.717581334909373 + 3*p2 + -4*p3 + 3*d ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 5.622797049587932 + 3*p3 + -7*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 0.17587700325639377 + 2*p3 + -3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.172317438240218 + p3 + 2*p5 + -5*p6 + d + -1*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.9534609870251298 + p3 + d + l + f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 5.606612785967115 + p3 + -2*p4 + 4*d + -1*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 6.205538575818087 + p5 + 4*d + -2*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 1.8378123291953317 + 2*p1 + -2*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.142020965886549 + 8*p2 + -13*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 3.14131828783138 + 3*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 3.2203007196694298 + 3*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.760142584982656 + 2*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.767903366034575 + 2*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 5.234111876102945 + 2*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 3.141908558184404 + d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 6.278071841537093 + 19*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 4.145427674053517 + 8*p2 + -13*p3 + -4*d + l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 4.752470292123815 + 5*p2 + -6*p3 + -2*f ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.1418549765763677 + 3*p2 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.1417743423649256 + p2 + -1*p3 + -3*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 5.784962746240659 + 5*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 0.01937821615196784 + 3*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 5.783377638213998 + 3*p3 + -6*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 5.2289505884389476 + 2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.1837606809826027 + 2*p3 + -4*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 6.195912735927487 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 1.7342385572625314 + 4*p1 + -3*p3 + -1*l ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 4.946058722096521 + 15*p2 + -14*p3 + -3*d + l + f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 1.8027963120113453 + 2*p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 2.954106592813759 + 5*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 5.784726079594089 + 3*p3 + -6*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 5.129910483771127 + p3 + -2*p6 + d + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.940127744232394 + 17*p2 + -16*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.202215626458582 + 4*p3 + -8*p4 + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.468457575335758 + 3*p3 + -2*p4 + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 0.009047437776488206 + p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 2.857947852208057 + 2*p4 + d + 2*l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 2.857947852208057 + 2*p4 + d + -2*l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.1058708252563 + p5 + d ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.540241396673958 + p8 ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.1401742245066973 + 14*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 5.9918559956342445 + 8*p2 + -10*p3 ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.1419694701752987 + p2 + -1*p3 + d + l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.3232025398402127 + 2*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.22343358567676 + 4*p5 + -10*p6 ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 0.45739250295069717 + 7*p2 + -5*p3 ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.47186044377837 + 6*p2 + -7*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.757886048792752 + 6*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 2.879094086892295 + 4*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.995168971122062 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.99514436197961 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.483540361665642 + 3*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 5.78117398550043 + 3*p3 + -4*p4 + d + l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 6.000403396580036 + 2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 4.746830609711845 + 12*p2 + -13*p3 ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 4.739403361079983 + 6*p2 + -7*p3 + l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 1.803057064201593 + p2 + -1*d + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 0.000028972465583105872 + p2 + -1*p3 + -1*d + l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 2.183172147460513 + 9*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 4.583991739566624 + 2*p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 6.256156789317351 + 2*p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 2.698504520122591 + 2*p3 + -4*p4 + p5 ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 2.66649064378496 + 2*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 2.184699310556008 + 9*p3 + -17*p4 + l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 2.1139869468456074 + 8*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 1.7120292425309038 + 6*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 2.8885214828469423 + 3*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 6.282943928144036 + 2*p3 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 3.472958596445409 + 2*p3 + -1*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 0.5150122792772623 + 2*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 4.265102108335965 + p3 + -2*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 0.696115496445828 + p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 0.025765597615491485 + p5 + -4*d + 2*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 4.47581972318652 + 4*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 6.098501372517628 + 4*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 6.0584003385579575 + 3*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 3.157312659629581 + 2*p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 3.142173848230707 + 6*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 2.919358832735804 + 6*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.0002907718533822553 + 5*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.0014302973220093529 + 4*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 1.659937273011255 + 7*p3 + -10*p4 ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 4.745303621149275 + 5*p3 + -8*p4 + l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 4.973106787646379 + 4*p3 + -8*p4 + 3*p5 + 3*l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 4.973098933664745 + 4*p3 + -8*p4 + 3*p5 + -3*l ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.00977890526599903 + p3 + -1*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.26941635372070305 + 21*p2 + -23*p3 + p7 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.4639675073088102 + 18*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.8339474636013989 + 17*p2 + -22*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 1.803238054845025 + 7*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 4.5272825015108245 + 4*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.3774833012798376 + 9*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 2.857310807031079 + 2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.044276768188335 + 15*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 1.7409519662303277 + 15*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 1.7409519662303277 + 15*p2 + -12*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 2.6045192380343973 + 12*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 2.951173217939932 + 6*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 0.02869548183081437 + 3*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.740040755322812 + 2*p2 + -3*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.740369051755112 + 2*p2 + -3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 2.8588988821174683 + p2 + -3*p3 + l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 3.7469208347358562 + 6*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 1.64596992660632 + 11*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 5.983701468303076 + 8*p2 + -12*p3 + l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 4.480461600865125 + 4*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.1173430489625837 + 3*p2 + -5*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 1.3461558714353326 + 2*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.1504674783032587 + 3*p3 + -3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.1456224442997223 + 2*p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.1362074401827646 + p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 5.535809839668535 + p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 0.26375660002233586 + p3 + -4*p4 ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 6.000321191572266 + 2*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 3.153471713544717 + 19*p2 + -19*p3 ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 4.752916223747699 + 5*p2 + -6*p3 + l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 0.004967032518250663 + 2*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 3.1418172774645243 + p2 + -1*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 3.667874698380108 + 2*p3 + -5*p5 ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 2.910659413612163 + 5*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 0.10794233105054209 + 2*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 4.13973336283596 + 2*p3 + -4*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 5.030061942593784 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 0.011238873185292283 + p3 + -1*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 0.7292889695384841 + p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 3.1562055972850405 + 16*p2 + -16*p3 ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 2.149274188195354 + 5*p3 + -7*p4 + l ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 2.521609466313509 + 3*p3 + -7*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 5.264511148349556 + 2*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.759502398213026 + 11*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.942014270620875 + 3*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 6.208409816970543 + p2 + p3 + -2*d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 1.343585874111771 + p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 3.2428582275868303 + 7*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 1.6628774546691647 + 6*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 0.9510820947563446 + 2*p3 + -5*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.780652821687467 + p3 + p5 + -1*p6 + d + l + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.780652821687467 + p3 + p5 + -1*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 0.5294210194500267 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 6.282932758036822 + 15*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 3.1405140401120604 + 10*p2 + -10*p3 + l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 4.945169302309705 + p2 + d + -1*l + f ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 3.220056373574151 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 0.21866148094100718 + 3*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 3.1427246741426367 + 2*p3 + -2*p6 + 2*d ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 5.719040438662357 + p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 0.7138752687824215 + p4 + -2*d ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 3.1178909078147847 + 3*p2 + -5*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 4.491141445091002 + 2*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 3.1419534131461804 + p2 + -1*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 0.5142600423696527 + 3*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 6.070922028743466 + p5 + 4*d + -1*l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 3.142462176623137 + 17*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 5.351289267824565 + p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 1.6967734940721464 + 6*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 2.8908951306296546 + 2*p3 + -2*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 4.7896599423582344 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 5.91911974812323 + 8*p2 + -14*p3 + l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 3.693745015750719 + 6*p3 + -11*p4 + l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 4.773907298661435 + 5*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 5.759031342346227 + 3*p3 + -6*p4 + 2*p5 + l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 5.758879673234229 + 3*p3 + -6*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 3.3175663480867477 + 2*p3 + -3*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 2.903976896972127 + 6*p2 + -8*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 2.9116622798003595 + 5*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 1.3464325061217737 + p2 + -2*d + -1*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 3.740957742813493 + 5*p3 + -10*p4 ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 3.1747121960085622 + 2*p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 0.7929873785838951 + p3 + 2*d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 5.369952597114915 + p3 + -5*p6 ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 6.279190073988846 + p3 + -1*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + d + l + -3*f ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 3.1501285353625215 + 20*p2 + -20*p3 ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 4.747878330861817 + 11*p2 + -12*p3 ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 6.053765791262212 + 3*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 1.1304935642809522 + 9*p3 + -13*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 4.254229579760667 + 5*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 1.27549447133909 + 3*p3 + -2*p5 + l ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 0.9572916271690902 + 3*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 4.124054546566519 + p3 + 2*p6 + d + -1*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 3.6048550478807977 + 18*p2 + -16*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 3.697687539998049 + 6*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.820580868023317 + 18*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.3277384590365873 + 8*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.3289802607993815 + 7*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 0.45635123951895734 + 6*p2 + -4*p3 ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 3.3477055662748114 + 5*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 5.716905726454243 + 3*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 3.6048421324443325 + 18*p2 + -16*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 1.401047523608105 + 3*p2 + -5*p3 + p5 ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 5.90719478600898 + 3*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 5.9864308141873455 + 3*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 3.2521735734035007 + 7*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 4.510958262483997 + 2*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 5.048012653950546 + p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 1.6296256162930938 + 10*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 3.7569957478429936 + 6*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 5.25451180799903 + 4*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 4.88004042140936 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 4.880100635268553 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 5.832571663043634 + p3 + p6 + d + l + -1*f ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 5.832571663043634 + p3 + p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 5.292584594834959 + p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 0.60707560479316 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.001 * sin ( fmod ( ( 4.713058837751605 + 3*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.001 * sin ( fmod ( ( 5.900224813641139 + 3*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.001 * sin ( fmod ( ( 2.884512287022186 + p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.001 * sin ( fmod ( ( 4.784786459487891 + p3 + d + l + -1*f ), twopi ) );
        a += 0.001 * sin ( fmod ( ( 3.2869450699592826 + p5 + -1*d ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 5.426446985139795 + 18*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 5.969091491667557 + 7*p2 + -9*p3 ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 0.5464667775896294 + 3*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 4.510333260078857 + 2*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 0.018172193638839762 + 2*p3 + -2*p4 + 2*d + l ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 1.6029585561189472 + 8*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 1.3369166219740503 + 3*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 0.00343812409350363 + p5 + -4*d + l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 2.5267243282194034 + 7*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 2.5505932765367527 + 6*p3 + -7*p4 ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 3.3210262887959012 + 4*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 3.4823713316343397 + 3*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 2.9879654567036735 + 2*p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 2.7544917154668407 + 2*p4 + -1*l ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 6.134320415690458 + 8*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 6.2535759709524275 + 5*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 3.1841261529279694 + 4*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 6.214614462461383 + p3 + -1*p7 ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 1.7541028476111797 + p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 3.1471272671807924 + 3*p2 + -5*p3 + 2*p5 + l ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 3.188057507068087 + 7*p3 + -13*p4 + l ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 2.880835052821159 + 3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 6.134258631034937 + 2*p3 + -4*p5 + 5*p6 ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 0.37663000980853756 + 2*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 3.13263300587468 + 24*p2 + -24*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 1.8033434727318454 + 6*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 3.1468323065372052 + 3*p2 + -5*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 4.749695218613144 + 2*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 5.00365511101111 + 4*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 3.341704426174754 + 2*p3 + -3*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 3.1905578657544944 + 7*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 5.003736966953029 + 4*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 4.521822064413035 + 2*p3 + -1*p6 ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 0.0002488839513343914 + 2*p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 1.74457701508672 + 8*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 3.276415847647851 + 2*p3 + -5*p6 ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 5.901356136062283 + p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 4.750595633974247 + 4*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 4.87231315067908 + 2*p3 + -5*p4 ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 4.209016825487753 + p3 + p5 + l ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 4.747012822085752 + 5*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 4.2294342106763585 + p7 ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 3.142843705597622 + 13*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 2.6740233103036424 + 10*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 2.6740233103036424 + 10*p2 + -3*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 3.1423681033764543 + 4*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 0.0017851227589398002 + 4*p2 + -4*p3 + d ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 4.770499717829841 + 7*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 0.12869604118600667 + 2*p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 5.675861167500942 + p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 5.704318935487634 + 2*p6 ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 3.50834636876007 + 2*p3 + -4*p5 + l ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 4.880514627367125 + p3 + -1*d + f ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 3.1528674805576764 + 15*p2 + -15*p3 ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 1.4909579854916681 + 5*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 3.141468909745827 + p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 4.736026672576149 + 3*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 1.737060405597156 + 2*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 0.43214212653039447 + 4*p1 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 4.73862686409577 + 20*p2 + -21*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 4.945087969966562 + p2 + d + f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 4.250327372619058 + 5*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 1.3081885024862234 + 26*p2 + -29*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 1.4893432068677226 + 5*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 1.6213799827749718 + 8*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 5.200009364249452 + 2*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 4.62504153450768 + p3 + d ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 3.1422619873579327 + 20*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 1.642054629495321 + 9*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 4.465371309619456 + 4*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 1.3378512457884928 + 2*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 2.205053340292766 + 11*p3 + -21*p4 + 2*p5 ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 1.6366711614175447 + 7*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 5.198963213895807 + 2*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 1.3220685824285585 + p1 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 4.743865818911482 + 20*p2 + -21*p3 + -4*d + l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 3.9820498462352805 + 12*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 0.4606133335523275 + 5*p2 + -3*p3 ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 3.2756812385656864 + 6*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 0.008202523885597751 + 2*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 6.241628668623751 + 2*p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 0.027917239517350097 + p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 1.9362110253630436 + p3 + -3*p5 + d + -1*f ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 1.3092334311093923 + 26*p2 + -29*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 0.0003438298626428829 + 14*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 6.252639776341658 + 5*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 4.4864520944567445 + 2*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 1.3087899429464607 + 26*p2 + -29*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 4.740618459305222 + 2*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 3.1639445617213084 + 2*p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 3.165987295077843 + 2*p3 + -3*p5 + p6 + -1*l ), twopi ) );
        a += 0.00122 * sin ( fmod ( ( 4.747432573770858 + 10*p2 + -11*p3 ), twopi ) );
        a += 0.00122 * sin ( fmod ( ( 0.05479618266268878 + 3*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 4.756164979617361 + 10*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 3.6665449320230135 + p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 4.743061745725089 + 20*p2 + -21*p3 + l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 3.1421176486287927 + 5*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 6.170878431268582 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 1.5766489393756091 + 3*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 4.205460542603889 + 5*p3 + -9*p4 + l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 0.011555824977454455 + 4*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 4.831655705753872 + 4*p3 + -8*p4 + p5 + 5*p6 + l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 4.831673333579317 + 4*p3 + -8*p4 + p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 1.7653497493110315 + p7 + -2*p8 + l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 1.7653497493110315 + p7 + -2*p8 + -1*l ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 3.1398077053637787 + 5*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 1.3354006289857678 + 4*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 1.8043852597623609 + p2 + d + l + -1*f ), twopi ) );
        a += 0.00127 * sin ( fmod ( ( 5.827537435349184 + 2*p5 + 2*d ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 3.138100598822403 + 22*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 1.6925780716162027 + 17*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 3.145071792920719 + 9*p2 + -9*p3 + l ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 6.28282192962932 + 3*p2 + -3*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 3.0323949072082916 + 5*p3 + -5*p4 ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 0.010499202648297089 + 2*p3 + -2*p5 + d ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 2.9514816176187595 + 5*p2 + -7*p3 + l ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 1.6978819526800881 + 3*p2 + -6*p3 ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 0.023346222206376947 + 2*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 0.03975633143240324 + 2*p3 + -4*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 4.7800431781797466 + p5 + -2*p6 ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 2.400799869885564 + p1 + -3*p3 ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 6.0414873999744305 + 3*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 4.209430643053401 + 5*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 0.6842662816211132 + p4 + -2*d + l ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 1.3051266713794496 + 26*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 0.6571028498076995 + 8*p3 + -13*p4 ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 3.1432678206058573 + 2*p3 + -2*p6 + l ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 3.0224662526924715 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00132 * sin ( fmod ( ( 3.6048437032406593 + 18*p2 + -16*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00132 * sin ( fmod ( ( 4.943122031097116 + 2*p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00132 * sin ( fmod ( ( 3.0217820836256895 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 6.275094484366116 + 3*p2 + -3*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 1.2058300033115867 + 2*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 2.9821261086252755 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00134 * sin ( fmod ( ( 0.45807422855652613 + 15*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00134 * sin ( fmod ( ( 1.6593742297945617 + 8*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 1.3354117990929806 + 4*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 4.488393598716663 + 3*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 1.5768232977678833 + 3*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 0.0020399408297309724 + 2*d + l ), twopi ) );
        a += 0.00136 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00137 * sin ( fmod ( ( 4.1337498505613475 + p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00138 * sin ( fmod ( ( 4.464927646923599 + 3*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 0.004808033023393979 + 2*p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 1.6462339949221467 + 6*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 3.992434031685871 + 2*p3 + -1*p4 ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 3.604807051326368 + 18*p2 + -16*p3 + -2*f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 1.8035111988729622 + p2 + d + -1*l + -1*f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 2.222995674069118 + 5*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 3.1435996076966615 + 2*p3 + -2*p5 + 4*d ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 2.8860260110824405 + 2*p3 + -2*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 2.9726768960549785 + 5*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 4.262450778669261 + 8*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00145 * sin ( fmod ( ( 1.80340002139961 + 5*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00145 * sin ( fmod ( ( 3.183533090048142 + 3*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 4.259402037531877 + 5*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 6.25649346333006 + 2*p5 + -6*p6 + 3*p7 ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 1.6320662847190828 + 7*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 0.45242739029462375 + 4*p2 + -2*p3 ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 4.430442558898069 + 2*p2 + -1*p3 + l ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 1.5403998470750884 + p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 3.1464314044080224 + 14*p2 + -14*p3 ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 0.012346284595682686 + 2*p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 1.581766593808307 + 2*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 4.173895739482797 + 8*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 4.722306813859148 + 3*p2 + -4*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 0.13883640414009374 + 2*p3 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 4.7650633662757285 + 2*p3 + -3*p6 ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.94985551135131 + 18*p2 + -15*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.74732017456703 + 5*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -2*d + l ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 2.2383500336306126 + 18*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 1.7968131488025834 + 18*p2 + -17*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 4.215603174486004 + 8*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 2.6630584538109128 + 4*p3 + -5*p4 + l ), twopi ) );
        a += 0.00153 * sin ( fmod ( ( 1.5805005319689103 + 3*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00153 * sin ( fmod ( ( 4.4595836232869175 + p3 + p5 + d + f ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 0.006110397711232148 + 2*p2 + -2*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 4.59521961717763 + 2*p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 3.1470490764303034 + p3 + -1*p6 + d ), twopi ) );
        a += 0.00155 * sin ( fmod ( ( 1.7544625599700159 + p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00155 * sin ( fmod ( ( 4.4599026694741815 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00155 * sin ( fmod ( ( 4.530855539555508 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00157 * sin ( fmod ( ( 6.281699682920289 + 13*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -3*d + 2*f ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 2.2028486403816467 + 5*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 0.0017952456686013672 + 2*p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 5.072710284596742 + p3 + -3*p5 + d + -2*l + f ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 2.1664030240073515 + 5*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 5.27052223682635 + p3 + -3*p4 ), twopi ) );
        a += 0.0016 * sin ( fmod ( ( 1.3310275320119707 + 6*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.0016 * sin ( fmod ( ( 1.689315702178375 + p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 4.478734248504425 + 3*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 1.3264072964160913 + 3*p3 + -2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00162 * sin ( fmod ( ( 3.1407812500205408 + 12*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00162 * sin ( fmod ( ( 1.7220847824833438 + 14*p3 + -23*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00162 * sin ( fmod ( ( 4.799038469093826 + 3*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00162 * sin ( fmod ( ( 0.005431115566355955 + p3 + -1*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 6.096560915455262 + 5*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 1.683901341772838 + 3*p1 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 3.141316717035053 + p2 + -1*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 0.0025197318411042135 + p3 + -1*p6 + 2*d ), twopi ) );
        a += 0.00165 * sin ( fmod ( ( 4.480435420926344 + p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00165 * sin ( fmod ( ( 4.776007976949135 + 3*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00165 * sin ( fmod ( ( 1.754477744334508 + p3 + -2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00165 * sin ( fmod ( ( 3.6098545435231353 + p4 ), twopi ) );
        a += 0.00166 * sin ( fmod ( ( 2.9175824366231238 + 6*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00166 * sin ( fmod ( ( 1.2465378882521774 + 5*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00167 * sin ( fmod ( ( 3.170424794701039 + 3*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 1.808263032294442 + 18*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 4.742951964515138 + 9*p2 + -10*p3 ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 6.281146413547406 + 2*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00169 * sin ( fmod ( ( 5.401434148030688 + 18*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0017 * sin ( fmod ( ( 4.765113457225262 + 4*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 3.143841684863913 + 21*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 3.00766219544413 + p3 + -3*p5 + 5*p6 ), twopi ) );
        a += 0.00172 * sin ( fmod ( ( 0.00028064894372068817 + 2*p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00172 * sin ( fmod ( ( 0.2888073107762105 + p3 + -3*p6 ), twopi ) );
        a += 0.00172 * sin ( fmod ( ( 5.999682750131887 + 2*p4 + d + f ), twopi ) );
        a += 0.00173 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00173 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00173 * sin ( fmod ( ( 3.589645027048443 + 4*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00175 * sin ( fmod ( ( 3.141022105457316 + p2 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00175 * sin ( fmod ( ( 4.240674829190903 + 6*p3 + -10*p4 ), twopi ) );
        a += 0.00175 * sin ( fmod ( ( 3.6080418445620137 + 4*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 6.283107640027873 + p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 2.1264782683021304 + p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 0.0006136577650012062 + 2*p3 + -4*p4 + 2*p5 ), twopi ) );
        a += 0.00178 * sin ( fmod ( ( 5.2676939307734925 + 5*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00179 * sin ( fmod ( ( 4.757910832468131 + 9*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00179 * sin ( fmod ( ( 1.1529423381859536 + 7*p3 + -11*p4 ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 3.1423736884300606 + 8*p2 + -8*p3 + l ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 0.4572012148646785 + 3*p2 + -1*p3 ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 0.0010286970611254579 + 2*p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00182 * sin ( fmod ( ( 0.1951045974939145 + p3 + p5 + -5*p6 ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 3.986915300591065 + p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 2.1251774744106195 + 7*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 3.160004830000782 + p3 + p5 + -2*p6 ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 4.9862784384453285 + p3 + -2*p6 + l ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 3.141487759301748 + 3*p2 + -3*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 3.9693468163404897 + p3 + p5 + -1*l ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 0.049680273559242996 + p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 4.736554983740729 + 20*p2 + -21*p3 ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 3.143731729121037 + 19*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 4.760770554447524 + 4*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 5.011047278525006 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 5.011016735263097 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.0019 * sin ( fmod ( ( 3.139556028885641 + 4*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00191 * sin ( fmod ( ( 0.46325995083005167 + 18*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00191 * sin ( fmod ( ( 1.4177147198329503 + p2 + l ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 2.9477708730960948 + 6*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00193 * sin ( fmod ( ( 0.4632822910444772 + 18*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00193 * sin ( fmod ( ( 0.46325192231549256 + 18*p2 + -16*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00195 * sin ( fmod ( ( 4.639134021019983 + p2 + 2*d + -2*l ), twopi ) );
        a += 0.00195 * sin ( fmod ( ( 2.749608633285611 + 5*p3 + -6*p4 ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 1.8036644387812872 + 4*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 4.520844680031918 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 5.255826739057483 + 3*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 5.340198747625691 + p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00197 * sin ( fmod ( ( 6.260129856826591 + 5*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00197 * sin ( fmod ( ( 0.5556077650140245 + p3 + -2*p4 + 2*p6 ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 3.1418525331154155 + 13*p2 + -13*p3 ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 4.72624235678947 + 3*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 4.945202987164269 + p2 + -1*d + f ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 3.9901572496766446 + 12*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 4.718184520698863 + 3*p2 + -4*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 4.168096533977194 + 3*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 4.939095905578616 + 20*p2 + -19*p3 + -1*f ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 0.46326047442882734 + 18*p2 + -16*p3 + -2*d + -3*l ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 4.25137579190073 + 2*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 1.180024088590374 + 2*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00201 * sin ( fmod ( ( 4.7195177777144615 + 4*p3 + -7*p4 + l ), twopi ) );
        a += 0.00202 * sin ( fmod ( ( 4.7319314320192705 + 3*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00202 * sin ( fmod ( ( 0.0010417870305154152 + 2*p2 + -2*p3 + d ), twopi ) );
        a += 0.00202 * sin ( fmod ( ( 5.258096016150925 + p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00203 * sin ( fmod ( ( 0.4040431982379117 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00203 * sin ( fmod ( ( 4.895755016928466 + p3 + -2*p5 + d + f ), twopi ) );
        a += 0.00204 * sin ( fmod ( ( 0.5434852316284474 + 2*p2 ), twopi ) );
        a += 0.00205 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00206 * sin ( fmod ( ( 2.173242096681291 + 6*p3 + -8*p4 ), twopi ) );
        a += 0.00207 * sin ( fmod ( ( 6.2825393608234235 + 12*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00207 * sin ( fmod ( ( 3.138865576633552 + 3*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00209 * sin ( fmod ( ( 0.21552093548496856 + 9*p3 + -15*p4 ), twopi ) );
        a += 0.00209 * sin ( fmod ( ( 5.167843993332747 + 4*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 5.003555452710821 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 5.0035100741502685 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 0.4632445919326341 + 18*p2 + -16*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 5.81316936134799 + 10*p2 + -3*p3 + l ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 5.81316936134799 + 10*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 3.16636044647192 + 2*p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00212 * sin ( fmod ( ( 0.0013692107981895516 + 2*d + -2*l ), twopi ) );
        a += 0.00213 * sin ( fmod ( ( 0.00856886849559136 + 2*p2 + -2*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00213 * sin ( fmod ( ( 4.701631119941247 + 2*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00214 * sin ( fmod ( ( 0.005876174525614508 + 4*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00215 * sin ( fmod ( ( 0.032831214026340136 + 3*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 4.480564400758066 + p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 0.005677206990887155 + p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 2.355808597894729 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00219 * sin ( fmod ( ( 4.722881725314754 + 4*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.0022 * sin ( fmod ( ( 3.3212266525940297 + 2*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 6.283061388802695 + 2*p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 0.17442209679193132 + 2*p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00224 * sin ( fmod ( ( 0.46320898721589343 + 18*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00224 * sin ( fmod ( ( 0.3257129959413314 + 2*p3 + -1*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00224 * sin ( fmod ( ( 2.3201813664066937 + 2*p4 + -2*d ), twopi ) );
        a += 0.00225 * sin ( fmod ( ( 0.0031791172325076715 + p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 4.744945828652616 + 8*p2 + -9*p3 ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 4.124180733871438 + 8*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 6.253210673539986 + 3*p2 + -3*p3 + d ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 0.3317647505896965 + 2*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 4.137412598529583 + 8*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 2.6360091665305796 + 3*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 0.0021366320702914583 + 2*p3 + -2*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 3.183777959742197 + 3*p3 + -3*p4 + l ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 0.031453276581890614 + p3 + -1*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 2.3193664721789373 + 2*p5 + l + -1*f ), twopi ) );
        a += 0.00229 * sin ( fmod ( ( 0.007020761449072391 + 2*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.0023 * sin ( fmod ( ( 3.1474873286054788 + 2*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00231 * sin ( fmod ( ( 1.258448364133637 + 5*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00232 * sin ( fmod ( ( 4.741097203119043 + 2*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00233 * sin ( fmod ( ( 3.112804494775698 + 18*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00233 * sin ( fmod ( ( 2.1966197348142043 + p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00234 * sin ( fmod ( ( 1.6806616616152859 + 3*p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00234 * sin ( fmod ( ( 4.80378977891653 + 3*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 3.3858945920389236 + 20*p2 + -20*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 5.260310315372931 + 4*p3 + -6*p4 + l ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 1.8621080105147936 + 4*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 1.8621050434550654 + 4*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 0.13804664265356628 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00238 * sin ( fmod ( ( 6.088575859594462 + 7*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00239 * sin ( fmod ( ( 1.8027062530219422 + 3*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00241 * sin ( fmod ( ( 3.256963105936823 + 3*p3 + -4*p5 ), twopi ) );
        a += 0.00241 * sin ( fmod ( ( 5.5310395057569846 + p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00242 * sin ( fmod ( ( 3.1411510852890387 + 11*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00242 * sin ( fmod ( ( 5.934604309246924 + 8*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00242 * sin ( fmod ( ( 0.2803269304736953 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00243 * sin ( fmod ( ( 5.2761619192383185 + 6*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00245 * sin ( fmod ( ( 4.985654657770667 + p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00245 * sin ( fmod ( ( 4.986696270268257 + p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00246 * sin ( fmod ( ( 3.055907459292383 + 3*p3 + -3*p5 + l ), twopi ) );
        a += 0.00247 * sin ( fmod ( ( 1.9315304013750452 + p3 + -3*p5 + d + -1*l + f ), twopi ) );
        a += 0.00248 * sin ( fmod ( ( 3.479785800880435 + 2*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00251 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + -1*f ), twopi ) );
        a += 0.00251 * sin ( fmod ( ( 4.747011425822352 + 2*p3 + -1*p5 + l ), twopi ) );
        a += 0.00251 * sin ( fmod ( ( 3.1436793692434777 + 2*p3 + -2*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 1.2618496617799235 + 5*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 2.7313537110402266 + 4*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 0.09067613782641258 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00254 * sin ( fmod ( ( 1.2422522322739051 + 6*p2 + -9*p3 ), twopi ) );
        a += 0.00254 * sin ( fmod ( ( 6.267760261783386 + 2*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00255 * sin ( fmod ( ( 5.568337366405029 + p3 + -2*p4 + 2*d + l ), twopi ) );
        a += 0.00255 * sin ( fmod ( ( 5.898334272995379 + p5 + 2*d + l ), twopi ) );
        a += 0.00257 * sin ( fmod ( ( 2.7321235757732816 + 8*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00258 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d ), twopi ) );
        a += 0.00258 * sin ( fmod ( ( 3.1429505197478447 + 7*p2 + -7*p3 + l ), twopi ) );
        a += 0.00258 * sin ( fmod ( ( 3.487379379390012 + 2*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00259 * sin ( fmod ( ( 0.3353426755562849 + 2*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0026 * sin ( fmod ( ( 5.788500877700302 + 3*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00261 * sin ( fmod ( ( 3.12950415412463 + 5*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00261 * sin ( fmod ( ( 4.761506385260164 + 4*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00261 * sin ( fmod ( ( 5.2379961063532585 + p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00262 * sin ( fmod ( ( 4.0747475989342785 + 8*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00262 * sin ( fmod ( ( 5.984260846328341 + 6*p2 + -8*p3 ), twopi ) );
        a += 0.00262 * sin ( fmod ( ( 4.486457854043276 + 2*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00263 * sin ( fmod ( ( 4.070971579097589 + 8*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00263 * sin ( fmod ( ( 2.649166156563814 + 5*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00264 * sin ( fmod ( ( 2.6312046241656897 + 6*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00264 * sin ( fmod ( ( 5.0069963693311275 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00264 * sin ( fmod ( ( 5.006960939147311 + 4*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 5.949267169358779 + 8*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 4.735906942989463 + 3*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00266 * sin ( fmod ( ( 3.1414619284288188 + p2 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00267 * sin ( fmod ( ( 4.7584681160982925 + 8*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00267 * sin ( fmod ( ( 1.5430323271858717 + p3 + l ), twopi ) );
        a += 0.00267 * sin ( fmod ( ( 5.463911350198479 + p3 + -4*p5 ), twopi ) );
        a += 0.00268 * sin ( fmod ( ( 0.0017844246272390027 + 11*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00268 * sin ( fmod ( ( 2.7350787672627583 + 8*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00269 * sin ( fmod ( ( 1.5857696809806812 + 4*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0027 * sin ( fmod ( ( 3.139554632622239 + 12*p2 + -12*p3 ), twopi ) );
        a += 0.00271 * sin ( fmod ( ( 2.956075498742934 + 5*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00271 * sin ( fmod ( ( 2.956075498742934 + 5*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00271 * sin ( fmod ( ( 4.082901777199596 + 2*p3 + -5*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00273 * sin ( fmod ( ( 0.38891503334747524 + p2 + p3 ), twopi ) );
        a += 0.00273 * sin ( fmod ( ( 0.34618518446844926 + 2*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00273 * sin ( fmod ( ( 5.16427549314412 + p5 + -2*l ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 1.8031013955645938 + 3*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 6.270701665171772 + 2*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00276 * sin ( fmod ( ( 3.142714551232975 + 2*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00279 * sin ( fmod ( ( 5.115375207227593 + p5 + 2*l ), twopi ) );
        a += 0.0028 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00281 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00281 * sin ( fmod ( ( 2.867571248637703 + 5*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00282 * sin ( fmod ( ( 2.7261859656579968 + 4*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00282 * sin ( fmod ( ( 0.03821572930166784 + p3 + -1*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00286 * sin ( fmod ( ( 3.141573454968021 + p2 + -1*p3 + 2*d + l ), twopi ) );
        a += 0.00286 * sin ( fmod ( ( 6.11664878248109 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.0029 * sin ( fmod ( ( 2.9555578340867923 + 5*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00292 * sin ( fmod ( ( 3.141817626530375 + p2 + -1*p3 + d + -1*l ), twopi ) );
        a += 0.00292 * sin ( fmod ( ( 2.673251351175485 + 4*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00296 * sin ( fmod ( ( 5.239443158836086 + 4*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00296 * sin ( fmod ( ( 0.0075551812660330534 + p3 + -1*p4 + l ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 5.9321515980490975 + 8*p2 + -14*p3 ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 4.476376832283757 + 3*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 1.6498297222471052 + 6*p3 + -9*p4 ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 1.6597611692897285 + p7 + -2*p8 ), twopi ) );
        a += 0.00298 * sin ( fmod ( ( 1.7965133012370909 + 21*p2 + -20*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00303 * sin ( fmod ( ( 4.742459781666076 + 7*p2 + -8*p3 ), twopi ) );
        a += 0.00303 * sin ( fmod ( ( 6.224843488141471 + 4*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00304 * sin ( fmod ( ( 0.04158630915311929 + 2*p3 + -4*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00305 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00305 * sin ( fmod ( ( 0.0005923647481268754 + 3*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00307 * sin ( fmod ( ( 1.9883178301813342 + p3 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00308 * sin ( fmod ( ( 3.1393149989159403 + 4*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00309 * sin ( fmod ( ( 1.1280178147369984 + p3 + -2*d ), twopi ) );
        a += 0.0031 * sin ( fmod ( ( 1.3326547024736053 + 5*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.0031 * sin ( fmod ( ( 6.027688477842314 + 4*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.0031 * sin ( fmod ( ( 4.693478861538107 + 3*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00312 * sin ( fmod ( ( 4.991408135649866 + p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00313 * sin ( fmod ( ( 1.1412819679863049 + p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00313 * sin ( fmod ( ( 5.332918455716848 + p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00314 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00316 * sin ( fmod ( ( 0.3654475107580847 + 2*p3 ), twopi ) );
        a += 0.00318 * sin ( fmod ( ( 4.753589048174343 + 20*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.0032 * sin ( fmod ( ( 3.3208151039564093 + 2*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00321 * sin ( fmod ( ( 3.2001112744811357 + 2*p4 ), twopi ) );
        a += 0.00323 * sin ( fmod ( ( 0.15716637554331378 + 5*p2 + -6*p3 + -4*p4 ), twopi ) );
        a += 0.00325 * sin ( fmod ( ( 0.00015044738152191118 + 2*p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00325 * sin ( fmod ( ( 4.697684755969562 + 3*p3 + -6*p4 + l ), twopi ) );
        a += 0.00327 * sin ( fmod ( ( 5.338794630242463 + p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00331 * sin ( fmod ( ( 1.1501252022403095 + p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00332 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00332 * sin ( fmod ( ( 5.242783020892704 + 4*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00334 * sin ( fmod ( ( 4.719423879000703 + 3*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00334 * sin ( fmod ( ( 3.239546290798246 + 2*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00336 * sin ( fmod ( ( 2.578110486589546 + 3*p2 + -7*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00337 * sin ( fmod ( ( 1.263557466453 + 5*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00338 * sin ( fmod ( ( 2.5779535814897914 + 3*p2 + -7*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00339 * sin ( fmod ( ( 1.6409356989118675 + 4*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.0034 * sin ( fmod ( ( 3.382567994484623 + 20*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.0034 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0034 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00341 * sin ( fmod ( ( 5.272143996767302 + 3*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00341 * sin ( fmod ( ( 5.268239520697667 + 3*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00342 * sin ( fmod ( ( 1.6208972247038702 + 5*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00342 * sin ( fmod ( ( 0.009412560656005419 + p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00343 * sin ( fmod ( ( 3.6761423230468053 + p1 + -4*p3 ), twopi ) );
        a += 0.00346 * sin ( fmod ( ( 0.010158863444158195 + 2*p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00346 * sin ( fmod ( ( 0.007456744696220574 + p3 + -1*p5 + 2*d + l ), twopi ) );
        a += 0.00348 * sin ( fmod ( ( 0.0013311626204960752 + 10*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00353 * sin ( fmod ( ( 0.0013456488532876281 + 2*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00353 * sin ( fmod ( ( 3.2399567922383152 + 5*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00354 * sin ( fmod ( ( 0.46330794738448156 + 18*p2 + -16*p3 + 2*l ), twopi ) );
        a += 0.00355 * sin ( fmod ( ( 1.5759940918402608 + p3 + -1*l ), twopi ) );
        a += 0.00357 * sin ( fmod ( ( 1.8083125996451985 + 18*p2 + -15*p3 ), twopi ) );
        a += 0.00358 * sin ( fmod ( ( 3.1452871665504145 + 2*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00358 * sin ( fmod ( ( 3.1456775967040858 + 2*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00359 * sin ( fmod ( ( 3.1414512819203817 + 10*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0036 * sin ( fmod ( ( 0.5099476828538252 + 3*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00362 * sin ( fmod ( ( 0.3309580594094247 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00364 * sin ( fmod ( ( 0.45794769218575654 + 15*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00365 * sin ( fmod ( ( 2.9382612721336785 + 5*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00365 * sin ( fmod ( ( 4.471843863150477 + 3*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00367 * sin ( fmod ( ( 4.758971119988718 + 5*p2 + -6*p3 ), twopi ) );
        a += 0.00368 * sin ( fmod ( ( 0.09495533608645229 + 3*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00368 * sin ( fmod ( ( 5.766854431652443 + 2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00369 * sin ( fmod ( ( 3.1421457484297504 + 6*p2 + -6*p3 + l ), twopi ) );
        a += 0.00373 * sin ( fmod ( ( 5.107082624352594 + 6*p2 + -10*p3 + 3*p5 ), twopi ) );
        a += 0.00373 * sin ( fmod ( ( 4.238990935528578 + 4*p3 + -8*p4 ), twopi ) );
        a += 0.00374 * sin ( fmod ( ( 3.1403566114135306 + 11*p2 + -11*p3 ), twopi ) );
        a += 0.00374 * sin ( fmod ( ( 5.237183655586454 + 3*p3 + -5*p4 + l ), twopi ) );
        a += 0.00375 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00376 * sin ( fmod ( ( 0.008482300164692442 + 2*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00377 * sin ( fmod ( ( 0.46326693214705966 + 18*p2 + -16*p3 + -4*l ), twopi ) );
        a += 0.00378 * sin ( fmod ( ( 4.687463584271109 + 2*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00379 * sin ( fmod ( ( 2.7437298407661186 + p2 + -3*p3 ), twopi ) );
        a += 0.0038 * sin ( fmod ( ( 5.4028754409269855 + 18*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.0038 * sin ( fmod ( ( 3.156604055953271 + 2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00382 * sin ( fmod ( ( 5.782886677095411 + 4*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00386 * sin ( fmod ( ( 1.5952061526474388 + 5*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00388 * sin ( fmod ( ( 6.115089679860285 + 8*p2 + -12*p3 ), twopi ) );
        a += 0.0039 * sin ( fmod ( ( 1.1022764771981095 + p3 + -2*d + l ), twopi ) );
        a += 0.0039 * sin ( fmod ( ( 4.671936960712442 + p6 + -2*d ), twopi ) );
        a += 0.00392 * sin ( fmod ( ( 3.1418862179699785 + 4*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00392 * sin ( fmod ( ( 4.661894510729391 + p6 + 2*d ), twopi ) );
        a += 0.00395 * sin ( fmod ( ( 4.733455628055037 + 6*p2 + -7*p3 ), twopi ) );
        a += 0.00395 * sin ( fmod ( ( 4.732652602066195 + 2*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00396 * sin ( fmod ( ( 0.4632534931118193 + 18*p2 + -16*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00397 * sin ( fmod ( ( 4.4778959668646925 + 2*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00398 * sin ( fmod ( ( 2.7440434764327017 + 8*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00403 * sin ( fmod ( ( 1.2121709590170073 + 5*p2 + -8*p3 + l ), twopi ) );
        a += 0.00404 * sin ( fmod ( ( 3.3368424624774735 + 4*p3 + -4*p4 ), twopi ) );
        a += 0.00404 * sin ( fmod ( ( 6.250568245052465 + 2*p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00405 * sin ( fmod ( ( 4.710560398927376 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00405 * sin ( fmod ( ( 3.277024094892171 + 3*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00406 * sin ( fmod ( ( 0.46323848328025213 + 18*p2 + -16*p3 + -4*d ), twopi ) );
        a += 0.00407 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00407 * sin ( fmod ( ( 2.2076872166669506 + 9*p3 + -17*p4 ), twopi ) );
        a += 0.00408 * sin ( fmod ( ( 4.689506317627642 + 2*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00408 * sin ( fmod ( ( 4.269551301665149 + p3 + p5 + -2*d ), twopi ) );
        a += 0.0041 * sin ( fmod ( ( 1.6289662309016903 + 4*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.0041 * sin ( fmod ( ( 5.238956561040631 + 3*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.0041 * sin ( fmod ( ( 4.0879895865020845 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00411 * sin ( fmod ( ( 1.6083655861416257 + 4*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00411 * sin ( fmod ( ( 6.0354764860305625 + 4*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00413 * sin ( fmod ( ( 2.257961076704797 + 2*p2 + -4*p3 ), twopi ) );
        a += 0.00414 * sin ( fmod ( ( 2.746464073572293 + 8*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00414 * sin ( fmod ( ( 3.141859514432423 + d ), twopi ) );
        a += 0.00415 * sin ( fmod ( ( 5.321324408028775 + p3 + -3*p5 + l ), twopi ) );
        a += 0.00418 * sin ( fmod ( ( 1.2126352165980379 + 5*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00422 * sin ( fmod ( ( 4.747469225685149 + 7*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00423 * sin ( fmod ( ( 4.484208124637455 + 3*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00423 * sin ( fmod ( ( 1.172356857186363 + p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00424 * sin ( fmod ( ( 1.3190966357782627 + p3 + p5 + d + l + -1*f ), twopi ) );
        a += 0.00425 * sin ( fmod ( ( 3.4950316009624562 + 2*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00425 * sin ( fmod ( ( 5.547396033374975 + 2*p5 + l ), twopi ) );
        a += 0.00426 * sin ( fmod ( ( 1.3190477665592069 + p3 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00426 * sin ( fmod ( ( 5.560589151723725 + 2*p5 + -1*l ), twopi ) );
        a += 0.00427 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.00429 * sin ( fmod ( ( 0.0015732397877476886 + 2*p3 + -2*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00431 * sin ( fmod ( ( 4.9232570426167666 + 3*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00431 * sin ( fmod ( ( 5.4676201748589675 + p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00432 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + d + -1*l ), twopi ) );
        a += 0.00432 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00433 * sin ( fmod ( ( 5.472072509780805 + p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00436 * sin ( fmod ( ( 5.400968843252107 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00439 * sin ( fmod ( ( 6.269369804419575 + 4*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00439 * sin ( fmod ( ( 5.981861542205623 + 4*p2 + -6*p3 + l ), twopi ) );
        a += 0.00439 * sin ( fmod ( ( 5.246743172965479 + 4*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.0044 * sin ( fmod ( ( 0.1743899827336946 + 2*p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00442 * sin ( fmod ( ( 1.8029949304802222 + 2*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00442 * sin ( fmod ( ( 1.3224359742361034 + 3*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00443 * sin ( fmod ( ( 3.364182347078264 + 23*p2 + -23*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00443 * sin ( fmod ( ( 4.71744327936554 + 3*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00443 * sin ( fmod ( ( 0.042292120302625795 + p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00445 * sin ( fmod ( ( 3.2697773133049655 + 3*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00445 * sin ( fmod ( ( 1.7544829803222641 + p3 + -2*p5 + d + -1*l + f ), twopi ) );
        a += 0.00447 * sin ( fmod ( ( 0.17595536853980834 + 2*p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.0045 * sin ( fmod ( ( 0.00609748227476739 + p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00451 * sin ( fmod ( ( 0.001084023998413678 + 9*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00452 * sin ( fmod ( ( 4.693861786775995 + 3*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00452 * sin ( fmod ( ( 0.2525472229014023 + 3*p3 + -4*p5 + 3*d + -3*l ), twopi ) );
        a += 0.00455 * sin ( fmod ( ( 3.604867788784337 + 18*p2 + -16*p3 + 2*f ), twopi ) );
        a += 0.00455 * sin ( fmod ( ( 3.196555340663122 + 3*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00456 * sin ( fmod ( ( 4.284041374181056 + 2*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00456 * sin ( fmod ( ( 5.2181740529725085 + p3 + d + -1*f ), twopi ) );
        a += 0.00457 * sin ( fmod ( ( 4.762577493822113 + 2*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00458 * sin ( fmod ( ( 5.350450462586056 + p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00459 * sin ( fmod ( ( 4.440046582173018 + 3*p3 + -2*p4 ), twopi ) );
        a += 0.00459 * sin ( fmod ( ( 4.476622225576587 + 3*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.0046 * sin ( fmod ( ( 3.154009100421406 + p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00462 * sin ( fmod ( ( 4.754217890303836 + 3*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00463 * sin ( fmod ( ( 6.046901236781193 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00463 * sin ( fmod ( ( 6.046867028327854 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00465 * sin ( fmod ( ( 3.6048543497490964 + 18*p2 + -16*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00466 * sin ( fmod ( ( 0.011439062450496036 + p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00469 * sin ( fmod ( ( 6.2683866604519265 + 4*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00474 * sin ( fmod ( ( 4.748255845579024 + 5*p3 + -8*p4 ), twopi ) );
        a += 0.00474 * sin ( fmod ( ( 4.319870365730622 + p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00475 * sin ( fmod ( ( 5.761565036821349 + 3*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00478 * sin ( fmod ( ( 2.26346427436926 + 18*p2 + -17*p3 ), twopi ) );
        a += 0.00479 * sin ( fmod ( ( 0.025418626160195017 + 2*p3 + -3*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00484 * sin ( fmod ( ( 5.023322004621358 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00485 * sin ( fmod ( ( 5.023326018878637 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00487 * sin ( fmod ( ( 1.2912443225090868 + 3*p3 + -2*p5 ), twopi ) );
        a += 0.00491 * sin ( fmod ( ( 5.767861835696693 + 3*p3 + -6*p4 + 2*p5 ), twopi ) );
        a += 0.00491 * sin ( fmod ( ( 4.777581042203957 + p3 + p5 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00495 * sin ( fmod ( ( 0.9976914614967038 + 2*p3 + -4*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00497 * sin ( fmod ( ( 3.1413863556722075 + p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00501 * sin ( fmod ( ( 2.683092390162855 + 8*p3 + -15*p4 + l ), twopi ) );
        a += 0.00503 * sin ( fmod ( ( 2.683805706228145 + 8*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00504 * sin ( fmod ( ( 3.1447035284485474 + 2*p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00505 * sin ( fmod ( ( 1.313974618022435 + 26*p2 + -29*p3 ), twopi ) );
        a += 0.00506 * sin ( fmod ( ( 3.7198258198291207 + 6*p3 + -11*p4 ), twopi ) );
        a += 0.00507 * sin ( fmod ( ( 4.767405947197756 + 7*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00507 * sin ( fmod ( ( 5.834222395450171 + p3 + p6 + d + -1*f ), twopi ) );
        a += 0.0051 * sin ( fmod ( ( 5.267276273483491 + 3*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00511 * sin ( fmod ( ( 5.980495123934237 + 4*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00513 * sin ( fmod ( ( 4.949863888931719 + 18*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00527 * sin ( fmod ( ( 3.1405316679375055 + 10*p2 + -10*p3 ), twopi ) );
        a += 0.00527 * sin ( fmod ( ( 3.166039480422478 + 2*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00531 * sin ( fmod ( ( 2.5714031862741313 + 3*p2 + -7*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00532 * sin ( fmod ( ( 3.1424883565619166 + 5*p2 + -5*p3 + l ), twopi ) );
        a += 0.00534 * sin ( fmod ( ( 2.5712377290610426 + 3*p2 + -7*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00534 * sin ( fmod ( ( 2.154966405017808 + 5*p3 + -7*p4 ), twopi ) );
        a += 0.00536 * sin ( fmod ( ( 3.141540642778083 + 9*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00541 * sin ( fmod ( ( 4.723934856985408 + 4*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00542 * sin ( fmod ( ( 3.1394933715654942 + 21*p2 + -21*p3 ), twopi ) );
        a += 0.00547 * sin ( fmod ( ( 4.9396231695456425 + 18*p2 + -17*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00553 * sin ( fmod ( ( 0.0011585495574738358 + 2*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00556 * sin ( fmod ( ( 2.884377722136857 + 3*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00558 * sin ( fmod ( ( 2.9223937857720967 + 6*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00558 * sin ( fmod ( ( 3.2144301301974223 + 7*p3 + -13*p4 ), twopi ) );
        a += 0.00559 * sin ( fmod ( ( 6.280194161907518 + 2*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00571 * sin ( fmod ( ( 0.0007850490975470494 + 8*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00577 * sin ( fmod ( ( 3.141050030725348 + 3*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00579 * sin ( fmod ( ( 1.3098217816002395 + 26*p2 + -29*p3 + -2*l ), twopi ) );
        a += 0.00583 * sin ( fmod ( ( 4.692522072042164 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00584 * sin ( fmod ( ( 4.69839091618492 + p6 + -2*d + l ), twopi ) );
        a += 0.00586 * sin ( fmod ( ( 1.164646865215678 + p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00587 * sin ( fmod ( ( 5.400087626512775 + p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00588 * sin ( fmod ( ( 2.6080790115767645 + 3*p2 + -7*p3 + 4*p4 + l ), twopi ) );
        a += 0.00588 * sin ( fmod ( ( 2.60801809958587 + 3*p2 + -7*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00593 * sin ( fmod ( ( 3.3048607001980788 + 3*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00594 * sin ( fmod ( ( 4.480068901783425 + 3*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00606 * sin ( fmod ( ( 4.748686243772565 + 20*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00612 * sin ( fmod ( ( 3.122552682246862 + 3*p2 + -5*p3 + 2*p5 ), twopi ) );
        a += 0.00613 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00623 * sin ( fmod ( ( 5.822074554790441 + 10*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00625 * sin ( fmod ( ( 1.9599342386878513 + p3 + d + f ), twopi ) );
        a += 0.00627 * sin ( fmod ( ( 5.820753340546681 + 10*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00629 * sin ( fmod ( ( 4.752201685951932 + 23*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00632 * sin ( fmod ( ( 6.13026985556243 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00639 * sin ( fmod ( ( 0.015140731261050809 + 3*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00647 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00647 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0065 * sin ( fmod ( ( 4.853476335661081 + 4*p3 + -8*p4 + p5 + 5*p6 ), twopi ) );
        a += 0.00653 * sin ( fmod ( ( 5.7810847991756535 + 2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00654 * sin ( fmod ( ( 1.4259938636727105 + p2 + -1*l ), twopi ) );
        a += 0.00654 * sin ( fmod ( ( 0.007064569213297448 + p3 + -1*p6 + l ), twopi ) );
        a += 0.00655 * sin ( fmod ( ( 2.8557775352832016 + 3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.0066 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -3*f ), twopi ) );
        a += 0.00664 * sin ( fmod ( ( 2.140285044415882 + 6*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00666 * sin ( fmod ( ( 0.0001319468914507713 + p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00672 * sin ( fmod ( ( 3.498933808104065 + 2*p3 + -4*p5 ), twopi ) );
        a += 0.00675 * sin ( fmod ( ( 3.275092015410214 + 2*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00676 * sin ( fmod ( ( 4.22887500718402 + 5*p3 + -9*p4 ), twopi ) );
        a += 0.00691 * sin ( fmod ( ( 5.250301899310294 + 2*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00692 * sin ( fmod ( ( 0.011874347565943421 + p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00697 * sin ( fmod ( ( 5.344078963618726 + p3 + -2*p5 + d ), twopi ) );
        a += 0.00702 * sin ( fmod ( ( 1.3206477098845102 + 3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00704 * sin ( fmod ( ( 2.259853711745659 + 18*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00704 * sin ( fmod ( ( 0.003973067509239892 + 2*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00708 * sin ( fmod ( ( 0.0008223991435397282 + 7*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.0072 * sin ( fmod ( ( 4.1077538694845925 + p3 + p5 ), twopi ) );
        a += 0.00731 * sin ( fmod ( ( 3.1434306598250683 + 2*p3 + -2*p6 ), twopi ) );
        a += 0.00737 * sin ( fmod ( ( 3.12730311940494 + 3*p2 + -3*p3 + l ), twopi ) );
        a += 0.00738 * sin ( fmod ( ( 4.7527460541456295 + 5*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00739 * sin ( fmod ( ( 5.776647299552457 + 2*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00742 * sin ( fmod ( ( 4.75269770852535 + 5*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00746 * sin ( fmod ( ( 3.142928528599269 + 4*p2 + -4*p3 + l ), twopi ) );
        a += 0.00748 * sin ( fmod ( ( 4.949805944000553 + 18*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00748 * sin ( fmod ( ( 3.140831166437148 + 9*p2 + -9*p3 ), twopi ) );
        a += 0.00753 * sin ( fmod ( ( 5.755771939968128 + 2*p3 + -3*p4 + l ), twopi ) );
        a += 0.00765 * sin ( fmod ( ( 3.141218978596941 + 3*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00766 * sin ( fmod ( ( 0.01808806876889363 + p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00775 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00789 * sin ( fmod ( ( 5.770585421994431 + 3*p3 + -4*p4 + l ), twopi ) );
        a += 0.008 * sin ( fmod ( ( 1.722013922115713 + 14*p3 + -23*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00808 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00811 * sin ( fmod ( ( 4.726112504293121 + 6*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00813 * sin ( fmod ( ( 4.482585142966025 + 3*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00813 * sin ( fmod ( ( 3.3251265908076113 + 2*p3 + -3*p5 + l ), twopi ) );
        a += 0.00817 * sin ( fmod ( ( 5.518330192676887 + 2*p5 ), twopi ) );
        a += 0.00818 * sin ( fmod ( ( 2.975651460699152 + 5*p2 + -7*p3 ), twopi ) );
        a += 0.00819 * sin ( fmod ( ( 1.0004780541804377 + 2*p3 + -4*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00821 * sin ( fmod ( ( 4.7159950051522355 + p2 + 2*d + -1*l ), twopi ) );
        a += 0.00824 * sin ( fmod ( ( 3.1422387744788813 + 8*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00838 * sin ( fmod ( ( 5.78007198461072 + 5*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00848 * sin ( fmod ( ( 0.0011486011807374681 + 6*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00849 * sin ( fmod ( ( 5.756995241240852 + 2*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.0085 * sin ( fmod ( ( 4.5510572020485665 + p6 + l ), twopi ) );
        a += 0.00851 * sin ( fmod ( ( 2.963289642673127 + 3*p3 + -3*p5 ), twopi ) );
        a += 0.00852 * sin ( fmod ( ( 1.8610854221060502 + p2 + -2*p3 + l ), twopi ) );
        a += 0.00854 * sin ( fmod ( ( 4.551594239859405 + p6 + -1*l ), twopi ) );
        a += 0.0086 * sin ( fmod ( ( 1.3214948927034282 + 3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00863 * sin ( fmod ( ( 0.007993433441208831 + p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00865 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00865 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00872 * sin ( fmod ( ( 5.305242420702124 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00873 * sin ( fmod ( ( 4.4009820992561055 + 2*p2 + -1*p3 ), twopi ) );
        a += 0.00873 * sin ( fmod ( ( 1.34328777187553 + p2 + -2*d + l ), twopi ) );
        a += 0.00874 * sin ( fmod ( ( 5.283381124623343 + 2*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00875 * sin ( fmod ( ( 4.998804666486892 + 4*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00875 * sin ( fmod ( ( 0.015546869377989887 + 2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00876 * sin ( fmod ( ( 4.998786165996822 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00882 * sin ( fmod ( ( 0.004458094508369115 + 4*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00884 * sin ( fmod ( ( 0.002443286419866862 + 3*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00885 * sin ( fmod ( ( 3.1418722553359624 + p2 + -1*p3 + 2*l ), twopi ) );
        a += 0.00889 * sin ( fmod ( ( 0.02982854958120909 + p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00894 * sin ( fmod ( ( 1.8035134678009894 + p2 + d + -1*f ), twopi ) );
        a += 0.00897 * sin ( fmod ( ( 3.2256747629692457 + 5*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00897 * sin ( fmod ( ( 0.173962377066956 + 2*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00905 * sin ( fmod ( ( 0.5180322224819881 + 3*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00909 * sin ( fmod ( ( 0.0016725490221861658 + 4*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00913 * sin ( fmod ( ( 1.850497905797602 + p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00933 * sin ( fmod ( ( 3.1396424226836146 + 18*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00936 * sin ( fmod ( ( 0.17718058967470834 + 2*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00939 * sin ( fmod ( ( 3.1414135828085388 + p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00942 * sin ( fmod ( ( 1.3448704364412387 + p2 + -2*d ), twopi ) );
        a += 0.00943 * sin ( fmod ( ( 0.021937916032942727 + p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00948 * sin ( fmod ( ( 2.666181022375656 + 4*p3 + -5*p4 ), twopi ) );
        a += 0.00952 * sin ( fmod ( ( 0.0008356636458548849 + 5*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00959 * sin ( fmod ( ( 0.012654684274510086 + p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00962 * sin ( fmod ( ( 3.2334418272064713 + 5*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00962 * sin ( fmod ( ( 6.282081211894774 + l ), twopi ) );
        a += 0.00971 * sin ( fmod ( ( 0.522922460513151 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00978 * sin ( fmod ( ( 0.01084041451706198 + p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00987 * sin ( fmod ( ( 1.3353672931970546 + 4*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00994 * sin ( fmod ( ( 5.7528465936088615 + 3*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.01017 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + 2*d + -3*l ), twopi ) );
        a += 0.01019 * sin ( fmod ( ( 3.141750954952949 + p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.01024 * sin ( fmod ( ( 5.280625075201519 + 2*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.01038 * sin ( fmod ( ( 3.143796829902137 + 2*p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.01051 * sin ( fmod ( ( 0.015427663390078675 + p3 + -1*p4 ), twopi ) );
        a += 0.0107 * sin ( fmod ( ( 3.1410002888416666 + 8*p2 + -8*p3 ), twopi ) );
        a += 0.0107 * sin ( fmod ( ( 6.004007152419555 + 3*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.01085 * sin ( fmod ( ( 5.775712501205089 + 2*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.0109 * sin ( fmod ( ( 2.8579738576139113 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.01091 * sin ( fmod ( ( 3.268717549383154 + 5*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.01093 * sin ( fmod ( ( 2.857921846802202 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.01096 * sin ( fmod ( ( 4.983892398824927 + p3 + -2*p6 ), twopi ) );
        a += 0.01099 * sin ( fmod ( ( 4.737633946284311 + 4*p3 + -7*p4 ), twopi ) );
        a += 0.01099 * sin ( fmod ( ( 5.729773864496272 + 3*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.0112 * sin ( fmod ( ( 0.007798131097910665 + 2*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.01121 * sin ( fmod ( ( 0.5200639602642347 + 3*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.01126 * sin ( fmod ( ( 5.781105219527902 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.01126 * sin ( fmod ( ( 3.1642407440953724 + 2*p3 + -3*p5 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.01137 * sin ( fmod ( ( 2.258717327869686 + 18*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01141 * sin ( fmod ( ( 4.94985114802818 + 18*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.01162 * sin ( fmod ( ( 4.974010519133061 + 4*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.01162 * sin ( fmod ( ( 4.974001617953876 + 4*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.01183 * sin ( fmod ( ( 1.7545812423591516 + p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.01197 * sin ( fmod ( ( 1.5768995686561955 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.01201 * sin ( fmod ( ( 3.146410285924073 + 2*p3 + -2*p4 + d ), twopi ) );
        a += 0.01203 * sin ( fmod ( ( 4.487941907506246 + 2*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.01211 * sin ( fmod ( ( 0.011954109112759561 + p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.01218 * sin ( fmod ( ( 3.141943464769444 + p2 + -1*p3 + d ), twopi ) );
        a += 0.01229 * sin ( fmod ( ( 3.1438401140675865 + 2*p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.01249 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d ), twopi ) );
        a += 0.01284 * sin ( fmod ( ( 5.295523903828244 + 2*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0129 * sin ( fmod ( ( 3.1424918472204206 + 7*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01292 * sin ( fmod ( ( 3.1394935460984192 + p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01299 * sin ( fmod ( ( 5.362505975328357 + 2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01312 * sin ( fmod ( ( 0.34488473964278826 + 2*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01315 * sin ( fmod ( ( 0.007881208770305594 + 2*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.01345 * sin ( fmod ( ( 4.487107989189644 + 2*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.014 * sin ( fmod ( ( 3.11912468106302 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.01408 * sin ( fmod ( ( 3.117307095179993 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0141 * sin ( fmod ( ( 5.2572336489675155 + 4*p3 + -6*p4 ), twopi ) );
        a += 0.01423 * sin ( fmod ( ( 5.900385732998174 + 3*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.01424 * sin ( fmod ( ( 6.047543867011777 + 3*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.01425 * sin ( fmod ( ( 5.781465804551362 + 3*p3 + -4*p4 + d + -1*l ), twopi ) );
        a += 0.01431 * sin ( fmod ( ( 5.7364738344288275 + 3*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.01434 * sin ( fmod ( ( 6.282930838174645 + 2*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.01441 * sin ( fmod ( ( 6.058557767256487 + 6*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.01454 * sin ( fmod ( ( 3.187776683591441 + 3*p3 + -3*p4 ), twopi ) );
        a += 0.01455 * sin ( fmod ( ( 0.03429746513094057 + p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.01457 * sin ( fmod ( ( 1.4352364292595716 + p2 ), twopi ) );
        a += 0.01467 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.01487 * sin ( fmod ( ( 0.04652943066061763 + 3*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.01498 * sin ( fmod ( ( 5.910797145585096 + 3*p2 + -5*p3 + l ), twopi ) );
        a += 0.01502 * sin ( fmod ( ( 0.0492486536352248 + 3*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.01537 * sin ( fmod ( ( 4.622192459036725 + 2*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.01547 * sin ( fmod ( ( 3.141346038566487 + 7*p2 + -7*p3 ), twopi ) );
        a += 0.01585 * sin ( fmod ( ( 0.0017442820544431327 + 2*d ), twopi ) );
        a += 0.01589 * sin ( fmod ( ( 4.715189186636589 + 2*p3 + -1*p5 ), twopi ) );
        a += 0.01644 * sin ( fmod ( ( 4.61428140513621 + 2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.01673 * sin ( fmod ( ( 4.735820723724414 + 3*p3 + -6*p4 ), twopi ) );
        a += 0.01682 * sin ( fmod ( ( 5.788958852096025 + 5*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.01696 * sin ( fmod ( ( 1.14579800742584 + p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.01699 * sin ( fmod ( ( 1.6647638065247201 + p3 ), twopi ) );
        a += 0.01709 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.01709 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.01712 * sin ( fmod ( ( 5.198032778871569 + 2*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.0177 * sin ( fmod ( ( 5.201793788876691 + 2*p3 + -4*p4 + l ), twopi ) );
        a += 0.01806 * sin ( fmod ( ( 2.520939085347818 + 3*p3 + -7*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.0181 * sin ( fmod ( ( 2.954277286014604 + 5*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.01814 * sin ( fmod ( ( 3.321324216499216 + 2*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.01819 * sin ( fmod ( ( 5.265851212149237 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01841 * sin ( fmod ( ( 3.3197473115200395 + 2*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.01873 * sin ( fmod ( ( 3.1421778624879875 + 2*p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.01901 * sin ( fmod ( ( 4.541592630580851 + p6 ), twopi ) );
        a += 0.01917 * sin ( fmod ( ( 6.0367942096158185 + 3*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.01946 * sin ( fmod ( ( 0.463295206480942 + 18*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.01999 * sin ( fmod ( ( 0.4632582055007997 + 18*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.02008 * sin ( fmod ( ( 3.1749766133902395 + 4*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.02009 * sin ( fmod ( ( 5.250017934240995 + 3*p3 + -5*p4 ), twopi ) );
        a += 0.02023 * sin ( fmod ( ( 5.2771157416745345 + 6*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.02116 * sin ( fmod ( ( 3.142390967189655 + 6*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02166 * sin ( fmod ( ( 3.03195141904536 + 3*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.02172 * sin ( fmod ( ( 4.712152837336895 + 2*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.02201 * sin ( fmod ( ( 3.141848169792285 + p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.02263 * sin ( fmod ( ( 3.1419705173728496 + 6*p2 + -6*p3 ), twopi ) );
        a += 0.02267 * sin ( fmod ( ( 4.745224383201235 + 5*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02296 * sin ( fmod ( ( 1.225841424916178 + 5*p2 + -8*p3 ), twopi ) );
        a += 0.02299 * sin ( fmod ( ( 6.05542333045283 + 3*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02301 * sin ( fmod ( ( 5.554151330244818 + p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.02314 * sin ( fmod ( ( 5.316394900089442 + p3 + -3*p5 ), twopi ) );
        a += 0.02338 * sin ( fmod ( ( 0.012171228071707656 + p3 + -1*p5 + d + -1*l ), twopi ) );
        a += 0.02393 * sin ( fmod ( ( 4.140318920800005 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.02418 * sin ( fmod ( ( 4.143704161417173 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.02513 * sin ( fmod ( ( 5.588502027917945 + p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.02514 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.0254 * sin ( fmod ( ( 1.3172317514725067 + p3 + p5 + d + -1*f ), twopi ) );
        a += 0.02587 * sin ( fmod ( ( 5.990201074437502 + 4*p2 + -6*p3 ), twopi ) );
        a += 0.02611 * sin ( fmod ( ( 2.7106558514408263 + 8*p3 + -15*p4 ), twopi ) );
        a += 0.0281 * sin ( fmod ( ( 3.604851906288144 + 18*p2 + -16*p3 + -1*l + 2*f ), twopi ) );
        a += 0.0281 * sin ( fmod ( ( 3.604851906288144 + 18*p2 + -16*p3 + -1*l + -2*f ), twopi ) );
        a += 0.02848 * sin ( fmod ( ( 6.043529260666339 + p5 + 2*d ), twopi ) );
        a += 0.02889 * sin ( fmod ( ( 5.262127203124257 + p3 + -2*p5 + l ), twopi ) );
        a += 0.02911 * sin ( fmod ( ( 4.731354775234411 + 3*p2 + -4*p3 + l ), twopi ) );
        a += 0.02923 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.02952 * sin ( fmod ( ( 1.5952164500900257 + 4*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0303 * sin ( fmod ( ( 3.1405938016588766 + 3*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.03091 * sin ( fmod ( ( 5.813801345070138 + 10*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.03111 * sin ( fmod ( ( 5.812541217350198 + 10*p2 + -3*p3 ), twopi ) );
        a += 0.03111 * sin ( fmod ( ( 0.007574030821954593 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.03174 * sin ( fmod ( ( 0.1760304176976441 + 2*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.03194 * sin ( fmod ( ( 5.601108541105099 + p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.03238 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.03245 * sin ( fmod ( ( 2.58711952712249 + 3*p2 + -7*p3 + 4*p4 ), twopi ) );
        a += 0.03259 * sin ( fmod ( ( 0.0012421508286443643 + 2*p3 + -2*p4 + l ), twopi ) );
        a += 0.03305 * sin ( fmod ( ( 3.142090246959537 + 5*p2 + -5*p3 ), twopi ) );
        a += 0.03309 * sin ( fmod ( ( 6.198267010555503 + p5 + -2*d ), twopi ) );
        a += 0.03317 * sin ( fmod ( ( 5.276888848871774 + 6*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.03337 * sin ( fmod ( ( 3.14873576261943 + 2*p3 + -2*p5 + l ), twopi ) );
        a += 0.03451 * sin ( fmod ( ( 4.730159922828496 + 2*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.03474 * sin ( fmod ( ( 5.341196901424907 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.03489 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.03549 * sin ( fmod ( ( 5.619283876336594 + p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.03553 * sin ( fmod ( ( 6.282952654790295 + 2*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.03668 * sin ( fmod ( ( 4.722117620168231 + 3*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.03726 * sin ( fmod ( ( 0.0021299998191338797 + 2*d + -1*l ), twopi ) );
        a += 0.03759 * sin ( fmod ( ( 3.142866569410824 + 5*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0378 * sin ( fmod ( ( 5.25347019550144 + p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.0385 * sin ( fmod ( ( 4.153348676330768 + 8*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.03874 * sin ( fmod ( ( 4.074388584707143 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.03878 * sin ( fmod ( ( 4.074405688933812 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.03878 * sin ( fmod ( ( 4.154026213146393 + 8*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.03897 * sin ( fmod ( ( 0.007556577529434649 + p3 + -1*p6 ), twopi ) );
        a += 0.03945 * sin ( fmod ( ( 4.732877575006776 + 3*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.04014 * sin ( fmod ( ( 5.7645947538698845 + 2*p3 + -3*p4 ), twopi ) );
        a += 0.0404 * sin ( fmod ( ( 5.12552761295352 + p5 + l ), twopi ) );
        a += 0.04046 * sin ( fmod ( ( 5.148444484163906 + p5 + -1*l ), twopi ) );
        a += 0.04213 * sin ( fmod ( ( 6.274744371318166 + 2*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.04214 * sin ( fmod ( ( 4.7364909301571805 + 2*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.0428 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.04282 * sin ( fmod ( ( 2.6482299619530445 + 5*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0434 * sin ( fmod ( ( 3.125880326998714 + 3*p2 + -3*p3 ), twopi ) );
        a += 0.04478 * sin ( fmod ( ( 1.8101799274119073 + p2 + -2*p3 ), twopi ) );
        a += 0.0457 * sin ( fmod ( ( 5.340605583874332 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.04612 * sin ( fmod ( ( 6.258397268478136 + 2*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.04626 * sin ( fmod ( ( 3.14282852123313 + 4*p2 + -4*p3 ), twopi ) );
        a += 0.04662 * sin ( fmod ( ( 4.722973006034634 + 3*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.04667 * sin ( fmod ( ( 5.761107411491475 + 3*p3 + -4*p4 ), twopi ) );
        a += 0.05022 * sin ( fmod ( ( 0.4633081219174067 + 18*p2 + -16*p3 + l ), twopi ) );
        a += 0.05071 * sin ( fmod ( ( 0.002736850800052308 + 2*p2 + -2*p3 + l ), twopi ) );
        a += 0.05108 * sin ( fmod ( ( 0.010108947027551158 + p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.05167 * sin ( fmod ( ( 3.3237352143279213 + 2*p3 + -3*p5 ), twopi ) );
        a += 0.05272 * sin ( fmod ( ( 4.7524577257531995 + 5*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.05274 * sin ( fmod ( ( 6.2157663797676985 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.05354 * sin ( fmod ( ( 0.46326693214705966 + 18*p2 + -16*p3 + -3*l ), twopi ) );
        a += 0.0554 * sin ( fmod ( ( 4.687408955465521 + 2*p2 + -3*p3 + l ), twopi ) );
        a += 0.05635 * sin ( fmod ( ( 0.006955486135047802 + 2*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.05756 * sin ( fmod ( ( 6.2798597568228365 + p5 + -2*d + l ), twopi ) );
        a += 0.05904 * sin ( fmod ( ( 6.263440920950551 + 2*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.05946 * sin ( fmod ( ( 2.91691397551961 + 6*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0603 * sin ( fmod ( ( 4.689638264519093 + 2*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.06188 * sin ( fmod ( ( 4.7397251997940515 + 2*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.06323 * sin ( fmod ( ( 5.468177109423278 + p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.06369 * sin ( fmod ( ( 2.857487783417231 + 2*p4 + d + -1*f ), twopi ) );
        a += 0.06406 * sin ( fmod ( ( 5.471244176517808 + p3 + -2*p4 + l ), twopi ) );
        a += 0.06514 * sin ( fmod ( ( 4.717381320177095 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.06711 * sin ( fmod ( ( 3.15396930691446 + p3 + -1*p5 + d ), twopi ) );
        a += 0.06826 * sin ( fmod ( ( 6.047386438313246 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.06826 * sin ( fmod ( ( 6.047339663489293 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.06863 * sin ( fmod ( ( 3.143892823010996 + 2*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.07199 * sin ( fmod ( ( 0.000727278699306037 + 3*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.07667 * sin ( fmod ( ( 2.9185853028113202 + 6*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.08235 * sin ( fmod ( ( 3.1417635213235635 + 4*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.08277 * sin ( fmod ( ( 6.0131819992314375 + 3*p2 + -5*p3 ), twopi ) );
        a += 0.08408 * sin ( fmod ( ( 3.1583335027090724 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.08634 * sin ( fmod ( ( 5.003794039219568 + p5 ), twopi ) );
        a += 0.08911 * sin ( fmod ( ( 3.156621683778716 + 2*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.09002 * sin ( fmod ( ( 5.00367692762676 + 4*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.09009 * sin ( fmod ( ( 5.0037313818994225 + 4*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.09178 * sin ( fmod ( ( 5.238416032571289 + 2*p3 + -4*p4 ), twopi ) );
        a += 0.09518 * sin ( fmod ( ( 3.3192619354550597 + 2*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.09922 * sin ( fmod ( ( 3.1412701167440242 + p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.10386 * sin ( fmod ( ( 4.718374063455628 + 3*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.10489 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -1*l ), twopi ) );
        a += 0.10651 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.10993 * sin ( fmod ( ( 0.01940247622857056 + p3 + -1*p5 + l ), twopi ) );
        a += 0.12537 * sin ( fmod ( ( 0.0021024236169523694 + 3*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.12722 * sin ( fmod ( ( 3.1418563728397695 + p2 + -1*p3 + l ), twopi ) );
        a += 0.13122 * sin ( fmod ( ( 3.1413196840947815 + p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.13432 * sin ( fmod ( ( 0.006398202504886013 + 2*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.13593 * sin ( fmod ( ( 6.283143768343388 + 2*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.1396 * sin ( fmod ( ( 5.011052514512763 + 4*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.13971 * sin ( fmod ( ( 5.011082534175897 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.14347 * sin ( fmod ( ( 0.02156912796199632 + p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.1535 * sin ( fmod ( ( 3.14174763882737 + p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.15711 * sin ( fmod ( ( 0.4632500024533153 + 18*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.1609 * sin ( fmod ( ( 0.0054414130089427215 + 2*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.16302 * sin ( fmod ( ( 0.46326291788978 + 18*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.16376 * sin ( fmod ( ( 6.069670976735635 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.16425 * sin ( fmod ( ( 5.253545593725126 + p3 + -2*p5 ), twopi ) );
        a += 0.1644 * sin ( fmod ( ( 0.46324930432161454 + 18*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.16497 * sin ( fmod ( ( 0.03146479575495377 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.1671 * sin ( fmod ( ( 0.4632077654854171 + 18*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.17082 * sin ( fmod ( ( 4.973973169087068 + 4*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.17083 * sin ( fmod ( ( 4.973974739883395 + 4*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.17511 * sin ( fmod ( ( 4.729722892383796 + 3*p2 + -4*p3 ), twopi ) );
        a += 0.18256 * sin ( fmod ( ( 6.282914781145528 + 2*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.18457 * sin ( fmod ( ( 3.14920368539189 + 2*p3 + -2*p5 ), twopi ) );
        a += 0.19443 * sin ( fmod ( ( 6.279081514509372 + 2*p3 + -2*p4 ), twopi ) );
        a += 0.21118 * sin ( fmod ( ( 0.030426848448792745 + p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.22653 * sin ( fmod ( ( 4.11461598050466 + 8*p2 + -13*p3 ), twopi ) );
        a += 0.24515 * sin ( fmod ( ( 0.0015083135395734994 + 2*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.28281 * sin ( fmod ( ( 0.17520225896757277 + 2*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.30155 * sin ( fmod ( ( 0.0035688492544780053 + 2*p2 + -2*p3 ), twopi ) );
        a += 0.32455 * sin ( fmod ( ( 5.552551386919516 + p3 + -2*p4 ), twopi ) );
        a += 0.34355 * sin ( fmod ( ( 4.711584907198296 + 2*p2 + -3*p3 ), twopi ) );
        a += 0.44532 * sin ( fmod ( ( 0.17575483020875418 + 2*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.56341 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.6388 * sin ( fmod ( ( 0.02144835117775832 + p3 + -1*p5 ), twopi ) );
        a += 0.64371 * sin ( fmod ( ( 3.141268720480623 + 3*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.7393 * sin ( fmod ( ( 0.4633081219174067 + 18*p2 + -16*p3 ), twopi ) );
        a += 0.78811 * sin ( fmod ( ( 0.46326693214705966 + 18*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.82155 * sin ( fmod ( ( 3.14176509211989 + p2 + -1*p3 ), twopi ) );
        a += 0.90114 * sin ( fmod ( ( 4.991415989631499 + 4*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 1.14307 * sin ( fmod ( ( 3.1436830344349067 + 2*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 14.24883 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*l ), twopi ) );
        return a;
    }

    double planetary_lat10 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 2.4086208647966756 + 7*p1 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4086208647966756 + 7*p1 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.101889214132042 + 6*p1 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.101889214132042 + 6*p1 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.040703730143652 + 6*p1 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.040703730143652 + 6*p1 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.18139419754814 + 3*p1 + 2*p2 + -6*p3 + -4*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.18139419754814 + 3*p1 + 2*p2 + -6*p3 + -4*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139864079498618 + 2*p1 + -2*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144409789535437 + 2*p1 + -2*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.144409789535437 + 2*p1 + -2*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.519939211714301 + p1 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.439443728452746 + p1 + -3*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.439443728452746 + p1 + -3*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6713414458733444 + p1 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4507148902292 + 32*p2 + -28*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4507148902292 + 32*p2 + -28*p3 + -3*d + 2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.75636447924918 + 27*p2 + -20*p3 + -20*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.75636447924918 + 27*p2 + -20*p3 + -20*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.808417161864026 + 24*p2 + -27*p3 + -1*p4 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.808417161864026 + 24*p2 + -27*p3 + -1*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7993116131217635 + 23*p2 + -22*p3 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.277594144920823 + 23*p2 + -23*p3 + d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.277594144920823 + 23*p2 + -23*p3 + d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.349273229507269 + 23*p2 + -24*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9125056228949227 + 23*p2 + -25*p3 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9125056228949227 + 23*p2 + -25*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.796305257990253 + 22*p2 + -21*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.058136793840905 + 22*p2 + -24*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.058136793840905 + 22*p2 + -24*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5961210712379676 + 22*p2 + -28*p3 + 7*p4 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5961210712379676 + 22*p2 + -28*p3 + 7*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7963721041006042 + 21*p2 + -20*p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.277532709331153 + 21*p2 + -21*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1359384849450325 + 21*p2 + -21*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751699554726133 + 21*p2 + -22*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751699554726133 + 21*p2 + -22*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6056957559848501 + 21*p2 + -22*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6056957559848501 + 21*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.04174723700847 + 21*p2 + -23*p3 + 4*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.04174723700847 + 21*p2 + -23*p3 + 4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.743169956138712 + 20*p2 + -21*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.873667351645702 + 20*p2 + -21*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.601577302548919 + 20*p2 + -21*p3 + -4*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001356993493425591 + 19*p2 + -19*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001356993493425591 + 19*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.610545851443217 + 19*p2 + -20*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752137457835459 + 19*p2 + -20*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.725229891290388 + 19*p2 + -20*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.725229891290388 + 19*p2 + -20*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -4*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 6*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -5*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -6*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139639630156812 + 18*p2 + -18*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1384489665411013 + 18*p2 + -18*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1384489665411013 + 18*p2 + -18*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4066826851606526 + 18*p2 + -18*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4066826851606526 + 18*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.139639630156812 + 18*p2 + -18*p3 + -4*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6095548534939346 + 18*p2 + -19*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.590120471733319 + 17*p2 + -15*p3 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.590120471733319 + 17*p2 + -15*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1403663852573422 + 17*p2 + -17*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1403663852573422 + 17*p2 + -17*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.004214795610641107 + 17*p2 + -17*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.004214795610641107 + 17*p2 + -17*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6015849989942605 + 16*p2 + -14*p3 + -1*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6015849989942605 + 16*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1388395712276975 + 16*p2 + -16*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1390357462356215 + 16*p2 + -16*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142519947021378 + 16*p2 + -16*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142519947021378 + 16*p2 + -16*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281694097866682 + 16*p2 + -16*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281694097866682 + 16*p2 + -16*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140101444276889 + 16*p2 + -16*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140101444276889 + 16*p2 + -16*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281881371695422 + 15*p2 + -15*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281091784741818 + 15*p2 + -15*p3 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281091784741818 + 15*p2 + -15*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420823929779025 + 15*p2 + -15*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420823929779025 + 15*p2 + -15*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282126764988252 + 15*p2 + -15*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282126764988252 + 15*p2 + -15*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1428742488595325 + 15*p2 + -15*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1428742488595325 + 15*p2 + -15*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1405341113984586 + 15*p2 + -15*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1405341113984586 + 15*p2 + -15*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + 2*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6147714680952203 + 15*p2 + -16*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.737782448308706 + 15*p2 + -16*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.737782448308706 + 15*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.209484590723921 + 15*p2 + -17*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.209642892087077 + 15*p2 + -17*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.915373215852583 + 14*p2 + -11*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.915373215852583 + 14*p2 + -11*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.149319949815022 + 14*p2 + -12*p3 + -3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.149319949815022 + 14*p2 + -12*p3 + -3*d + 3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752703991710657 + 14*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752703991710657 + 14*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282407937530748 + 14*p2 + -14*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282407239399048 + 14*p2 + -14*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282407239399048 + 14*p2 + -14*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143133779319304 + 14*p2 + -14*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143133779319304 + 14*p2 + -14*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140814585809254 + 14*p2 + -14*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.140814585809254 + 14*p2 + -14*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.750004665489522 + 14*p2 + -15*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.749960508659447 + 14*p2 + -15*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.893271064337028 + 13*p2 + -10*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.893271064337028 + 13*p2 + -10*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.45314384795256735 + 13*p2 + -11*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.45314384795256735 + 13*p2 + -11*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420199101906814 + 13*p2 + -13*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420199101906814 + 13*p2 + -13*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0428738640372655 + 13*p2 + -15*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.864000671050606 + 12*p2 + -6*p3 + p5 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.864000671050606 + 12*p2 + -6*p3 + p5 + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282325557990053 + 12*p2 + -12*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1435126902999118 + 12*p2 + -12*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1435126902999118 + 12*p2 + -12*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.309163967005163 + 12*p2 + -13*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0319304750943363 + 12*p2 + -14*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282999429614248 + 11*p2 + -11*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1429885679255385 + 11*p2 + -11*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1429885679255385 + 11*p2 + -11*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3141863264607019 + 11*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.808137219550323 + 11*p2 + -12*p3 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.808137219550323 + 11*p2 + -12*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.808137219550323 + 11*p2 + -12*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.808137219550323 + 11*p2 + -12*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0176791636201017 + 11*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6441661288243836 + 10*p2 + -9*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1451737201490353 + 10*p2 + -10*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1694976758023796 + 10*p2 + -10*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143796655369212 + 10*p2 + -10*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.143796655369212 + 10*p2 + -10*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6135054062558238 + 10*p2 + -11*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3186699027761501 + 10*p2 + -11*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751165309442099 + 10*p2 + -11*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.751165309442099 + 10*p2 + -11*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.42495102094632736 + 9*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6289800190027812 + 9*p2 + -8*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8028881163300001 + 9*p2 + -8*p3 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1417270439421965 + 9*p2 + -9*p3 + 4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6181462367368769 + 9*p2 + -10*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0096132820183015 + 9*p2 + -14*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0096132820183015 + 9*p2 + -14*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.695997380147051 + 9*p2 + -17*p3 + 3*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.554404726557258 + 9*p2 + -17*p3 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.40667951807304914 + 8*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6486327754460874 + 8*p2 + -7*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0004195771521794368 + 8*p2 + -8*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1388713362200837 + 8*p2 + -8*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1347762701961295 + 8*p2 + -8*p3 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.626517184895292 + 8*p2 + -9*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.467389782899387 + 8*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.727127587786081 + 8*p2 + -9*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9488606566810396 + 8*p2 + -10*p3 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1173742903561945 + 8*p2 + -11*p3 + 3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.258966943945988 + 8*p2 + -11*p3 + 3*p6 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.442162244797336 + 8*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.766850591928089 + 8*p2 + -12*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.14309853216673 + 8*p2 + -13*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.144399675124093 + 8*p2 + -13*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.16503330660702 + 8*p2 + -13*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.100139347023992 + 8*p2 + -13*p3 + -4*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.939080031580739 + 8*p2 + -14*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6319064125596001 + 7*p2 + -6*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142098624539946 + 7*p2 + -7*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.002563190539478872 + 7*p2 + -7*p3 + -2*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.61161608734054 + 7*p2 + -8*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.591040600816654 + 7*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6079988924657818 + 7*p2 + -8*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.04804143488657 + 7*p2 + -9*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.949476932439919 + 7*p2 + -9*p3 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.336207869259765 + 7*p2 + -10*p3 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0102487563989526 + 7*p2 + -12*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0102487563989526 + 7*p2 + -12*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9007488935239307 + 7*p2 + -13*p3 + 2*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042341547113724 + 7*p2 + -13*p3 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.8163217580463082 + 7*p2 + -13*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6747291044565153 + 7*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.7057842969309758 + 6*p2 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6182134319130788 + 6*p2 + -5*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3883155382443655 + 6*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141477287326236 + 6*p2 + -6*p3 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1411659205876807 + 6*p2 + -6*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.135572489400889 + 6*p2 + -6*p3 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001107062344540003 + 6*p2 + -6*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.102863273889263 + 6*p2 + -6*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.860784203772105 + 6*p2 + -7*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4688481630257204 + 6*p2 + -7*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.178180165232275 + 6*p2 + -7*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5353380431784545 + 6*p2 + -7*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5685692866693517 + 6*p2 + -8*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7101619402591455 + 6*p2 + -8*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1461050278379 + 6*p2 + -8*p3 + 2*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.02204406604473 + 6*p2 + -11*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8804514124549375 + 6*p2 + -11*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0787859247609095 + 6*p2 + -11*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.220378578350703 + 6*p2 + -11*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6672582480883036 + 5*p2 + -3*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5675725291335378 + 5*p2 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5217834671416164 + 5*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142735669716924 + 5*p2 + -5*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1430990472671896 + 5*p2 + -5*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282576012737715 + 5*p2 + -5*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.001408680734235 + 5*p2 + -5*p3 + 2*d + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141312179178997 + 5*p2 + -5*p3 + -1*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7227350921626368 + 5*p2 + -6*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.86432774575243 + 5*p2 + -6*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7446335892494345 + 5*p2 + -6*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.752085970622526 + 5*p2 + -6*p3 + 2*d + 2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.336920112632554 + 5*p2 + -6*p3 + d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.733755973724355 + 5*p2 + -6*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6030409356596413 + 5*p2 + -6*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.204013481622744 + 5*p2 + -6*p3 + -1*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.062420828032951195 + 5*p2 + -6*p3 + -1*p6 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.106027755851004 + 5*p2 + -7*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.454598413849496 + 5*p2 + -7*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9546338567807866 + 5*p2 + -7*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2098854503615208 + 5*p2 + -7*p3 + -1*p5 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.3514781039513135 + 5*p2 + -7*p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.250217042315381 + 5*p2 + -8*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5995235906147305 + 4*p2 + -2*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.419903911808676 + 4*p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.419903911808676 + 4*p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.055172352106393 + 4*p2 + -4*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9135796985166 + 4*p2 + -4*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1427187400231795 + 4*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1427187400231795 + 4*p2 + -4*p3 + 3*d + -1*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282796622355168 + 4*p2 + -4*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00647883671632815 + 4*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00647883671632815 + 4*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.265577203954991 + 4*p2 + -4*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2697714046804585 + 4*p2 + -4*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5989847904780068 + 4*p2 + -5*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7866766510678005 + 4*p2 + -5*p3 + 2*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7405774440677995 + 4*p2 + -5*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.773994216058184 + 4*p2 + -5*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.983493599589163 + 4*p2 + -6*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.038579332374758 + 4*p2 + -6*p3 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.934458199693583 + 4*p2 + -6*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.098592644739191 + 4*p2 + -7*p3 + 2*p5 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9569999911493987 + 4*p2 + -7*p3 + 2*p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197066730632273 + 4*p2 + -8*p3 + -1*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.05547407704248 + 4*p2 + -8*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.042777879426722 + 4*p2 + -10*p3 + 2*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9011852258369293 + 4*p2 + -10*p3 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.996523172088686 + 4*p2 + -15*p3 + 14*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.996523172088686 + 4*p2 + -15*p3 + 14*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.431549804273851 + 3*p2 + 7*p3 + -19*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.431549804273851 + 3*p2 + 7*p3 + -19*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5668325265273255 + 3*p2 + -1*p3 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.906416718228441 + 3*p2 + -1*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.906416718228441 + 3*p2 + -1*p3 + -3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8095379953130235 + 3*p2 + -2*p3 + d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8029778262535527 + 3*p2 + -2*p3 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.910198480655028 + 3*p2 + -2*p3 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6467425838661778 + 3*p2 + -3*p3 + p5 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.788335237455971 + 3*p2 + -3*p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1420125798078224 + 3*p2 + -3*p3 + 6*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141879236652971 + 3*p2 + -3*p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.13992726041754 + 3*p2 + -3*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2829458480062135 + 3*p2 + -3*p3 + 2*d + -2*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1413511000213172 + 3*p2 + -3*p3 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.025540101076133824 + 3*p2 + -3*p3 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.888141026564958 + 3*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1751596984287738 + 3*p2 + -3*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.17631126666924 + 3*p2 + -3*p3 + -2*d + l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.245321261722196 + 3*p2 + -3*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1523839988599241 + 3*p2 + -3*p3 + -1*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2939766524497176 + 3*p2 + -3*p3 + -1*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.195295928071515 + 3*p2 + -4*p3 + 3*p5 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.0537032744817236 + 3*p2 + -4*p3 + 3*p5 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.730453487208681 + 3*p2 + -4*p3 + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.728580225322515 + 3*p2 + -4*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.7152640612615 + 3*p2 + -4*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.027427027520365 + 3*p2 + -5*p3 + 4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.050644618960869 + 3*p2 + -5*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8807495316878113 + 3*p2 + -5*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.749932766422657 + 3*p2 + -5*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.0262534681313245 + 3*p2 + -5*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.600297801674282 + 3*p2 + -6*p3 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.600297801674282 + 3*p2 + -6*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.600297801674282 + 3*p2 + -6*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.600297801674282 + 3*p2 + -6*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.129047584490625 + 3*p2 + -6*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.707850251664879 + 3*p2 + -6*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.707850251664879 + 3*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.613360552426225 + 3*p2 + -7*p3 + 4*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6133776566528946 + 3*p2 + -7*p3 + 4*p4 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0190775044201659 + 3*p2 + -7*p3 + p7 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.1606701580099585 + 3*p2 + -7*p3 + p7 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.614364133742755 + 3*p2 + -7*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6881407635225654 + 3*p2 + -7*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.358713017299606 + 3*p2 + -8*p3 + 4*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.0272863369860215 + 3*p2 + -8*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8856936833962277 + 3*p2 + -8*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.624299062945566 + 2*p2 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.178899930517481 + 2*p2 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.178899930517481 + 2*p2 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.474849320122411 + 2*p2 + -1*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.47652902499453 + 2*p2 + -1*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8028921305872794 + 2*p2 + -1*p3 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.913705711288594 + 2*p2 + -2*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.055298364878388 + 2*p2 + -2*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0003316125578789226 + 2*p2 + -2*p3 + 6*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.277166713787009 + 2*p2 + -2*p3 + d + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.148844671164755 + 2*p2 + -2*p3 + -3*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0063713244344053 + 2*p2 + -2*p3 + -4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00564491839972526 + 2*p2 + -2*p3 + -6*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.902174495453593 + 2*p2 + -2*p3 + -1*p4 + d + -2*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.902174495453593 + 2*p2 + -2*p3 + -1*p4 + d + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.260850328741816 + 2*p2 + -3*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.119257675152022 + 2*p2 + -3*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.272056564270096 + 2*p2 + -3*p3 + p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.272056564270096 + 2*p2 + -3*p3 + p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.720606165036004 + 2*p2 + -3*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3710624179929922 + 2*p2 + -3*p3 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.744088348391111 + 2*p2 + -3*p3 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.602603032550316 + 2*p2 + -3*p3 + -6*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.34380403176995333 + 2*p2 + -4*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.095293108286613 + 2*p2 + -4*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.055600089814474 + 2*p2 + -6*p3 + -1*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197192743404266 + 2*p2 + -6*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8808331159623487 + 2*p2 + -7*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.022425769552142 + 2*p2 + -7*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.164957742348724 + 2*p2 + -13*p3 + 15*p4 + -4*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.698703828224852 + p2 + 43*p3 + -59*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.698703828224852 + p2 + 43*p3 + -59*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2845820431900574 + p2 + p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2845820431900574 + p2 + p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.9449682403798745 + p2 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.138702737414341 + p2 + -1*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1419349126561094 + p2 + -1*p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.278485833635667 + p2 + -1*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.348589051942171 + p2 + -1*p3 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1416989441412397 + p2 + -1*p3 + -1*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.000342259066316088 + p2 + -1*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1411425331757035 + p2 + -1*p3 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141141311445227 + p2 + -1*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3383240554828582 + p2 + -2*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.429869741837565 + p2 + -2*p3 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4652752910156461 + p2 + -2*p3 + d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5767478995441973 + p2 + -2*p3 + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.469280498078073 + p2 + -2*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.854160487731229 + p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.854160487731229 + p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.347101158754846 + p2 + -4*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.347101158754846 + p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8808556307096994 + p2 + -6*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.022448284299492 + p2 + -6*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.722013922115713 + 14*p3 + -23*p4 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.722013922115713 + 14*p3 + -23*p4 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.73079627837209 + 11*p3 + -19*p4 + 3*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.73079627837209 + 11*p3 + -19*p4 + 3*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.3857928478418495 + 10*p3 + -19*p4 + 3*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.385789008117495 + 10*p3 + -19*p4 + 3*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7107727800023929 + 10*p3 + -19*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7107727800023929 + 10*p3 + -19*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.793640523281575 + 9*p3 + -10*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.270879854790083 + 9*p3 + -11*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2516010799138962 + 9*p3 + -15*p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2516010799138962 + 9*p3 + -15*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0407855775872537 + 9*p3 + -19*p4 + 3*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0407855775872537 + 9*p3 + -19*p4 + 3*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1427063481854907 + 8*p3 + -8*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.779496200490487 + 8*p3 + -9*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.278052634417005 + 8*p3 + -10*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.517532019616683 + 8*p3 + -11*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9521966705149851 + 8*p3 + -13*p4 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6738531237049394 + 8*p3 + -13*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6738531237049394 + 8*p3 + -13*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.217251454933271 + 8*p3 + -14*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.217251454933271 + 8*p3 + -14*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.678157122636991 + 8*p3 + -15*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.678048737690442 + 8*p3 + -15*p4 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4908436579273457 + 8*p3 + -19*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.6324363115171385 + 8*p3 + -19*p4 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.007265282077276795 + 7*p3 + -7*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1064406752570757 + 7*p3 + -7*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1064406752570757 + 7*p3 + -7*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.275835891734047 + 7*p3 + -9*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.168849975618648 + 7*p3 + -10*p4 + p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.168849975618648 + 7*p3 + -10*p4 + p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1629235271122589 + 7*p3 + -11*p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1629235271122589 + 7*p3 + -11*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.4967196919133015 + 7*p3 + -15*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0651011556601886 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.993397627965898 + 6*p3 + -6*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.845358468742521 + 6*p3 + -7*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1474550315160004 + 6*p3 + -7*p4 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.146967386522993 + 6*p3 + -7*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4646141602949907 + 6*p3 + -8*p4 + 3*p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4646141602949907 + 6*p3 + -8*p4 + 3*p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4426994571410994 + 6*p3 + -8*p4 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4426994571410994 + 6*p3 + -8*p4 + 3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2206707209725365 + 6*p3 + -8*p4 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.2206707209725365 + 6*p3 + -8*p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.1973423011245297 + 6*p3 + -8*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.20945771265344 + 6*p3 + -9*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0678650590636476 + 6*p3 + -9*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2301963959607045 + 6*p3 + -10*p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2301963959607045 + 6*p3 + -10*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.669911514613819 + 6*p3 + -10*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.669911514613819 + 6*p3 + -10*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.248246233520663 + 6*p3 + -12*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.248246233520663 + 6*p3 + -12*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1754349113568636 + 5*p3 + -6*p5 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.986968350102009 + 5*p3 + -5*p4 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1230884728322741 + 5*p3 + -5*p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4618980874113534 + 5*p3 + -5*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.150711309298079 + 5*p3 + -6*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0091186557082863 + 5*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.291134575292403 + 5*p3 + -7*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.206974249667511 + 5*p3 + -7*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.204706036768252 + 5*p3 + -8*p4 + 2*p5 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0631133831784592 + 5*p3 + -8*p4 + 2*p5 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.78098095208516 + 4*p3 + -2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.78098095208516 + 4*p3 + -2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.662413563150617 + 4*p3 + -3*p5 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.274236655038761 + 4*p3 + -4*p5 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0170803411537417 + 4*p3 + -4*p5 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.015873795041838 + 4*p3 + -4*p5 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.09497174218142106 + 4*p3 + -4*p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.09909281361123005 + 4*p3 + -4*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.11766608391217812 + 4*p3 + -5*p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.11766608391217812 + 4*p3 + -5*p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.202632751651492 + 4*p3 + -5*p5 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.202617218221149 + 4*p3 + -5*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6998353336772363 + 4*p3 + -2*p4 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.699826432498052 + 4*p3 + -2*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3398683398016558 + 4*p3 + -4*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.831888532676087 + 4*p3 + -4*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6902958790862948 + 4*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.5708441658130345 + 4*p3 + -4*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41926787983598335 + 4*p3 + -6*p4 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.258406510224855 + 4*p3 + -6*p4 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.258406510224855 + 4*p3 + -6*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.253974246589417 + 4*p3 + -6*p4 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.254116490923454 + 4*p3 + -6*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.759254735992166 + 4*p3 + -7*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.00531840978826 + 4*p3 + -8*p4 + 3*p5 + 6*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0053313252247245 + 4*p3 + -8*p4 + 3*p5 + 3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.0053313252247245 + 4*p3 + -8*p4 + 3*p5 + 3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9211479612537068 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9199333866272439 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.005265875377776 + 4*p3 + -8*p4 + 3*p5 + -3*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.005265875377776 + 4*p3 + -8*p4 + 3*p5 + -3*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.005290135454378 + 4*p3 + -8*p4 + 3*p5 + -6*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.013158594822827 + 3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8715659412330342 + 3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141491249960252 + 3*p3 + -3*p6 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0858697010942953 + 3*p3 + -3*p6 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0858641160406894 + 3*p3 + -3*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.488725909406242 + 3*p3 + -2*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3060153930345653 + 3*p3 + -2*p5 + -4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142206136821869 + 3*p3 + -3*p5 + 4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.637632131205376 + 3*p3 + -3*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1321778070091268 + 3*p3 + -3*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.6781604217659363 + 3*p3 + -3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.23745187020090333 + 3*p3 + -3*p5 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1760576448339752 + 3*p3 + -4*p5 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.266076866224887 + 3*p3 + -4*p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3601431060954235 + 3*p3 + -5*p5 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.23252761524596 + 3*p3 + -2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.48315761096068 + 3*p3 + -2*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.481423626348823 + 3*p3 + -2*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2089927314457585 + 3*p3 + -3*p4 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.203277650810103 + 3*p3 + -3*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.271146524103155 + 3*p3 + -3*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.762487966929802 + 3*p3 + -4*p4 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.6452437036028815 + 3*p3 + -4*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.7853870357818185 + 3*p3 + -4*p4 + d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9535491176540388 + 3*p3 + -4*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.737394495609255 + 3*p3 + -4*p4 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.260255512034419 + 3*p3 + -5*p4 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.793730573772661 + 3*p3 + -6*p4 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.689122345192204 + 3*p3 + -6*p4 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.690574459129863 + 3*p3 + -6*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.660412543163206 + 3*p3 + -8*p4 + 3*p5 + 4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5189275763882613 + 3*p3 + -8*p4 + 3*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.4302833678736535 + 2*p3 + p5 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.773321574662782 + 2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2703522247605723 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.2703522247605723 + 2*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2748169260251492 + 2*p3 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.031152905417622383 + 2*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.031152905417622383 + 2*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5191250071199285 + 2*p3 + -1*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5191250071199285 + 2*p3 + -1*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.519069854715566 + 2*p3 + -1*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5191250071199285 + 2*p3 + -1*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.5191250071199285 + 2*p3 + -1*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.1661483634728522 + 2*p3 + -2*p6 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.760349581031943 + 2*p3 + -3*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.760349581031943 + 2*p3 + -3*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.791768125561719 + 2*p3 + -3*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.791768125561719 + 2*p3 + -3*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13479439612540006 + 2*p3 + -4*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.13479439612540006 + 2*p3 + -4*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3003863741276662 + 2*p3 + -5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.3003863741276662 + 2*p3 + -5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.333073440954425 + 2*p3 + -1*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3574142923082468 + 2*p3 + -1*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.30845936908781624 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4500520226776095 + 2*p3 + -1*p5 + -5*p6 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.164906761737934 + 2*p3 + -2*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0017381734020611528 + 2*p3 + -2*p5 + 4*d + -4*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.001385442360233099 + 2*p3 + -2*p5 + 2*d + -4*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.147404949064785 + 2*p3 + -2*p5 + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.170556392526639 + 2*p3 + -3*p5 + p6 + 4*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.10441367535876 + 2*p3 + -3*p5 + 2*p7 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.10441367535876 + 2*p3 + -3*p5 + 2*p7 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17597788328715905 + 2*p3 + -3*p5 + 6*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17491969016167488 + 2*p3 + -3*p5 + 6*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.316846574303225 + 2*p3 + -3*p5 + 2*d + -2*l + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.316846574303225 + 2*p3 + -3*p5 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.17887774783934762 + 2*p3 + -3*p5 + 2*d + -4*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.18811821903110643 + 2*p3 + -3*p5 + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.323216851540079 + 2*p3 + -3*p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130093228242129 + 2*p3 + -4*p5 + 5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.130093228242129 + 2*p3 + -4*p5 + 5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0005627026491597 + 2*p3 + -4*p5 + 3*p6 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.0005627026491597 + 2*p3 + -4*p5 + 3*p6 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1789975029209847 + 2*p3 + -4*p5 + 2*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1789975029209847 + 2*p3 + -4*p5 + 2*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.188753893439633 + 2*p3 + -4*p5 + 2*p6 + -2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.188755464235959 + 2*p3 + -4*p5 + 2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.3479849679931058 + 2*p3 + -4*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.346638271942267 + 2*p3 + -4*p5 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4890674618425406 + 2*p3 + -4*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9748611841121666 + 2*p3 + -1*p4 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.9748611841121666 + 2*p3 + -1*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.497826579724916 + 2*p3 + -1*p4 + -2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.497826579724916 + 2*p3 + -1*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.145619128174144 + 2*p3 + -2*p4 + 3*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.02122582169812904 + 2*p3 + -2*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1491612738910666 + 2*p3 + -2*p4 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.282683525019638 + 2*p3 + -2*p4 + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.004026474584350918 + 2*p3 + -2*p4 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.258745985262686 + 2*p3 + -2*p4 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.773349325397889 + 2*p3 + -3*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.266776419684037 + 2*p3 + -4*p4 + 2*p5 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.266776419684037 + 2*p3 + -4*p4 + 2*p5 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.266776419684037 + 2*p3 + -4*p4 + 2*p5 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.266776419684037 + 2*p3 + -4*p4 + 2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.282538479660481 + 2*p3 + -4*p4 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.2785448172660665 + 2*p3 + -4*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.286373142560037 + 2*p3 + -4*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.269294921296348 + 2*p3 + -4*p4 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.316009505895652 + 2*p3 + -8*p4 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.316009505895652 + 2*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.203012543795042 + p3 + 2*p4 + -1*d + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.1686895713620726 + p3 + 2*p5 + -5*p6 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.331147976726992 + p3 + 2*p5 + -6*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.331147976726992 + p3 + 2*p5 + -6*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.9757989240243129 + p3 + p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.2776440443407955 + p3 + p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1823944372441413 + p3 + p5 + -2*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1823944372441413 + p3 + p5 + -2*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1823944372441413 + p3 + p5 + -2*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1823944372441413 + p3 + p5 + -2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5271100374857778 + p3 + p5 + -5*p6 + d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5271100374857778 + p3 + p5 + -5*p6 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2079439376032856 + p3 + p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2201322699016628 + p3 + p5 + -5*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2201322699016628 + p3 + p5 + -5*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2079439376032856 + p3 + p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.116095679142817 + p3 + 3*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.563664587900347 + p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4192853416268199 + p3 + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4105450817986829 + p3 + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4306757093911853 + p3 + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8850412878201486 + p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.172948740827298 + p3 + -1*p7 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01162825614141222 + p3 + -1*p6 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00787021319601803 + p3 + -1*p6 + -4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.035260056704998 + p3 + -2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.604468108385631 + p3 + -3*p6 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2955434090242826 + p3 + -3*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.2955434090242826 + p3 + -3*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.494631588494532 + p3 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01240998911338048 + p3 + -1*p5 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.013017189160149307 + p3 + -1*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.02682955032750723 + p3 + -1*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.03549790259046227 + p3 + -1*p5 + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.01921467880105597 + p3 + -1*p5 + -1*l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.029046642076315632 + p3 + -1*p5 + -6*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.030764569659053647 + p3 + -1*p5 + -6*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.030764569659053647 + p3 + -1*p5 + -6*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.73162460313677 + p3 + -2*p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.73162460313677 + p3 + -2*p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5900319495469764 + p3 + -2*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1280806635867036 + p3 + -2*p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.118362870339474 + p3 + -2*p5 + 4*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.118362870339474 + p3 + -2*p5 + 4*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7585337149832176 + p3 + -2*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.8055164076505785 + p3 + -2*p5 + 4*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.321137308732961 + p3 + -2*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.261717225282965 + p3 + -2*p5 + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.615143929855913 + p3 + -2*p5 + 3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.277319770664092 + p3 + -2*p5 + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.7679635543988181 + p3 + -2*p5 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.331755019237469 + p3 + -2*p5 + -4*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0194412480329142 + p3 + -3*p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0194412480329142 + p3 + -3*p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9869067399794136 + p3 + -3*p5 + 5*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9869067399794136 + p3 + -3*p5 + 5*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0194412480329142 + p3 + -3*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0194412480329142 + p3 + -3*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9720464746308417 + p3 + -3*p5 + 4*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.9719937656874316 + p3 + -3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.333376430112572 + p3 + -3*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.398370222528813 + p3 + -3*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.005315749302799129 + p3 + -1*p4 + 2*d + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.011310257151698854 + p3 + -1*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4363496172531267 + p3 + -2*p4 + p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.4363496172531267 + p3 + -2*p4 + p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5894847803281597 + p3 + -2*p4 + 2*p6 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.463791403587284 + p3 + -2*p4 + 2*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.463791403587284 + p3 + -2*p4 + 2*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.5903563977566056 + p3 + -2*p4 + 2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.584732814865339 + p3 + -2*p4 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.47244496304318 + p3 + -2*p4 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.470522482872108 + p3 + -2*p4 + -2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.570361948337341 + p3 + -2*p4 + -4*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4425044953653351 + p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.036810615710787 + p3 + -4*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.807980288955619 + 2*p4 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.9996663440369185 + 2*p4 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3842716018691776 + 2*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4751226046900067 + p4 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4751226046900067 + p4 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4751226046900067 + p4 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4751226046900067 + p4 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0961100714145213 + 4*p5 + -10*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1605942276891805 + 4*p5 + -10*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1605942276891805 + 4*p5 + -10*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.0961100714145213 + 4*p5 + -10*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.486456640811117 + 3*p5 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.486456640811117 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.352548148319078 + 3*p5 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.352548148319078 + 3*p5 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.486456640811117 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.486456640811117 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41929597963694054 + 3*p5 + -1*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.41929597963694054 + 3*p5 + -1*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4800756830725583 + 3*p5 + -5*p6 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5338337438961607 + 3*p5 + -5*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5338337438961607 + 3*p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5338337438961607 + 3*p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.5338337438961607 + 3*p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.4656816036655105 + 3*p5 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3193664721789373 + 2*p5 + 2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.590415606909831 + 2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.3193664721789373 + 2*p5 + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.590415606909831 + 2*p5 + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.259689684789238 + 2*p5 + -2*p6 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.229501248316269 + 2*p5 + -2*p6 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.229501248316269 + 2*p5 + -2*p6 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.229501248316269 + 2*p5 + -2*p6 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.229501248316269 + 2*p5 + -2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197379493634231 + 2*p5 + -4*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.197379493634231 + 2*p5 + -4*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.890900192084485 + 2*p5 + -5*p6 + 4*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.023512428541067 + 2*p5 + -5*p6 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9085620514500414 + 2*p5 + -5*p6 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.908254873501691 + 2*p5 + -5*p6 + -2*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.024172512064171 + 2*p5 + -5*p6 + -2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.8909586606144266 + 2*p5 + -5*p6 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.04681990443805 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3705513855880083 + p5 + d + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.488993817446423 + p5 + d + -1*l + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.1724258401834 + p5 + -2*p6 + 2*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8206869755435217 + p5 + -2*p6 + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.8206869755435217 + p5 + -2*p6 + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.2058551785443985 + p5 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.915048393082153 + 2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.667830026449574 + p6 + 4*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.773699429947522 + p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.779052878362164 + p6 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.676403258268295 + p6 + -4*d + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.558601736806162 + p8 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.558601736806162 + p8 + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.558601736806162 + p8 + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.558601736806162 + p8 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.0018622663118779497 + 4*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1532849633147535 + 2*d + -3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142283803973583 + d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.142283803973583 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.281291974007023 + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2897655390271385 + 5*p1 + -13*p3 + 7*p4 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2897655390271385 + 5*p1 + -13*p3 + 7*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7563431522390396 + 4*p1 + -3*p3 + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1944740355301184 + 4*p1 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1944740355301184 + 4*p1 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.458616719379629 + 3*p1 + -2*p3 + -3*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.458616719379629 + 3*p1 + -2*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3083937617045747 + 2*p1 + -1*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.304792125755109 + 2*p1 + -2*p2 + -4*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5740991878713706 + 2*p1 + -2*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1043921823140104 + p1 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3645821850132624 + p1 + -2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.912681019986432 + p1 + -3*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3854521425752266 + p1 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.385452317108152 + p1 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3847253874746963 + p1 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.676481615053393 + p1 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6764791715924403 + p1 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7017382746590024 + p1 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7017382746590024 + p1 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6569363708920095 + p1 + -4*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6569363708920095 + p1 + -4*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.657330989835885 + p1 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.215422166845939 + p1 + -10*p3 + 11*p4 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5939386945446405 + 41*p2 + -42*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5939386945446405 + 41*p2 + -42*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.857819072404209 + 29*p2 + -33*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.857819072404209 + 29*p2 + -33*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.750157905397846 + 26*p2 + -27*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9021032860201115 + 26*p2 + -28*p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.218887203003191 + 25*p2 + -27*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.218887203003191 + 25*p2 + -27*p3 + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1336264472849154 + 24*p2 + -24*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1316662680020007 + 24*p2 + -24*p3 + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.111006831141094 + 24*p2 + -26*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.111006831141094 + 24*p2 + -26*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.364182347078264 + 23*p2 + -23*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.364182347078264 + 23*p2 + -23*p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2513101420259052 + 23*p2 + -26*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2513101420259052 + 23*p2 + -26*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7964429644682354 + 22*p2 + -21*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.938094610186746 + 22*p2 + -21*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.133673047575944 + 22*p2 + -22*p3 + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.028151986301743332 + 22*p2 + -22*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.028142910589632968 + 22*p2 + -22*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8070962796894836 + 21*p2 + -20*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11433651929814853 + 21*p2 + -20*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11433651929814853 + 21*p2 + -20*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2335266332114847 + 21*p2 + -22*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9090179314506632 + 21*p2 + -23*p3 + -2*d + -1*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9090179314506632 + 21*p2 + -23*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7556923189609712 + 20*p2 + -15*p3 + -8*p4 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7556923189609712 + 20*p2 + -15*p3 + -8*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0375666583494842 + 20*p2 + -19*p3 + -3*p5 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0375666583494842 + 20*p2 + -19*p3 + -3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278225430511269 + 20*p2 + -20*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.136631206125149 + 20*p2 + -20*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -1*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -1*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4619392601850676 + 19*p2 + -17*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4619392601850676 + 19*p2 + -17*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2788820233758695 + 19*p2 + -19*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1624517816120785 + 19*p2 + -19*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1624465456243223 + 19*p2 + -19*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.140665883756984 + 19*p2 + -19*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.140665883756984 + 19*p2 + -19*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.928009731706239 + 19*p2 + -21*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.412112945059016 + 18*p2 + -15*p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -1*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4593402903959228 + 18*p2 + -16*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -1*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -4*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7991091294335821 + 18*p2 + -17*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.994491783372289 + 18*p2 + -17*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7978261379004412 + 18*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.994491783372289 + 18*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7978261379004412 + 18*p2 + -17*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.044226851771728 + 18*p2 + -18*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.163424279071289 + 18*p2 + -18*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753244520179999 + 18*p2 + -19*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.487065020096778 + 17*p2 + -15*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4870404109543248 + 17*p2 + -15*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6016579537569946 + 17*p2 + -15*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6016579537569946 + 17*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.961498428258438 + 17*p2 + -15*p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8199057746686458 + 17*p2 + -15*p3 + -1*p5 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.799685262619665 + 17*p2 + -16*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.93956836620713 + 17*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.163280813006775 + 17*p2 + -17*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6096679508294638 + 17*p2 + -18*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753361457239882 + 17*p2 + -18*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8002223004305038 + 16*p2 + -15*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.940147990051717 + 16*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1389514468327504 + 16*p2 + -16*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1362660832456313 + 16*p2 + -16*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1391711837855762 + 16*p2 + -16*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1391711837855762 + 16*p2 + -16*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5941826915740693 + 16*p2 + -17*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5987579146718804 + 15*p2 + -13*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.46007385228053604 + 15*p2 + -13*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1395418917187 + 15*p2 + -15*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1708946373356754 + 15*p2 + -15*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.430810125238539 + 15*p2 + -16*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.209560163480532 + 15*p2 + -17*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.409636139819194 + 15*p2 + -18*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.437557219060898 + 14*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.204490854668114 + 14*p2 + -16*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7862605390791755 + 13*p2 + -10*p3 + -2*d + -1*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7862605390791755 + 13*p2 + -10*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8016171675686978 + 13*p2 + -12*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281924481327945 + 13*p2 + -13*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2819176745438625 + 13*p2 + -13*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2502090053025055 + 13*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753898495050721 + 13*p2 + -14*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.75391490114569 + 13*p2 + -14*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6105245584263426 + 13*p2 + -14*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1948414528326134 + 13*p2 + -15*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753972846076857 + 12*p2 + -8*p3 + -2*p7 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.753972846076857 + 12*p2 + -8*p3 + -2*p7 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.734032284839896 + 12*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1401002225464127 + 12*p2 + -12*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1402600947058956 + 12*p2 + -12*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2514377170959095 + 12*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3091716464538716 + 12*p2 + -13*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.076030258398203 + 12*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714300639514399 + 11*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143048781784732 + 11*p2 + -11*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141036068091332 + 11*p2 + -11*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3399409285019057 + 11*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.836900952253207 + 11*p2 + -15*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8790975605541654 + 10*p2 + -2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.954337350835822 + 10*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.954337350835822 + 10*p2 + -3*p3 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.472274261344018 + 10*p2 + -4*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4032227614481325 + 10*p2 + -7*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1414350503583384 + 10*p2 + -10*p3 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2831463863372665 + 10*p2 + -10*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141237479087012 + 10*p2 + -10*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3180679387171372 + 10*p2 + -11*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0001602467202835 + 10*p2 + -12*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.169006042047042 + 10*p2 + -12*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.168986145293569 + 10*p2 + -12*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.400631122041846 + 9*p2 + -6*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9433384519243635 + 9*p2 + -8*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1417537474797523 + 9*p2 + -9*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3369353139936795 + 9*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19534266040388656 + 9*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1624612063900392 + 9*p2 + -9*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1508402806314852 + 9*p2 + -9*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.752724586595829 + 9*p2 + -10*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.750769992366521 + 9*p2 + -10*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3221087250013546 + 9*p2 + -10*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.984397305580896 + 9*p2 + -11*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9432597205784647 + 9*p2 + -11*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0848408549951944 + 9*p2 + -11*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.011694438113329 + 9*p2 + -14*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.46217435603531126 + 8*p2 + -6*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8030650927161522 + 8*p2 + -7*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.803085862134251 + 8*p2 + -7*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1407407583818947 + 8*p2 + -8*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3331758747848843 + 8*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.19158322119509077 + 8*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1400199374008206 + 8*p2 + -8*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1523704107867085 + 8*p2 + -8*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3260514237816097 + 8*p2 + -9*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.323622274528684 + 8*p2 + -9*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.744548242649012 + 8*p2 + -9*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9724868296994367 + 8*p2 + -10*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.440764087028513 + 8*p2 + -11*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.331982427140687 + 8*p2 + -11*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1903897735508937 + 8*p2 + -11*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3631724740781101 + 8*p2 + -12*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.143169043468511 + 8*p2 + -13*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.153235229929389 + 8*p2 + -13*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.026975817417141 + 8*p2 + -13*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.074790883099728 + 8*p2 + -13*p3 + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0725938626373175 + 8*p2 + -13*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9086934577460838 + 8*p2 + -13*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.153760574034239 + 8*p2 + -13*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.145819675003515 + 8*p2 + -13*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.900365312645926 + 8*p2 + -14*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.961979100432756 + 8*p2 + -14*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3953404629886924 + 7*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1740268307062545 + 7*p2 + -5*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.188584421969264 + 7*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.46842280929037616 + 7*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4684329322000377 + 7*p2 + -5*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8032148419659735 + 7*p2 + -6*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.802515139468849 + 7*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00034121186876489147 + 7*p2 + -7*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141072720005624 + 7*p2 + -7*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1433824887377133 + 7*p2 + -7*p3 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.144859735416601 + 7*p2 + -7*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1489535797100796 + 7*p2 + -7*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1794348824315346 + 7*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.166267944021564 + 7*p2 + -7*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3290031246125826 + 7*p2 + -8*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.611106102133107 + 7*p2 + -8*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3323056366232062 + 7*p2 + -8*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7339741653758045 + 7*p2 + -8*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.469787341692852 + 7*p2 + -8*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9488030608157243 + 7*p2 + -9*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.990130886706623 + 7*p2 + -9*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.941766940469234 + 7*p2 + -9*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.941769383930187 + 7*p2 + -9*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2118781012668394 + 6*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4047083432158467 + 6*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4471969875922471 + 6*p2 + -4*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.44731183025702825 + 6*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.48315530803938544 + 6*p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.48315216644673187 + 6*p2 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8033195617210929 + 6*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944893714820815 + 6*p2 + -5*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8026467372944492 + 6*p2 + -5*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00046705010783368257 + 6*p2 + -6*p3 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0005632177496185701 + 6*p2 + -6*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18732950474213017 + 6*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.750032241691703 + 6*p2 + -7*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3335226547106218 + 6*p2 + -7*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6092385998334733 + 6*p2 + -7*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.507087296735999 + 6*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.718550865308855 + 6*p2 + -7*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8983646162294145 + 6*p2 + -8*p3 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.978247463428569 + 6*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9334418944701457 + 6*p2 + -8*p3 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.955183635495165 + 6*p2 + -8*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0932711443481775 + 6*p2 + -8*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.060579905727848 + 6*p2 + -8*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1569490905497573 + 6*p2 + -9*p3 + 3*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.29854174413955 + 6*p2 + -9*p3 + 3*p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.715585899975569 + 6*p2 + -9*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.715585899975569 + 6*p2 + -9*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2452496607312802 + 6*p2 + -9*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2651066206970702 + 6*p2 + -9*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2651066206970702 + 6*p2 + -9*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2452496607312802 + 6*p2 + -9*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.195036189085553 + 6*p2 + -9*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115050925052572 + 6*p2 + -10*p3 + 3*p5 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115044467334341 + 6*p2 + -10*p3 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115044467334341 + 6*p2 + -10*p3 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.064422414110721 + 6*p2 + -10*p3 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.064422414110721 + 6*p2 + -10*p3 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115203815895048 + 6*p2 + -10*p3 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115203815895048 + 6*p2 + -10*p3 + 3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.115197707242666 + 6*p2 + -10*p3 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5914903551682595 + 6*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.202431681223345 + 5*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5104643003124155 + 5*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5104697108330967 + 5*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.66006837273303 + 5*p2 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.660083208031672 + 5*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944956197608037 + 5*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.487232256632385 + 5*p2 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.802339384813173 + 5*p2 + -4*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00029286624848464846 + 5*p2 + -5*p3 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1417174446313108 + 5*p2 + -5*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6083261417005306 + 5*p2 + -6*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.330406543864111 + 5*p2 + -6*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7107694638768143 + 5*p2 + -6*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.852362117466608 + 5*p2 + -6*p3 + -1*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16406461487889615 + 5*p2 + -6*p3 + -4*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16405571369971098 + 5*p2 + -6*p3 + -4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16405571369971098 + 5*p2 + -6*p3 + -4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0739965497638784 + 5*p2 + -6*p3 + -4*p4 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0739965497638784 + 5*p2 + -6*p3 + -4*p4 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16428190837076947 + 5*p2 + -6*p3 + -4*p4 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.16428190837076947 + 5*p2 + -6*p3 + -4*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1642730071915843 + 5*p2 + -6*p3 + -4*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3096809335296038 + 5*p2 + -7*p3 + p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.451273587119397 + 5*p2 + -7*p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.957833045299692 + 5*p2 + -7*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.945477859524824 + 5*p2 + -7*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.751123596072976 + 5*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2504240383646679 + 5*p2 + -8*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1840011703568936 + 5*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.325606913916077 + 5*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2608474937234284 + 5*p2 + -8*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2529161940035904 + 5*p2 + -8*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.031274056762661 + 5*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.635058660219944 + 5*p2 + -9*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.659808501705725 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.529857002697175 + 4*p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.530193153111109 + 4*p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8033254958405498 + 4*p2 + -3*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8034333571883232 + 4*p2 + -3*p3 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.24856214661359 + 4*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.374139109893358 + 4*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944740649445415 + 4*p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0004750786223928565 + 4*p2 + -4*p3 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1420209573882327 + 4*p2 + -4*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141845551798407 + 4*p2 + -4*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1461296369803526 + 4*p2 + -4*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.217903509941816 + 4*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142137719915191 + 4*p2 + -4*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.259724565879329 + 4*p2 + -4*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.1181319122895354 + 4*p2 + -4*p3 + -1*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.688120177135709 + 4*p2 + -5*p3 + 2*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5465275235459153 + 4*p2 + -5*p3 + 2*p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3354076103027759 + 4*p2 + -5*p3 + 3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3310317208021756 + 4*p2 + -5*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.606419544025652 + 4*p2 + -5*p3 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.443383128104055 + 4*p2 + -5*p3 + d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6171363892316728 + 4*p2 + -5*p3 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.615676097741479 + 4*p2 + -5*p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4769997402937936 + 4*p2 + -5*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.47698787205488 + 4*p2 + -5*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6325603874303223 + 4*p2 + -5*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.477575524414026 + 4*p2 + -5*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.16595832261226 + 4*p2 + -6*p3 + 3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.16595832261226 + 4*p2 + -6*p3 + 3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.098871033253201 + 4*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.955908994332294 + 4*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.752081266731861 + 4*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.02580753650744 + 4*p2 + -6*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6087942475042323 + 4*p2 + -8*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9067118109133694 + 4*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5008721452763799 + 3*p2 + -1*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5007408965166299 + 3*p2 + -1*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6653324262967031 + 3*p2 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6661192207235022 + 3*p2 + -1*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.486262551699977 + 3*p2 + -2*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.805803863378382 + 3*p2 + -2*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.94474082397834 + 3*p2 + -2*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.945261106628359 + 3*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4918779740353445 + 3*p2 + -2*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.9417919156741705 + 3*p2 + -2*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8004568726819719 + 3*p2 + -2*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.392027346961215 + 3*p2 + -3*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.250434693371422 + 3*p2 + -3*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1413531944164195 + 3*p2 + -3*p3 + 6*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1413531944164195 + 3*p2 + -3*p3 + 6*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.218965891857505 + 3*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14802660984939506 + 3*p2 + -3*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.219713067310283 + 3*p2 + -3*p3 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.062314239405554 + 3*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.191895162522322 + 3*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0017912314113217804 + 3*p2 + -3*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0012957324366805903 + 3*p2 + -3*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04746597433723778 + 3*p2 + -3*p3 + -4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04670972317234865 + 3*p2 + -3*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11910144268901826 + 3*p2 + -3*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.260694096278811 + 3*p2 + -3*p3 + -1*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.39373842526828684 + 3*p2 + -4*p3 + p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5353310788580803 + 3*p2 + -4*p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.363869218013823 + 3*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6305757735378796 + 3*p2 + -4*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.462956472066397 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.476790475316479 + 3*p2 + -4*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4782209471714145 + 3*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5566071490420332 + 3*p2 + -4*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.122986047500132 + 3*p2 + -5*p3 + 2*p5 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4459569396570218 + 3*p2 + -5*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.369932142769401 + 3*p2 + -5*p3 + p5 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.369932142769401 + 3*p2 + -5*p3 + p5 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.440371013386014 + 3*p2 + -5*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.042880696316298 + 3*p2 + -5*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0414507480601385 + 3*p2 + -5*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.047421519431213 + 3*p2 + -5*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.951914284740329 + 3*p2 + -5*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.034313049551184 + 3*p2 + -5*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.264373590909549 + 3*p2 + -6*p3 + 2*p6 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.405966244499343 + 3*p2 + -6*p3 + 2*p6 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.642318174212372 + 3*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.203931634179142 + 3*p2 + -6*p3 + -1*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5769971410596986 + 3*p2 + -7*p3 + 4*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5768062020395304 + 3*p2 + -7*p3 + 4*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5962537077628025 + 3*p2 + -7*p3 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.739588898077787 + 3*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7682565951802278 + 3*p2 + -7*p3 + -1*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.831031026919633 + 2*p2 + p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5448870800836493 + 2*p2 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5447855019211832 + 2*p2 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.944817269399578 + 2*p2 + -1*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.803972314861339 + 2*p2 + -1*p3 + d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.946716362158673 + 2*p2 + -1*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.466774903403909 + 2*p2 + -1*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8015834827141342 + 2*p2 + -1*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.486537790123017 + 2*p2 + -1*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9520034710651055 + 2*p2 + -1*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.093596124654899 + 2*p2 + -1*p3 + -1*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0013226105071613029 + 2*p2 + -2*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2904126901171447 + 2*p2 + -2*p3 + d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007819598647710195 + 2*p2 + -2*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.006022433116931633 + 2*p2 + -2*p3 + -4*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3586250272103555 + 2*p2 + -2*p3 + -1*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.500217680800149 + 2*p2 + -2*p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.746948070370504 + 2*p2 + -3*p3 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712579744871932 + 2*p2 + -3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.483732347883361 + 2*p2 + -3*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7215762190342625 + 2*p2 + -3*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.480311677082377 + 2*p2 + -3*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.729669136242835 + 2*p2 + -3*p3 + -4*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3124685819092057 + 2*p2 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7635098317118953 + 2*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.763546832692038 + 2*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.111728873852644 + 2*p2 + -4*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.111698330590733 + 2*p2 + -4*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.321238703864185 + 2*p2 + -5*p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.115296484380012 + 2*p2 + -5*p3 + -1*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9737038307902188 + 2*p2 + -5*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8168738056887146 + 2*p2 + -6*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6752811520989213 + 2*p2 + -6*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.251982302314115 + 2*p2 + -13*p3 + 15*p4 + -2*d + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.251982302314115 + 2*p2 + -13*p3 + 15*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.33879598401428085 + p2 + p3 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.33879598401428085 + p2 + p3 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3063189227881202 + p2 + p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.233777304983654 + p2 + p3 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.233777304983654 + p2 + p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8035857244320224 + p2 + 3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8035351098837147 + p2 + 3*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.614597309730821 + p2 + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.365923296010495 + p2 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7233091309536177 + p2 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8035625115529705 + p2 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.945149056490382 + p2 + -1*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3507115298488879 + p2 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3553834271906264 + p2 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.934167619369759 + p2 + -1*p3 + p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7925749657799657 + p2 + -1*p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142883324571643 + p2 + -1*p3 + 4*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1246018733216285 + p2 + -1*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415811344167297 + p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1428157803295904 + p2 + -1*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1419846545397907 + p2 + -1*p3 + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.142781571876252 + p2 + -1*p3 + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1418869161016794 + p2 + -1*p3 + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283157381911555 + p2 + -1*p3 + -1*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283157381911555 + p2 + -1*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.484826669324361 + p2 + -1*p3 + -1*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3432340157345688 + p2 + -1*p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.479762421966774 + p2 + -2*p3 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3342565656610856 + p2 + -2*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8742101235481223 + p2 + -2*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.478723951061839 + p2 + -2*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1449723006550383 + p2 + -2*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1420401390133712 + p2 + -3*p3 + p5 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.283632792603164 + p2 + -3*p3 + p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.716907097222694 + p2 + -3*p3 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.716865732919422 + p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8886508117445144 + p2 + -3*p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.336500220407791 + 29*p3 + -33*p4 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.336500220407791 + 29*p3 + -33*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5025883275298659 + 28*p3 + -31*p4 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5025883275298659 + 28*p3 + -31*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8503516642029183 + 17*p3 + -28*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7128690949669634 + 14*p3 + -23*p4 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.124134291116702 + 13*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1213466427371004 + 13*p3 + -17*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.622430679482989 + 12*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6923972725023293 + 12*p3 + -14*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1163733440301757 + 12*p3 + -15*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1228013746686376 + 12*p3 + -16*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5736176600290617 + 12*p3 + -16*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6180647213624919 + 12*p3 + -17*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0468397671982554 + 12*p3 + -17*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11322073030734855 + 12*p3 + -18*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.309997212685015 + 11*p3 + -12*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0410906526421866 + 11*p3 + -16*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0115596732001255 + 11*p3 + -18*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.240468688809609 + 11*p3 + -21*p4 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.241013406069156 + 11*p3 + -21*p4 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.140112256819935 + 10*p3 + -12*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.140112256819935 + 10*p3 + -12*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5651904952720993 + 10*p3 + -15*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.565191018870875 + 10*p3 + -15*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.375652318853153 + 9*p3 + -8*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.965776579320927 + 9*p3 + -9*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.639008514850132 + 9*p3 + -10*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.639008514850132 + 9*p3 + -10*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1356691721431327 + 9*p3 + -11*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1356691721431327 + 9*p3 + -11*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6306066658656397 + 9*p3 + -12*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6306066658656397 + 9*p3 + -12*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.268951606534164 + 9*p3 + -13*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8848403919249276 + 9*p3 + -13*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.76182332855401 + 9*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.767940533049325 + 9*p3 + -14*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.767940533049325 + 9*p3 + -14*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.277560809132108 + 9*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.755109936582848 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2346282935336603 + 9*p3 + -17*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2288826696360946 + 9*p3 + -17*p4 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2288826696360946 + 9*p3 + -17*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.229134869713008 + 9*p3 + -17*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5336274374802582 + 8*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.726926840928835 + 8*p3 + -13*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3369772018957273 + 8*p3 + -13*p4 + -1*p6 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7348044015043445 + 8*p3 + -15*p4 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7376281697011464 + 8*p3 + -15*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5208256219498051 + 7*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6439980621157333 + 7*p3 + -8*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.783784648995564 + 7*p3 + -8*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.266251067080869 + 7*p3 + -9*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.523349035978972 + 7*p3 + -11*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6649416895687645 + 7*p3 + -11*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1587162364174013 + 7*p3 + -11*p4 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1814411214100684 + 7*p3 + -11*p4 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1814411214100684 + 7*p3 + -11*p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1587162364174013 + 7*p3 + -11*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.108730721768618 + 6*p3 + -6*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00974434774680954 + 6*p3 + -6*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.993397278900047 + 6*p3 + -6*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.828012688504501 + 6*p3 + -7*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7028112860864957 + 6*p3 + -7*p4 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.443867256943609 + 6*p3 + -8*p4 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2768052476006035 + 6*p3 + -8*p4 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.280969603195863 + 6*p3 + -8*p4 + 4*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.276762487033931 + 6*p3 + -8*p4 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.278118956928581 + 6*p3 + -8*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.13545222771711 + 6*p3 + -8*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.305690421226161 + 6*p3 + -8*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6623714837190113 + 6*p3 + -9*p4 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6623714837190113 + 6*p3 + -9*p4 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.235083841465064 + 6*p3 + -10*p4 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.252887247032958 + 6*p3 + -10*p4 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.252887247032958 + 6*p3 + -10*p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.235083841465064 + 6*p3 + -10*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.245571699473223 + 6*p3 + -10*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7402960884940613 + 6*p3 + -11*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1225973626757133 + 5*p3 + -5*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.122572055401559 + 5*p3 + -5*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004835958291425888 + 5*p3 + -5*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.033702656921860905 + 5*p3 + -5*p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.08976699581904876 + 5*p3 + -5*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.785387559380595 + 5*p3 + -6*p4 + 4*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6483928011722546 + 5*p3 + -6*p4 + 2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.14110763508898 + 5*p3 + -6*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9995149814991873 + 5*p3 + -6*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7548989007813307 + 5*p3 + -6*p4 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.42637800214275795 + 5*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.05476110154472368 + 5*p3 + -8*p4 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.218516295042191 + 5*p3 + -8*p4 + 3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2190906828990227 + 5*p3 + -8*p4 + 3*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2213308129939575 + 5*p3 + -8*p4 + 3*p5 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.767366677289586 + 5*p3 + -8*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.662008663760788 + 5*p3 + -9*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.157911673625498 + 5*p3 + -10*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4838705439668527 + 4*p3 + -3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.48387246382902993 + 4*p3 + -3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.118036625810693 + 4*p3 + -3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.118036625810693 + 4*p3 + -3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.91018834924705 + 4*p3 + -4*p5 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.91018834924705 + 4*p3 + -4*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9015235131375485 + 4*p3 + -2*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.243850438768273 + 4*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3298407081206145 + 4*p3 + -3*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.17581210250317 + 4*p3 + -4*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.037890225396170894 + 4*p3 + -4*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.789163928283134 + 4*p3 + -5*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.789191679018241 + 4*p3 + -5*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9782093982542422 + 4*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.726981486731056 + 4*p3 + -5*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.721180361363277 + 4*p3 + -5*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9914375977209576 + 4*p3 + -6*p4 + 3*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.481995047145926 + 4*p3 + -6*p4 + 2*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.41913732920793423 + 4*p3 + -6*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.273644456325243 + 4*p3 + -6*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.41930557894782644 + 4*p3 + -6*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005323471243091 + 4*p3 + -8*p4 + 3*p5 + 4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.96428257748122 + 4*p3 + -8*p4 + 3*p5 + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.971602488364084 + 4*p3 + -8*p4 + 3*p5 + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.971600393968982 + 4*p3 + -8*p4 + 3*p5 + -1*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.964276119762988 + 4*p3 + -8*p4 + 3*p5 + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.005288564658051 + 4*p3 + -8*p4 + 3*p5 + -4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.30899940795165 + 4*p3 + -8*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311645327097674 + 4*p3 + -8*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.311649864953728 + 4*p3 + -8*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.34243448040423 + 3*p3 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139848895134126 + 3*p3 + -3*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139848895134126 + 3*p3 + -3*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8946653908798123 + 3*p3 + -1*p5 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8946653908798123 + 3*p3 + -1*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.490490786345859 + 3*p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4904799653044964 + 3*p3 + -2*p5 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.575109933536151 + 3*p3 + -2*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1971032080136395 + 3*p3 + -2*p5 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.332839358308466 + 3*p3 + -2*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2277504660520095 + 3*p3 + -2*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3389024575969692 + 3*p3 + -2*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1515396340627593 + 3*p3 + -3*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1241267946992353 + 3*p3 + -3*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.048166225928088 + 3*p3 + -3*p5 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8851995976816216 + 3*p3 + -3*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8886326603202943 + 3*p3 + -3*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.893533195794044 + 3*p3 + -3*p5 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.25361466627192203 + 3*p3 + -4*p5 + 3*d + -4*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3049399381461195 + 3*p3 + -4*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.236422151437177 + 3*p3 + -4*p5 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1797033140704913 + 3*p3 + -4*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.160986577705029 + 3*p3 + -5*p5 + 2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.387373060448288 + 3*p3 + -5*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.609028138620633 + 3*p3 + -2*p4 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.368095741323719 + 3*p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.226503087733926 + 3*p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.841615950729153 + 3*p3 + -3*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.700023471672285 + 3*p3 + -3*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.781171018440701 + 3*p3 + -4*p4 + 3*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779594113461524 + 3*p3 + -4*p4 + 3*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9564500294037785 + 3*p3 + -4*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.761541300343522 + 3*p3 + -4*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.762022836684147 + 3*p3 + -4*p4 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.740798585782344 + 3*p3 + -4*p4 + -4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.741772130439107 + 3*p3 + -4*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.259564536183554 + 3*p3 + -5*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.40180568613685497 + 3*p3 + -5*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5433983397266484 + 3*p3 + -5*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.265809149714264 + 3*p3 + -5*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.780779715622403 + 3*p3 + -6*p4 + 2*p5 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779824496922788 + 3*p3 + -6*p4 + 2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.520939085347818 + 3*p3 + -7*p4 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4837389631378857 + 3*p3 + -7*p4 + -1*d + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.538972550806075 + 3*p3 + -7*p4 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.520939085347818 + 3*p3 + -7*p4 + -3*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5034677989399459 + 3*p3 + -8*p4 + 3*p5 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6597006233613176 + 3*p3 + -8*p4 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.659156255167621 + 3*p3 + -8*p4 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.13596568658641345 + 2*p3 + p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.374189907472908 + 2*p3 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2325972538831143 + 2*p3 + 2*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.517319123441206 + 2*p3 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.642510194423358 + 2*p3 + 2*p5 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.294287670122423 + 2*p3 + 2*p5 + -7*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.294287670122423 + 2*p3 + 2*p5 + -7*p6 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.03612067006084 + 2*p3 + p6 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.49887691037045 + 2*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3527439827594687 + 2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1423530935448865 + 2*p3 + -2*p6 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281827441021535 + 2*p3 + -2*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0008204792813625344 + 2*p3 + -2*p6 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.145312822890419 + 2*p3 + -2*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6221491493763258 + 2*p3 + -3*p6 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7602581257791385 + 2*p3 + -3*p6 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7602581257791385 + 2*p3 + -3*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09843918780635819 + 2*p3 + -5*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09843918780635819 + 2*p3 + -5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.334910399992149 + 2*p3 + -1*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7075200353704005 + 2*p3 + -1*p5 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.22541855713337 + 2*p3 + -1*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4989921105993975 + 2*p3 + -1*p5 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6227000007832055 + 2*p3 + -1*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.107057849175532 + 2*p3 + -1*p5 + -2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.10703027297335 + 2*p3 + -1*p5 + -2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3311489984295929 + 2*p3 + -1*p5 + -5*p6 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1437397576355965 + 2*p3 + -2*p5 + 6*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1437189882174974 + 2*p3 + -2*p5 + 4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1437189882174974 + 2*p3 + -2*p5 + 4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.143861232551535 + 2*p3 + -2*p5 + 2*d + l + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278906981584172 + 2*p3 + -2*p5 + 2*d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.005600761569649804 + 2*p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.099185516089461 + 2*p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.157345122753668 + 2*p3 + -2*p5 + -4*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17787627791455332 + 2*p3 + -3*p5 + 2*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17787627791455332 + 2*p3 + -3*p5 + 2*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1642412676941483 + 2*p3 + -3*p5 + p6 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1642412676941483 + 2*p3 + -3*p5 + p6 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17597788328715905 + 2*p3 + -3*p5 + 6*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.17622275298121387 + 2*p3 + -3*p5 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.317622373155736 + 2*p3 + -3*p5 + 2*d + -1*l + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.328860548209328 + 2*p3 + -3*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3179515422526626 + 2*p3 + -3*p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3219069819364577 + 2*p3 + -3*p5 + -4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3229351553988073 + 2*p3 + -3*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.313813541129109 + 2*p3 + -3*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.971053216251849 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.971053216251849 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.051882031905584 + 2*p3 + -4*p5 + 4*p6 + -2*p7 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.051882031905584 + 2*p3 + -4*p5 + 4*p6 + -2*p7 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9974012132420972 + 2*p3 + -4*p5 + 3*p6 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9585641467267193 + 2*p3 + -4*p5 + 3*p6 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.183198859496385 + 2*p3 + -4*p5 + 2*p6 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3480181292488937 + 2*p3 + -4*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4868819605531938 + 2*p3 + -4*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.488553811443679 + 2*p3 + -4*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.087862002933763 + 2*p3 + -5*p5 + 5*p6 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.651062639827347 + 2*p3 + -5*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6562635209704154 + 2*p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6470795984464213 + 2*p3 + -1*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6471124106363588 + 2*p3 + -1*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2507642115341984 + 2*p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.453252965024084 + 2*p3 + -1*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.004617617602001398 + 2*p3 + -2*p4 + 4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.006881833240613641 + 2*p3 + -2*p4 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281202962215171 + 2*p3 + -2*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7350166250430707 + 2*p3 + -2*p4 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.278373259898913 + 2*p3 + -2*p4 + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.264763356924786 + 2*p3 + -2*p4 + -2*d + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.09008763829759 + 2*p3 + -2*p4 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.260669687164233 + 2*p3 + -2*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.26222878978504 + 2*p3 + -2*p4 + -4*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.262429328116094 + 2*p3 + -2*p4 + -4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.775309853746654 + 2*p3 + -3*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.754931563933293 + 2*p3 + -3*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.7549272006101635 + 2*p3 + -3*p4 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.282917390641089 + 2*p3 + -4*p4 + 4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1149978415483623 + 2*p3 + -4*p4 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.27315380178092374 + 2*p3 + -5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3159033898771306 + 2*p3 + -8*p4 + 3*p5 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4360282936395183 + p3 + p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.516288847085438 + p3 + 2*p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.499174131443748 + p3 + 2*p5 + -4*p6 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.6407667850335415 + p3 + 2*p5 + -4*p6 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.282199353688501 + p3 + 2*p5 + -5*p6 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.282197957425099 + p3 + 2*p5 + -5*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.172420412666086 + p3 + 2*p5 + -5*p6 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.147829047076386 + p3 + 2*p5 + -5*p6 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1476691749169032 + p3 + 2*p5 + -5*p6 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.16882745237298 + p3 + 2*p5 + -5*p6 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1679371599215378 + p3 + 2*p5 + -5*p6 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.474537255252154 + p3 + p5 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3251969105798334 + p3 + p5 + -1*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.662180370165918 + p3 + p5 + -1*p6 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1652554785224822 + p3 + p5 + -2*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1652554785224822 + p3 + p5 + -2*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1973709330225795 + p3 + p5 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20266676007695553 + p3 + p5 + -5*p6 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20266676007695553 + p3 + p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20418572012496622 + p3 + p5 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4372118014052955 + p3 + 3*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9702383050274589 + p3 + 2*p6 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.832703086336311 + p3 + p6 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.832713383778897 + p3 + p6 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8927961432509264 + p3 + p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.28005555726996 + p3 + p8 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.095684228073669 + p3 + 5*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.095684402606594 + p3 + 5*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7437783439226907 + p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9580091405229016 + p3 + d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.803852585274652 + p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1076184064396888 + p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6471051142467665 + p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.760950672426329 + p3 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2928542142111263 + p3 + -2*p7 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4344468678009195 + p3 + -2*p7 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9692776928037947 + p3 + -1*p6 + d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00772849246075609 + p3 + -1*p6 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007683462966054637 + p3 + -1*p6 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.156215894727628 + p3 + -1*p6 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.993659261319087 + p3 + -2*p6 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.014636199065883 + p3 + -2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9883167829837833 + p3 + -2*p6 + d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.129910309238203 + p3 + -2*p6 + d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9883174811154842 + p3 + -2*p6 + d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9883171320496338 + p3 + -2*p6 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9883146885886807 + p3 + -2*p6 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.988699908249546 + p3 + -2*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.988478076901617 + p3 + -2*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6045024913718953 + p3 + -3*p6 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2981605302376481 + p3 + -3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.438555015295947 + p3 + -3*p6 + d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4385527463679195 + p3 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29259624604936496 + p3 + -3*p6 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.26495057976362524 + p3 + -3*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.26495057976362524 + p3 + -3*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29259624604936496 + p3 + -3*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2900025122479762 + p3 + -3*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01703022470925987 + p3 + -1*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.173701824904583 + p3 + -1*p5 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.018145839167134643 + p3 + -1*p5 + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.166149785231203 + p3 + -1*p5 + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.013962110417179038 + p3 + -1*p5 + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.035235928669737925 + p3 + -1*p5 + -3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5900319495469764 + p3 + -2*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.73162460313677 + p3 + -2*p5 + 5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.73162460313677 + p3 + -2*p5 + 5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.281448670580585 + p3 + -2*p5 + 4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.341696065590978 + p3 + -2*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.896079648169337 + p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5165199116817685 + p3 + -2*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.342281099956247 + p3 + -2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.896424176163681 + p3 + -2*p5 + d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.33232102951389 + p3 + -2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.337211965676754 + p3 + -2*p5 + -2*d + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2896395007601944 + p3 + -2*p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.352607165942746 + p3 + -2*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.341225001225864 + p3 + -2*p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.340301198452784 + p3 + -2*p5 + -4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0106231465201385 + p3 + -3*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.011874373060893 + p3 + -3*p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9092210792772784 + p3 + -3*p5 + 2*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9726144047694407 + p3 + -3*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3874572023148675 + p3 + -3*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9358973896964604 + p3 + -3*p5 + d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.23224297753991 + p3 + -3*p5 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0727247708295335 + p3 + -3*p5 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.396660323460633 + p3 + -3*p5 + -4*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.105600639789775 + p3 + -4*p5 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.247193293379567 + p3 + -4*p5 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.475554965237309 + p3 + -4*p5 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.492184985949086 + p3 + -4*p5 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.492184985949086 + p3 + -4*p5 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.475554965237309 + p3 + -4*p5 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2641618824712824 + p3 + -5*p5 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.790320549480114 + p3 + -1*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007015001862540809 + p3 + -1*p4 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007052526441458686 + p3 + -1*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5039978554337765 + p3 + -2*p4 + 2*p6 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7686110630529912 + p3 + -2*p4 + 2*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7686110630529912 + p3 + -2*p4 + 2*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5039978554337765 + p3 + -2*p4 + 2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.587874756584777 + p3 + -2*p4 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.579669614705303 + p3 + -2*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.493687863473029 + p3 + -2*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.919233152033027 + p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.06082580562282 + p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.066478403471255 + p3 + -2*p4 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.43416131493866 + p3 + -2*p4 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9248857498814611 + p3 + -2*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.605881842076379 + p3 + -2*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.571138794387404 + p3 + -2*p4 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.770181195241351 + p3 + -2*p4 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.770180846175502 + p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.574628231160917 + p3 + -2*p4 + -4*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3822557380848073 + p3 + -3*p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.679520948409449 + p3 + -3*p4 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.679520948409449 + p3 + -3*p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5477204645879703 + p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8575390960972396 + 2*p4 + 3*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8578590149491303 + 2*p4 + d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.202292412447352 + 2*p4 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5705762322779034 + p4 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.383642593705076 + p4 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3023887903784797 + p4 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.376723776480953 + p4 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2351311228911594 + p4 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.590415606909831 + 2*p5 + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.590415606909831 + 2*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.874005430420131 + 2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.874007873881083 + 2*p5 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.874007001216456 + 2*p5 + -3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.268704833974564 + 2*p5 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.242438841964209 + 2*p5 + -3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3813373713273585 + 2*p5 + -4*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.377032865793164 + 2*p5 + -4*p6 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.972552828640112 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896565007237683 + 2*p5 + -5*p6 + -4*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.145049827267093 + p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.11446517555897 + p5 + 3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.142140537936944 + p5 + 2*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.677085865037066 + p5 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.064873407189437 + p5 + 3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.080787144776196 + p5 + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.193563348221379 + p5 + -4*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.37816348158429 + p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4968280683615336 + p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4335478317065835 + 2*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.663403879964833 + 2*p6 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.663403879964833 + 2*p6 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6469111911702368 + 2*p6 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6469111911702368 + 2*p6 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.663403879964833 + 2*p6 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.663403879964833 + 2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.560830347728034 + p6 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.560532769090568 + p6 + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125816456446408 + p7 + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125816456446408 + p7 + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125816456446408 + p7 + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.125816456446408 + p7 + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.222732337878258 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7342385572625314 + 4*p1 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7342385572625314 + 4*p1 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.42895672611257957 + 4*p1 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3415059567438525 + 4*p1 + -15*p2 + 6*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3415059567438525 + 4*p1 + -15*p2 + 6*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6704331595339732 + 3*p1 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.139656559850556 + 2*p1 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4789932213721545 + 2*p1 + -24*p2 + 21*p3 + 4*d + -3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4789932213721545 + 2*p1 + -24*p2 + 21*p3 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.372622750842592 + p1 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9411963753401237 + p1 + -1*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.485653606323957 + p1 + -2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4185048388836448 + p1 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.054264423331189 + p1 + -3*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9126946335545973 + p1 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.628850008970141 + p1 + -4*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.628850008970141 + p1 + -4*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.531822102895263 + 47*p2 + -52*p3 + 4*p5 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.531822102895263 + 47*p2 + -52*p3 + 4*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -1*l + -4*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.361499443948731 + 38*p2 + -37*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.361499443948731 + 38*p2 + -37*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.414989239167986 + 26*p2 + -29*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6224980406937994 + 23*p2 + -24*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.746291477505904 + 23*p2 + -24*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7544116218508075 + 22*p2 + -23*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7544116218508075 + 22*p2 + -23*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1390821719937247 + 21*p2 + -21*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.280443220391778 + 21*p2 + -21*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.372979687671258 + 21*p2 + -22*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.372979687671258 + 21*p2 + -22*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.603287742212507 + 20*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.603287742212507 + 20*p2 + -18*p3 + d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.160201528607482 + 20*p2 + -20*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.160196292619726 + 20*p2 + -20*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2452306366424333 + 20*p2 + -21*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7984942499381045 + 19*p2 + -18*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.797209338542786 + 19*p2 + -18*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.137287798989749 + 19*p2 + -19*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.356325921983337 + 19*p2 + -19*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.275056261655498 + 19*p2 + -19*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2750634175054305 + 19*p2 + -19*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -2*l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -4*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.9396231695456425 + 18*p2 + -17*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.9396231695456425 + 18*p2 + -17*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.057840785999767 + 18*p2 + -18*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.36378860929733 + 18*p2 + -18*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.385306773645168 + 18*p2 + -18*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3736535507971364 + 18*p2 + -18*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.930640641020695 + 18*p2 + -20*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4661053611095781 + 17*p2 + -15*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4661053611095781 + 17*p2 + -15*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.940127744232394 + 17*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.940127744232394 + 17*p2 + -16*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.138458740384912 + 17*p2 + -17*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14041263648252 + 17*p2 + -17*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.140413334614221 + 17*p2 + -17*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9330837529076375 + 17*p2 + -19*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4635892944599031 + 16*p2 + -14*p3 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4635892944599031 + 16*p2 + -14*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.136574831990309 + 16*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7637079435786305 + 16*p2 + -17*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.397431409924165 + 15*p2 + -12*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8007191956685467 + 15*p2 + -14*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7994800118996308 + 15*p2 + -14*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.946058722096521 + 15*p2 + -14*p3 + -3*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.946058722096521 + 15*p2 + -14*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.139487786511888 + 15*p2 + -15*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1642086300371357 + 15*p2 + -15*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6279953042388058 + 15*p2 + -16*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4664008453519407 + 14*p2 + -12*p3 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4664008453519407 + 14*p2 + -12*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1400070219643568 + 14*p2 + -14*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1612904395278014 + 14*p2 + -14*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1396307289776257 + 14*p2 + -14*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.139632299773953 + 14*p2 + -14*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6340081380448517 + 14*p2 + -15*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.403228163470497 + 14*p2 + -17*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8015888932348156 + 13*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.142446817725719 + 13*p2 + -13*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1399975971863956 + 13*p2 + -13*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1399995170485724 + 13*p2 + -13*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1445162546198087 + 13*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.144527424727021 + 13*p2 + -13*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.396031996431598 + 13*p2 + -16*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8566781081805975 + 12*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8019911916274 + 12*p2 + -11*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282433070271978 + 12*p2 + -12*p3 + 2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1461252736572223 + 12*p2 + -12*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1452184005778863 + 12*p2 + -12*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.145228698020473 + 12*p2 + -12*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.762875072459578 + 12*p2 + -13*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7629375552468005 + 12*p2 + -13*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.184062997503998 + 12*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.25873109897414337 + 11*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.144849263441089 + 11*p2 + -11*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3141903407179816 + 11*p2 + -12*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.076983731768567 + 11*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -1*l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.675685910949092 + 10*p2 + -3*p3 + -1*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.703721675319286 + 10*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141372742104042 + 10*p2 + -10*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.26806651607721066 + 10*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.075357783037409 + 10*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.326974004824214 + 10*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.797672582919532 + 10*p2 + -14*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.913378270524287 + 10*p2 + -15*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1469946221576404 + 9*p2 + -9*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.146726739612411 + 9*p2 + -11*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.146726739612411 + 9*p2 + -11*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.397386554962389 + 8*p2 + -5*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0001804670446562137 + 8*p2 + -8*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.147288186537826 + 8*p2 + -8*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.203813117824615 + 8*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.134461587331995 + 8*p2 + -8*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.758952095899871 + 8*p2 + -9*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3253038992629804 + 8*p2 + -9*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.120768108581648 + 8*p2 + -12*p3 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2812297892957519 + 8*p2 + -12*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18471273259461504 + 8*p2 + -12*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.12478967924746 + 8*p2 + -13*p3 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0102543414525589 + 8*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0102543414525589 + 8*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9717073486588625 + 8*p2 + -13*p3 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9717117119819926 + 8*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.127377478929391 + 8*p2 + -13*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.905809867247521 + 8*p2 + -14*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.3932836349568 + 7*p2 + -4*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8029509481830719 + 7*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.329345400675532 + 7*p2 + -7*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18774855829553402 + 7*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1581254594622346 + 7*p2 + -7*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3290029500796574 + 7*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.437549714145115 + 7*p2 + -10*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.437518298218579 + 7*p2 + -10*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8033195617210929 + 6*p2 + -5*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8033504540488534 + 6*p2 + -5*p3 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.14195742740346 + 6*p2 + -6*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1424698560718456 + 6*p2 + -6*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0003429571980168858 + 6*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0003429571980168858 + 6*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.189120063516701 + 6*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.2822131587862255 + 6*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3314727655041545 + 6*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.471840372491973 + 6*p2 + -7*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.719719014177215 + 6*p2 + -7*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.551755333749364 + 6*p2 + -7*p3 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.729648366824737 + 6*p2 + -7*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.75557785085699 + 6*p2 + -7*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9516784907583844 + 6*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.96822790275367 + 6*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.003177746464056 + 6*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2439544518933754 + 6*p2 + -9*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2439544518933754 + 6*p2 + -9*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.312359341294664 + 6*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.089099798937594 + 6*p2 + -10*p3 + 3*p5 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.089099798937594 + 6*p2 + -10*p3 + 3*p5 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6071504964147034 + 6*p2 + -10*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5453204708318697 + 6*p2 + -12*p3 + 2*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.40372781724207635 + 6*p2 + -12*p3 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5096462644920058 + 5*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.44983400555908526 + 5*p2 + -3*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4499437867690358 + 5*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.394788964440012 + 5*p2 + -5*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.142705475520865 + 5*p2 + -5*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.005299343207830383 + 5*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.005319589027153517 + 5*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18038309431919275 + 5*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1425175035604247 + 5*p2 + -5*p3 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.613545723361545 + 5*p2 + -6*p3 + 4*d + -1*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.748397217248436 + 5*p2 + -6*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6275525142075749 + 5*p2 + -6*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.633515780662864 + 5*p2 + -6*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6348444998224074 + 5*p2 + -6*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3331196581863363 + 5*p2 + -6*p3 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.770017832423365 + 5*p2 + -6*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6030409356596413 + 5*p2 + -6*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.11276188324699923 + 5*p2 + -6*p3 + -4*p4 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.11276188324699923 + 5*p2 + -6*p3 + -4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2660450757375508 + 5*p2 + -7*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.26604490120462565 + 5*p2 + -7*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9545366419414507 + 5*p2 + -7*p3 + 3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9034245002638714 + 5*p2 + -7*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.096127899267842 + 5*p2 + -7*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.217305019544674 + 5*p2 + -8*p3 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2067511880907893 + 5*p2 + -8*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4299049634951881 + 5*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8805215746908677 + 5*p2 + -10*p3 + p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.022114228280661 + 5*p2 + -10*p3 + p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1909325794465806 + 4*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4524314045519033 + 4*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4736985905533046 + 4*p2 + -2*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.47380889536203064 + 4*p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8034543011393471 + 4*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944968938511575 + 4*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.48713032940407 + 4*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0017530087007031046 + 4*p2 + -4*p3 + 2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.268434307940506 + 4*p2 + -4*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5954485788805408 + 4*p2 + -5*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4771254039999375 + 4*p2 + -5*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.741056886013323 + 4*p2 + -5*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.633608457646145 + 4*p2 + -5*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.097501647922086 + 4*p2 + -6*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.985955735564953 + 4*p2 + -6*p3 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.00440177136343 + 4*p2 + -6*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4687690911122884 + 4*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5081751264654997 + 3*p2 + -1*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5082629165268752 + 3*p2 + -1*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.510861396710511 + 3*p2 + -2*p3 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8028212702196487 + 3*p2 + -2*p3 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.48392398503523 + 3*p2 + -2*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.94211008919681 + 3*p2 + -2*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0008838347332099284 + 3*p2 + -3*p3 + 4*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00442929657571121 + 3*p2 + -3*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1417745168978515 + 3*p2 + -3*p3 + 2*d + l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282852821957081 + 3*p2 + -3*p3 + 2*d + -1*l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.003915122578073679 + 3*p2 + -3*p3 + -3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1304127640349013 + 3*p2 + -3*p3 + -3*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1304127640349013 + 3*p2 + -3*p3 + -3*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.937059280874463 + 3*p2 + -4*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.717308714480211 + 3*p2 + -4*p3 + d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.473464226828028 + 3*p2 + -4*p3 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3372237999224008 + 3*p2 + -4*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.725222386374604 + 3*p2 + -4*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.337312986247178 + 3*p2 + -4*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3371854026788572 + 3*p2 + -4*p3 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.124267991835722 + 3*p2 + -5*p3 + 2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.859851508318156 + 3*p2 + -5*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.890845414240923 + 3*p2 + -5*p3 + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.966380446245484 + 3*p2 + -5*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.107972925302351 + 3*p2 + -5*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.02098588991588 + 3*p2 + -5*p3 + -4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8786538978583085 + 3*p2 + -6*p3 + 4*p4 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.631376181532844 + 3*p2 + -6*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.17157497517642 + 3*p2 + -6*p3 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5769847492220093 + 3*p2 + -7*p3 + 4*p4 + 2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5768192920089206 + 3*p2 + -7*p3 + 4*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.972369569068653 + 3*p2 + -7*p3 + 2*p4 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8260128477559824 + 2*p2 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8247560361616212 + 2*p2 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.042198413118427 + 2*p2 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8018629099273789 + 2*p2 + -1*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8030942397146608 + 2*p2 + -1*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.942975248907023 + 2*p2 + -1*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.944317407101806 + 2*p2 + -1*p3 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00029321531433504735 + 2*p2 + -2*p3 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2444716099473743 + 2*p2 + -2*p3 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2577111540542276 + 2*p2 + -2*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.003578797631214373 + 2*p2 + -2*p3 + 3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.006284232504730782 + 2*p2 + -2*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07130996444628351 + 2*p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.282194832829078 + 2*p2 + -2*p3 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5465982093806212 + 2*p2 + -3*p3 + 2*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.688190862970414 + 2*p2 + -3*p3 + 2*p5 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.256397993819977 + 2*p2 + -3*p3 + p5 + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.114805340230184 + 2*p2 + -3*p3 + p5 + 2*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.724036609680799 + 2*p2 + -3*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5609161924322819 + 2*p2 + -3*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.478068405394789 + 2*p2 + -3*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.687525019860779 + 2*p2 + -3*p3 + 3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.689735130292579 + 2*p2 + -3*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.744778102511499 + 2*p2 + -3*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.480311677082377 + 2*p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.104066529370539 + 2*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8484984481082009 + 2*p2 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1547882408944465 + 2*p2 + -4*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1782973023200345 + 2*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1931140579803314 + 2*p2 + -5*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1931140579803314 + 2*p2 + -5*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4213062498693876 + p2 + p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.42136332213592786 + p2 + p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.21152116443817318 + p2 + p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.353137030907018 + p2 + p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.204203556476603 + p2 + p3 + -3*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6635677323883284 + p2 + -2*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.805160385978121 + p2 + -2*p5 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141506085258894 + p2 + -1*p3 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141138693451349 + p2 + -1*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.142353791676588 + p2 + -1*p3 + 2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1422981156734497 + p2 + -1*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1419680739118974 + p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1408393694846324 + p2 + -1*p3 + -4*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3372950093558822 + p2 + -2*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.789508081716678 + p2 + -3*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.583807939399756 + p2 + -3*p3 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.583807939399756 + p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.789508081716678 + p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.971828840571434 + p2 + -3*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8886473210860104 + p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6267288933335589 + 12*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1316887742510344 + 11*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.675194434730047 + 11*p3 + -13*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.104573347490368 + 11*p3 + -14*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.565527709880218 + 11*p3 + -15*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.730795754773315 + 11*p3 + -19*p4 + 3*p6 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.645053994811507 + 11*p3 + -19*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2887235689653815 + 10*p3 + -11*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.132360559978444 + 9*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1156715301413156 + 9*p3 + -13*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2416331554899061 + 9*p3 + -15*p4 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2416331554899061 + 9*p3 + -15*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.36870202621427856 + 9*p3 + -15*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.234789212890694 + 9*p3 + -17*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2347890383577687 + 9*p3 + -17*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.040786275718955 + 9*p3 + -19*p4 + 3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.389370432240904 + 8*p3 + -7*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6421089177333745 + 8*p3 + -9*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6421078705358236 + 8*p3 + -9*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5952284928618645 + 8*p3 + -11*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.806278269364024 + 8*p3 + -11*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.845539616922245 + 8*p3 + -13*p4 + -1*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.655430334778781 + 8*p3 + -14*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6906786382895738 + 8*p3 + -15*p4 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6906653737872586 + 8*p3 + -15*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1428592390279655 + 7*p3 + -7*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1428592390279655 + 7*p3 + -7*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.085767416301812 + 7*p3 + -9*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.766960190106797 + 7*p3 + -10*p4 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.775658212967035 + 7*p3 + -10*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.775658212967035 + 7*p3 + -10*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2033153329253132 + 7*p3 + -11*p4 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2033137621289864 + 7*p3 + -11*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2029800551760053 + 7*p3 + -11*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7429596354655303 + 7*p3 + -12*p4 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.235932586581992 + 7*p3 + -13*p4 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.243625648858933 + 7*p3 + -13*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.49987364241131393 + 6*p3 + -5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.804746053312014 + 6*p3 + -7*p4 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.797573090653852 + 6*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7653653082363245 + 6*p3 + -9*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.765371940487482 + 6*p3 + -9*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.042726383715472 + 6*p3 + -9*p4 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.184319037305264 + 6*p3 + -9*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.255387954785215 + 6*p3 + -10*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.245586883837715 + 6*p3 + -10*p4 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.24558670930479 + 6*p3 + -10*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.202436070041425 + 6*p3 + -11*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7495391776796985 + 6*p3 + -11*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.087555872182964 + 6*p3 + -13*p4 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.267287801154871 + 5*p3 + -5*p5 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.324975262263147 + 5*p3 + -5*p4 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.648419679242736 + 5*p3 + -6*p4 + 4*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.649175930407625 + 5*p3 + -6*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.785896671923401 + 5*p3 + -6*p4 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.744795015208611 + 5*p3 + -6*p4 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07958177790318545 + 5*p3 + -8*p4 + 3*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.766455964485895 + 5*p3 + -8*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7664542191566435 + 5*p3 + -8*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.744028309064842 + 5*p3 + -8*p4 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.744028309064842 + 5*p3 + -8*p4 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.245868405446062 + 5*p3 + -9*p4 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.779056726584836 + 4*p3 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5223077895438655 + 4*p3 + -3*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.17953085004544392 + 4*p3 + -5*p5 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.176050863544843 + 4*p3 + -4*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.388374530373082 + 4*p3 + -4*p4 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.777011549767349 + 4*p3 + -5*p4 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.275101282651883 + 4*p3 + -6*p4 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.275103551579909 + 4*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.245194193254333 + 4*p3 + -6*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.872439337983999 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.872494141322512 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.1899518959365185 + 4*p3 + -8*p4 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.36602455060206 + 4*p3 + -8*p4 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.36602455060206 + 4*p3 + -8*p4 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.1899518959365185 + 4*p3 + -8*p4 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.34293765882758 + 3*p3 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.759995977325489 + 3*p3 + -4*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3189667832819143 + 3*p3 + -2*p5 + 3*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.481174044265789 + 3*p3 + -2*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.151392677339741 + 3*p3 + -3*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.568640172531933 + 3*p3 + -3*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.6726406774668465 + 3*p3 + -3*p5 + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.386014496158536 + 3*p3 + -4*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.1741760053674001 + 3*p3 + -4*p5 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.24156596031370436 + 3*p3 + -4*p5 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3858961628352504 + 3*p3 + -5*p5 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9285256595314455 + 3*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4633362557116305 + 3*p3 + -2*p4 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.482059100729474 + 3*p3 + -2*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.016823054127048143 + 3*p3 + -3*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.01677191597996471 + 3*p3 + -3*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2639288895144576 + 3*p3 + -3*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9571055750708276 + 3*p3 + -4*p4 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.779729376478555 + 3*p3 + -4*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.78115181981893 + 3*p3 + -4*p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9573158872456929 + 3*p3 + -4*p4 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.779729376478555 + 3*p3 + -4*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.751170030329395 + 3*p3 + -4*p4 + -4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.241458141457514 + 3*p3 + -5*p4 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.241581187169779 + 3*p3 + -5*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.264707148824556 + 3*p3 + -5*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5160191767193707 + 3*p3 + -7*p4 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.6593234747065955 + 3*p3 + -7*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5160191767193707 + 3*p3 + -7*p4 + -3*d + 3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5190649338003932 + 3*p3 + -8*p4 + 3*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.319164912145282 + 2*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.820031297835131 + 2*p3 + p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4362298791681236 + 2*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3189388495155658 + 2*p3 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06464298123659037 + 2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.514246113728904 + 2*p3 + -1*p6 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1421935704512545 + 2*p3 + -2*p6 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.145000234421387 + 2*p3 + -2*p6 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1451651680357005 + 2*p3 + -2*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.762499128538699 + 2*p3 + -3*p6 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6218644861753255 + 2*p3 + -3*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2373112221581426 + 2*p3 + -4*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.256735864068213 + 2*p3 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9828971950888072 + 2*p3 + -1*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4989921105993975 + 2*p3 + -1*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.60023464625031 + 2*p3 + -1*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4727339725706776 + 2*p3 + -1*p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4727432228157133 + 2*p3 + -1*p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1437193372833483 + 2*p3 + -2*p5 + 6*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.143721606211376 + 2*p3 + -2*p5 + 6*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0021263346277046913 + 2*p3 + -2*p5 + 3*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0021263346277046913 + 2*p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.143478132780723 + 2*p3 + -2*p5 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.177393719871327 + 2*p3 + -2*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8811343767878763 + 2*p3 + -2*p5 + -2*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8811343767878763 + 2*p3 + -2*p5 + -2*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02510324516435964 + 2*p3 + -3*p5 + p6 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.148663331455473 + 2*p3 + -3*p5 + p6 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3203428178608196 + 2*p3 + -3*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.13006041605219 + 2*p3 + -4*p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.139002069879374 + 2*p3 + -4*p5 + 3*p6 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.138199916555158 + 2*p3 + -4*p5 + 3*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02144678038143152 + 2*p3 + -4*p5 + 2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.03999107821679647 + 2*p3 + -4*p5 + 2*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.03999107821679647 + 2*p3 + -4*p5 + 2*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1832049681487673 + 2*p3 + -4*p5 + 2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.15304674286849 + 2*p3 + -4*p5 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9462644624220649 + 2*p3 + -5*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9462702220085963 + 2*p3 + -5*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5292758080562608 + 2*p3 + -5*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5142630094293812 + 2*p3 + -5*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.514262834896456 + 2*p3 + -5*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.3923568651239915 + 2*p3 + -1*p4 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.250764386067124 + 2*p3 + -1*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3724710817305934 + 2*p3 + -2*p4 + 2*p5 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1689545293391586 + 2*p3 + -2*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1456920829368773 + 2*p3 + -2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5536474196965009 + 2*p3 + -2*p4 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.014581702301637025 + 2*p3 + -2*p4 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.261980254899556 + 2*p3 + -2*p4 + -2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.769889384688734 + 2*p3 + -3*p4 + 2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.00888267869509994 + 2*p3 + -4*p4 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.005167919915155209 + 2*p3 + -4*p4 + 2*p5 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.005167919915155209 + 2*p3 + -4*p4 + 2*p5 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.282449642401554 + 2*p3 + -4*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.314034865874895 + 2*p3 + -4*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1223451456021662 + p3 + 2*p5 + -5*p6 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1503431938638837 + p3 + 2*p5 + -5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1668321919721003 + p3 + 2*p5 + -5*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6607916286767397 + p3 + 2*p5 + -6*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6203359183181122 + p3 + 2*p5 + -8*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.317881013954249 + p3 + p5 + 3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.918625262352874 + p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.459453421724719 + p3 + p5 + d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3223230514334994 + p3 + p5 + d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.459468955155061 + p3 + p5 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.260896562970359 + p3 + p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.778765248101436 + p3 + p5 + -1*p6 + d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.17916956689028107 + p3 + p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2035233676738344 + p3 + p5 + -5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2035231931409092 + p3 + p5 + -5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8230760077186012 + p3 + 2*p6 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.845553422019969 + p3 + p6 + d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.095684926205369 + p3 + d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.927996484200558 + p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3000844236687548 + p3 + -2*p8 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.441677077258547 + p3 + -2*p8 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9692085777654156 + p3 + -1*p6 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0032361894990478855 + p3 + -1*p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8548128833073076 + p3 + -2*p6 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.854809567181729 + p3 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9071008533019553 + p3 + -5*p6 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.495425887837115 + p3 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2036980836302755 + p3 + -1*p5 + 2*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02345635248217779 + p3 + -1*p5 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.006938905507153855 + p3 + -1*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9761984468867277 + p3 + -1*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.024315054474159003 + p3 + -1*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6896586593763916 + p3 + -1*p5 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.699746836985844 + p3 + -1*p5 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.017192191263844945 + p3 + -1*p5 + -1*l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6763484294348325 + p3 + -1*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02602809513499144 + p3 + -1*p5 + -4*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.014486058258627735 + p3 + -1*p5 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.129227187368971 + p3 + -1*p5 + -1*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.742215784636647 + p3 + -1*p5 + -2*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9274671003434776 + p3 + -1*p5 + -5*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7322782034466915 + p3 + -2*p5 + 3*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.051257570095854 + p3 + -2*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.895643664922189 + p3 + -2*p5 + d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.380921118799074 + p3 + -2*p5 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.896089771078999 + p3 + -2*p5 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7541667266618026 + p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.327709869630121 + p3 + -2*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9726189426254959 + p3 + -3*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9714584732058449 + p3 + -3*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9359919865419186 + p3 + -3*p5 + 3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.645118588990463 + p3 + -3*p5 + 2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9717865951052198 + p3 + -3*p5 + d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.330181779449721 + p3 + -3*p5 + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.329591858162546 + p3 + -3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.382196430883506 + p3 + -3*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.744050474746343 + p3 + -4*p5 + 5*p6 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.530123033366762 + p3 + -4*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4708251229644045 + p3 + -4*p5 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4708251229644045 + p3 + -4*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.535731997983897 + p3 + -4*p5 + -2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.53572170054131 + p3 + -4*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.532921319756484 + p3 + -4*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.734472465375565 + p3 + -5*p5 + 5*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.004525638750421296 + p3 + -1*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6487278958903213 + p3 + -1*p4 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.011131884502145032 + p3 + -1*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.572886567100352 + p3 + -2*p4 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.626817590052827 + p3 + -2*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4032164527678757 + p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4280345111324593 + p3 + -2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.345971224098788 + p3 + -2*p4 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.611655740307826 + p3 + -2*p4 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5095361597111547 + p3 + -3*p4 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3679435061213618 + p3 + -3*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5884895935886725 + p3 + -4*p4 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4182275145638195 + 2*p4 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6193123082067675 + 2*p4 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.528914899461898 + 2*p4 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.243043598550026 + 2*p5 + -3*p6 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + 3*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.038157660827476 + 2*p5 + -5*p6 + -3*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0007663740745507101 + 2*p5 + -6*p6 + 3*p7 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1550406155042845 + p5 + 4*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.69877906041393 + p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0380550099725094 + p5 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.038032320692233 + p5 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.234124800037726 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.011906163548229 + p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.213112598141725 + p5 + -2*p6 + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.213112598141725 + p5 + -2*p6 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.213112598141725 + p5 + -2*p6 + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.213112598141725 + p5 + -2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.672636663209565 + p6 + 2*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.676338855618897 + p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7700415773995095 + p7 + -2*p8 + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7700415773995095 + p7 + -2*p8 + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0021113247961375404 + 4*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.283095248190183 + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -4*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.503224184969634 + p1 + -2*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.691201721964713 + p1 + -4*p3 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.691201721964713 + p1 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9941673011693934 + p1 + -7*p2 + 9*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -2*d + l + 3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.347093811375354 + p1 + -28*p2 + 26*p3 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.750174660558666 + 26*p2 + -27*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1708567466942739 + 25*p2 + -26*p3 + d + l + -4*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26941635372070305 + 21*p2 + -23*p3 + p7 + -2*d + -1*l + 3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26941635372070305 + 21*p2 + -23*p3 + p7 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7978592991562288 + 20*p2 + -19*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.797841845863709 + 20*p2 + -19*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.938966751213967 + 20*p2 + -19*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3735093866009214 + 20*p2 + -20*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -3*d + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -3*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7985129249611007 + 19*p2 + -18*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9388201435568 + 19*p2 + -18*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2559684257994783 + 19*p2 + -20*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1532645429625052 + 18*p2 + -14*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.137842464626033 + 18*p2 + -18*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.355322183130515 + 18*p2 + -18*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.280102532121789 + 17*p2 + -17*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1423735138971347 + 17*p2 + -17*p3 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1423735138971347 + 17*p2 + -17*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8339474636013989 + 17*p2 + -22*p3 + 11*p4 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8339474636013989 + 17*p2 + -22*p3 + 11*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7989588565849854 + 16*p2 + -15*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.28072090227577 + 16*p2 + -16*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.044276768188335 + 15*p2 + -11*p3 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.044276768188335 + 15*p2 + -11*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -4*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.742544953733573 + 15*p2 + -16*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7999701003535906 + 14*p2 + -13*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1566061503483733 + 14*p2 + -14*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8004275511505385 + 13*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1496963918397283 + 13*p2 + -13*p3 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6254001741740154 + 13*p2 + -14*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6045192380343973 + 12*p2 + -7*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6045192380343973 + 12*p2 + -7*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8019592521020886 + 12*p2 + -11*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8008516661587732 + 12*p2 + -11*p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.801879839621123 + 11*p2 + -10*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8026983990403083 + 11*p2 + -10*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.283152844055499 + 11*p2 + -11*p3 + 2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1414559943093616 + 11*p2 + -11*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1448583391532 + 11*p2 + -11*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.63002931094908 + 11*p2 + -12*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.756973241593959 + 11*p2 + -12*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.020690214143959 + 10*p2 + -2*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3306816077542254 + 10*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.283160174438357 + 10*p2 + -10*p3 + 2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.145330450715864 + 10*p2 + -10*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1453388282962735 + 10*p2 + -10*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7438904110573015 + 10*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.690981644444354 + 9*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141496311415083 + 9*p2 + -9*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.144608058938464 + 9*p2 + -9*p3 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1464774811002743 + 9*p2 + -9*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.943588906672024 + 8*p2 + -7*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9472889876896193 + 8*p2 + -10*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.0888814667464874 + 8*p2 + -10*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3267258190045803 + 8*p2 + -11*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6786627445212936 + 8*p2 + -12*p3 + d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.05816868237631741 + 8*p2 + -12*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2932666355133726 + 8*p2 + -12*p3 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4511489451158548 + 8*p2 + -12*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.951273425333947 + 8*p2 + -14*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0003160791275361731 + 7*p2 + -7*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.69969171007643 + 7*p2 + -8*p3 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.388030368441223 + 6*p2 + -3*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.057682084580861395 + 6*p2 + -4*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.216570951057918 + 6*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3264746831218517 + 6*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6064062795233371 + 6*p2 + -7*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.472324003227701 + 6*p2 + -7*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5653615460371113 + 6*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9189989458440424 + 6*p2 + -8*p3 + 2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9481930682421518 + 6*p2 + -8*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.061157260644407 + 6*p2 + -8*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.170766513171946 + 6*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.312359341294664 + 6*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.082604032527523 + 6*p2 + -10*p3 + 3*p5 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.082604032527523 + 6*p2 + -10*p3 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.381210843454905 + 5*p2 + -2*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8034063045849171 + 5*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.945465659216693 + 5*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0980735668230155 + 5*p2 + -5*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.753429001481935 + 5*p2 + -6*p3 + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9001165777325664 + 5*p2 + -7*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.096124932208114 + 5*p2 + -7*p3 + d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5139088991207847 + 5*p2 + -7*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.939665564049833 + 5*p2 + -7*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.526693452888277 + 4*p2 + -3*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.527586363333596 + 4*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.48713032940407 + 4*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1432236637757813 + 4*p2 + -4*p3 + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0024870941840919192 + 4*p2 + -4*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.018100511596482 + 4*p2 + -6*p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.036175315863061 + 4*p2 + -6*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.710069446307106 + 4*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.176752826471678 + 3*p2 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5408705538760348 + 3*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.944956023075111 + 3*p2 + -2*p3 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.324639993012155 + 3*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4398228054679625 + 3*p2 + -4*p3 + 2*p5 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9378551510133715 + 3*p2 + -4*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.938711933143177 + 3*p2 + -4*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.723925083141596 + 3*p2 + -4*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5255694353550422 + 3*p2 + -4*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.714389825839176 + 3*p2 + -4*p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7226054396941635 + 3*p2 + -4*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7377273213992925 + 3*p2 + -4*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1235511851119275 + 3*p2 + -5*p3 + 2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1235511851119275 + 3*p2 + -5*p3 + 2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1236361826465 + 3*p2 + -5*p3 + 2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1236361826465 + 3*p2 + -5*p3 + 2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.038971682390606 + 3*p2 + -5*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.029968708018461 + 3*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.1715652013326086 + 3*p2 + -6*p3 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6029297666846056 + 3*p2 + -7*p3 + 4*p4 + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.602932733744334 + 3*p2 + -7*p3 + 4*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.2650064727912715 + 3*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.1655712170824835 + 2*p2 + -1*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.456771348768229 + 2*p2 + -1*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.943116271510584 + 2*p2 + -1*p3 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.112140247957338 + 2*p2 + -1*p3 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9705475943675457 + 2*p2 + -1*p3 + -2*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0018273597268380628 + 2*p2 + -2*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.004661250833301255 + 2*p2 + -2*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.003392221934176179 + 2*p2 + -2*p3 + -4*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7505924668866435 + 2*p2 + -2*p3 + -3*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.478076782975199 + 2*p2 + -3*p3 + d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3367276028160588 + 2*p2 + -3*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.491416858046967 + 2*p2 + -3*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.491417730711593 + 2*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3382853091734639 + 2*p2 + -3*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6354885263163934 + 2*p2 + -3*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.731610291436903 + 2*p2 + -3*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.479553131494511 + 2*p2 + -4*p3 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.437254387439044 + 2*p2 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1694599511955862 + p2 + p3 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.274950843768678 + p2 + p3 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.860013117308575 + p2 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.945183788542497 + p2 + d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3270103076726554 + p2 + -2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.944873992600267 + p2 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141057710174057 + p2 + -1*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.337298150948536 + p2 + -2*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.544524783724202 + p2 + -2*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.478727267187417 + p2 + -2*p3 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.052260968381141 + p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9599848617344757 + p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.893563240952129 + p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.893604954321251 + p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.128372299606395 + 12*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6298460598759372 + 11*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.628542464959306 + 11*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1238939507803862 + 11*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6188593697709249 + 11*p3 + -16*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.635390796376598 + 10*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6577050138945872 + 10*p3 + -12*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.55771055469346 + 10*p3 + -14*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.035607700797046 + 10*p3 + -15*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.520265728824082 + 10*p3 + -16*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3171996544109037 + 9*p3 + -9*p4 + 4*d + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3171996544109037 + 9*p3 + -9*p4 + 4*d + -5*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.265116769101681 + 9*p3 + -10*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3211250489366139 + 9*p3 + -15*p4 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.32107094372980205 + 9*p3 + -15*p4 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.37126766021471014 + 9*p3 + -15*p4 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.37123659335402465 + 9*p3 + -15*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1946246489462493 + 9*p3 + -17*p4 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1823699941362964 + 9*p3 + -17*p4 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2982727719051845 + 9*p3 + -17*p4 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2982727719051845 + 9*p3 + -17*p4 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1823699941362964 + 9*p3 + -17*p4 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1946246489462493 + 9*p3 + -17*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.9618591878148255 + 8*p3 + -8*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1362604896937087 + 8*p3 + -10*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1362604896937087 + 8*p3 + -10*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.8177941263016075 + 8*p3 + -11*p4 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7343106478589556 + 8*p3 + -15*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.737142968169092 + 8*p3 + -15*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.3992107730965735 + 7*p3 + -6*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6376169638375173 + 7*p3 + -8*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.290509049288487 + 7*p3 + -9*p4 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6253675365170033 + 7*p3 + -10*p4 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6253675365170033 + 7*p3 + -10*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2347169647579785 + 7*p3 + -13*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2347201063506317 + 7*p3 + -13*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.506529838572911 + 7*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.277252575487891 + 6*p3 + -8*p4 + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.658680810482744 + 6*p3 + -9*p4 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.658680810482744 + 6*p3 + -9*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7014331741091209 + 6*p3 + -9*p4 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7014316033127939 + 6*p3 + -9*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6993504727127162 + 6*p3 + -9*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7395724749861845 + 6*p3 + -11*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.739571602321559 + 6*p3 + -11*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.696925180180778 + 6*p3 + -11*p4 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.696925180180778 + 6*p3 + -11*p4 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.317027739479582 + 5*p3 + -6*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.46179544505470327 + 5*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.787768188480315 + 5*p3 + -6*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.802556363232464 + 5*p3 + -6*p4 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8968119713268403 + 5*p3 + -6*p4 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8967807299332295 + 5*p3 + -6*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8879336559548703 + 5*p3 + -6*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5679706557325512 + 5*p3 + -7*p4 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.42637800214275795 + 5*p3 + -7*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08419730111008444 + 5*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3378194977927405 + 5*p3 + -8*p4 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.242984589424675 + 5*p3 + -8*p4 + 3*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.183812368223411 + 5*p3 + -8*p4 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0422197146336183 + 5*p3 + -8*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.18329575076482 + 5*p3 + -8*p4 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.18081843042454 + 5*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.601008176174794 + 5*p3 + -11*p4 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.245717102396548 + 4*p3 + -3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1193892559809886 + 4*p3 + -3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1377607832170398 + 4*p3 + -4*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9127314685001315 + 4*p3 + -4*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.879042093077219 + 4*p3 + -5*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3385034753299634 + 4*p3 + -3*p4 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.119802051844036 + 4*p3 + -5*p4 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9782093982542422 + 4*p3 + -5*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.005318584321186 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.030755710971452 + 4*p3 + -8*p4 + 3*p5 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.030735116086278 + 4*p3 + -8*p4 + 3*p5 + -2*d + 3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.0053014800945155 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.2115440622446405 + 4*p3 + -8*p4 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.2115440622446405 + 4*p3 + -8*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.642543355679146 + 4*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.488723291412365 + 3*p3 + -2*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.57481183129991 + 3*p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2990501330557063 + 3*p3 + -2*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8954287978946347 + 3*p3 + -3*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.242151369239773 + 3*p3 + -4*p5 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.676394348590793 + 3*p3 + -6*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9571055750708276 + 3*p3 + -4*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.787269547913019 + 3*p3 + -4*p4 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.098103594984466 + 3*p3 + -4*p4 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1098534835781093 + 3*p3 + -5*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.781049718057688 + 3*p3 + -6*p4 + 2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.781049892590613 + 3*p3 + -6*p4 + 2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.758503205714574 + 3*p3 + -6*p4 + 2*p5 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.818399938583291 + 3*p3 + -6*p4 + 2*p5 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.818399938583291 + 3*p3 + -6*p4 + 2*p5 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.758503205714574 + 3*p3 + -6*p4 + 2*p5 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.77978260902074 + 3*p3 + -6*p4 + 2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.77978260902074 + 3*p3 + -6*p4 + 2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.655930903706568 + 3*p3 + -7*p4 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5267101740558292 + 3*p3 + -8*p4 + 3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.580182209408297 + 2*p3 + -1*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.580182034875371 + 2*p3 + -1*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.511531254077426 + 2*p3 + -1*p6 + -2*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.511531603143276 + 2*p3 + -1*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.142384160405573 + 2*p3 + -2*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.278425619776472 + 2*p3 + -2*p6 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.766330649845601 + 2*p3 + -3*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.10793517520060893 + 2*p3 + -4*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1079714780490504 + 2*p3 + -4*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2753772022099894 + 2*p3 + -5*p6 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8941985153049035 + 2*p3 + -1*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.496968575864637 + 2*p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3553760968077682 + 2*p3 + -1*p5 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.143721606211376 + 2*p3 + -2*p5 + 6*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1429391751077067 + 2*p3 + -2*p5 + 2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.000968308669006454 + 2*p3 + -2*p5 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.155602760561402 + 2*p3 + -2*p5 + -2*d + 3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1700020759562055 + 2*p3 + -2*p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1658527301925137 + 2*p3 + -2*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.891351359696126 + 2*p3 + -2*p5 + -2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.891337047996259 + 2*p3 + -2*p5 + -2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1666927571614996 + 2*p3 + -3*p5 + p6 + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1759099899792565 + 2*p3 + -3*p5 + -3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.129854292667531 + 2*p3 + -4*p5 + 5*p6 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.162684093433835 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.210847858904337 + 2*p3 + -5*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6504718458755474 + 2*p3 + -5*p5 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7350091201272868 + 2*p3 + -2*p4 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0071008720617389285 + 2*p3 + -2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.261947791775469 + 2*p3 + -2*p4 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9319586966751682 + 2*p3 + -3*p4 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.073551350264961 + 2*p3 + -3*p4 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.751830811984201 + 2*p3 + -3*p4 + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.778784629754449 + 2*p3 + -3*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.010726968115682349 + 2*p3 + -4*p4 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.187347000526234 + 2*p3 + -4*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.1901276590905105 + 2*p3 + -4*p4 + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.25979278275813156 + p3 + 2*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1490914437243533 + p3 + 2*p5 + -5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1763077590141027 + p3 + 2*p5 + -6*p6 + 3*p7 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.135323439414946 + p3 + p5 + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.153425470817855 + p3 + p5 + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.111811585462555 + p3 + 2*p6 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9702671029601169 + p3 + 2*p6 + d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.691116890464749 + p3 + p6 + d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6609314040548743 + p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9540910508850995 + p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.095684053540743 + p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.080104163446624 + p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.025683435099306 + p3 + -1*p7 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.171910618988211 + p3 + -1*p7 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.327308435403846 + p3 + -3*p7 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0068945741441531995 + p3 + -1*p6 + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.110801231355208 + p3 + -1*p6 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.952269982841886 + p3 + -1*p6 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.988319750043512 + p3 + -2*p6 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.012458858332436323 + p3 + -1*p5 + 3*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.02097309802244026 + p3 + -1*p5 + 2*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1539878074045316 + p3 + -1*p5 + d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.463524900308821 + p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.281250584208801 + p3 + -2*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.754183481822622 + p3 + -2*p5 + 3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.342280925423321 + p3 + -2*p5 + d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7544869945795436 + p3 + -2*p5 + d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7541333908730896 + p3 + -2*p5 + -1*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.337121732154426 + p3 + -2*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9722135026402576 + p3 + -3*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.072316887383342 + p3 + -3*p5 + d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.38827296920725 + p3 + -3*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4052253267369204 + p3 + -2*p4 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.475393173215649 + p3 + -2*p4 + 3*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.473417809568242 + p3 + -2*p4 + -3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6880539951637913 + p3 + -4*p4 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.716123078326065 + p3 + -4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.716134422966203 + p3 + -4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8745204515874434 + p3 + -4*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8922690538168245 + p3 + -4*p4 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.033861707406618 + p3 + -4*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8578827514269576 + 2*p4 + 3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.999589898615681 + 2*p4 + d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.999520958110227 + 2*p4 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.999640513163989 + 2*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.999685717191615 + 2*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5423738059607774 + p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5423547818719306 + p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8845300808822398 + 3*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3460919838863928 + 2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2281243325744198 + p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.202492976273357 + p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.130528687890501 + p5 + -4*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0870221419993875 + p5 + -1*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0917776406122965 + p5 + -1*p6 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.947353390339017 + 2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.664587213197685 + 2*p6 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.563031382447724 + p6 + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.562886345586882 + p6 + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2474653732133203 + p7 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2178993211516116 + p7 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0019090411358313976 + 4*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4321717971276783 + 4*p1 + -4*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.131653701631386 + 24*p2 + -24*p3 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1406140474782 + 21*p2 + -21*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.142203693360916 + 20*p2 + -20*p3 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.142203693360916 + 20*p2 + -20*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 3*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -5*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.136524566507852 + 18*p2 + -18*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2658113846490253 + 18*p2 + -19*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3541765490095057 + 17*p2 + -17*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.252311088351924 + 17*p2 + -18*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9353444778877456 + 16*p2 + -18*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.398208255974228 + 15*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.940454644401293 + 15*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.282574092875539 + 15*p2 + -15*p3 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8011836277825024 + 14*p2 + -13*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1399174865737294 + 14*p2 + -14*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.443811082836644 + 13*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -4*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1438249297030945 + 12*p2 + -12*p3 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6154298062890726 + 12*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.387951471060716 + 12*p2 + -15*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8012413981807436 + 11*p2 + -10*p3 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.755863561255541 + 11*p2 + -12*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.172535097794575 + 11*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.802623698948323 + 10*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8077954585878324 + 10*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.14219845737316 + 10*p2 + -10*p3 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1414458713997004 + 10*p2 + -10*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6149842237310386 + 10*p2 + -11*p3 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.753322012798787 + 10*p2 + -11*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3186655394530202 + 10*p2 + -11*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8028725828996572 + 9*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8026100853801574 + 9*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1453039217112337 + 9*p2 + -9*p3 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.075878589286204 + 9*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.667164532405788 + 8*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8027612308933803 + 8*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.145060273747655 + 8*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.123262882214449 + 8*p2 + -10*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.123268118202205 + 8*p2 + -10*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.135447374788471 + 8*p2 + -12*p3 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.140378261994572 + 8*p2 + -13*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.14304582322332 + 8*p2 + -13*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.131448284876743 + 8*p2 + -13*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.141325975778405 + 8*p2 + -13*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.9282734764511655 + 8*p2 + -14*p3 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.943870253747446 + 7*p2 + -6*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.143666977405789 + 7*p2 + -7*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.753194952829243 + 7*p2 + -8*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6119019722720167 + 7*p2 + -8*p3 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.445240158428177 + 7*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.109572519561805 + 7*p2 + -9*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.421677340861628 + 7*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1934493357296398 + 7*p2 + -10*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3307610202351912 + 6*p2 + -7*p3 + d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6201074632173427 + 6*p2 + -7*p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.906992825919574 + 6*p2 + -8*p3 + 4*d + -3*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8033871059631454 + 5*p2 + -4*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1425473486906337 + 5*p2 + -5*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3206569771261787 + 5*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.270105984298066 + 5*p2 + -5*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.752642381588061 + 5*p2 + -6*p3 + 4*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.753203854008428 + 5*p2 + -6*p3 + 2*d + -2*l + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.475354592940863 + 5*p2 + -6*p3 + d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.611423577524045 + 5*p2 + -6*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.473682542022503 + 5*p2 + -6*p3 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.23046165201374083 + 5*p2 + -6*p3 + -4*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.23046165201374083 + 5*p2 + -6*p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.372236884039927 + 4*p2 + -1*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8034323099907719 + 4*p2 + -3*p3 + d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.4297533283764565 + 4*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.002133315944712669 + 4*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0021331414117874694 + 4*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.18389801289978414 + 4*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.2778091694846685 + 4*p2 + -4*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3634564476457263 + 4*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3323016223659268 + 4*p2 + -5*p3 + d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.977668188649832 + 4*p2 + -6*p3 + d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8026395814445162 + 3*p2 + -2*p3 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.482195760009906 + 3*p2 + -2*p3 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.272972513061542 + 3*p2 + -3*p3 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.122174294865029 + 3*p2 + -3*p3 + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.026781204707226988 + 3*p2 + -3*p3 + -4*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7222200709953235 + 3*p2 + -4*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1528283851824317 + 3*p2 + -5*p3 + 2*p5 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1528283851824317 + 3*p2 + -5*p3 + 2*p5 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.016346804764079 + 3*p2 + -5*p3 + -4*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.245621283820613 + 3*p2 + -7*p3 + p5 + -2*d + 3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.10402863023082 + 3*p2 + -7*p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.360030391819011 + 3*p2 + -8*p3 + 4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1590475084077467 + 2*p2 + p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.289312093989153 + 2*p2 + -1*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8029034752274176 + 2*p2 + -1*p3 + d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.485550282832239 + 2*p2 + -1*p3 + -4*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.10496619561004136 + 2*p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.153946966700035 + 2*p2 + -2*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.727871098047431 + 2*p2 + -3*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3578682524466907 + 2*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.73770707557997 + 2*p2 + -3*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7305177153251545 + 2*p2 + -3*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9599892250576056 + 2*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.377789972626046 + 2*p2 + -4*p3 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.3964061780265933 + 2*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.892190181931268 + 2*p2 + -4*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.30956154451045065 + p2 + p3 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.31003924112672154 + p2 + p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.803556577433514 + p2 + d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.946808166477329 + p2 + -1*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4602248232608335 + p2 + -1*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6018169532518507 + p2 + -1*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141823560649832 + p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.850256369225759 + p2 + -2*p3 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.861851621647676 + p2 + -2*p3 + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8666029314703798 + p2 + -2*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.837946055409301 + p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2556443351540163 + 11*p3 + -17*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0930009418850193 + 10*p3 + -13*p4 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.530269607030663 + 9*p3 + -15*p4 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.671880412044677 + 9*p3 + -15*p4 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6205554892363296 + 8*p3 + -11*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1903807148354173 + 7*p3 + -13*p4 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.263465504598053 + 7*p3 + -13*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.263465504598053 + 7*p3 + -13*p4 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1903807148354173 + 7*p3 + -13*p4 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2438385790276762 + 7*p3 + -13*p4 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.243839102626452 + 7*p3 + -13*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1400049275692536 + 6*p3 + -6*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1400047530363286 + 6*p3 + -6*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6090714057894484 + 6*p3 + -7*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.276768595686312 + 6*p3 + -8*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.277092354262558 + 6*p3 + -8*p4 + 4*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.268652989197464 + 6*p3 + -8*p4 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1476023373048685 + 6*p3 + -8*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.317463888761339 + 6*p3 + -8*p4 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.677498775944822 + 6*p3 + -9*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6774752139999198 + 6*p3 + -9*p4 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7056102876045522 + 6*p3 + -11*p4 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7790040006447922 + 6*p3 + -11*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7790040006447922 + 6*p3 + -11*p4 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7056102876045522 + 6*p3 + -11*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7498807386143134 + 6*p3 + -11*p4 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7498807386143134 + 6*p3 + -11*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1572625686800486 + 5*p3 + -5*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.749965578612594 + 5*p3 + -6*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.764171660564252 + 5*p3 + -6*p4 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.788673665296249 + 5*p3 + -6*p4 + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1652874095494767 + 5*p3 + -7*p4 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.165143419886187 + 5*p3 + -7*p4 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3456254828722853 + 5*p3 + -8*p4 + 3*p5 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7480306981055165 + 5*p3 + -8*p4 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.251652426587171 + 5*p3 + -9*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.250309570260687 + 5*p3 + -9*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.7805968051167955 + 4*p3 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.271670846505404 + 4*p3 + -4*p5 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3207765321799405 + 4*p3 + -5*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.320769376330008 + 4*p3 + -5*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.266480403344581 + 4*p3 + -6*p4 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.2448063810945404 + 4*p3 + -6*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7525306805159335 + 4*p3 + -7*p4 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.872437592654747 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.872437592654747 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.872495886651763 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.872495886651763 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.672090558184934 + 4*p3 + -8*p4 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.229628814887955 + 4*p3 + -8*p4 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9011815776421335 + 3*p3 + -1*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.293956232097469 + 3*p3 + -1*p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.235244735327148 + 3*p3 + -2*p5 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5295927683467396 + 3*p3 + -2*p5 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.486941659311929 + 3*p3 + -2*p5 + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.277755238810782 + 3*p3 + -3*p5 + 2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.904624239591692 + 3*p3 + -3*p5 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.907573322428787 + 3*p3 + -3*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.079879756596402 + 3*p3 + -5*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.483459544422958 + 3*p3 + -5*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4834593698900327 + 3*p3 + -5*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.917457671076557 + 3*p3 + -1*p4 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.482521612981253 + 3*p3 + -2*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.269517982873069 + 3*p3 + -3*p4 + 2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.273836425546329 + 3*p3 + -3*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.765731137745859 + 3*p3 + -4*p4 + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.763741636931511 + 3*p3 + -6*p4 + 2*p5 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.763741636931511 + 3*p3 + -6*p4 + 2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5082425131712602 + 3*p3 + -7*p4 + d + 2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.539742390044179 + 3*p3 + -7*p4 + -1*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5082425131712602 + 3*p3 + -7*p4 + -3*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5469633237618218 + 3*p3 + -8*p4 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5462191153687713 + 3*p3 + -8*p4 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.643634710060418 + 2*p3 + 2*p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8783306798774726 + 2*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.36273561816633587 + 2*p3 + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3632318152726779 + 2*p3 + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.28295719264635 + 2*p3 + -2*p7 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.299135505151079 + 2*p3 + -1*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.511778392699508 + 2*p3 + -1*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.138602048913134 + 2*p3 + -3*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.13378611941652294 + 2*p3 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.746530936679277 + 2*p3 + -1*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3212967893350101 + 2*p3 + -1*p5 + -5*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3212967893350101 + 2*p3 + -1*p5 + -5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0021263346277046913 + 2*p3 + -2*p5 + 2*d + -1*l + 3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3413176612125124 + 2*p3 + -3*p5 + 2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3413026513809454 + 2*p3 + -3*p5 + 2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.176001445232061 + 2*p3 + -3*p5 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.851008963697536 + 2*p3 + -3*p5 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7094164846406683 + 2*p3 + -3*p5 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.329104894304607 + 2*p3 + -3*p5 + 2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3187385112123864 + 2*p3 + -3*p5 + -4*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9882553558924294 + 2*p3 + -4*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.33929532271327645 + 2*p3 + -4*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.008485616290271232 + 2*p3 + -2*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.876606486106061 + 2*p3 + -2*p4 + -1*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.010751751791060667 + 2*p3 + -2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.013406048517493644 + 2*p3 + -2*p4 + -4*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.758861696342934 + 2*p3 + -3*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.31906612650962 + 2*p3 + -4*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.172372939710431 + p3 + 2*p5 + -5*p6 + d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3001856442670539 + p3 + p5 + 3*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.278988471463607 + p3 + p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.781844707033654 + p3 + p5 + -1*p6 + d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.787578462692307 + p3 + p5 + -1*p6 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.8244466317768255 + p3 + p6 + d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.62168474275732 + p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.621688582481674 + p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.779006801669912 + p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9692085777654156 + p3 + -1*p6 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.007912450163916292 + p3 + -1*p6 + -2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9883176556484092 + p3 + -2*p6 + d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.710733884655023 + p3 + -1*p5 + p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1539858875423548 + p3 + -1*p5 + 3*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.689649583664281 + p3 + -1*p5 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1540827533158406 + p3 + -1*p5 + 3*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.159533765635669 + p3 + -1*p5 + d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1998112523827174 + p3 + -1*p5 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7541667266618026 + p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.333654286529489 + p3 + -2*p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9359912884102177 + p3 + -3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.397108873078396 + p3 + -3*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7638159539643785 + p3 + -4*p5 + 2*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.011220198162295948 + p3 + -1*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5894847803281597 + p3 + -2*p4 + 2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5903563977566056 + p3 + -2*p4 + 2*p6 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.000519635508218 + 2*p4 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.547688874128509 + 2*p4 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.857934936771592 + 2*p4 + -1*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.2475761931225056 + p4 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.389168846712298 + p4 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6792386861778184 + p4 + -2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4800760321384085 + 3*p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.215880698833704 + 2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.03723625052544862 + 2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.35640478537057685 + 2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4153080768290587 + 2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.8123155462779135 + 2*p5 + -5*p6 + 2*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.81366416219093 + 2*p5 + -5*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0851228747073667 + p5 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1167360234487402 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.105036191811363 + p6 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7403590778834255 + p7 + -2*p8 + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7803915204034941 + p7 + -2*p8 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7803915204034941 + p7 + -2*p8 + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7403590778834255 + p7 + -2*p8 + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.0020146335555770545 + 4*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3221979113261315 + p1 + -2*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.988199147792199 + 35*p2 + -31*p3 + -3*p6 + -1*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1380457954838903 + 22*p2 + -22*p3 + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1380457954838903 + 22*p2 + -22*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3764740028683593 + 20*p2 + -20*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3864325025143884 + 20*p2 + -20*p3 + -3*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -3*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7991288516541295 + 18*p2 + -17*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.79841152133156 + 17*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6925780716162027 + 17*p2 + -16*p3 + -2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6925780716162027 + 17*p2 + -16*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.352871217261939 + 16*p2 + -16*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3513861166014176 + 15*p2 + -15*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9374282264817015 + 15*p2 + -17*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.940993776607234 + 14*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.740126450989085 + 14*p2 + -15*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1425311171285903 + 13*p2 + -13*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.142423953912518 + 13*p2 + -13*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.743322148849486 + 13*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1407095169882835 + 12*p2 + -12*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8015957000188985 + 10*p2 + -9*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.00006894050545377602 + 9*p2 + -9*p3 + 2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2666775830584736 + 9*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6226066001732733 + 9*p2 + -10*p3 + 2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.00009093165402890456 + 8*p2 + -8*p3 + 2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.139668428089469 + 8*p2 + -8*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9669122480685663 + 8*p2 + -10*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3185098560837423 + 8*p2 + -11*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8192542432588763 + 8*p2 + -12*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.924699216676006 + 8*p2 + -14*p3 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.802410428212046 + 8*p2 + -14*p3 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3286338129428605 + 7*p2 + -8*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.060094704195793 + 7*p2 + -9*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9492217653032773 + 7*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.09081441889307 + 7*p2 + -9*p3 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.335041989319433 + 7*p2 + -10*p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.605851447852445 + 7*p2 + -11*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1504826456711181 + 6*p2 + -9*p3 + d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.2418131244307364 + 5*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.009649925434276646 + 5*p2 + -5*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.254292079544521 + 5*p2 + -5*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3331186109887851 + 5*p2 + -6*p3 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4929078673319958 + 5*p2 + -6*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9583672905837273 + 5*p2 + -7*p3 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9564875709793297 + 5*p2 + -7*p3 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8034333571883232 + 4*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.142360772993596 + 4*p2 + -4*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.6921239624397835 + 4*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.3603133181890765 + 3*p2 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.484433621176813 + 3*p2 + -2*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.137347314717242 + 3*p2 + -3*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.717641374235642 + 3*p2 + -4*p3 + 3*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.4734624814987765 + 3*p2 + -4*p3 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.723883544305399 + 3*p2 + -4*p3 + 2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.137176621516397 + 3*p2 + -5*p3 + 2*p5 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.020118435782689 + 3*p2 + -5*p3 + 2*p5 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.020118435782689 + 3*p2 + -5*p3 + 2*p5 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.137176621516397 + 3*p2 + -5*p3 + 2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.0576299502261275 + 3*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.931679984590258 + 3*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5740630595558542 + 3*p2 + -6*p3 + 2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.33907404895739 + 3*p2 + -6*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5769849237549347 + 3*p2 + -7*p3 + 4*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.576819117475995 + 3*p2 + -7*p3 + 4*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4533773730064842 + 2*p2 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1802834530155373 + 2*p2 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.486935376126622 + 2*p2 + -1*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.2444679447559452 + 2*p2 + -2*p3 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.283015312110442 + 2*p2 + -2*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.004445702670679956 + 2*p2 + -2*p3 + -2*d + 3*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5866920874903603 + 2*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1368100938751615 + p2 + 2*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8035789176479395 + p2 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.630844579737637 + p2 + 2*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.631306393857714 + p2 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.945149056490382 + p2 + -3*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1419680739118974 + p2 + -1*p3 + d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.141213393543335 + p2 + -1*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.479747586668133 + p2 + -2*p3 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.759619152241666 + p2 + -2*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.482099243302271 + p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.098521077741543 + p2 + -2*p3 + -2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.623915788641827 + p2 + -2*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1711260594961734 + p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7225055813659997 + 14*p3 + -23*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1341800572253313 + 10*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6401639313132694 + 9*p3 + -11*p4 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1273409760530748 + 9*p3 + -13*p4 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.2417726412904075 + 8*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.261775336248738 + 8*p3 + -12*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.261772892787786 + 8*p3 + -12*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.7284948447288268 + 8*p3 + -13*p4 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.9547157297193385 + 7*p3 + -7*p4 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6393287827678726 + 7*p3 + -8*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1403922076319546 + 7*p3 + -9*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1979479388732885 + 7*p3 + -13*p4 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1979479388732885 + 7*p3 + -13*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.647422049042296 + 6*p3 + -7*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4423968170488037 + 6*p3 + -8*p4 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.277193757892098 + 6*p3 + -8*p4 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7902865240580175 + 5*p3 + -6*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.160761770799055 + 5*p3 + -7*p4 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1709462905832178 + 5*p3 + -7*p4 + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1705160669226014 + 5*p3 + -7*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.746057603386137 + 5*p3 + -8*p4 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.747954776283056 + 5*p3 + -8*p4 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.746057603386137 + 5*p3 + -8*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.746927650018256 + 5*p3 + -8*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.208773177524175 + 5*p3 + -9*p4 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.208773177524175 + 5*p3 + -9*p4 + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.259577268588776 + 5*p3 + -9*p4 + -2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.260828669662457 + 5*p3 + -9*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.255489707480606 + 5*p3 + -9*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1176971592711804 + 4*p3 + -3*p5 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.5016340069898257 + 4*p3 + -6*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.36534907418827217 + 4*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.011577641593104386 + 4*p3 + -4*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.258135992689113 + 4*p3 + -4*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3669619584449904 + 4*p3 + -4*p4 + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.268222067405146 + 4*p3 + -6*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.170764635801351 + 4*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.833047954898188 + 4*p3 + -8*p4 + p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.881915428624777 + 4*p3 + -8*p4 + p5 + 5*p6 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.881915428624777 + 4*p3 + -8*p4 + p5 + 5*p6 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.833047954898188 + 4*p3 + -8*p4 + p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.246692698956829 + 3*p3 + -2*p5 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.074741673313138 + 3*p3 + -5*p5 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.47888277602377 + 3*p3 + -2*p4 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.4232996244013565 + 3*p3 + -2*p4 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.781152343417705 + 3*p3 + -4*p4 + d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.73475660497779 + 3*p3 + -4*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.267523761171423 + 3*p3 + -5*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.761871159073832 + 3*p3 + -6*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5205669641546595 + 3*p3 + -8*p4 + 3*p5 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5308642407068171 + 2*p3 + -1*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1424346004209553 + 2*p3 + -2*p6 + 2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.315167043964031 + 2*p3 + -2*p6 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.280001826623949 + 2*p3 + -2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.13378419955434573 + 2*p3 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.898798522078094 + 2*p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.590268641688496 + 2*p3 + -1*p5 + -4*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.0020256291298646188 + 2*p3 + -2*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.166239320621831 + 2*p3 + -3*p5 + p6 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1760283233025417 + 2*p3 + -3*p5 + 4*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.988262686275288 + 2*p3 + -4*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.130097940631108 + 2*p3 + -4*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.5041249408982713 + 2*p3 + -4*p5 + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.5033081268083386 + 2*p3 + -4*p5 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.086263106806011 + 2*p3 + -5*p5 + 5*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.086263106806011 + 2*p3 + -5*p5 + 5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.7736102521210615 + 2*p3 + -3*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.396052076216314 + 2*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.3159531317608124 + 2*p3 + -8*p4 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.1527276881829085 + p3 + 2*p4 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1693842124043665 + p3 + 2*p5 + -5*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.177583969258111 + p3 + p5 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.175243657264112 + p3 + p5 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.942920620101435 + p3 + d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.012142081073199352 + p3 + -1*p6 + -2*d + 2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.29512453000380395 + p3 + -3*p6 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8002025782099562 + p3 + -1*p5 + 5*p6 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.016232085642322862 + p3 + -1*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.014877535609850064 + p3 + -1*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.013691758916045115 + p3 + -1*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.018923208815972918 + p3 + -1*p5 + 3*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.024118355867459237 + p3 + -1*p5 + -4*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.6478006279536865 + p3 + -2*p5 + 5*p6 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5062013421127358 + p3 + -2*p5 + 5*p6 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.049617484197754 + p3 + -2*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7399548596286634 + p3 + -2*p5 + d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.345242400098106 + p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.271849385189566 + p3 + -2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5469441336383665 + p3 + -3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.133876020869634 + p3 + -4*p5 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.06061179426325907 + p3 + -1*p4 + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.580094078779387 + p3 + -2*p4 + 4*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.711012796767808 + p3 + -2*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.566737772145576 + p3 + -2*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03276454244891395 + 3*p4 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.674687565620318 + p4 + -2*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6746655744717429 + p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4792986624895703 + 3*p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.876582583593625 + 2*p5 + 2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.3847869975972915 + 2*p5 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.244463432394841 + p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.518361774638032 + p5 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.376769121048238 + p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.01390608534819002 + p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.877193423336873 + 2*p6 + -2*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1550267849116107 + p6 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6090876203548591 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.2827163372095765 + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.5356319481261738 + 4*p1 + -5*p2 + 3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.17780337414172 + 3*p1 + 7*p3 + -15*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3848508766479144 + p1 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.669910101353784 + p1 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1322619488757066 + 24*p2 + -24*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8000811032940176 + 21*p2 + -20*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7968054693538749 + 18*p2 + -17*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -3*d + 3*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.71305429989555 + 18*p2 + -19*p3 + -3*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.138980419298333 + 16*p2 + -16*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.283145688205566 + 14*p2 + -14*p3 + 2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.4495251162747484 + 12*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.378874188154018 + 11*p2 + -14*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.753310144559874 + 10*p2 + -11*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.159596448450765 + 10*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8019136990086118 + 9*p2 + -8*p3 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1445000230577653 + 9*p2 + -9*p3 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7556694806427195 + 9*p2 + -10*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3225735061811605 + 9*p2 + -10*p3 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3102853410495692 + 9*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.813708668086857 + 9*p2 + -13*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8030701541709833 + 8*p2 + -7*p3 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.636087872381528 + 8*p2 + -9*p3 + 2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.6786627445212936 + 8*p2 + -12*p3 + 3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.6436547728485 + 7*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.142060401829328 + 7*p2 + -7*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.00018919369091618534 + 7*p2 + -7*p3 + 2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.944120708495106 + 6*p2 + -5*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1421961884451326 + 6*p2 + -6*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3311491814608347 + 6*p2 + -7*p3 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9186231764560886 + 6*p2 + -8*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2449009439467316 + 6*p2 + -9*p3 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.14072991184558237 + 5*p2 + -3*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.00035465090400524775 + 5*p2 + -5*p3 + 2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.271521446321433 + 5*p2 + -5*p3 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3309338078311386 + 5*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5183985755902982 + 5*p2 + -6*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9674749422194093 + 5*p2 + -7*p3 + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0012646655759950911 + 4*p2 + -4*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.322013272487904 + 4*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.601912405765302 + 4*p2 + -5*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3374756509334638 + 4*p2 + -5*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.469552943974309 + 3*p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.141037813420584 + 3*p2 + -3*p3 + 4*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.00047054076633767125 + 3*p2 + -3*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.04346602875751718 + 3*p2 + -3*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.700653561027205 + 3*p2 + -4*p3 + d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.72460995034008 + 3*p2 + -4*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.043476377190004 + 3*p2 + -5*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.90127550185084 + 3*p2 + -5*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.046447974774448 + 3*p2 + -5*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5740859233690556 + 3*p2 + -6*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.574084701638579 + 3*p2 + -6*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.344501158764783 + 2*p2 + p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.945180123351067 + 2*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.414099470315319 + 2*p2 + -1*p3 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1344488464284552 + 2*p2 + -2*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.2821986725534344 + 2*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0059025289973196225 + 2*p2 + -2*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.760034898167809 + 2*p2 + -3*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.586675332329541 + 2*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.73177836664387 + 2*p2 + -3*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8035244633752772 + p2 + d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.347555800028357 + p2 + -2*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.342550021200712 + p2 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.14165129665266 + p2 + -1*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1419034967295736 + p2 + -1*p3 + 3*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.8601164323019765 + p2 + -2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3382420250080145 + p2 + -2*p3 + d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.478725870924015 + p2 + -2*p3 + -3*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.708396199153219 + 20*p3 + -16*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6298502401678254 + 10*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.6373729668080883 + 9*p3 + -10*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.081771318944762 + 9*p3 + -12*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.550240545494925 + 9*p3 + -13*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.0286986404201013 + 9*p3 + -14*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1427079189818174 + 8*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.2394419286072935 + 8*p3 + -9*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.567326280172715 + 7*p3 + -15*p4 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.4058358684042185 + 6*p3 + -5*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.245606082459488 + 6*p3 + -10*p4 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1165944772464034 + 5*p3 + -5*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.6483966408966095 + 5*p3 + -6*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.272196880243639 + 5*p3 + -7*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.272198800105817 + 5*p3 + -7*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1642817508344776 + 5*p3 + -7*p4 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.206533030432607 + 5*p3 + -7*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.293091770518956 + 5*p3 + -8*p4 + 3*p5 + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2240854661523803 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.74696238207037 + 5*p3 + -8*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.74696203300452 + 5*p3 + -8*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.2160002368908325 + 5*p3 + -9*p4 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.272809656845697 + 5*p3 + -9*p4 + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.272060386997816 + 5*p3 + -9*p4 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.2160002368908325 + 5*p3 + -9*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9104138457864077 + 4*p3 + -4*p5 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3094348591017058 + 4*p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.568173462991633 + 4*p3 + -4*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.55540690311207 + 4*p3 + -4*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.838066125563521 + 4*p3 + -8*p4 + p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.838066125563521 + 4*p3 + -8*p4 + p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.312064031585227 + 4*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.498078081670129 + 3*p3 + -2*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1155348878575175 + 3*p3 + -3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1850656636643184 + 3*p3 + -4*p5 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1850827678909877 + 3*p3 + -4*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2572589307467195 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.434715823038652 + 3*p3 + -2*p4 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.780780064688255 + 3*p3 + -4*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.7569931468457485 + 3*p3 + -4*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.782455048673078 + 3*p3 + -6*p4 + -2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.5172286728943699 + 3*p3 + -8*p4 + 3*p5 + 2*d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.11093766511281476 + 2*p3 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2829709552524915 + 2*p3 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.23754703313672 + 2*p3 + -1*p5 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.624496119116433 + 2*p3 + -1*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.002022487537211029 + 2*p3 + -2*p5 + -3*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0031152381818846785 + 2*p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.003125361091546246 + 2*p3 + -2*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.17660445648862505 + 2*p3 + -3*p5 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3222577931161084 + 2*p3 + -3*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.502092155918474 + 2*p3 + -4*p5 + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5019174484603495 + 2*p3 + -4*p5 + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.482395949275109 + 2*p3 + -1*p4 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7350124362528658 + 2*p3 + -2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1456922574698023 + 2*p3 + -2*p4 + d + l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.010881953353259446 + 2*p3 + -2*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.26390517853158 + 2*p3 + -2*p4 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.255098064094775 + 2*p3 + -4*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0311574517719941 + p3 + 2*p5 + -5*p6 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8959729915554067 + p3 + p6 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.005685759104221927 + p3 + -1*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1471490837964424 + p3 + -1*p6 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1471480365988906 + p3 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.011664384456928504 + p3 + -1*p6 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6052522848185515 + p3 + -3*p6 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.013227501335014625 + p3 + -1*p5 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.010115230212858336 + p3 + -1*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.032230297164878484 + p3 + -1*p5 + -2*d + 3*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.985660940955974 + p3 + -2*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.334205286974344 + p3 + -2*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.07191943342107994 + p3 + -3*p5 + 5*p6 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0112490215899035 + p3 + -3*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5392093579923034 + p3 + -3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.081715659938258 + p3 + -3*p5 + -1*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.458821587040547 + p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.844903627441135 + 2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8580740395129762 + 2*p4 + d + -2*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.259691779184341 + 2*p5 + -2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.268859121080441 + 2*p5 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.138464350933469 + p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.1724258401834 + p5 + -2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.205853782280997 + p5 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3626586576446396 + p6 + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3589679844083724 + p6 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6090876203548591 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8023449613684629 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.2819393166265876 + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6048052805021659 + p1 + -2*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.6573250557164285 + p1 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.174075691426993 + 44*p2 + -42*p3 + -9*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2835952340309798 + 39*p2 + -36*p3 + -5*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.143694030009194 + 19*p2 + -19*p3 + -2*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.143694030009194 + 19*p2 + -19*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + -1*l + 3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7997065556365395 + 17*p2 + -16*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.2830335955760046 + 16*p2 + -17*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3496962888196364 + 14*p2 + -14*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9260497269562493 + 14*p2 + -16*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1407758394998595 + 12*p2 + -12*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1441895289838353 + 11*p2 + -11*p3 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.755183930044816 + 9*p2 + -10*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.27029390526860586 + 8*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3260406027402472 + 8*p2 + -9*p3 + d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.135238616413299 + 8*p2 + -13*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.137186229325599 + 8*p2 + -13*p3 + -4*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.1704392639371968 + 7*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1420129288736733 + 6*p2 + -6*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3203705515992934 + 5*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.473033828634486 + 5*p2 + -6*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.16406461487889615 + 5*p2 + -6*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.1642730071915843 + 5*p2 + -6*p3 + -4*p4 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.963616717374951 + 5*p2 + -7*p3 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9707210800951933 + 5*p2 + -7*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.244066152965503 + 5*p2 + -8*p3 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.2680138156321172 + 5*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1424820733766095 + 4*p2 + -4*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7805897898065206 + 3*p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.05495657842094705 + 3*p2 + -3*p3 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.817900416853054 + 3*p2 + -4*p3 + 2*p5 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.721414427012602 + 3*p2 + -4*p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5757164099562684 + 3*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.066843892413255 + 3*p2 + -5*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9267768311226305 + 3*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.914733037581267 + 3*p2 + -5*p3 + 2*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.438989087179235 + 2*p2 + -1*p3 + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.356383526346969 + 2*p2 + -1*p3 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.283070464514806 + 2*p2 + -2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.282200068816836 + 2*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.154031640663707 + 2*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.324131421064757 + p2 + 2*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.4505214992497624 + p2 + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1417045291948456 + p2 + -1*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.282840430119392 + p2 + -1*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1417729461015242 + p2 + -1*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.4797625964997 + p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.72175770778152 + 14*p3 + -23*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.1246767309499055 + 10*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6352717564232955 + 8*p3 + -11*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.193502959829259 + 8*p3 + -17*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.204136684871302 + 7*p3 + -11*p4 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.943747731633955 + 6*p3 + -6*p4 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.2071911940935336 + 5*p3 + -7*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.206357624842781 + 5*p3 + -7*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.2882947330698498 + 5*p3 + -8*p4 + 3*p5 + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.187320978123745 + 4*p3 + -4*p4 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.572303610133552 + 4*p3 + -4*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.670141523514282 + 4*p3 + -5*p4 + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6787999274005 + 4*p3 + -5*p4 + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6885149536158766 + 4*p3 + -5*p4 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.4150127671196212 + 4*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.758103167751701 + 4*p3 + -7*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.1186754503101906 + 4*p3 + -9*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1109851550651024 + 3*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.291963249122934 + 3*p3 + -2*p5 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.682053395659143 + 3*p3 + -3*p5 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3257880705941174 + 3*p3 + -4*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.468627395871976 + 3*p3 + -2*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.639558991696211 + 3*p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.639504537423549 + 3*p3 + -4*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.738252324936609 + 3*p3 + -4*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.777355371131675 + 3*p3 + -6*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5207402753493825 + 3*p3 + -8*p4 + 3*p5 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.666367249006844 + 2*p3 + p5 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.143847793516295 + 2*p3 + -2*p6 + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.023301409736184 + 2*p3 + -1*p5 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0015988961277520052 + 2*p3 + -2*p5 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.002836683633266384 + 2*p3 + -2*p5 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.002836683633266384 + 2*p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1367263265693826 + 2*p3 + -2*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.003777416100091327 + 2*p3 + -2*p4 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.264534710294458 + 2*p3 + -4*p4 + 2*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.191002592644536 + 2*p3 + -4*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.457160931752224 + p3 + p5 + d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1982102618598636 + p3 + p5 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.20393212378465142 + p3 + p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6911219519195804 + p3 + p6 + 3*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.3395135313613595 + p3 + d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.008413708725089064 + p3 + -1*p6 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.021664422939155215 + p3 + -1*p5 + -3*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.720389395142907 + p3 + -2*p5 + 6*p6 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.330262413661163 + p3 + -2*p5 + 2*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.895819245044939 + p3 + -2*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.334129365151882 + p3 + -2*p5 + -4*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.011128568376566244 + p3 + -1*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.693464383803632 + p3 + -2*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.563790958236509 + p3 + -2*p4 + -4*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.592025647649846 + 2*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.4363682837778065 + 2*p4 + -2*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.4812750818328455 + 2*p5 + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.509714349329467 + 2*p5 + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.363284907275205 + 2*p5 + -5*p6 + 2*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.38192519821943 + 2*p5 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3709622360939275 + p5 + d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.181338887607485 + p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.650479708355498 + p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.6585045577232425 + p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0019844393595175526 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.3298731712447016 + p1 + -2*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.939096254644466 + 20*p2 + -19*p3 + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1443219994740623 + 18*p2 + -18*p3 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + l + 3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.276271359880736 + 15*p2 + -15*p3 + -4*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.589250425101199 + 14*p2 + -9*p3 + -2*p5 + l + -3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.941503936347591 + 13*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.281877706503992 + 13*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7505249481395415 + 12*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1434458441895603 + 8*p2 + -8*p3 + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.079426145523808 + 8*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.614007039377797 + 6*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.000445058959258554 + 6*p2 + -6*p3 + 2*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.115050925052572 + 6*p2 + -10*p3 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.115197707242666 + 6*p2 + -10*p3 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.007672292858841873 + 5*p2 + -5*p3 + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1423647872508753 + 4*p2 + -4*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.142082916576678 + 4*p2 + -4*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4282823393879256 + 3*p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.277339850448806 + 3*p2 + -3*p3 + 4*d + -3*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0005260422365510909 + 3*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.0005274384999526864 + 3*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.453612502849994 + 3*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.729483258677497 + 3*p2 + -4*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.729062634327767 + 3*p2 + -4*p3 + -2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.019351563604313 + 3*p2 + -5*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8027895052272624 + 2*p2 + -1*p3 + 3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.243663705534943 + 2*p2 + -1*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.944785678940117 + 2*p2 + -1*p3 + d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.142576670222067 + 2*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1425806844793476 + 2*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.725506700509754 + 2*p2 + -3*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.730864861313377 + 2*p2 + -3*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.330566232992352 + 2*p2 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.3725063203848505 + 2*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4734504302286213 + 2*p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.1796928250983456 + 2*p2 + -5*p3 + -2*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.1796528570584748 + 2*p2 + -5*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.227914569493279 + p2 + p3 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8035857244320224 + p2 + d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4168589849006976 + p2 + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.268937818433073 + 9*p3 + -13*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.2346282935336603 + 9*p3 + -17*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.229135567844709 + 9*p3 + -17*p4 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.1246577153593758 + 7*p3 + -9*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.290649199227423 + 5*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.654871139784758 + 5*p3 + -9*p4 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.6921829375718676 + 4*p3 + -5*p4 + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.41913732920793423 + 4*p3 + -6*p4 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.560730157330653 + 4*p3 + -6*p4 + d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7566322042581195 + 4*p3 + -7*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.757607843309985 + 4*p3 + -7*p4 + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.758882457262716 + 4*p3 + -7*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.002871807242815 + 4*p3 + -8*p4 + 3*p5 + 2*d + -3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.973556384461692 + 4*p3 + -8*p4 + 3*p5 + 3*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.973548879545908 + 4*p3 + -8*p4 + 3*p5 + -3*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.0028286976102905 + 4*p3 + -8*p4 + 3*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.2566073823403167 + 3*p3 + -4*p5 + 3*d + -3*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.2566073823403167 + 3*p3 + -4*p5 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.186955331645452 + 3*p3 + -4*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.523720109974579 + 3*p3 + -2*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.481803060928208 + 3*p3 + -2*p4 + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7849142175891375 + 3*p3 + -6*p4 + 2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.8103492498443 + 3*p3 + -6*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.40215038866412384 + 2*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.14504401669066194 + 2*p3 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.143832085553027 + 2*p3 + -2*p6 + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.762737191448671 + 2*p3 + -3*p6 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.1560261774379352 + 2*p3 + -2*p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.18406835703477878 + 2*p3 + -3*p5 + 2*d + -3*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.173100052375128 + 2*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.34964006372277207 + 2*p3 + -4*p5 + 2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.3459916274544031 + 2*p3 + -4*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.271245858832544 + 2*p3 + -2*p4 + 2*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.768125031347894 + 2*p3 + -3*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.1942431454667135 + 2*p3 + -4*p4 + 2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.1436270348608675 + 2*p3 + -5*p4 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.172372939710431 + p3 + 2*p5 + -5*p6 + 3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.464117290551898 + p3 + p5 + -1*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.04691165776680439 + p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9883178301813342 + p3 + -2*p6 + d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.983581904750998 + p3 + -2*p6 + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.6045024913718953 + p3 + -3*p6 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.4629098377821016 + p3 + -3*p6 + d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6896535979215606 + p3 + -1*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.01386541917661855 + p3 + -1*p5 + -1*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.012316963064249183 + p3 + -1*p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.05057859452524448 + p3 + -1*p5 + -2*d + 3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.2909722426753345 + p3 + -2*p5 + 4*p6 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9502912945705828 + p3 + -2*p5 + 2*p6 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.7651111628022838 + p3 + -2*p5 + d + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.542490960045169 + p3 + -4*p5 + -2*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.04328189652143178 + p3 + -1*p4 + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.581207075243384 + p3 + -2*p4 + 4*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.959512052040111 + 2*p5 + -5*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9598386031431594 + 2*p5 + -5*p6 + -2*d + 2*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.509739848133179 + p5 + d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.839744068109756 + 29*p2 + -33*p3 + 2*p5 + d + -1*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.800885027442436 + 23*p2 + -22*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.351063230689798 + 23*p2 + -23*p3 + d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.741285873211184 + 20*p2 + -21*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 2*d + -4*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.45716595921378833 + 15*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.138798905056126 + 15*p2 + -15*p3 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.3477727614510133 + 13*p2 + -13*p3 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9411293716934805 + 13*p2 + -15*p3 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.000830078592248503 + 11*p2 + -11*p3 + 2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.368669771616384 + 10*p2 + -13*p3 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.754148077133757 + 8*p2 + -9*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.147737093719756 + 8*p2 + -13*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.181215650365661 + 8*p2 + -13*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.070562822986772 + 8*p2 + -13*p3 + 2*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.065528420759394 + 8*p2 + -13*p3 + -2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.20936449507475 + 8*p2 + -13*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.14852807693676 + 8*p2 + -13*p3 + -4*d + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.9506426633422755 + 8*p2 + -14*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.142136149118864 + 7*p2 + -7*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.143294000544637 + 7*p2 + -7*p3 + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.082090390626977 + 7*p2 + -9*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.944357200608752 + 5*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.0011323696186939208 + 5*p2 + -5*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3331191345875606 + 5*p2 + -6*p3 + 3*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.4744908294940515 + 5*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.8448317028793193 + 5*p2 + -7*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9517289307737675 + 5*p2 + -7*p3 + d + l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.095383690874792 + 5*p2 + -7*p3 + d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.094679275988687 + 5*p2 + -7*p3 + -1*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3354067376381498 + 4*p2 + -5*p3 + d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.48603670609477 + 2*p2 + -1*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.487251280721232 + 2*p2 + -1*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.244469515552272 + 2*p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.193983423477383 + 2*p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.45863395564764076 + p2 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1414179461316682 + p2 + -1*p3 + -4*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.057803567995117 + p2 + -4*p3 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.136636433614588 + 9*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.6228253069251815 + 8*p3 + -10*p4 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1488821957436732 + 7*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.16116845800972 + 7*p3 + -12*p4 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1268687069541192 + 5*p3 + -5*p5 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.220336149853246 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.217531422741923 + 4*p3 + -6*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.257176053102199 + 4*p3 + -6*p4 + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.257459843638574 + 4*p3 + -6*p4 + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.723589281793513 + 4*p3 + -7*p4 + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.761637110421139 + 4*p3 + -7*p4 + -2*d + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.003475865696929 + 4*p3 + -8*p4 + 3*p5 + 4*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.997081677449324 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.997052530450815 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.003423680352294 + 4*p3 + -8*p4 + 3*p5 + -4*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.34722369786497 + 3*p3 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.893360233665171 + 3*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9744848826271197 + 3*p3 + -3*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.23843099991127212 + 3*p3 + -3*p5 + 2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.52007097557451 + 3*p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.185626437952984 + 3*p3 + -3*p4 + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1933482981625825 + 3*p3 + -3*p4 + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.258758019536208 + 3*p3 + -5*p4 + 2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.779824671455713 + 3*p3 + -6*p4 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.152052437291945 + 3*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5143089115887086 + 3*p3 + -8*p4 + 3*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.00009669124056048585 + 2*p3 + -2*p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.17827613284618518 + 2*p3 + -3*p5 + 4*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.487789880830081 + 2*p3 + -4*p5 + -2*d + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.279207178215515 + 2*p3 + -2*p4 + -2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.269023007497203 + 2*p3 + -2*p4 + -4*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.774105402029852 + 2*p3 + -3*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.060325943325049 + p3 + p5 + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.786125476090021 + p3 + p5 + -1*p6 + d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.927787193728293 + p3 + p7 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.012223762482192686 + p3 + -1*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.9883176556484092 + p3 + -2*p6 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.9882246550942275 + p3 + -2*p6 + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5281183141946548 + p3 + -1*p5 + 3*p6 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1539876328716066 + p3 + -1*p5 + 3*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.827625915043942 + p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.273402379157991 + p3 + -2*p5 + -2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.1961219669115355 + p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.6037567291791515 + p3 + -2*p4 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.5772662963253055 + p3 + -2*p4 + -4*d + l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.381033841573803 + 2*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.3165221090969625 + 2*p5 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.744199010764005 + 2*p5 + -5*p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.748248174628632 + 2*p5 + -5*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.118082744994529 + p5 + 4*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.116513161899894 + p5 + 2*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.1255595524788315 + p5 + -2*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.179031562336347 + p5 + -4*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.0024647539696663924 + 2*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.349289810135163 + 23*p2 + -24*p3 + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8002448151778547 + 16*p2 + -15*p3 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2905475870716907 + 15*p2 + -16*p3 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.141093314890798 + 11*p2 + -11*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.80219225355723 + 8*p2 + -7*p3 + -1*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1413256182142377 + 8*p2 + -8*p3 + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.810035971741884 + 8*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.933983844697841 + 8*p2 + -14*p3 + 2*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8032158891635246 + 7*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.471823617331153 + 6*p2 + -7*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.7500294491648996 + 6*p2 + -7*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.0301844732055905 + 6*p2 + -8*p3 + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.750332961921822 + 5*p2 + -6*p3 + 4*d + -3*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2650300007429076 + 5*p2 + -8*p3 + -2*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2498370841372222 + 5*p2 + -8*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.277092860864699 + 4*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.9452635500893125 + 4*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.072364500878655 + 4*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8028669978460512 + 3*p2 + -2*p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.141361222930979 + 3*p2 + -3*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.717496337374801 + 3*p2 + -4*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.473463179630477 + 3*p2 + -4*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.994385143754992 + 3*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.72837322927323 + 3*p2 + -4*p3 + -4*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.029379003755794 + 3*p2 + -5*p3 + 2*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.0023275710904596377 + 2*p2 + -2*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.005661673560544405 + 2*p2 + -2*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.005034751293228042 + 2*p2 + -2*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.4782970435268 + 2*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.7324571251899705 + 2*p2 + -3*p3 + -4*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9362750874449084 + p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1415626339266587 + p2 + -1*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.478862704737372 + p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3373204911629615 + p2 + -2*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.3817384139961998 + 9*p3 + -15*p4 + -2*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.071006651717237 + 8*p3 + -11*p4 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.212103440269905 + 7*p3 + -8*p4 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.409647667490574 + 5*p3 + -4*p4 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9064198343261443 + 5*p3 + -6*p4 + -2*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1244102361697594 + 4*p3 + -4*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.207206237918367 + 4*p3 + -4*p4 + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.18431415038336 + 4*p3 + -4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.727767250956936 + 4*p3 + -7*p4 + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.756299719035615 + 4*p3 + -7*p4 + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.726419856774397 + 4*p3 + -7*p4 + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8623448516942893 + 4*p3 + -8*p4 + 3*p5 + d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8623434554308878 + 4*p3 + -8*p4 + 3*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.266290511521964 + 3*p3 + -5*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.781014287873871 + 3*p3 + -6*p4 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.39464634554517425 + 2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.17259962398699882 + 2*p3 + -1*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.813858234305435 + 2*p3 + -1*p5 + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.673430438953373 + 2*p3 + -1*p5 + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.17414214597991143 + 2*p3 + -3*p5 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.489650401812707 + 2*p3 + -4*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.277058677906311 + 2*p3 + -2*p4 + -4*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.098916045751269 + p3 + p5 + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.385186503463073 + p3 + p5 + -3*p6 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.095684402606594 + p3 + 3*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.2872110326423365 + p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.535444333729901 + p3 + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.005141565443450096 + p3 + -1*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.9891868551108525 + p3 + -2*p6 + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.196521821843167 + p3 + -2*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.344029570800894 + p3 + -2*p5 + -4*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.00590043460221723 + p3 + -1*p4 + 2*d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.2945173469536684 + 2*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.48595917948271433 + p4 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.00006702064327658226 + 20*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5904401820590182 + 20*p2 + -21*p3 + -2*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.4587596193537843 + 15*p2 + -13*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.282490840670218 + 12*p2 + -12*p3 + 2*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.14115248155244 + 11*p2 + -11*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.454858318870068 + 11*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.1438565456575045 + 9*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.755603856262844 + 8*p2 + -9*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.6786627445212936 + 8*p2 + -12*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.947448012679426 + 8*p2 + -14*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1427231033463103 + 7*p2 + -7*p3 + l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.26181125603806293 + 7*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.918816733470135 + 6*p2 + -8*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.917726949885189 + 6*p2 + -8*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.09364080508375 + 6*p2 + -8*p3 + d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.9167164042482847 + 6*p2 + -8*p3 + -2*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.2620577050267614 + 5*p2 + -8*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.18663922702296643 + 4*p2 + -2*p3 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.944660887898599 + 4*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5954566073951002 + 4*p2 + -5*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.21896606639043 + 3*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.077373412800637 + 3*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.723876562988391 + 3*p2 + -4*p3 + -4*d + l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1234393095068747 + 3*p2 + -5*p3 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.7982938861399753 + 2*p2 + -1*p3 + d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.480680465153324 + 2*p2 + -1*p3 + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.280279333975016 + 2*p2 + -2*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.72519271577732 + 2*p2 + -3*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.477813238258148 + 2*p2 + -3*p3 + d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.3504944023916232 + 2*p2 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.0547467983431742 + 2*p2 + -5*p3 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.104241228330347 + p2 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.1243318538897116 + 9*p3 + -13*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.541266237014095 + 8*p3 + -12*p4 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.6300143096158295 + 6*p3 + -7*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.7015323088106344 + 6*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.7380906904512416 + 6*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.1426551845434573 + 5*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.7249869244618763 + 4*p3 + -5*p4 + -2*d + l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.713094250938787 + 4*p3 + -5*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.72993617161839 + 4*p3 + -7*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.760383614952357 + 4*p3 + -7*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.8623588143283052 + 4*p3 + -8*p4 + 3*p5 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.862357767130754 + 4*p3 + -8*p4 + 3*p5 + -1*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1417207607568893 + 3*p3 + -3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.228487710124685 + 3*p3 + -3*p4 + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.749483518673192 + 3*p3 + -4*p4 + 2*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.3991164828253821 + 3*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.80224027560661 + 3*p3 + -6*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.1901112614938585 + 3*p3 + -6*p4 + d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.284252725055156 + 3*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.511201212315874 + 2*p3 + -1*p6 + -2*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.1490055650268387 + 2*p3 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.609394483230627 + 2*p3 + -1*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.958975363295122 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.4871980396807296 + 2*p3 + -4*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.83271146391672 + p3 + p6 + -1*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5974038712415504 + p3 + l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.960159586189234 + p3 + -2*p6 + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.986326609532684 + p3 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.9315506471943686 + p3 + -3*p5 + d + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.7156350842672073 + p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -2*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2824201123439287 + 4*p1 + -5*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.07576753535587703 + p1 + 15*p2 + -16*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.7964450588633376 + 21*p2 + -20*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.741661293533288 + 20*p2 + -21*p3 + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.09472166199456 + 18*p2 + -18*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.942090017910412 + 12*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1432229656440813 + 10*p2 + -10*p3 + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.8023465406631065 + 7*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.472894551360177 + 6*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.5804129419354105 + 5*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.272045045097032 + 5*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.892109530723192 + 5*p2 + -7*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.954719028848284 + 5*p2 + -7*p3 + d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9406759351538123 + 5*p2 + -7*p3 + -2*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.9485506862058855 + 5*p2 + -7*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.0007497934466567639 + 3*p2 + -3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.123775634453734 + 3*p2 + -5*p3 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.0005918411493512772 + 2*p2 + -2*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.004656538444320871 + 2*p2 + -2*p3 + -2*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.150266948470522 + p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.630705626034228 + 9*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.6426311202455715 + 8*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.2685129797981876 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.235664154943036 + 7*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1337775927981384 + 5*p3 + -5*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.92801638095403 + 5*p3 + -5*p4 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.765349949338907 + 5*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.6766344973975507 + 4*p3 + -5*p4 + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.721990019603277 + 4*p3 + -5*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.239822069816695 + 4*p3 + -6*p4 + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.997199487173833 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.997163882457092 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.045149075250165 + 3*p3 + -3*p5 + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.219999824906387 + 3*p3 + -3*p4 + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.669228367249638 + 3*p3 + -7*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.142817176592992 + 2*p3 + -2*p6 + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.614466933635698 + 2*p3 + -1*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.0018488272766375932 + 2*p3 + -2*p5 + 4*d + -3*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1480158143029824 + 2*p3 + -2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.0010789625435828946 + 2*p3 + -2*p5 + -3*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.041611092828497606 + 2*p3 + -4*p5 + 2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.04160341337978884 + 2*p3 + -4*p5 + 2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.715400520514056 + 2*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.246801816028345 + 2*p3 + -4*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.234315172967536 + p3 + 4*p5 + -10*p6 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.4818002344081371 + p3 + 2*p5 + -3*p6 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.1389114617962461 + p3 + 2*p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.0767131632429243 + p3 + -2*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.961964256635795 + p3 + -2*p6 + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.985860257556551 + p3 + -2*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.991698209371547 + p3 + -2*p6 + -2*d + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.075358821736644 + p3 + -2*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.008222595171995684 + p3 + -1*p4 + l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.8566276851618477 + 2*p4 + 3*d + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6846333328611243 + 3*p1 + -1*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.901809721639926 + 26*p2 + -28*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.799343901712925 + 23*p2 + -22*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.348448212369852 + 23*p2 + -24*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + 3*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*l + -3*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1392560067872233 + 14*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.9858651359801405 + 12*p2 + -8*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.345580453377583 + 12*p2 + -12*p3 + d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9427251262285785 + 12*p2 + -14*p3 + d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.2964112037250075 + 8*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3289882893139406 + 7*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.08021136915428 + 7*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9516783162254594 + 6*p2 + -8*p3 + d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.142234934754527 + 5*p2 + -5*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1412217711237442 + 5*p2 + -5*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.596784279357092 + 5*p2 + -6*p3 + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1417862106038394 + 4*p2 + -4*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6082144406284031 + 4*p2 + -5*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.033484541755262 + 4*p2 + -6*p3 + -2*d + l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.7181492650479715 + 3*p2 + -4*p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.482261558922706 + 2*p2 + -1*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.0005750859885321316 + 2*p2 + -2*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.478076782975199 + 2*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.4571310611270651 + p2 + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.4240277502703387 + p2 + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.141489504631 + p2 + -1*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.141184944676527 + p2 + -1*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.7310590994624904 + 8*p3 + -15*p4 + 2*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.733527867689436 + 8*p3 + -15*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.772978608966448 + 7*p3 + -10*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.243626172457709 + 7*p3 + -13*p4 + -2*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.126692428699667 + 4*p3 + -4*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.675633202005682 + 4*p3 + -5*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.7375339474164875 + 3*p3 + -4*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.6979708154339646 + 3*p3 + -6*p4 + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.795333658690618 + 3*p3 + -6*p4 + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.6979708154339646 + 3*p3 + -6*p4 + -1*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.628170045690197 + 3*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.14528297776021 + 2*p3 + -2*p6 + -2*d + l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.145319106075726 + 2*p3 + -2*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.741060551204752 + 2*p3 + -1*p5 + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.155339590405151 + 2*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1385685045982292 + p3 + 2*p5 + -5*p6 + l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1704636985467247 + p3 + 2*p5 + -5*p6 + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3180562450111488 + p3 + p5 + d + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.7877428727078435 + p3 + p5 + -1*p6 + d + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.6911196829915527 + p3 + p6 + 3*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1759213431177111 + p3 + -2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.01289047825645452 + p3 + -1*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.0065327673902147755 + p3 + -1*p4 + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6143478766857615 + p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.168178406915747 + p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.411420049345974 + 18*p2 + -15*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.936259745544124 + 18*p2 + -17*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.8007432812122242 + 15*p2 + -14*p3 + d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.00028152160834668533 + 10*p2 + -10*p3 + 2*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.141435923022964 + 10*p2 + -10*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.357187599533363 + 9*p2 + -12*p3 + d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.741626910547024 + 7*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.26693083033293796 + 6*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.93406672234236 + 6*p2 + -8*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.140057312941765 + 5*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.95889438001783 + 5*p2 + -7*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.94041134323921 + 5*p2 + -7*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.268160640313792 + 4*p2 + -4*p3 + -2*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.477034646878834 + 4*p2 + -5*p3 + d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.097501647922086 + 4*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.000882438469808333 + 3*p2 + -3*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.732292017042732 + 3*p2 + -4*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.482148461587177 + 3*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.8029033006944926 + 2*p2 + -1*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.005733232059876174 + 2*p2 + -2*p3 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.685939039169491 + 2*p2 + -3*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.4805012198391445 + 2*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.6135172829930537 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.743785342236332 + 8*p3 + -15*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.206693809249982 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.7482528700209787 + 6*p3 + -11*p4 + -2*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.253848757416199 + 4*p3 + -6*p4 + -1*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.251629920338138 + 4*p3 + -6*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.010650041587253 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.0106228144509215 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.871231221075769 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.871283231887478 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.012950168516872725 + 3*p3 + -3*p5 + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.485542428850605 + 3*p3 + -2*p4 + -2*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.766327167685415 + 3*p3 + -4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.9500064483383407 + 3*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.510705330282116 + 3*p3 + -8*p4 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.33113713019067936 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.143750578676959 + 2*p3 + -2*p5 + 4*d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.265921557416409 + 2*p3 + -2*p4 + -4*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.268518598845061 + 2*p3 + -4*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.172372939710431 + p3 + 2*p5 + -5*p6 + 3*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.0307712104085278 + p3 + 2*p5 + -5*p6 + -1*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.3100868971136175 + p3 + p5 + d + l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.782025008043703 + p3 + p6 + d + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.9644719202101113 + p3 + d + 2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.4364229040850776 + p3 + -1*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.990860102264739 + p3 + -2*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.222638430666184 + p3 + -4*p6 + d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.027897866362652964 + p3 + -1*p5 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.25381594522626 + p3 + -2*p5 + 2*l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.7540892340430143 + p3 + -2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.256500968245844 + p5 + -4*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.0011780972450961724 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.757236935348986 + 4*p1 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3090098544322117 + 26*p2 + -29*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1388489960056583 + 21*p2 + -21*p3 + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1421923487207786 + 21*p2 + -21*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.743844525894608 + 20*p2 + -21*p3 + -4*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.29738194735665 + 14*p2 + -15*p3 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.747552652423395 + 11*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.711164989478582 + 8*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.8033200853198688 + 6*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.8025524895148417 + 6*p2 + -5*p3 + -1*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1422764735907247 + 6*p2 + -6*p3 + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.9171153865152903 + 6*p2 + -8*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.2070566207098883 + 5*p2 + -8*p3 + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.2630876238183633 + 5*p2 + -8*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.0046582837735728655 + 4*p2 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.268762604372806 + 4*p2 + -4*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.6316327449328873 + 4*p2 + -5*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.6352351045090037 + 4*p2 + -5*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.295443776218944 + 3*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.730432543257657 + 3*p2 + -4*p3 + 2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.72430923010996 + 3*p2 + -4*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.688139026691631 + 2*p2 + -3*p3 + -2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7190821180382128 + 14*p3 + -23*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7190821180382128 + 14*p3 + -23*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.7460968562976737 + 8*p3 + -15*p4 + -2*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.6059624592911876 + 7*p3 + -9*p4 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.242500784156022 + 5*p3 + -8*p4 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.787362399429226 + 4*p3 + -5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.782911460770789 + 4*p3 + -5*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.246358153332489 + 4*p3 + -6*p4 + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.24418940720396 + 4*p3 + -6*p4 + -2*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.246069824940059 + 4*p3 + -6*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.556453909133708 + 3*p3 + -3*p5 + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.485063859569708 + 3*p3 + -2*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.2644566770802608 + 3*p3 + -3*p4 + -2*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.264651996420192 + 3*p3 + -5*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.235736254037776 + 3*p3 + -5*p4 + l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.70782913318093 + 3*p3 + -6*p4 + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.78924053973898 + 3*p3 + -6*p4 + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.70782913318093 + 3*p3 + -6*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.145080868632829 + 2*p3 + -2*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.849867003266273 + p3 + p4 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.1548492849266827 + p3 + 2*p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.3230985267151105 + p3 + p5 + -2*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.029441784618967147 + p3 + -1*p5 + -2*d + -2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.7541803402299685 + p3 + -2*p5 + d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.344549678917989 + p3 + -2*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.080734959431561 + p3 + -3*p5 + d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.006248802320915298 + p3 + -1*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.40875523815244597 + p3 + -3*p4 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.24839211755117938 + 2*p5 + -2*d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.471033689810017 + 19*p2 + -24*p3 + 10*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.989207441497709 + 12*p2 + -8*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.459441728018731 + 10*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.143220522183128 + 9*p2 + -9*p3 + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.3064972699427242 + 5*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1481289116385125 + 4*p2 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6309974450851614 + 4*p2 + -5*p3 + -2*d + l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.9552571138566734 + 4*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.01741197920657 + 4*p2 + -6*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.470498563363039 + 3*p2 + -2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.942929695813546 + 3*p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.717309587144838 + 3*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.283174660671149 + 2*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.3387734777652467 + 2*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.737449988581151 + 2*p2 + -3*p3 + -4*d + l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8036209800829126 + p2 + 3*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.945058997500979 + p2 + d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.030231422562469 + p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.8886424341641055 + p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.2407627852868863 + 5*p3 + -8*p4 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.7839202610784435 + 4*p3 + -5*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.529946921146919 + 3*p3 + -2*p5 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.237547207669646 + 3*p3 + -5*p4 + l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.265440012577468 + 3*p3 + -5*p4 + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.261979373736613 + 3*p3 + -5*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.5102080859782228 + 3*p3 + -8*p4 + 3*p5 + l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.33078946060368203 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.150398188731955 + 2*p3 + -2*p5 + 2*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.0017764046109965 + 2*p3 + -4*p5 + 3*p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.0017764046109965 + 2*p3 + -4*p5 + 3*p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.495491669753281 + 2*p3 + -4*p5 + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.08785449801798 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.2822147295825514 + 2*p3 + -2*p4 + 2*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5711898985412212 + p3 + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.9051171120741388 + p3 + -1*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.9883176556484092 + p3 + -2*p6 + 3*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.00828560155799268 + p3 + -1*p5 + -4*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.008437096137065787 + p3 + -1*p4 + -1*l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.010231992739816759 + p3 + -1*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.4640082159719645 + p3 + -2*p4 + 2*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.462509676276202 + p3 + -2*p4 + -2*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.6825810001937043 + 3*p1 + -1*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.90219421767414 + 26*p2 + -28*p3 + d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.180866950577745 + 20*p2 + -12*p3 + -15*p4 + -1*d + l + -2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.7974487977161597 + 18*p2 + -17*p3 + -1*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.3430778257631486 + 11*p2 + -11*p3 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1414465695314013 + 10*p2 + -10*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.8046784750766958 + 8*p2 + -12*p3 + -2*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.7439379010095895 + 7*p2 + -8*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.142024971645512 + 6*p2 + -6*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5114879444170268 + 5*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.2110642457383176 + 5*p2 + -8*p3 + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.5351642338799065 + 4*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.268602034081622 + 4*p2 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.3354074357698504 + 4*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.976828536241648 + 4*p2 + -6*p3 + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.123503520626715 + 4*p2 + -7*p3 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.22422489246466432 + 3*p2 + -1*p3 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.471105588876883 + 3*p2 + -2*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.5785311109392763 + 3*p2 + -7*p3 + 4*p4 + 2*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.5783804890248296 + 3*p2 + -7*p3 + 4*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.747606583097281 + 2*p2 + -3*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.761033567067483 + 10*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.743983786172284 + 8*p3 + -15*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.746320432974853 + 8*p3 + -15*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.186776269362515 + 6*p3 + -7*p4 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.242004770080922 + 5*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.4131053392717 + 4*p3 + -3*p4 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.2618747945211521 + 3*p3 + -3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.2541419557338993 + 3*p3 + -3*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.144027387896325 + 2*p3 + -2*p5 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.147653483950269 + 2*p3 + -2*p5 + -4*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.32052642649813 + 2*p3 + -3*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.9220644251456122 + 2*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.1637279493645032 + p3 + 2*p5 + -5*p6 + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.156517819691589 + p3 + 2*p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.331517122362105 + p3 + p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.777044178926044 + p3 + -1*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.119696608462265 + p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.321181291030111 + p3 + -3*p5 + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.11870734734391793 + p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1419019259332464 + d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7563272697428465 + 4*p1 + -3*p3 + l + -3*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.4125059932065644 + 18*p2 + -15*p3 + d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -3*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -2*l + 3*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.942555671754844 + 11*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.944169735250455 + 11*p2 + -13*p3 + d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.0001357866158051588 + 9*p2 + -9*p3 + 2*d + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.126271638315328 + 8*p2 + -13*p3 + 2*d + l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.132149558170195 + 8*p2 + -13*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.142892400283753 + 6*p2 + -6*p3 + l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.8027371453497028 + 5*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.168470898603431 + 5*p2 + -5*p3 + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.214466939648006 + 5*p2 + -8*p3 + l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.47678695066470855 + 4*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.7339741653758045 + 4*p2 + -5*p3 + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.033072120453015 + 4*p2 + -6*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.487219166662996 + 3*p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.021260379217318524 + 3*p2 + -3*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.242980417631103 + 2*p2 + -13*p3 + 15*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.242980417631103 + 2*p2 + -13*p3 + 15*p4 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.055807800992095 + 7*p3 + -10*p4 + d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.244897836347345 + 4*p3 + -6*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.3042194662308964 + 3*p3 + -4*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.893968497906125 + 3*p3 + -4*p5 + d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.261725411333815 + 3*p3 + -3*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.26600200859661 + 3*p3 + -5*p4 + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.23798441264727 + 3*p3 + -5*p4 + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.266966303008337 + 3*p3 + -5*p4 + -2*d + l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.342376211902163 + 2*p3 + -1*p5 + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.154054129916107 + 2*p3 + -2*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.087878234495807 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.280801170424729 + p3 + p5 + -2*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.997344873100524 + p3 + -2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1539878074045316 + p3 + -1*p5 + d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7545154434463512 + p3 + -2*p5 + d + -1*l + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.553669793904193 + p3 + -2*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.857962862039624 + 2*p4 + d + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.587158997058535 + 2*p5 + l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.585963970119694 + 2*p5 + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.043225747909417 + 2*p5 + -5*p6 + 2*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.043235521753229 + 2*p5 + -5*p6 + -2*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.141884821706577 + d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.364054588977018 + 23*p2 + -23*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.1404817515208987 + 13*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.1415947479848954 + 9*p2 + -9*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.477374637017122 + 4*p2 + -5*p3 + -1*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.003052457318712 + 3*p2 + -5*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.5717053027676515 + 3*p2 + -7*p3 + 4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.5715351331655825 + 3*p2 + -7*p3 + 4*p4 + -2*d + l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.714181084460638 + 2*p2 + -3*p3 + 2*d + l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.137039604671799 + 8*p3 + -10*p4 + 2*d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.276977162531926 + 6*p3 + -8*p4 + 2*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.746878082667499 + 5*p3 + -8*p4 + -2*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.865725405417427 + 4*p3 + -4*p4 + d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.201164406151789 + 3*p3 + -3*p4 + -1*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.240907141012659 + 3*p3 + -5*p4 + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.025664368518875817 + 2*p3 + -3*p5 + p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.4945633291241456 + 2*p3 + -4*p5 + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.76982341124301 + 2*p3 + -3*p4 + 2*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.38389546641873956 + 2*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.1663967323237276 + p3 + 2*p5 + -5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.6574714718440373 + p3 + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.317743516002458 + p3 + -3*p5 + l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.292557193165704 + p3 + -3*p5 + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.674614087258809 + p4 + -2*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.582810509227192 + 2*p5 + l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.5809817532369514 + 2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.5378553230602893 + 2*p5 + -1*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.10571511639207214 + p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.665355847701947 + p6 + 2*d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.702137789023101 + p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.704904834019213 + p6 + -2*d + l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.8012010810750225 + 14*p2 + -13*p3 + d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.2175205677072953 + 5*p2 + -8*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.9824971911192 + 4*p2 + -6*p3 + l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.0015114551322270892 + 3*p2 + -3*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.336855360917305 + 3*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.0297128427501185 + 3*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.156089541388099 + 10*p3 + -17*p4 + d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.3220795949994795 + 4*p3 + -5*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.168288537191548 + 4*p3 + -7*p4 + d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.1812856295703487 + 3*p3 + -4*p5 + -2*d + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.478531964844119 + 3*p3 + -2*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.773246700037871 + 3*p3 + -4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.76249947760455 + 2*p3 + -3*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.762506807987407 + 2*p3 + -3*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.9975198956312328 + 2*p3 + -4*p5 + 3*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.2630250089898 + 2*p3 + -2*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.610684605118751 + p3 + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.009038711130228234 + p3 + -1*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.030149166564800448 + p3 + -1*p5 + -4*d + 2*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.006301162198475129 + p3 + -1*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.921304725813801 + p5 + 2*d + l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.129593531978966 + p5 + 2*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.665670530566081 + p6 + -2*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.0026438247509210106 + 2*d + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.385747809848831 + 20*p2 + -20*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -3*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.751863615675821 + 10*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.07664424823242 + 8*p2 + -13*p3 + 2*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.074732065503936 + 8*p2 + -13*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8033878040948461 + 5*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8029378582136821 + 4*p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1420277641723153 + 4*p2 + -4*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8027912505565145 + 3*p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.943932212935892 + 3*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.484441475158446 + 3*p2 + -2*p3 + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.000176976386152225 + 2*p2 + -2*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.68281226481791 + 8*p3 + -15*p4 + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.7360638310925838 + 8*p3 + -15*p4 + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.73637991022012 + 8*p3 + -15*p4 + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.6835882382033467 + 8*p3 + -15*p4 + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.766960190106797 + 7*p3 + -10*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.766960190106797 + 7*p3 + -10*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.6479165008193855 + 5*p3 + -6*p4 + 2*d + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.021663026675753618 + 5*p3 + -8*p4 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.706203358982696 + 3*p3 + -2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.8984127873167695 + 3*p3 + -3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.199965888554444 + 3*p3 + -3*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.267172949991773 + 3*p3 + -5*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.02519574761471534 + 2*p3 + -3*p5 + p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1628537309388127 + 2*p3 + -3*p5 + p6 + 2*d + -2*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1628537309388127 + 2*p3 + -3*p5 + p6 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.277122382424008 + 2*p3 + -2*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.161801454936152 + p3 + 2*p5 + -5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.281385689689539 + p3 + 2*p5 + -7*p6 + d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.129909960172352 + p3 + -2*p6 + -1*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.239213822572375 + p3 + -2*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.316245150839621 + p3 + -3*p5 + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.346025703866401 + p3 + -3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.011335389892927572 + p3 + -1*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.560809412275327 + p3 + -2*p4 + 2*d + l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.150887421517922 + p5 + -2*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.4583929256779403 + 15*p2 + -13*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.303576993536604 + 13*p2 + -14*p3 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.340215136724028 + 10*p2 + -10*p3 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.283116715739982 + 8*p2 + -8*p3 + 2*d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.14970215142626 + 8*p2 + -8*p3 + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.1276972402449905 + 8*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.735087336372727 + 4*p2 + -5*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.017764186649623 + 4*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.98483017273034 + 4*p2 + -6*p3 + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.88892414730201 + 3*p2 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.727637572993514 + 3*p2 + -4*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.718451381541493 + 3*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.032389522182561 + 3*p2 + -5*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.5556969598371182 + 3*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.57129200880078 + 3*p2 + -7*p3 + 4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.571129169581569 + 3*p2 + -7*p3 + 4*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.118533721076611 + 2*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.798594116764584 + 5*p3 + -6*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.253037170815704 + 5*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.5849507894922783 + 4*p3 + -4*p4 + -2*d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.006422854138922 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.006393707140414 + 4*p3 + -8*p4 + 3*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.618316614865138 + 3*p3 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.69173545214829 + 3*p3 + -2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.8924950739549575 + 3*p3 + -3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.9571055750708276 + 3*p3 + -4*p4 + d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.098698228660621 + 3*p3 + -4*p4 + d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.6567655031582387 + 3*p3 + -8*p4 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.9978553479134661 + 2*p3 + -4*p5 + 3*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.0465450065825435 + 2*p3 + -4*p5 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.4267864176860412 + p3 + 2*p5 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.3178239416877087 + p3 + p5 + 3*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.3249963722487794 + p3 + p5 + d + -1*l + -2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.335967545920083 + p3 + -2*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.393774945141237 + p3 + -3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.384001275862993 + p3 + -3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.936938504090225 + 18*p2 + -17*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.331454614079934 + 6*p2 + -7*p3 + d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.954519712247706 + 5*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.171619830138196 + 3*p2 + -6*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.14140590335983 + p2 + -1*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.9788845001072304 + 8*p3 + -13*p4 + d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.687535474839657 + 8*p3 + -15*p4 + l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.15223619496723 + 6*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.2084378827782336 + 5*p3 + -7*p4 + -2*d + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.004513770511507735 + 3*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.789565354011093 + 3*p3 + -4*p4 + d + -1*l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.34377753675859 + 2*p3 + -1*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.17453746305548815 + 2*p3 + -3*p5 + 4*d + -3*l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.775403403394561 + 2*p3 + -3*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.4341155703156244 + 2*p3 + -4*p4 + d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.888275033858244 + p3 + -2*p5 + 3*p6 + d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.342621439160386 + p3 + -3*p5 + -1*l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 6.0574524502411995 + p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.696611902078362 + p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.701288860874931 + p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -3*l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.141553907280399 + 9*p2 + -9*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.463500142128392 + 9*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.7513768433474395 + 5*p2 + -6*p3 + 2*d + l + -3*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.140538125655738 + 3*p2 + -3*p3 + 2*d + l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.723751422881024 + 3*p2 + -4*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( PI + p2 + -1*p3 + 2*d + l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.141363840924856 + p2 + -1*p3 + -4*d + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.688284395621688 + 8*p3 + -15*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.1391896757773305 + 6*p3 + -8*p4 + -1*l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.3167673193585512 + 3*p3 + -2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.0250845956363133 + p3 + 3*p5 + -5*p6 + d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.9692085777654156 + p3 + -1*p6 + d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.110801231355208 + p3 + -1*p6 + d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.9359902412126666 + p3 + -3*p5 + d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 2*d + l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -2*d + -3*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.713071229589294 + 6*p2 + -7*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.7526493629050695 + 5*p2 + -6*p3 + 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.2597652150542666 + 5*p2 + -8*p3 + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.2599465547635489 + 5*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.5997454049660256 + 4*p2 + -5*p3 + 2*d + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.989335042062662 + 4*p2 + -6*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.609067042466319 + 3*p2 + -7*p3 + 4*p4 + l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.608998800092566 + 3*p2 + -7*p3 + 4*p4 + -1*l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.478104882776155 + 2*p2 + -3*p3 + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.8034796084135012 + p2 + d + -2*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.00012234758056480248 + p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.671180194447093 + 6*p3 + -10*p4 + d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.5026291937293124 + 3*p3 + -5*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.1554711627358016 + 2*p3 + -2*p5 + -4*d + l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.17568763503255239 + 2*p3 + -3*p5 + 2*d + l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.138280567763233 + 2*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.1611106536182125 + p3 + 2*p5 + -5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.6634525406576965 + p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.318680408744928 + p3 + -2*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.3947251023860225 + p3 + -3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.011845898699135913 + p3 + -1*p4 + -2*d + l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.2339390630120475 + p4 + -1*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.7967398449739997 + 21*p2 + -20*p3 + d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.3838726281004883 + 20*p2 + -20*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + -1*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.615927067589599 + 15*p2 + -9*p3 + -4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.943001603378728 + 10*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.945472099938293 + 10*p2 + -12*p3 + d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.283149004331146 + 7*p2 + -7*p3 + 2*d + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.1434297871604424 + 5*p2 + -5*p3 + l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.6018281063624307 + 5*p2 + -6*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.484724218497269 + 3*p2 + -2*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.7183634169471915 + 3*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.758052553203393 + 3*p2 + -4*p3 + 2*d + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.419853446298344 + p2 + -1*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.6441223295584755 + 7*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.5934404200398293 + 6*p3 + -8*p4 + d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.1388137318564513 + 6*p3 + -8*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.004091966922884 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.004050951685462 + 4*p3 + -8*p4 + 3*p5 + -4*d + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.514901135797177 + 3*p3 + -2*p5 + -1*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.145183843058697 + 3*p3 + -3*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.309874158474433 + 3*p3 + -4*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.787352101986639 + 3*p3 + -4*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.0016299629884375044 + 2*p3 + -2*p5 + 4*d + -3*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.18349501637549862 + 2*p3 + -3*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.520349355590202 + p3 + p5 + -2*p6 + d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.8876685319431759 + p3 + -5*p6 + d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.752201685951932 + 23*p2 + -24*p3 + -1*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.752201685951932 + 23*p2 + -24*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.1432163333929233 + 7*p2 + -7*p3 + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 6.082387445665667 + 6*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.3453915917558843 + 4*p2 + -5*p3 + d + -2*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.459096850958536 + 3*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.8013693308149146 + 3*p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.6053939970554967 + 3*p2 + -7*p3 + 4*p4 + l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.605316329903783 + 3*p2 + -7*p3 + 4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.0039186132365776685 + 2*p2 + -2*p3 + 2*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.3188440866354991 + 3*p3 + -2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.368095741323719 + 3*p3 + -2*p4 + d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.011822860353009588 + 3*p3 + -3*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.3198839708004706 + 2*p3 + -3*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.005214694739108658 + 2*p3 + -2*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.65742993300784 + p3 + 2*p5 + -2*p6 + d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.457258495657411 + p3 + p5 + -1*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.0070813243741165936 + p3 + -1*p6 + l + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.025390875425088305 + p3 + -1*p5 + 2*d + l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.745450577872293 + p3 + -4*p5 + 5*p6 + d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.857908233234036 + 2*p4 + 3*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.772151122873128 + 2*p5 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.8016173421016233 + 13*p2 + -12*p3 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1407777593620367 + 12*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.3369353139936795 + 9*p2 + -9*p3 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.0968989857313725 + 5*p2 + -7*p3 + -1*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.017600300232861 + 4*p2 + -6*p3 + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.71411336568566 + 3*p2 + -4*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.5648068888991444 + 3*p2 + -7*p3 + 4*p4 + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.564796067857782 + 3*p2 + -7*p3 + 4*p4 + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.22396832906462116 + 2*p2 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.288604878077929 + 2*p2 + -1*d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.943681060056529 + 2*p2 + -1*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.002199463923363254 + 2*p2 + -2*p3 + -4*d + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1388716852859337 + p2 + -1*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.095544244169342 + p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.9097937303031745 + 3*p3 + -3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.013093634581386659 + 3*p3 + -3*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.129853769068754 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.12984486788957 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.774962707758433 + 2*p3 + -3*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.1261452509825336 + p3 + 2*p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.012746139527314586 + p3 + -1*p5 + 2*l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.914072596493996 + 43*p2 + -42*p3 + d + -4*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.142297243008823 + 8*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.331982427140687 + 8*p2 + -11*p3 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.283174311605299 + 5*p2 + -5*p3 + 2*d + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.8034391167748547 + 4*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.01812023381703 + 4*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.126890872635619 + 3*p2 + -3*p3 + l + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.0027111944600479916 + 2*p2 + -2*p3 + 2*d + l + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.693747118644138 + 2*p2 + -3*p3 + 2*l + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.8035836300369197 + p2 + 3*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.00013892820845874863 + p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.14110763508898 + 5*p3 + -6*p4 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.782622957845436 + 5*p3 + -6*p4 + -1*l + f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.749617027862654 + 4*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.6182397863847837 + 2*p3 + -3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.275379645670942 + 2*p3 + -5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.4199112336932185 + 2*p3 + -2*p5 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.768255931041794 + 2*p3 + -3*p4 + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.01251488340142534 + p3 + -1*p6 + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.342281099956247 + p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.011979765452763878 + p3 + -1*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.0004457570909593517 + 6*p2 + -6*p3 + 2*d + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.1330087752626348 + 3*p2 + -3*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.001697158164639286 + 3*p2 + -3*p3 + -2*l + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.006386159733047251 + 2*p2 + -2*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.004561767065937579 + 2*p2 + -2*p3 + -4*d + l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.425121024513788 + p2 + -1*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.7452181000159275 + 3*p3 + -6*p4 + -2*d + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.2753772022099894 + 2*p3 + -5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.0002993239667170275 + 2*p3 + -2*p5 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 5.834848968651637 + p3 + p6 + -1*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1397305618108406 + 21*p2 + -21*p3 + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.3354058649735239 + 4*p2 + -5*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.017678963592226163 + 3*p2 + -3*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.3419623688415656 + p2 + -2*d + l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.1423133000379417 + p2 + -1*p3 + 2*l + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.3592163362626145 + 2*p3 + -4*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.007304901051297067 + p3 + -1*p6 + l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.754195699127386 + p3 + -2*p5 + 3*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.3417716383475895 + p3 + -2*p5 + d + f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.7505849874658095 + 9*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.8031719068663743 + 3*p2 + -2*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.7318872751891945 + 2*p2 + -3*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.156587475325377 + 2*p3 + -2*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.320297613833193 + 2*p3 + -3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.7350169741089208 + 2*p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.876613118357218 + 2*p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 5.7551713721725175 + 2*p3 + -3*p4 + l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.01901815472728141 + p3 + -1*p5 + -2*l + f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.010990338299808293 + p3 + -1*p5 + -1*d + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.3091679812624426 + 12*p2 + -13*p3 + d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.1840013448898188 + 5*p2 + -8*p3 + d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.689957659772208 + 2*p2 + -3*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.7998919096031014 + p2 + -2*p3 + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.732703399645743 + 3*p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.498876386771675 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.0012550662651091224 + 2*p3 + -2*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.267678754907317 + 2*p3 + -2*p4 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.261574938457343 + 19*p2 + -21*p3 + 3*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.440764087028513 + 8*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.1451581867186924 + 4*p2 + -4*p3 + l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.0011814133706749617 + 4*p2 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.718765017208075 + p2 + 2*d + -1*l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.2340128989377237 + 5*p3 + -8*p4 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.482342716732924 + 3*p3 + -2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.5228753366233472 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.3564346559957356 + 2*p3 + -1*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.329053232558748 + 2*p3 + -3*p5 + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.76648442185102 + 2*p3 + -3*p4 + f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.268272158354679 + 2*p3 + -4*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.9369800174314724 + p3 + -3*p5 + d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.474085223474205 + p3 + -2*p4 + -2*l + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.826234547062568 + 2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.721397497318858 + 6*p2 + -7*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.15150507654357 + 5*p2 + -5*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.474458366369964 + 5*p2 + -6*p3 + d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.045986467228639 + 3*p2 + -6*p3 + d ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.8014614841994196 + 2*p2 + -1*p3 + -1*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 6.281528989719444 + 2*p2 + -2*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.714890386268649 + p2 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.8813230383817001 + p2 + -2*p3 + l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.8896322018845948 + p2 + -2*p3 + -1*l + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.762805442320741 + 3*p3 + -4*p4 + l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 2.561624281008133 + 3*p3 + -7*p4 + -1*d + 2*l + -2*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.486964340093888 + 2*p3 + -4*p5 + -2*d + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.755206104224631 + 2*p3 + -3*p4 + -1*l + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.3176919947962575 + p3 + p5 + 3*d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.476948785177952 + p3 + -2*p4 + 2*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + d + -1*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.943355730683958 + 9*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.144873872583542 + 6*p2 + -6*p3 + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.142235807419153 + 4*p2 + -4*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.717451482413025 + 3*p2 + -4*p3 + d + l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.3378451371361109 + 2*p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.8034532539417958 + p2 + -1*d + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.27647380957565 + 6*p3 + -8*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.780842896541326 + 5*p3 + -6*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.022688973701659 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.022670298678663 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.17593843884606397 + 2*p3 + -3*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.7559775397540145 + 2*p3 + -3*p4 + l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.772526926254348 + 2*p3 + -3*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.2884478154418835 + 2*p3 + -4*p4 + -2*d + l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.499174131443748 + p3 + 2*p5 + -4*p6 + d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.010830466140325613 + p3 + -1*p6 + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.008165173839605072 + p3 + -1*p6 + -1*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.1539965340507914 + p3 + -1*p5 + d + l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.02702171107815181 + p3 + -1*p5 + -4*d + l + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.105600639789775 + p3 + -4*p5 + d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 6.04320567662302 + 2*p5 + -5*p6 + 2*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 6.043209341814448 + 2*p5 + -5*p6 + -2*l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.4624614626972643 + 18*p2 + -16*p3 + -2*d + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -1*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.14185235858249 + 8*p2 + -8*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.3331760493178093 + 8*p2 + -8*p3 + d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.467006159529799 + 8*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 6.283116192141207 + 2*p2 + -2*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.3469751289862184 + p2 + -2*d + l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.1418729534676637 + p2 + -1*p3 + -2*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.523360555152035 + 7*p3 + -11*p4 + d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.793542086711763 + 5*p3 + -6*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.271591949124897 + 4*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.763281568140685 + 3*p3 + -4*p4 + l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.328751290598153 + 2*p3 + -3*p5 + l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.2928542142111263 + p3 + -2*p7 + d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.799321186937699 + p3 + -2*p5 + d + -2*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.92488033936078 + p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.8578982848572996 + 2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.999623583470245 + 2*p4 + -1*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.3097596563771856 + 2*p4 + -2*d + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.552498320411938 + p6 + l + f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.553500837534284 + p6 + -1*l + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 2.954424417270547 + 5*p2 + -7*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.1412921078925997 + p2 + -1*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.1413413261775056 + p2 + -1*p3 + -4*d + l + f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.8033502795159282 + p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.4787323286422485 + p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.320557301829257 + 3*p3 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.841615950729153 + 3*p3 + -3*p4 + d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 5.7564739113932815 + 2*p3 + -3*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.8799016337405593 + p3 + -2*p4 + d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 2.8575993099564334 + 2*p4 + d + l + -2*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.556270849590124 + p6 + l + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.747301848609883 + 20*p2 + -21*p3 + -2*d + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.8019913661603255 + 12*p2 + -11*p3 + d ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.942943117852153 + 9*p2 + -11*p3 + d ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.127466839787094 + 8*p2 + -13*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.130103159622231 + 8*p2 + -13*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.787479677056644 + 3*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.1650558128560533 + 2*p3 + -2*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.1588103266607175 + 2*p3 + -2*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.7959664810841244 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.008518428480208723 + p3 + -1*p6 + -1*l + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.561400023195885 + 2*p5 + -5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.556877351505191 + p6 + -1*l + f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 6.2827906882357105 + l + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + -1*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.8714092191645217 + p2 + -2*p3 + l + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 2.7233806979512662 + 4*p3 + -5*p4 + -2*d + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 6.27477404191545 + 2*p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 5.774928673838018 + 2*p3 + -3*p4 + -2*d + l + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.021217444117719468 + p3 + -1*p5 + -4*d + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.607634842278766 + 2*p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.8082602397676386 + 18*p2 + -15*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 5.401436940557492 + 18*p2 + -17*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.139639630156812 + 18*p2 + -18*p3 + -2*d + l + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.139639630156812 + 18*p2 + -18*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 5.942380972795036 + 8*p2 + -14*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.753565486229441 + 5*p2 + -6*p3 + 2*d + -1*l + -3*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.2340162150633023 + 5*p3 + -8*p4 + 3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.759161709943036 + 4*p3 + -7*p4 + -2*d + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 5.755983473873471 + 3*p3 + -4*p4 + -1*l + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.5229821507735692 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 6.280872571387769 + 4*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.0008007570608149984 + 4*p2 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.723555771471875 + 3*p2 + -4*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.2979774451991139 + 2*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.945097220211597 + p2 + -1*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.8758310108244496 + p2 + -2*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.277878974156431 + 6*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.2262388533834905 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.5180943562033591 + 3*p3 + -8*p4 + 3*p5 + 2*d + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.6896591829751673 + p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.831256025355166 + p3 + -1*p5 + d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 0.010923317656531711 + p3 + -1*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.324780509013574 + p3 + -2*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.539983445508829 + p3 + -2*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.131619318645122 + 24*p2 + -24*p3 + 2*d + -3*l + f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.131619318645122 + 24*p2 + -24*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 0.40180568613685497 + 3*p3 + -5*p4 + d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 5.277031442271663 + 2*p3 + -4*p4 + 2*d + f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.988314863121606 + p3 + -2*p6 + -1*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 0.4632559365727721 + 18*p2 + -16*p3 + -4*d + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.1408693891477664 + 11*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 2.918673616471471 + 6*p2 + -8*p3 + 2*d + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.75262388109799 + 5*p2 + -6*p3 + 4*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 2.910079091635875 + 5*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.2463424113759538 + 5*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.8027481409239903 + 3*p2 + -2*p3 + d + l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.488611764873162 + 2*p2 + -1*p3 + -2*d + l + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 6.181683590134753 + 2*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.3454340032567074 + p2 + -2*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.244197576258178 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.2441989725215796 + 10*p3 + -19*p4 + 3*p6 + -2*d + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.74568690395133 + 3*p3 + -4*p4 + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.3264439653270164 + 2*p3 + -3*p5 + l + f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.2862794183792055 + 2*p3 + -4*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.560739424572321 + p3 + -2*p4 + 2*d + l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.5771369334344667 + 3*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.944473788602786 + 2*p2 + -1*p3 + d + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.479869410649923 + p2 + -2*p3 + d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 5.006908404736828 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.972447227722049 + 4*p3 + -8*p4 + 3*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.972503252791038 + 4*p3 + -8*p4 + 3*p5 + -2*l + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 5.006869309361583 + 4*p3 + -8*p4 + 3*p5 + -4*d + l + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.011701559969995983 + p3 + -1*p6 + -2*d + l + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.99350392701566 + p3 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.6487278958903213 + p3 + -1*p4 + d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.144439634665646 + 5*p2 + -5*p3 + f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.1014463901075444 + 2*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.710438225879736 + 2*p2 + -3*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.2945370776725325 + p2 + p3 + -1*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.775574620194181 + 2*p3 + -3*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.095684926205369 + p3 + d + 2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.382873095034504 + p3 + -3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.99490211877775 + p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.3113295715410376 + 26*p2 + -29*p3 + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.6049592440371416 + 18*p2 + -16*p3 + -2*d + l + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.3294028220079226 + 7*p2 + -7*p3 + d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.141264357157493 + 3*p2 + -3*p3 + 4*d + -1*l + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.1400894015050502 + 3*p2 + -3*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.005142787173926491 + 2*p2 + -2*p3 + -4*d + l + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.780966291319442 + 3*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.754947446429487 + 3*p3 + -4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.00709458887643175 + 2*p3 + -2*p4 + 2*d + f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 5.294403576981388 + 2*p3 + -4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.011179182924874078 + p3 + -1*p6 + -2*d + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.9485073935421193 + p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.314187199125328 + 11*p2 + -12*p3 + d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.1421436540346477 + 7*p2 + -7*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.277030395074111 + 6*p3 + -8*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.392383219595697 + 2*p3 + -1*p4 + d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.8014337334643133 + p5 + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.5769178946133415 + 3*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 6.11058847571939 + 3*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 0.21082512713247784 + p2 + p3 + d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.1452608120787096 + 2*p3 + -2*p6 + -2*d + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.1214665638533456 + 2*p5 + -5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.1230644127835463 + 2*p5 + -5*p6 + -2*d + l + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 6.094558499204449 + p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.4867189552993745 + 2*p2 + -1*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 2.138554375929605 + p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 5.781370335041279 + 3*p3 + -4*p4 + d + f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 0.01889214195528742 + p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 5.278489315795854 + p3 + -2*p5 + 2*d + f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 0.3679435061213618 + p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.3094180869442533 + 26*p2 + -29*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.943670937146868 + 8*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.756897145238573 + 8*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.333088765858576 + 5*p2 + -6*p3 + d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 2.9708669896206605 + 5*p2 + -7*p3 + d + -2*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 2.9414082753079493 + 5*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.3317422443406626 + 3*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 3.2456287632414464 + 2*p2 + -2*p3 + d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 0.011846073232061112 + p3 + -1*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.3336010199940365 + d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.7463101525289 + 20*p2 + -21*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.4632945083492412 + 18*p2 + -16*p3 + 2*l + f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 6.059475810443036 + 6*p2 + -8*p3 + -1*l + f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.0427358084934326 + 6*p3 + -9*p4 + d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 6.265345773296177 + 2*p3 + -2*p4 + -2*d + -1*l + f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.1189855613250026 + p3 + -2*d + f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.7870946319287033 + p5 + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 5.817278564538886 + 10*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 6.009881930681767 + 3*p2 + -5*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.1419523659486295 + p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.1419506206193772 + p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 5.740289298706611 + 3*p3 + -4*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.17477639863008615 + 2*p3 + -3*p5 + -2*l + f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.1456920829368773 + 2*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.7541902886067047 + p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.60487058131114 + 18*p2 + -16*p3 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 0.4632643141531817 + 18*p2 + -16*p3 + -4*l + -1*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.8017787850574325 + 11*p2 + -10*p3 + d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 6.273913245528367 + 4*p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.6294800558334774 + 4*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.473475396935242 + 3*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 5.7373922266812265 + 3*p3 + -4*p4 + -2*d + l + f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.1456922574698023 + 2*p3 + -2*p4 + d + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 2.935337496570737 + 23*p2 + -25*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.2556029538541105 + 5*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.144633191679692 + 4*p2 + -4*p3 + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 6.204275830104268 + 3*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 0.041713369122664476 + 3*p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 0.004886223773883325 + 2*p2 + -2*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.3373121135825519 + p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.624716379668033 + 2*p3 + -1*p5 + -2*d + l + f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.144690089413307 + 2*p3 + -2*p5 + 2*d + l + f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.1616091366492154 + 2*p3 + -2*p5 + f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 0.348225823429881 + 2*p3 + -4*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 5.295869828085989 + 2*p3 + -4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.469981247772749 + 7*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 5.787565381221232 + 5*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 5.258423614451526 + 3*p3 + -5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 0.34819911989232555 + 2*p3 + -4*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 6.282229564881195 + 2*p3 + -2*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 2.85817858473517 + 2*p4 + d + -1*l + -2*f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 2.6786627445212936 + 8*p2 + -12*p3 + d + l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.820255398111087 + 8*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 3.1421138089044387 + 7*p2 + -7*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 1.6103852811520338 + 5*p2 + -6*p3 + l + -1*f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.352056165497891 + 2*p3 + -1*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 2.259838527381167 + 18*p2 + -17*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 6.059708811898178 + 6*p2 + -8*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.895828503788291 + 3*p2 + -5*p3 + -1*l + f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.725839011199334 + 2*p2 + -3*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 3.138717049114207 + 4*p3 + -4*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 2.3000844236687548 + p3 + -2*p8 + d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 1.7545215520987332 + p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 3.1090214936220004 + 2*p5 + -5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.895703712746775 + 3*p2 + -5*p3 + l + -1*f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.481047333362093 + 3*p3 + -2*p4 + -2*d + f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 3.2666969817081206 + 3*p3 + -3*p4 + -2*d + f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.7366370227138885 + 3*p3 + -4*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.407798665681011 + 2*p3 + -1*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 0.02919429693103435 + p3 + -1*p5 + -4*d + l + f ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 3.1074044460700274 + 2*p5 + -5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.054380487726447 + p1 + -3*p3 + d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.949828807813755 + 18*p2 + -15*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.326659513489638 + 6*p2 + -6*p3 + d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.48643952808613 + 2*p2 + -1*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.267521492243397 + p3 + -2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 2.9472586189606336 + 8*p2 + -10*p3 + d ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 3.1412240400517724 + 3*p2 + -3*p3 + 4*d + -2*l + f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.043517690503376213 + 3*p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 3.1419324691951562 + p2 + -1*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 5.2455977133773946 + 4*p3 + -6*p4 + -2*d + f ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.019806170884556853 + p3 + -1*p5 + 2*l + f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*l + 3*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.604848590162565 + 18*p2 + -16*p3 + -1*l + -3*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 6.030609984477227 + 4*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 6.104126743229732 + 2*p2 + -4*p3 + d ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 1.3381317201992886 + p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 4.624746573864093 + 2*p3 + -1*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.7401108920637915 + 15*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.141359826667577 + 10*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.1406548881826963 + p2 + -1*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 6.183812368223411 + 5*p3 + -8*p4 + d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 0.17573912224548624 + 2*p3 + -3*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 2.691097342777127 + p3 + p6 + d + l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 2.7313526638426757 + 8*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 3.323264499028659 + 2*p3 + -3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 0.46365422070807716 + 18*p2 + -16*p3 + -2*l + f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 0.0016727235551113652 + 3*p2 + -3*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.5679795569117365 + 5*p3 + -7*p4 + d ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 2.9857691343729633 + 3*p3 + -3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 0.030485316978734557 + p3 + -1*p5 + -2*d + 2*l + f ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.1404053060996615 + f ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 5.921925190362886 + 3*p2 + -5*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 2.7339596621463795 + 8*p3 + -15*p4 + -2*d + f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.9989954309741345 + 4*p3 + -8*p4 + 3*p5 + 2*d + l + f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.998968203837804 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 6.047815963842162 + 3*p2 + -5*p3 + 2*d + f ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.119813571017098 + 4*p3 + -5*p4 + d ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 4.279586246732415 + p3 + p5 + -2*d + f ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 0.005033355029826447 + p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 5.930066104125889 + 3*p2 + -5*p3 + l + f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 6.044537537375216 + 3*p2 + -5*p3 + -2*d + l + f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 0.17650357645785975 + 2*p3 + -3*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 5.198202424874863 + 2*p3 + -4*p4 + -1*l + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 1.3186627469262169 + 10*p2 + -11*p3 + d ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.94394355757603 + 7*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.752200987820232 + 5*p2 + -6*p3 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 1.8028509408169326 + 2*p2 + -1*p3 + d + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.1418766186590927 + p2 + -1*p3 + 2*l + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.141414804539015 + p2 + -1*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 2.8957029891201236 + 3*p3 + -3*p5 + -2*d + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 0.00036110862223762683 + 2*p3 + -2*p5 + -2*l + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 5.198461955334634 + 2*p3 + -4*p4 + l + -1*f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 1.169062722756149 + p3 + 2*p5 + -5*p6 + -2*d + f ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 5.832673764804877 + p3 + p6 + d + -1*l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 0.17545445904448595 + 2*p3 + -3*p5 + 4*d + -2*l + -1*f ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 1.802627364139752 + 10*p2 + -9*p3 + d ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 6.131859675978071 + 3*p2 + -5*p3 + f ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 0.9319628854653729 + 2*p3 + -3*p4 + d ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.172372939710431 + p3 + 2*p5 + -5*p6 + d + l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 1.030780286120638 + p3 + 2*p5 + -5*p6 + d + -1*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 0.018431898631536516 + p3 + -1*p5 + d + -1*l + f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 3.142008391017618 + 6*p2 + -6*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 0.053000762461162206 + 3*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 4.617625281450106 + 2*p3 + -1*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 3.322575792105822 + 2*p3 + -3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 5.300376093681714 + 2*p3 + -4*p4 + f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 5.298831477293698 + 2*p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 1.3515941428516216 + p3 + p5 + d + -2*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 4.112484584422124 + p3 + 2*p6 + d ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 0.004175176636620834 + p3 + -1*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 0.022887724211878034 + p3 + -1*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 5.265518552393806 + 3*p3 + -5*p4 + -2*d + f ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 6.033919652337784 + p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 1.1706980962652676 + 6*p2 + -9*p3 + d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 3.1337927771626304 + 3*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 6.131252650464228 + 3*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 4.496409372372296 + 2*p3 + -1*p5 + d ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 2.941915118922729 + 2*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.17617580362433521 + 2*p3 + -3*p5 + 2*d + -3*l + -1*f ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 5.206252930582611 + 2*p3 + -4*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.0022338469096275424 + 2*d + f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.949852893357432 + 18*p2 + -15*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 2.2598442869676987 + 18*p2 + -17*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 6.049563736555109 + 3*p2 + -5*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.478143803618475 + 2*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 5.2068418046722345 + 2*p3 + -4*p4 + l + f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 6.110119156683529 + 7*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.3207440690558534 + 5*p2 + -5*p3 + d ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 3.142170881170979 + 2*p3 + -2*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 5.258502503333716 + p3 + -2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 3.1438027640215935 + 2*p3 + -2*p5 + 4*d + -1*l + f ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 6.043517392427426 + 3*p2 + -5*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 0.07041565773756162 + 2*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 3.1417720734368983 + p2 + -1*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 5.393494645263366 + p3 + -3*p5 + -2*d + f ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 5.81890206980909 + 10*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 5.81890206980909 + 10*p2 + -3*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 4.895798475626841 + p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 2.8192994557848197 + 2*p5 + -5*p6 + f ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 2.819230515279366 + 2*p5 + -5*p6 + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.753480488694869 + 7*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.5782673916893 + 3*p2 + -7*p3 + 4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.578112930050499 + 3*p2 + -7*p3 + 4*p4 + -2*d + f ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 6.05328233505941 + p2 + -3*p3 + d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 5.129910309238203 + p3 + -2*p6 + d + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.2475791601822337 + p4 + d ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 4.850313624523541 + 2*p3 + -3*p5 + d ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 3.176637294173513 + 4*p3 + -4*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 2.940610834372713 + 6*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 0.0048087311550947765 + 2*p2 + -2*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 5.092698318789356 + p3 + 3*d ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 0.012096527979722299 + p3 + -1*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 3.3224836387213164 + 2*p3 + -3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 1.9883176556484092 + p3 + -2*p6 + d + l ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 1.530269607030663 + 9*p3 + -15*p4 + d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 4.472493823763919 + 6*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 3.142121837418997 + 2*p3 + -2*p6 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 0.45645857726795497 + p2 + -1*p3 + d ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 0.1336133318205755 + 2*p3 + d ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 4.974758741783392 + 4*p3 + -8*p4 + 3*p5 + 2*l + f ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 4.9747529821968595 + 4*p3 + -8*p4 + 3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.294657513889237 + 2*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 1.3365928633978053 + 2*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 3.157537458037238 + 5*p3 + -5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 3.1748699737729433 + 4*p3 + -4*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 1.3221570706216346 + 3*p3 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 3.0283230540633888 + 3*p3 + -3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 3.142007343820067 + 6*p2 + -6*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 4.743254255541583 + 5*p2 + -6*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 0.463361703525443 + 18*p2 + -16*p3 + l + -1*f ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 6.052423807600354 + 3*p2 + -5*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 4.667278851471794 + p6 + -2*d + f ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 3.1415422135744104 + 9*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 4.335054730222972 + 7*p2 + -10*p3 + d ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 0.011133629831397027 + p3 + -1*p4 + -2*d + f ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 4.949849577231853 + 18*p2 + -15*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 2.25984097084212 + 18*p2 + -17*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 3.322216952411611 + 2*p3 + -3*p5 + f ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 4.659230265626222 + p6 + 2*d + -1*f ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 1.8028701394387046 + 9*p2 + -8*p3 + d ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 0.010110343290952752 + 4*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 3.1438237079726177 + 2*p3 + -2*p5 + 4*d + -2*l + f ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 4.6478006279536865 + p3 + -2*p5 + 5*p6 + d ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 4.944183889414029 + 6*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 2.9137011734325386 + 6*p2 + -8*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 6.283148829798219 + 2*p3 + -2*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 6.2831537167201255 + 2*p3 + -2*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 5.782693294614291 + 3*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 1.3225654776666016 + 9*p2 + -10*p3 + d ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 2.949255799223691 + 7*p2 + -9*p3 + d ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -2*d + l + f ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 0.4594256369963453 + 15*p2 + -13*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 4.713890661673106 + 2*p2 + -3*p3 + 2*d + f ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 0.4632744370628432 + 18*p2 + -16*p3 + -3*l + f ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 5.610092274363891 + p3 + -2*p4 + -2*d + l + f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 0.0004335397861953915 + 2*p2 + -2*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 3.141279716054911 + p2 + -1*p3 + 2*d + f ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 0.027488935718910687 + p3 + -1*p5 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 3.322393579731913 + 4*p2 + -4*p3 + d ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 1.6478995626273245 + p3 + p5 + -1*p6 + d ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 5.244529571875175 + p3 + -2*p5 + -1*f ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 6.057572703426662 + 3*p2 + -5*p3 + d ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 2.140433571935227 + 7*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00116 * sin ( fmod ( ( 5.557703075272626 + p3 + -2*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 1.594050395616768 + 4*p2 + -5*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 4.945223232983592 + p2 + d + -1*l ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 2.6475246744023133 + 6*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 5.768991936387359 + 2*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 1.3952724036461812 + p5 + -1*d ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 4.140404616466277 + 8*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00122 * sin ( fmod ( ( 4.143449343346382 + 8*p2 + -13*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00122 * sin ( fmod ( ( 4.734064398898133 + 2*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 0.0053825954131505125 + 2*p2 + -2*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00127 * sin ( fmod ( ( 3.142257798567728 + 4*p2 + -4*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00127 * sin ( fmod ( ( 5.587453434103346 + p3 + -2*p4 + 2*d + f ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 3.14511682241542 + 5*p2 + -5*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 5.6128765981195965 + p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 3.1414172479999674 + p2 + -1*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -2*d + l + f ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 1.6853834753736316 + 3*p1 + -1*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 6.001908393994031 + 2*p4 + -1*d ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 1.5948274161997562 + 4*p2 + -5*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00134 * sin ( fmod ( ( 5.264714304674489 + p3 + -2*p5 + l + -1*f ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 4.476988046587805 + 4*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 4.728081759288147 + 3*p2 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 1.3447201635926418 + p2 + -2*d + f ), twopi ) );
        a += 0.00138 * sin ( fmod ( ( 2.919205069228703 + 6*p2 + -8*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00138 * sin ( fmod ( ( 4.71862486726914 + 3*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 4.153189676835911 + 8*p2 + -13*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 5.260898491330853 + p3 + -2*p5 + l + f ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 4.15423861971636 + 8*p2 + -13*p3 + -2*d + l + f ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 3.1439382015715487 + 2*p3 + -2*p5 + 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 3.1406777519958977 + 21*p2 + -21*p3 + -1*l + f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 0.004996354049684168 + 2*p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 6.275990536404089 + 2*p3 + -2*p4 + -1*f ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 5.60864452374936 + p3 + -2*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 5.276758472776651 + 6*p3 + -8*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 1.3708042837966223 + p5 + d ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 3.140619283465956 + 21*p2 + -21*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 4.728281774020425 + 3*p2 + -4*p3 + l + f ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 6.053059805579779 + p5 + 2*d + f ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 0.0017083282718520496 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00145 * sin ( fmod ( ( 1.8030680597758808 + 8*p2 + -7*p3 + d ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 3.3261793734124145 + 3*p3 + -4*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 5.248124426535507 + p3 + -2*p5 + -1*l + f ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 3.150387891289368 + 2*p3 + -2*p5 + l + f ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 5.25249438191665 + p3 + -2*p5 + f ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 3.603779052396943 + 18*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 5.276774704338695 + 6*p3 + -8*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 4.998627515567815 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.94446052410047 + 5*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.998665214679658 + 4*p3 + -8*p4 + 3*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 5.09568457713952 + p3 + 3*d + -1*l ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 4.729308202153523 + 2*p2 + -3*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00152 * sin ( fmod ( ( 1.6351960091337587 + 8*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00153 * sin ( fmod ( ( 1.80359706907216 + p2 + d + l ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 4.730806392783435 + 3*p2 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 6.281610671128437 + 2*p3 + -2*p4 + l + -1*f ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -2*d + l + f ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( 3.9882237739312854 + 12*p2 + -8*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00157 * sin ( fmod ( ( 3.225820323428862 + 5*p3 + -8*p4 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00157 * sin ( fmod ( ( 5.616758559441882 + p3 + -2*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 3.140457840510146 + 8*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 4.068252879721756 + 8*p2 + -13*p3 + l + -1*f ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 4.068309777455372 + 8*p2 + -13*p3 + -1*l + f ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 6.272887690059894 + 2*p3 + -2*p4 + -1*l + f ), twopi ) );
        a += 0.0016 * sin ( fmod ( ( 0.002118829711921116 + 2*p3 + -2*p4 + l + f ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 1.3299229131283836 + p1 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 0.5179653763716368 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00162 * sin ( fmod ( ( 0.0018832102629018814 + 2*d + -1*l + f ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 4.268855438892379 + 9*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 5.775184015507585 + 2*p3 + -3*p4 + -2*d + f ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 0.01036341603249193 + p3 + -1*p5 + 2*d + f ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 5.999568605598807 + 2*p4 + d + -1*l ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 4.756570245069675 + 5*p2 + -6*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 1.3354072612369252 + 4*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00164 * sin ( fmod ( ( 6.188789523651323 + p5 + -2*d + -1*f ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 4.466896552852774 + 5*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 4.72295712353844 + 3*p2 + -4*p3 + -2*d + l + f ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 4.486935201593696 + 2*p2 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 5.335617956470908 + p3 + -2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00169 * sin ( fmod ( ( 5.339894711269995 + p3 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.0017 * sin ( fmod ( ( 4.152600977279214 + 8*p2 + -13*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.0017 * sin ( fmod ( ( 0.018593516120271193 + p3 + -1*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 1.3260465368597043 + 8*p2 + -9*p3 + d ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 4.153492316928207 + 8*p2 + -13*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 3.142269841339567 + 5*p2 + -5*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 0.4191387254713359 + 4*p3 + -6*p4 + d ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 4.459308908462654 + p3 + p5 + d + -1*l ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 4.464376471945819 + p3 + p5 + -1*d ), twopi ) );
        a += 0.00172 * sin ( fmod ( ( 3.60450231683897 + p3 + -3*p6 + d ), twopi ) );
        a += 0.00173 * sin ( fmod ( ( 0.011793887887426482 + p3 + -1*p6 + -2*d + f ), twopi ) );
        a += 0.00174 * sin ( fmod ( ( 4.725345257553944 + 3*p2 + -4*p3 + f ), twopi ) );
        a += 0.00175 * sin ( fmod ( ( 6.282335331833865 + 2*p3 + -2*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 4.723498524672409 + 3*p2 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00177 * sin ( fmod ( ( 5.249516501146898 + p3 + -2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00178 * sin ( fmod ( ( 4.717190381156926 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00178 * sin ( fmod ( ( 5.165356724615731 + p5 + -1*l + -1*f ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 5.140363260661322 + p5 + l + f ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 5.132672641845334 + p5 + l + -1*f ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 5.136219849017087 + p5 + -1*l + f ), twopi ) );
        a += 0.00182 * sin ( fmod ( ( 0.029078407068701923 + p3 + -1*p5 + -2*d + -1*l + f ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 4.731987108022409 + 3*p2 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 1.9097965143316609 + p3 + -1*d + l ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 4.08004397508238 + 8*p2 + -13*p3 + l + f ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 4.080056715985919 + 8*p2 + -13*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 0.00007452555906015788 + 2*p3 + -2*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 6.278466809546819 + 2*p3 + -2*p4 + f ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 6.09605197744538 + 5*p2 + -7*p3 + d + -1*l ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 5.255099460358177 + 2*p3 + -4*p4 + -2*d + f ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 2.8592685428530404 + 2*p4 + d + -2*f ), twopi ) );
        a += 0.0019 * sin ( fmod ( ( 4.733813944150471 + 3*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.0019 * sin ( fmod ( ( 2.648364352305448 + 5*p3 + -6*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00191 * sin ( fmod ( ( 4.750090710221645 + 6*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00191 * sin ( fmod ( ( 6.09459113686146 + 5*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 3.38645135207031 + 20*p2 + -20*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00194 * sin ( fmod ( ( 6.272151510181403 + 2*p3 + -2*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00194 * sin ( fmod ( ( 6.229198259158122 + p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00195 * sin ( fmod ( ( 0.05452129330549966 + 3*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00195 * sin ( fmod ( ( 2.648415490452531 + 5*p3 + -6*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 0.001837831702350029 + 2*p2 + -2*p3 + 2*d + f ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 4.722914188438841 + 3*p2 + -4*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 3.149316957260344 + 2*p3 + -2*p5 + l + -1*f ), twopi ) );
        a += 0.00201 * sin ( fmod ( ( 1.803216936361076 + 7*p2 + -6*p3 + d ), twopi ) );
        a += 0.00201 * sin ( fmod ( ( 5.336166687987734 + p3 + -2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00203 * sin ( fmod ( ( 4.7198080259690665 + 3*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00206 * sin ( fmod ( ( 0.46326989920678807 + 18*p2 + -16*p3 + 2*d + f ), twopi ) );
        a += 0.00206 * sin ( fmod ( ( 5.733731573108093 + 3*p3 + -4*p4 + -2*d + f ), twopi ) );
        a += 0.00207 * sin ( fmod ( ( 1.6118878351050756 + 5*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00207 * sin ( fmod ( ( 3.140358182209858 + 3*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00208 * sin ( fmod ( ( 6.262457078851201 + p5 + -2*d + l + f ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 0.46325715830324854 + 18*p2 + -16*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 4.73620696508788 + 2*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 1.3179639170937183 + p3 + p5 + d + l ), twopi ) );
        a += 0.00215 * sin ( fmod ( ( 5.27894973365253 + 2*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 2.9546153562907156 + 5*p2 + -7*p3 + d + l ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 3.2179640728668604 + 3*p2 + -3*p3 + d ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 0.0076316266872704045 + 2*p2 + -2*p3 + -1*l + f ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 6.268133587710387 + 2*p3 + -2*p4 + -2*d + l + f ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 4.151516429682024 + 8*p2 + -13*p3 + f ), twopi ) );
        a += 0.00218 * sin ( fmod ( ( 4.1515869409838055 + 8*p2 + -13*p3 + -1*f ), twopi ) );
        a += 0.0022 * sin ( fmod ( ( 4.944795801849778 + 4*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00222 * sin ( fmod ( ( 3.384888933323925 + 20*p2 + -20*p3 + -1*d + l ), twopi ) );
        a += 0.00222 * sin ( fmod ( ( 4.737617540189342 + 2*p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 6.256966971156127 + 2*p3 + -2*p4 + -2*d + -1*f ), twopi ) );
        a += 0.00224 * sin ( fmod ( ( 4.616512808584885 + 2*p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.00225 * sin ( fmod ( ( 0.4632798475835244 + 18*p2 + -16*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00225 * sin ( fmod ( ( 0.000973544656762437 + 3*p2 + -3*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 0.0004981169685191817 + 3*p2 + -3*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 1.615034489213496 + 5*p2 + -6*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 4.410105633387981 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + f ), twopi ) );
        a += 0.0023 * sin ( fmod ( ( 6.220320467384927 + p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00233 * sin ( fmod ( ( 0.46325942723127606 + 18*p2 + -16*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00234 * sin ( fmod ( ( 4.684997957636816 + 2*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00234 * sin ( fmod ( ( 3.1463237175931744 + 2*p3 + -2*p5 + -1*f ), twopi ) );
        a += 0.00234 * sin ( fmod ( ( 0.014776481046159591 + p3 + -1*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 0.00352731041828054 + 2*p2 + -2*p3 + l + -1*f ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 4.683243901738561 + 2*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 4.7094662520193005 + p3 + -1*d ), twopi ) );
        a += 0.0024 * sin ( fmod ( ( 1.6075470267224403 + 4*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00244 * sin ( fmod ( ( 3.142002107832311 + 4*p2 + -4*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00245 * sin ( fmod ( ( 0.002320066174676062 + 2*p2 + -2*p3 + l + f ), twopi ) );
        a += 0.00246 * sin ( fmod ( ( 3.1421241063470253 + 7*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00246 * sin ( fmod ( ( 2.9517252655823376 + 6*p2 + -8*p3 + d ), twopi ) );
        a += 0.00249 * sin ( fmod ( ( 4.48070786682258 + 2*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00249 * sin ( fmod ( ( 6.275835027567738 + p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.0025 * sin ( fmod ( ( 0.004941201645321146 + 2*p2 + -2*p3 + f ), twopi ) );
        a += 0.00251 * sin ( fmod ( ( 0.17493155840058847 + 2*p3 + -3*p5 + 2*d + f ), twopi ) );
        a += 0.00252 * sin ( fmod ( ( 0.00885248449904044 + 2*p2 + -2*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 3.3212034397149783 + 2*p3 + -3*p5 + -2*d + f ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 5.670685044538303 + p3 + -2*p4 + f ), twopi ) );
        a += 0.00257 * sin ( fmod ( ( 6.264417432667041 + 2*p3 + -2*p4 + -2*d + l + -1*f ), twopi ) );
        a += 0.00258 * sin ( fmod ( ( 5.66741848631027 + p3 + -2*p4 + -1*f ), twopi ) );
        a += 0.00261 * sin ( fmod ( ( 2.857965654566427 + 2*p4 + d + l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 5.461282884344976 + p3 + -2*p4 + -1*l + f ), twopi ) );
        a += 0.00266 * sin ( fmod ( ( 4.895770375825883 + p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00267 * sin ( fmod ( ( 5.461231397132042 + p3 + -2*p4 + l + -1*f ), twopi ) );
        a += 0.0027 * sin ( fmod ( ( 4.691315176864409 + 2*p2 + -3*p3 + l + f ), twopi ) );
        a += 0.00272 * sin ( fmod ( ( 4.738701913253606 + 2*p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 5.8164523256709915 + 10*p2 + -3*p3 + f ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 5.8164523256709915 + 10*p2 + -3*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 1.3289952706309487 + 7*p2 + -8*p3 + d ), twopi ) );
        a += 0.00277 * sin ( fmod ( ( 4.717365437680901 + 3*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00279 * sin ( fmod ( ( 1.7541944773969098 + p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00282 * sin ( fmod ( ( 1.8033136276016364 + 6*p2 + -5*p3 + d ), twopi ) );
        a += 0.00283 * sin ( fmod ( ( 6.097448589912826 + 4*p2 + -6*p3 + d ), twopi ) );
        a += 0.00288 * sin ( fmod ( ( 4.693025599531364 + 2*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00289 * sin ( fmod ( ( 3.1406972996835196 + 3*p2 + -3*p3 + 2*d + f ), twopi ) );
        a += 0.00295 * sin ( fmod ( ( 6.006936862101951 + 3*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 3.1539349239281957 + p3 + -1*p5 + d + f ), twopi ) );
        a += 0.00297 * sin ( fmod ( ( 5.481049959854288 + p3 + -2*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 5.484032029414245 + p3 + -2*p4 + l + f ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 6.046852018496285 + 2*p5 + -5*p6 + l + f ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 6.046812399522267 + 2*p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.003 * sin ( fmod ( ( 4.717448864419147 + 3*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00301 * sin ( fmod ( ( 3.1540317897016816 + p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00305 * sin ( fmod ( ( 6.04358266774145 + 2*p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00305 * sin ( fmod ( ( 6.043547761156411 + 2*p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00308 * sin ( fmod ( ( 2.8883617852203844 + p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00321 * sin ( fmod ( ( 0.002519382775253815 + 2*d + -1*f ), twopi ) );
        a += 0.00326 * sin ( fmod ( ( 4.942334887604466 + 3*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00328 * sin ( fmod ( ( 3.1548964258131202 + 2*p3 + -2*p5 + -2*d + l + f ), twopi ) );
        a += 0.00329 * sin ( fmod ( ( 2.9186685550166405 + 6*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0033 * sin ( fmod ( ( 4.737168990571579 + 2*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00338 * sin ( fmod ( ( 5.338803531421648 + p3 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00346 * sin ( fmod ( ( 4.477410241733863 + 4*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00349 * sin ( fmod ( ( 2.918911155782667 + 6*p2 + -8*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00349 * sin ( fmod ( ( 1.7541733589129604 + p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.0035 * sin ( fmod ( ( 4.735066566954628 + 2*p2 + -3*p3 + f ), twopi ) );
        a += 0.00354 * sin ( fmod ( ( 6.045988604115324 + 3*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00355 * sin ( fmod ( ( 3.3192387225760083 + 2*p3 + -3*p5 + -1*l + f ), twopi ) );
        a += 0.00357 * sin ( fmod ( ( 1.3368052699677728 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00371 * sin ( fmod ( ( 3.1421010680008994 + 4*p2 + -4*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.0038 * sin ( fmod ( ( 3.1557094001786985 + 2*p3 + -2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00391 * sin ( fmod ( ( 3.1592937828635193 + 2*p3 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00398 * sin ( fmod ( ( 1.8033825681070903 + 5*p2 + -4*p3 + d ), twopi ) );
        a += 0.00398 * sin ( fmod ( ( 4.752643952384388 + 5*p2 + -6*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00404 * sin ( fmod ( ( 0.014204013051505454 + 2*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00408 * sin ( fmod ( ( 3.319106601151633 + 2*p3 + -3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00416 * sin ( fmod ( ( 3.1420631943561306 + 6*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00416 * sin ( fmod ( ( 4.171477934870008 + 3*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00421 * sin ( fmod ( ( 0.9571038297415756 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.00436 * sin ( fmod ( ( 0.18360724104640191 + 2*p3 + -3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.0045 * sin ( fmod ( ( 0.024784548042945477 + p3 + -1*p5 + -1*f ), twopi ) );
        a += 0.00453 * sin ( fmod ( ( 5.0038357525886905 + 4*p3 + -8*p4 + 3*p5 + 2*d + f ), twopi ) );
        a += 0.00453 * sin ( fmod ( ( 5.003809747182836 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00455 * sin ( fmod ( ( 0.002407332637275779 + 3*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00459 * sin ( fmod ( ( 2.9692089268312665 + p3 + -1*p6 + d ), twopi ) );
        a += 0.00464 * sin ( fmod ( ( 1.308952782165672 + 26*p2 + -29*p3 + -1*l + f ), twopi ) );
        a += 0.00464 * sin ( fmod ( ( 1.308952782165672 + 26*p2 + -29*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00471 * sin ( fmod ( ( 1.3314535668823826 + 6*p2 + -7*p3 + d ), twopi ) );
        a += 0.00472 * sin ( fmod ( ( 1.9359481787776935 + p3 + -3*p5 + d ), twopi ) );
        a += 0.00475 * sin ( fmod ( ( 3.1412865228389935 + p2 + -1*p3 + -2*d + l + f ), twopi ) );
        a += 0.00479 * sin ( fmod ( ( 4.744132156155337 + 20*p2 + -21*p3 + -2*d + l + f ), twopi ) );
        a += 0.00479 * sin ( fmod ( ( 4.744132156155337 + 20*p2 + -21*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00489 * sin ( fmod ( ( 3.1413523217517936 + p2 + -1*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00497 * sin ( fmod ( ( 4.943251359994688 + 2*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00503 * sin ( fmod ( ( 5.011033839489766 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00503 * sin ( fmod ( ( 5.011008706748537 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00504 * sin ( fmod ( ( 0.00045134214456573365 + 2*p2 + -2*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0051 * sin ( fmod ( ( 0.17512057755857946 + 2*p3 + -3*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00511 * sin ( fmod ( ( 0.019566886244108427 + p3 + -1*p5 + l + -1*f ), twopi ) );
        a += 0.00518 * sin ( fmod ( ( 3.143917083087599 + 3*p3 + -3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.0053 * sin ( fmod ( ( 0.019159351863767753 + p3 + -1*p5 + l + f ), twopi ) );
        a += 0.00533 * sin ( fmod ( ( 0.0018441148876572086 + 3*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00554 * sin ( fmod ( ( 0.024370032345596825 + p3 + -1*p5 + -1*l + f ), twopi ) );
        a += 0.0056 * sin ( fmod ( ( 3.141816404799899 + p2 + -1*p3 + l + -1*f ), twopi ) );
        a += 0.00566 * sin ( fmod ( ( 1.8034326590566223 + 4*p2 + -3*p3 + d ), twopi ) );
        a += 0.00575 * sin ( fmod ( ( 3.141282508581713 + p2 + -1*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00587 * sin ( fmod ( ( 0.004546757234370428 + 2*p2 + -2*p3 + -2*d + l + f ), twopi ) );
        a += 0.00588 * sin ( fmod ( ( 3.144190750714312 + 2*p3 + -2*p5 + 2*d + f ), twopi ) );
        a += 0.00591 * sin ( fmod ( ( 0.02272750298654496 + p3 + -1*p5 + f ), twopi ) );
        a += 0.00594 * sin ( fmod ( ( 3.1418052346926864 + p2 + -1*p3 + -1*l + f ), twopi ) );
        a += 0.00603 * sin ( fmod ( ( 0.0002853613327010729 + 2*p2 + -2*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00615 * sin ( fmod ( ( 1.7350853910155994 + 2*p3 + -2*p4 + d ), twopi ) );
        a += 0.00615 * sin ( fmod ( ( 5.553229098268064 + p3 + -2*p4 + -2*d + f ), twopi ) );
        a += 0.00616 * sin ( fmod ( ( 0.4632911922236624 + 18*p2 + -16*p3 + l + f ), twopi ) );
        a += 0.00616 * sin ( fmod ( ( 3.141806980021938 + p2 + -1*p3 + l + f ), twopi ) );
        a += 0.00618 * sin ( fmod ( ( 5.011060368494396 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00619 * sin ( fmod ( ( 5.0110893409599795 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00623 * sin ( fmod ( ( 4.140461863265743 + 8*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00623 * sin ( fmod ( ( 0.0016683602319813794 + 2*p3 + -2*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00626 * sin ( fmod ( ( 4.14147450329775 + 8*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.00634 * sin ( fmod ( ( 5.586476224255155 + p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00635 * sin ( fmod ( ( 4.71306738986494 + 2*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00642 * sin ( fmod ( ( 0.46326448868610687 + 18*p2 + -16*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00643 * sin ( fmod ( ( 0.006777986150119978 + 2*p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00649 * sin ( fmod ( ( 4.478675256375708 + p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00657 * sin ( fmod ( ( 6.282575140073089 + 2*p3 + -2*p5 + -1*l + f ), twopi ) );
        a += 0.00657 * sin ( fmod ( ( 0.02215067166876083 + p3 + -1*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00663 * sin ( fmod ( ( 5.340413597656612 + p3 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.00681 * sin ( fmod ( ( 0.17500678209134943 + 2*p3 + -3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00683 * sin ( fmod ( ( 4.7232264278420235 + 3*p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00695 * sin ( fmod ( ( 0.005139645581272902 + 2*p2 + -2*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00708 * sin ( fmod ( ( 3.141379374355199 + p2 + -1*p3 + -1*f ), twopi ) );
        a += 0.0071 * sin ( fmod ( ( 4.971587303999592 + 4*p3 + -8*p4 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.0071 * sin ( fmod ( ( 4.97158590773619 + 4*p3 + -8*p4 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00724 * sin ( fmod ( ( 3.1417596815992086 + p2 + -1*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00744 * sin ( fmod ( ( 4.945155863274465 + p2 + -1*d ), twopi ) );
        a += 0.00753 * sin ( fmod ( ( 4.479596964753686 + p2 + -2*p3 + d ), twopi ) );
        a += 0.00762 * sin ( fmod ( ( 5.013100658389978 + 4*p3 + -8*p4 + 3*p5 + f ), twopi ) );
        a += 0.00762 * sin ( fmod ( ( 5.013096993198549 + 4*p3 + -8*p4 + 3*p5 + -1*f ), twopi ) );
        a += 0.00765 * sin ( fmod ( ( 0.02825216820080781 + p3 + -1*p5 + -2*d + l + f ), twopi ) );
        a += 0.00776 * sin ( fmod ( ( 5.093874670705201 + p3 + d + l ), twopi ) );
        a += 0.00777 * sin ( fmod ( ( 1.9540327568880829 + p3 + d + -1*l ), twopi ) );
        a += 0.00778 * sin ( fmod ( ( 6.282474783641099 + 2*p3 + -2*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00779 * sin ( fmod ( ( 6.041387043542442 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00796 * sin ( fmod ( ( 3.142733749854747 + 5*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00802 * sin ( fmod ( ( 1.6897031652723176 + p3 + -1*p5 + d ), twopi ) );
        a += 0.00804 * sin ( fmod ( ( 4.976009270192445 + 4*p3 + -8*p4 + 3*p5 + l + f ), twopi ) );
        a += 0.00804 * sin ( fmod ( ( 4.976004557803464 + 4*p3 + -8*p4 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00804 * sin ( fmod ( ( 0.031343495371940165 + p3 + -1*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00812 * sin ( fmod ( ( 3.1419230444171955 + p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.0083 * sin ( fmod ( ( 3.141474843865283 + p2 + -1*p3 + f ), twopi ) );
        a += 0.00833 * sin ( fmod ( ( 1.8027933449516167 + 3*p2 + -2*p3 + d ), twopi ) );
        a += 0.00837 * sin ( fmod ( ( 6.193715715465077 + p5 + -2*d + f ), twopi ) );
        a += 0.0085 * sin ( fmod ( ( 6.259242007836103 + 2*p3 + -2*p4 + -2*d + f ), twopi ) );
        a += 0.009 * sin ( fmod ( ( 3.2443593852764714 + 2*p2 + -2*p3 + d ), twopi ) );
        a += 0.00916 * sin ( fmod ( ( 0.02869548183081437 + p3 + -1*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00928 * sin ( fmod ( ( 1.3331625932859354 + 5*p2 + -6*p3 + d ), twopi ) );
        a += 0.00986 * sin ( fmod ( ( 4.736854831306221 + 2*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.01018 * sin ( fmod ( ( 4.473552365955254 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.01107 * sin ( fmod ( ( 2.678670249437077 + 8*p2 + -12*p3 + d ), twopi ) );
        a += 0.01205 * sin ( fmod ( ( 0.4632596017642013 + 18*p2 + -16*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.01216 * sin ( fmod ( ( 0.46325436577644535 + 18*p2 + -16*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.0123 * sin ( fmod ( ( 3.15764898457644 + 2*p3 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.01283 * sin ( fmod ( ( 2.6910898378613433 + p3 + p6 + d ), twopi ) );
        a += 0.0135 * sin ( fmod ( ( 1.8028917815214294 + 2*p2 + -1*p3 + d ), twopi ) );
        a += 0.01365 * sin ( fmod ( ( 0.46325192231549256 + 18*p2 + -16*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.01388 * sin ( fmod ( ( 4.478035244139002 + 2*p2 + -3*p3 + d ), twopi ) );
        a += 0.01398 * sin ( fmod ( ( 4.172372765177506 + p3 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.01408 * sin ( fmod ( ( 0.4632334218254213 + 18*p2 + -16*p3 + -2*d + -1*f ), twopi ) );
        a += 0.01409 * sin ( fmod ( ( 0.00792833266010944 + p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.01638 * sin ( fmod ( ( 1.9883176556484092 + p3 + -2*p6 + d ), twopi ) );
        a += 0.01917 * sin ( fmod ( ( 0.1759394860436152 + 2*p3 + -3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.01993 * sin ( fmod ( ( 0.000012740903539558603 + 2*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.02008 * sin ( fmod ( ( 3.1413352175251243 + p2 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.02012 * sin ( fmod ( ( 0.17602099291968332 + 2*p3 + -3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.02178 * sin ( fmod ( ( 0.4632529695130437 + 18*p2 + -16*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.02181 * sin ( fmod ( ( 0.46325227138134295 + 18*p2 + -16*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.02194 * sin ( fmod ( ( 0.0005450663253978291 + 2*p3 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.02254 * sin ( fmod ( ( 0.006284756103506381 + 2*p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.02346 * sin ( fmod ( ( 5.003582679847152 + 4*p3 + -8*p4 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.02348 * sin ( fmod ( ( 5.003624742282125 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.02359 * sin ( fmod ( ( 3.142266350681063 + 4*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.02491 * sin ( fmod ( ( 5.815989987952138 + 10*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.02492 * sin ( fmod ( ( 5.815242114367658 + 10*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.02736 * sin ( fmod ( ( 1.8035846772344708 + p2 + d ), twopi ) );
        a += 0.02862 * sin ( fmod ( ( 3.1412727347379024 + 3*p2 + -3*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.02884 * sin ( fmod ( ( 1.3354282051879491 + 4*p2 + -5*p3 + d ), twopi ) );
        a += 0.03056 * sin ( fmod ( ( 0.031066337086723465 + p3 + -1*p5 + -2*d + f ), twopi ) );
        a += 0.03094 * sin ( fmod ( ( 3.1413716949064905 + 3*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0348 * sin ( fmod ( ( 1.3178724618409137 + p3 + p5 + d ), twopi ) );
        a += 0.03712 * sin ( fmod ( ( 2.9545279152951904 + 5*p2 + -7*p3 + d ), twopi ) );
        a += 0.03884 * sin ( fmod ( ( 2.8579797917333685 + 2*p4 + d ), twopi ) );
        a += 0.04216 * sin ( fmod ( ( 0.0009913470151327792 + 3*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.04964 * sin ( fmod ( ( 1.7541871470140509 + p3 + -2*p5 + d ), twopi ) );
        a += 0.05069 * sin ( fmod ( ( 3.143711134235864 + 2*p3 + -2*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.05223 * sin ( fmod ( ( 3.1436802419081036 + 2*p3 + -2*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.06663 * sin ( fmod ( ( 4.752635749336903 + 5*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.06747 * sin ( fmod ( ( 0.463282989176178 + 18*p2 + -16*p3 + f ), twopi ) );
        a += 0.06965 * sin ( fmod ( ( 0.46326309242270525 + 18*p2 + -16*p3 + -2*l + -1*f ), twopi ) );
        a += 0.14073 * sin ( fmod ( ( 5.096047256558084 + p3 + d ), twopi ) );
        a += 0.63014 * sin ( fmod ( ( 0.4632578564349493 + 18*p2 + -16*p3 + -1*l + -1*f ), twopi ) );
        a += 0.63037 * sin ( fmod ( ( 0.46326047442882734 + 18*p2 + -16*p3 + -1*l + f ), twopi ) );
        return a;
    }

    double planetary_r11 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 2.8531000256777173 + 4*p1 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.248020928510864 + 4*p1 + -5*p2 + 3*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.10642827492107 + 4*p1 + -5*p2 + 3*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.607007047346823 + 3*p1 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4654143937570299 + 3*p1 + 7*p3 + -15*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8878203925847328 + 3*p1 + -2*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7462277389949395 + 3*p1 + -2*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.408208992588155 + 2*p1 + 13*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.266616338998362 + 2*p1 + 13*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.5617234327062794 + 2*p1 + -30*p2 + 29*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.420130779116486 + 2*p1 + -30*p2 + 29*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.053459835044336 + p1 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.911867181454544 + p1 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.490106630879178 + p1 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3485139772893853 + p1 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0545656756584 + p1 + -6*p2 + 4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9129730220686074 + p1 + -6*p2 + 4*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02314236774974401 + 41*p2 + -42*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.164735021339537 + 41*p2 + -42*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4174028209973023 + 35*p2 + -31*p3 + -3*p6 + d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5589954745870953 + 35*p2 + -31*p3 + -3*p6 + -3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.268947741314859 + 29*p2 + -33*p3 + 2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410540394904653 + 29*p2 + -33*p3 + 2*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.287022745609313 + 29*p2 + -33*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1454300920195197 + 29*p2 + -33*p3 + d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4325198327771593 + 29*p2 + -34*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5741124863669524 + 29*p2 + -34*p3 + p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8996510814244263 + 28*p2 + -34*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.04124373501422 + 28*p2 + -34*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9304084952335467 + 28*p2 + -35*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.07200114882334 + 28*p2 + -35*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0373954245532305 + 27*p2 + -28*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.43949556473153 + 27*p2 + -32*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.43949556473153 + 27*p2 + -32*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.148200470137844 + 27*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.70715177089823 + 26*p2 + -26*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5655591173084369 + 26*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7063431598557806 + 26*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5647505062659883 + 26*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.179361404070025 + 26*p2 + -27*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.037768750480232094 + 26*p2 + -27*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.021398834816902 + 26*p2 + -29*p3 + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.8798061812271087 + 26*p2 + -29*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5629742846862336 + 25*p2 + -25*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.028332976945175146 + 25*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1699256305349683 + 25*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4510501594801917 + 25*p2 + -27*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.592642813069984 + 25*p2 + -27*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9226170048851101 + 25*p2 + -29*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.064209658474904 + 25*p2 + -29*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5606439210689709 + 24*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.702236574658764 + 24*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.088703758235367 + 24*p2 + -26*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.23029641182516 + 24*p2 + -26*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5635821828647032 + 23*p2 + -23*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.778476902712373 + 23*p2 + -24*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.920069556302166 + 23*p2 + -24*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.160115500871992 + 23*p2 + -24*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.618750678250109 + 23*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.477158024660316 + 23*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.027656836392952543 + 22*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.027656836392952543 + 22*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5644147049179045 + 22*p2 + -22*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.177379582704386 + 22*p2 + -23*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.467647359503715 + 22*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.356770474340453 + 22*p2 + -24*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.730597825937822 + 21*p2 + -20*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.730597825937822 + 21*p2 + -20*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.21397841349205599 + 21*p2 + -21*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3555710670818493 + 21*p2 + -21*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.180867972280347 + 21*p2 + -22*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3015587202845476 + 21*p2 + -23*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1599660666947547 + 21*p2 + -23*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2361961143024098 + 21*p2 + -23*p3 + 4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2361961143024098 + 21*p2 + -23*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282022743364832 + 21*p2 + -23*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712456001027967 + 20*p2 + -20*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5876057673537793 + 20*p2 + -20*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5708633474381732 + 20*p2 + -20*p3 + -3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3376362467195975 + 20*p2 + -20*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8776595837834473 + 20*p2 + -21*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.8776595837834473 + 20*p2 + -21*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.173048199099711 + 20*p2 + -21*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0314555455099182 + 20*p2 + -21*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6639230984206677 + 20*p2 + -21*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5223304448308747 + 20*p2 + -21*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.279722748476555 + 20*p2 + -22*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.279722748476555 + 20*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.975536984096855 + 20*p2 + -29*p3 + 15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.833944330507062 + 20*p2 + -29*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.174562804322909 + 19*p2 + -18*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0329701507331155 + 19*p2 + -18*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23595455223561737 + 19*p2 + -18*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.377547205825411 + 19*p2 + -18*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.181341654639338 + 19*p2 + -20*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.03162711137538925 + 19*p2 + -20*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.5924417511401545 + 19*p2 + -20*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4508490975503618 + 19*p2 + -20*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.973963918842032 + 19*p2 + -21*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8323712652522393 + 19*p2 + -21*p3 + 3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.187667783544433 + 18*p2 + -15*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0460751299546402 + 18*p2 + -15*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 6*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -2*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0434243238867111 + 18*p2 + -16*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.185016977476504 + 18*p2 + -16*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.22601682200768686 + 18*p2 + -17*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4236954565773923 + 18*p2 + -17*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3676094755974804 + 18*p2 + -17*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7399136698583164 + 18*p2 + -18*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7399136698583164 + 18*p2 + -18*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.692311070233913 + 18*p2 + -19*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.550718416644121 + 18*p2 + -19*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3853697885294824 + 18*p2 + -19*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2437771349396893 + 18*p2 + -19*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1422579731006532 + 18*p2 + -19*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0006653195108602384 + 18*p2 + -19*p3 + -5*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.527709907149688 + 17*p2 + -14*p3 + -3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.669302560739482 + 17*p2 + -14*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.030861626962098 + 17*p2 + -15*p3 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.172454280551891 + 17*p2 + -15*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.1677242552477445 + 17*p2 + -15*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0261316016579514 + 17*p2 + -15*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6760313116080616 + 17*p2 + -16*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6760313116080616 + 17*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5678489892870537 + 17*p2 + -17*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.710583262740577 + 17*p2 + -17*p3 + 3*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.710583262740577 + 17*p2 + -17*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709253321850556 + 17*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.181712537105387 + 17*p2 + -18*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.181645865527961 + 17*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0033449235114471326 + 17*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.435632652993041 + 16*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.583355890625173 + 16*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.149122727609548 + 16*p2 + -14*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0075300740197544 + 16*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4000326231463873 + 16*p2 + -14*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5416252767361796 + 16*p2 + -14*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3788687606367036 + 16*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3788687606367036 + 16*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139102417813047 + 16*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139102417813047 + 16*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5916664503914693 + 16*p2 + -15*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5916664503914693 + 16*p2 + -15*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.188716717926565 + 16*p2 + -15*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0471240643367721 + 16*p2 + -15*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.70956224512816 + 16*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.568235928782221 + 16*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.471922028406016 + 16*p2 + -18*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23363361339631533 + 15*p2 + -12*p3 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.047688686848109 + 15*p2 + -12*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.189281340437902 + 15*p2 + -12*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714147923204849 + 15*p2 + -13*p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5725552696150567 + 15*p2 + -13*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.707996510256196 + 15*p2 + -13*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5664038566664023 + 15*p2 + -13*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6852176605963755 + 15*p2 + -14*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5920949287228336 + 15*p2 + -14*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5920949287228336 + 15*p2 + -14*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.759385286620216 + 15*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5836361905030432 + 15*p2 + -15*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1886758687237515 + 15*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.330268522313545 + 15*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0019455185171980793 + 15*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4620506206896613 + 15*p2 + -17*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2684482280829386 + 15*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.410040881672732 + 15*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.160035905359784 + 14*p2 + -11*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.708447154269061 + 14*p2 + -12*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.708447154269061 + 14*p2 + -12*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.717358805429743 + 14*p2 + -12*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5757661518399504 + 14*p2 + -12*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0782630326153284 + 14*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.219855686205122 + 14*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.592486231541131 + 14*p2 + -13*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.592486231541131 + 14*p2 + -13*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4824774561511775 + 14*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3408848025613844 + 14*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5877539458072731 + 14*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.168220260824528 + 14*p2 + -15*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.309812914414321 + 14*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.040376272382711624 + 14*p2 + -15*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.034778652405715406 + 14*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.400368275456496 + 13*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.258775621866702 + 13*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.048117905802758 + 13*p2 + -10*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.048117905802758 + 13*p2 + -10*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.708862891696886 + 13*p2 + -11*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.708862891696886 + 13*p2 + -11*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.716435351722513 + 13*p2 + -11*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5748426981327204 + 13*p2 + -11*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.596796679693098 + 13*p2 + -12*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5755781798795105 + 13*p2 + -13*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5711239250954958 + 13*p2 + -13*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0350591268165109 + 13*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.240692448518031 + 13*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.854914486964724 + 13*p2 + -15*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.246480143348886 + 13*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7157886817396995 + 12*p2 + -6*p3 + -3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7157886817396995 + 12*p2 + -6*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4580293990897 + 12*p2 + -7*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.31643674549990675 + 12*p2 + -7*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1831765192819597 + 12*p2 + -8*p3 + -2*p7 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.041583865692166495 + 12*p2 + -8*p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0722027258536286 + 12*p2 + -9*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0722027258536286 + 12*p2 + -9*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709244420671372 + 12*p2 + -10*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709244420671372 + 12*p2 + -10*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7167060522894975 + 12*p2 + -10*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5751133986997043 + 12*p2 + -10*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1635780425783904 + 12*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3713771178537604 + 12*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3713771178537604 + 12*p2 + -11*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.59183330386796 + 12*p2 + -11*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.621292716312372 + 12*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5713701910529525 + 12*p2 + -12*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.167794583518283 + 12*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.032829817762938536 + 12*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.612705547354585 + 12*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.249358540351276 + 12*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5567540972667343 + 11*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.698346750856528 + 11*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.815669179438988 + 11*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6740765258491949 + 11*p2 + -7*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709591043060818 + 11*p2 + -9*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709591043060818 + 11*p2 + -9*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.151432645379612 + 11*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.740164665201386 + 11*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.479092913665711 + 11*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.337500260075917 + 11*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.729042737574294 + 11*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.629596120228735 + 11*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712765447904345 + 11*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.06236672282613938 + 11*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.695070784847168 + 11*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.553478131257374 + 11*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.787716875800306 + 11*p2 + -15*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.787716875800306 + 11*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4425179513972086 + 11*p2 + -16*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.584110604987002 + 11*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5495563849264595 + 11*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4079637313366665 + 11*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.449893887349062 + 10*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.901477934549122 + 10*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8102614512846085 + 10*p2 + -4*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6686687976948156 + 10*p2 + -4*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6745568404593436 + 10*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8161494940491365 + 10*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6666705702342072 + 10*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8082632238240004 + 10*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709897348344542 + 10*p2 + -8*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5683046947547497 + 10*p2 + -8*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.729019524695243 + 10*p2 + -9*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4775852982578375 + 10*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3359926446680441 + 10*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712233646081263 + 10*p2 + -10*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.741854850547335 + 10*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.32211028729936464 + 10*p2 + -11*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.01743706095789975 + 10*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2820220197381818 + 10*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4575626895494 + 10*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.450038592140686 + 10*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3084459385508924 + 10*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.804913413390648 + 9*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.729197897344797 + 9*p2 + -8*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5709101222621267 + 9*p2 + -9*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.68389944740561 + 9*p2 + -10*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14805244072232457 + 9*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2923229529834526 + 9*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.567780223314525 + 9*p2 + -11*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709372876904317 + 9*p2 + -11*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4134833435944154 + 9*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.398104400385417 + 9*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2554779882796676 + 9*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5992492418529505 + 9*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4745040769997333 + 9*p2 + -13*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.44458444672652 + 9*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.302991793136727 + 9*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.591812393910202 + 9*p2 + -14*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.591812393910202 + 9*p2 + -14*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4736202422665237 + 9*p2 + -15*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.615212895856317 + 9*p2 + -15*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6644348034624025 + 8*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.806027457052196 + 8*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.808451719383216 + 8*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6668590657934226 + 8*p2 + -4*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.710413267671432 + 8*p2 + -6*p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5688206140816388 + 8*p2 + -6*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1052302894208186 + 8*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1019621603964587 + 8*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712672072789363 + 8*p2 + -8*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713275258578852 + 8*p2 + -8*p3 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1943049131256007 + 8*p2 + -9*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.379702163852848 + 8*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3237859864125212 + 8*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.510691401641367 + 8*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4176077396481195 + 8*p2 + -11*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0469459002134105 + 8*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1946244659150074 + 8*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0845854963289945 + 8*p2 + -12*p3 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3567868634387885 + 8*p2 + -12*p3 + -2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.21519420984899523 + 8*p2 + -12*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0753003192134347 + 8*p2 + -13*p3 + -1*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.216892972803228 + 8*p2 + -13*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.446133077371814 + 8*p2 + -14*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3045404237820213 + 8*p2 + -14*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.857887821380105 + 8*p2 + -15*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7162951677903115 + 8*p2 + -15*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.24023898648341308 + 8*p2 + -15*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3818316400732065 + 8*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.805269286025129 + 7*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8241197146112937 + 7*p2 + -4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6825270610215008 + 7*p2 + -4*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7317659408129146 + 7*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4610254312836735 + 7*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.058121260410563 + 7*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.456675198123077 + 7*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.571302472277975 + 7*p2 + -7*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2335896820890655 + 7*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.139783096221325 + 7*p2 + -9*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.281375749811119 + 7*p2 + -9*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9932935978441613 + 7*p2 + -10*p3 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.842640608038049 + 7*p2 + -11*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.984233261627842 + 7*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.727555027418211 + 7*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.615648879103465 + 7*p2 + -13*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4740562255136718 + 7*p2 + -13*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.612591062253971 + 7*p2 + -13*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4709984086641774 + 7*p2 + -13*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.268272132859729 + 7*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.41353586950658366 + 7*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.409864786449522 + 7*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.810064054546208 + 6*p2 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.668471400956415 + 6*p2 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6669299261610535 + 6*p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.808522579750847 + 6*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712965811702474 + 6*p2 + -6*p3 + 4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713110848563314 + 6*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5504997183905296 + 6*p2 + -7*p3 + p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5504997183905296 + 6*p2 + -7*p3 + p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.219760391227962 + 6*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1702221619748823 + 6*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.715377507662879 + 6*p2 + -8*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5737848540730863 + 6*p2 + -8*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.619144416031043 + 6*p2 + -8*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4775517624412493 + 6*p2 + -8*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.506224231420887 + 6*p2 + -8*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.473217769341013 + 6*p2 + -10*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.222093372839104 + 6*p2 + -10*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.08050071924931 + 6*p2 + -10*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0945551405872866 + 6*p2 + -11*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0945551405872866 + 6*p2 + -11*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.2620413074301093 + 6*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.403633961019902 + 6*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6669334168195576 + 5*p2 + -1*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3423468563774633 + 5*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3423468563774633 + 5*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.760055842118832 + 5*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1388584207836185 + 5*p2 + -3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1388584207836185 + 5*p2 + -3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23260823246076867 + 5*p2 + -4*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.209668373894155 + 5*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.738335219577762 + 5*p2 + -4*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.738335219577762 + 5*p2 + -4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3315047050294657 + 5*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.473097358619259 + 5*p2 + -5*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713546657277537 + 5*p2 + -5*p3 + 3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.635716142745803 + 5*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707120273920254 + 5*p2 + -5*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.173837262454538 + 5*p2 + -6*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3719801291103244 + 5*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.783028389332357 + 5*p2 + -6*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6414196787134456 + 5*p2 + -6*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.315142443319894 + 5*p2 + -7*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1735497897301013 + 5*p2 + -7*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3834776430941287 + 5*p2 + -7*p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.978723955310997 + 5*p2 + -7*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.525070296683921 + 5*p2 + -7*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.968732651973346 + 5*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7076289269190923 + 5*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.9034197793765741 + 5*p2 + -9*p3 + 5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.0450124329663675 + 5*p2 + -9*p3 + 5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.5404794595839295 + 5*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6229895339094775 + 5*p2 + -9*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.764582187499271 + 5*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4691230778778595 + 5*p2 + -10*p3 + 3*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.327530424288067 + 5*p2 + -10*p3 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9244517034931232 + 5*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.066044357082917 + 5*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6849621443938835 + 4*p2 + p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8265547979836767 + 4*p2 + p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.618768463611846 + 4*p2 + p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4771758100220529 + 4*p2 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.779017456676666 + 4*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6374248030868723 + 4*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.002884680187696228 + 4*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1444773337774894 + 4*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4319496422088496 + 4*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.590674056178785 + 4*p2 + -3*p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.2504963374872835 + 4*p2 + -3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1089036838974904 + 4*p2 + -3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5770634550729576 + 4*p2 + -4*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5724076147603376 + 4*p2 + -4*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.565245481641854 + 4*p2 + -4*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.697052074115715 + 4*p2 + -4*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5360550244351736 + 4*p2 + -5*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.677647678024967 + 4*p2 + -5*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2221167347561304 + 4*p2 + -5*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.180980895082951 + 4*p2 + -5*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.049994607357527164 + 4*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.903886314383949 + 4*p2 + -5*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6749540773970976 + 4*p2 + -6*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.816546730986891 + 4*p2 + -6*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.446715493743205 + 4*p2 + -8*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.305122840153412 + 4*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.605548441697665 + 4*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.747141095287458 + 4*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.23332105892055 + 4*p2 + -10*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0917284053307568 + 4*p2 + -10*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6669185815209157 + 3*p2 + p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8105227270736326 + 3*p2 + p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.668930073483839 + 3*p2 + p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0921858561277042 + 3*p2 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.233778509717498 + 3*p2 + p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.266194701444347 + 3*p2 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.266194701444347 + 3*p2 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4668155695754805 + 3*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.721028709247912 + 3*p2 + -1*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5794360556581188 + 3*p2 + -1*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.23190730823316774 + 3*p2 + -2*p3 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.838479402533761 + 3*p2 + -2*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.058951513535737 + 3*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.134555136979902 + 3*p2 + -2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.134555136979902 + 3*p2 + -2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4865126318868385 + 3*p2 + -3*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4865126318868385 + 3*p2 + -3*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.099480991833507 + 3*p2 + -3*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.241073645423301 + 3*p2 + -3*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.242829280616197 + 3*p2 + -3*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1012366270264047 + 3*p2 + -3*p3 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5732930202898745 + 3*p2 + -3*p3 + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.607225537074223 + 3*p2 + -3*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748818190664016 + 3*p2 + -3*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.81593654688376 + 3*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.957529200473553 + 3*p2 + -3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.22973175532055684 + 3*p2 + -3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3740371486717748 + 3*p2 + -4*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5156298022615675 + 3*p2 + -4*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4602456096755656 + 3*p2 + -4*p3 + 2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.601838263265359 + 3*p2 + -4*p3 + 2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.655877488133141 + 3*p2 + -4*p3 + p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5142848345433477 + 3*p2 + -4*p3 + p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02958978853953626 + 3*p2 + -4*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.010619630366684698 + 3*p2 + -4*p3 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.236254782860227 + 3*p2 + -5*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.989520719600126 + 3*p2 + -6*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.7537588772088775 + 3*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.871430720707589 + 3*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6121662236190852 + 3*p2 + -6*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.4864824461890955 + 3*p2 + -6*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.004250608853574 + 3*p2 + -7*p3 + p6 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.004250608853574 + 3*p2 + -7*p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0612511253648975 + 3*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3221949697613535 + 3*p2 + -7*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2028437789546915 + 3*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.61585919127833 + 3*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.203271550656038 + 3*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.061678897066245 + 3*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4464341041762004 + 3*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5880267577659937 + 3*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5880267577659937 + 3*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4464341041762004 + 3*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.810304735450058 + 2*p2 + 4*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6694739180787604 + 2*p2 + 4*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.668712081860265 + 2*p2 + 4*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.811066571668554 + 2*p2 + 4*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.089023851620183 + 2*p2 + 3*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2306165052099765 + 2*p2 + 3*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.676892963663138 + 2*p2 + 3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8184856172529313 + 2*p2 + 3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.188607311277415 + 2*p2 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.047014657687622 + 2*p2 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6680214550752509 + 2*p2 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8096141086650444 + 2*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2674170790625436 + 2*p2 + p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.269365441096445 + 2*p2 + p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.269365441096445 + 2*p2 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.009759757634128 + 2*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5718717986799757 + 2*p2 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713499009788958 + 2*p2 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.600411082041053 + 2*p2 + -1*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3733613826803523 + 2*p2 + -1*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3725475356501478 + 2*p2 + -1*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.82409090818032 + 2*p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3729025356200037 + 2*p2 + -1*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.372519959447966 + 2*p2 + -1*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.893358645872211 + 2*p2 + -1*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.373984805790848 + 2*p2 + -2*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.5155774593806415 + 2*p2 + -2*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712527210461448 + 2*p2 + -2*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.921433348081357 + 2*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713070182391744 + 2*p2 + -2*p3 + d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5664202627613713 + 2*p2 + -2*p3 + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.716933468691033 + 2*p2 + -2*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5752875825590535 + 2*p2 + -2*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7798406944915646 + 2*p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7175939012799875 + 2*p2 + -2*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.718358704558211 + 2*p2 + -2*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.762988352826349 + 2*p2 + -3*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6213956992365564 + 2*p2 + -3*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5484114319405182 + 2*p2 + -3*p3 + p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.164647231278162 + 2*p2 + -3*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02314865093505119 + 2*p2 + -3*p3 + -3*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9085189418175172 + 2*p2 + -3*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.679907530340449 + 2*p2 + -4*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.538314876750656 + 2*p2 + -4*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7408418274562103 + 2*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7054605128597812 + 2*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0065287616312517 + 2*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.148121415221045 + 2*p2 + -7*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.594161415553829 + 2*p2 + -13*p3 + 15*p4 + -2*d + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.45256876196403517 + 2*p2 + -13*p3 + 15*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9124541186853558 + p2 + 6*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.054046772275149 + p2 + 6*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.810308051575637 + p2 + 5*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.669466413162977 + p2 + 5*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6687153979858438 + p2 + 5*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.669466413162977 + p2 + 5*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6664464699582512 + p2 + 5*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8080391235480446 + p2 + 5*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6768962797887167 + p2 + 4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.826587610173614 + p2 + 4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.81848893337851 + p2 + 4*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6849949565838209 + p2 + 4*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6669445869267703 + p2 + 3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6669447614596956 + p2 + 3*p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.8085374150494884 + p2 + 3*p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.271102567300955 + p2 + 2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.271102567300955 + p2 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3237896516039502 + p2 + p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3237896516039502 + p2 + p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.570305714742161 + p2 + p3 + -2*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.711898368331953 + p2 + p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2764678329646105 + p2 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.374341385055347 + p2 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.374358663814942 + p2 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3743628526051466 + p2 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9154910085804597 + p2 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.835012846570082 + p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.69342019298029 + p2 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.041523511293314 + p2 + -2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.899930857703521 + p2 + -2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.264555479712557 + p2 + -1*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712985882988871 + p2 + -1*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709218938864293 + p2 + -1*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5341728613698231 + p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.715575428000056 + p2 + -1*p3 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.343854688809845 + p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.202262035220051 + p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5702414866256877 + p2 + -1*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5705102673304947 + p2 + -1*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.711872886524875 + p2 + -1*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712132940583421 + p2 + -1*p3 + -4*d + 3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.712033107750208 + p2 + -1*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8138493076313003 + p2 + -1*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.955441961221093 + p2 + -1*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.03461476598895314 + p2 + -1*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0063715159639637 + p2 + -1*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0063715159639637 + p2 + -1*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6815144379861273 + p2 + -2*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8231070915759195 + p2 + -2*p3 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3125855189690894 + p2 + -2*p3 + 2*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.4541781725588825 + p2 + -2*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3768453919365502 + p2 + -2*p3 + p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.518438045526343 + p2 + -2*p3 + p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.24550504489243 + p2 + -2*p3 + 4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.058059773830992964 + p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2931367745187076 + p2 + -2*p3 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4718045847439902 + p2 + -2*p3 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0493469666620125 + p2 + -2*p3 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.131731560312659 + p2 + -2*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.131731560312659 + p2 + -2*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.715992910757132 + p2 + -3*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5744002571673397 + p2 + -3*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.485305936736959 + p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3437132831471663 + p2 + -3*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1534629868984565 + p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1534629868984565 + p2 + -4*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0411426549555791 + p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.481745797132108 + p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.214977307914556 + 28*p3 + -31*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.0733846543247623 + 28*p3 + -31*p4 + -2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.137599872358322 + 20*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9960072187685293 + 20*p3 + -16*p4 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.05412283463726936 + 12*p3 + -15*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.195715488227062 + 12*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1845396044311338 + 11*p3 + -12*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.326132258020928 + 11*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5608964617134177 + 11*p3 + -13*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.056110241056515305 + 11*p3 + -14*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.060658220021362126 + 10*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.837632768808568 + 10*p3 + -14*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7853182443143405 + 10*p3 + -15*p4 + p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.926910897904134 + 10*p3 + -15*p4 + p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1078903287371493 + 10*p3 + -17*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0769327256628252 + 9*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.372382793565393 + 9*p3 + -14*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1080952473879666 + 9*p3 + -15*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.24968790097776 + 9*p3 + -15*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1626608550598339 + 9*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3042535086496265 + 9*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5628775934456731 + 8*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.369257083407996 + 8*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5780816801585713 + 7*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7144407809550173 + 7*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.1648803987679117 + 7*p3 + -12*p4 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7199600186519657 + 7*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4943048288652923 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.676061863368288 + 6*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.09047385416610645 + 6*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.229887464184785 + 6*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11116263805339685 + 6*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.3607796701652095 + 6*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.659146140756276 + 5*p3 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.659146140756276 + 5*p3 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.67330321294922 + 5*p3 + -4*p5 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5317105593594262 + 5*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.119943398018497 + 5*p3 + -5*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.0968849806057739 + 5*p3 + -6*p4 + 2*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1779181743149179 + 5*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3478443029537117 + 5*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4622859080694637 + 5*p3 + -6*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.32069325447967045 + 5*p3 + -6*p4 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.779531447643061 + 5*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.344941496836745 + 5*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6590251639441627 + 5*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.26094124339921 + 4*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7194549203664389 + 4*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7194549203664389 + 4*p3 + -2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8253192964028235 + 4*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4049965055736677 + 4*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7511549865045615 + 4*p3 + -5*p5 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.505848985631709 + 4*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.505848985631709 + 4*p3 + -6*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9005497684529113 + 4*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6518569476682465 + 4*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5820154777596414 + 4*p3 + -4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2857718426394587 + 4*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.569866083300217 + 4*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.04186591089928878 + 4*p3 + -7*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.183458564489082 + 4*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.044551099953482054 + 4*p3 + -7*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2929348399242519 + 4*p3 + -8*p4 + 3*p5 + 6*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4345384890883324 + 4*p3 + -8*p4 + 3*p5 + 3*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29292942940357064 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2929290803377203 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3917709410974637 + 4*p3 + -8*p4 + 3*p5 + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.28666614084986386 + 4*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2501706080589616 + 4*p3 + -8*p4 + 3*p5 + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4344936341265564 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.434497124785061 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.29287340433458164 + 4*p3 + -8*p4 + 3*p5 + -3*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.4345007899764894 + 4*p3 + -8*p4 + 3*p5 + -6*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20501824217816753 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.346685595859946 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.254120479685783 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9132259202772213 + 3*p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.673221148481109 + 3*p3 + -1*p5 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.888458667990504 + 3*p3 + -1*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.038796276800781 + 3*p3 + -2*p5 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.897203623210988 + 3*p3 + -2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.024851619676123 + 3*p3 + -2*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.024851619676123 + 3*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.030833561154408 + 3*p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0566750805923615 + 3*p3 + -2*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.041404139270794 + 3*p3 + -2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.041404139270794 + 3*p3 + -2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5725126835813077 + 3*p3 + -3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714105337171101 + 3*p3 + -3*p5 + 3*d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3254342753581045 + 3*p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3133958668424734 + 3*p3 + -3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7257950034072334 + 3*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9892093358649365 + 3*p3 + -5*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.732844239218063 + 3*p3 + -5*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.732844239218063 + 3*p3 + -5*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3212173938506777 + 3*p3 + -6*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.3212173938506777 + 3*p3 + -6*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9512084735908224 + 3*p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9160022155183682 + 3*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.905009957356383 + 3*p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.05819713124312492 + 3*p3 + -6*p4 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1997897848329178 + 3*p3 + -6*p4 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9501427585529214 + 3*p3 + -7*p4 + d + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.0917354121427145 + 3*p3 + -7*p4 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.090002806797626 + 3*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.231071687078896 + 3*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0528773931779964 + 2*p3 + 5*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.194470046767789 + 2*p3 + 5*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6480721671920304 + 2*p3 + 4*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6516619603975324 + 2*p3 + 4*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7896648207818235 + 2*p3 + 4*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7932546139873256 + 2*p3 + 4*p5 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7670729213798415 + 2*p3 + 4*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.9086655749696355 + 2*p3 + 4*p5 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6447181679684729 + 2*p3 + 3*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.786310821558266 + 2*p3 + 3*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7975636318826244 + 2*p3 + p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9391562854724174 + 2*p3 + p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.235748113778373 + 2*p3 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.071083986799733 + 2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.2781444387356595 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.515782501574484 + 2*p3 + -2*p7 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9396529976792185 + 2*p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.081824926047749 + 2*p3 + -1*p6 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.709759990932411 + 2*p3 + -2*p6 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5681673373426173 + 2*p3 + -2*p6 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.194303516862199 + 2*p3 + -3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.194303516862199 + 2*p3 + -3*p6 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.14935777246989115 + 2*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.193779769048625 + 2*p3 + -1*p5 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.0011564806573214 + 2*p3 + -1*p5 + -4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.457645069090094 + 2*p3 + -1*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714450214231296 + 2*p3 + -2*p5 + 4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714436600663129 + 2*p3 + -2*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714517933006272 + 2*p3 + -2*p5 + 4*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.714517933006272 + 2*p3 + -2*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5848699637512778 + 2*p3 + -2*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3152296842875442 + 2*p3 + -2*p5 + -2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4568223378773375 + 2*p3 + -2*p5 + -2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.8416689832434636 + 2*p3 + -3*p5 + 2*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.888366863671848 + 2*p3 + -3*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7422476986670086 + 2*p3 + -3*p5 + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.7554359300938531 + 2*p3 + -3*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.749438455185225 + 2*p3 + -3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.88870929727109 + 2*p3 + -3*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.4810857051106872 + 2*p3 + -4*p5 + 4*p6 + -2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.6226783587004805 + 2*p3 + -4*p5 + 4*p6 + -2*p7 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5989896858982284 + 2*p3 + -4*p5 + 3*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.897770531646985 + 2*p3 + -7*p5 + 10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.897770531646985 + 2*p3 + -7*p5 + 10*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5671534755801342 + 2*p3 + -2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.751987359519788 + 2*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5749660929108362 + 2*p3 + -2*p4 + d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.716558746500629 + 2*p3 + -2*p4 + d + -4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.691645393158887 + 2*p3 + -2*p4 + -2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.687949658467788 + 2*p3 + -2*p4 + -2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.185294484827572 + 2*p3 + -3*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.202803976949429 + 2*p3 + -3*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5728322448690313 + 2*p3 + -4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5610580792021523 + 2*p3 + -4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.256137041601854 + 2*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.728349501293719 + 2*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.586756847703926 + 2*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.398426213604535 + p3 + 3*p5 + -5*p6 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.540018867194329 + p3 + 3*p5 + -5*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.055867325217904 + p3 + 2*p5 + -4*p6 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9142746716281112 + p3 + 2*p5 + -4*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.7381332679866737 + p3 + 2*p5 + -5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4137676492312484 + p3 + 2*p5 + -7*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.555360302821042 + p3 + 2*p5 + -7*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.845143793244525 + p3 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.757569778135658 + p3 + p5 + -4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.705961988445463 + p3 + 2*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.564369334855669 + p3 + 2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.468447452426096 + p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.02766730836846451 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.7190742895515285 + p3 + -1*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5544940789166437 + p3 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.743838417242226 + p3 + -1*p6 + d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5789053010325875 + p3 + -1*p6 + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.72049795462238 + p3 + -1*p6 + -1*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5828574245908034 + p3 + -1*p6 + -6*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.5591118880482036 + p3 + -2*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.4175213288535127 + p3 + -2*p6 + -1*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.2752729805586952 + p3 + -2*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.3371937717609501 + p3 + -4*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.478786425350743 + p3 + -4*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5802331475275047 + p3 + -1*p5 + 4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.716702212565144 + p3 + -1*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.716725250911269 + p3 + -1*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5960796899380618 + p3 + -1*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11854520625640765 + p3 + -1*p5 + 3*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2556024472519676 + p3 + -1*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.740705551234895 + p3 + -1*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5991324453327256 + p3 + -1*p5 + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.11400979366217519 + p3 + -1*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.10124271018383665 + p3 + -1*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.748657620372833 + p3 + -1*p5 + -4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.603885849550532 + p3 + -1*p5 + -4*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.3667486877087125 + p3 + -2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.867083097042554 + p3 + -2*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.867083097042554 + p3 + -2*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.7612501624276553 + p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18358210830517316 + p3 + -2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3251758090925176 + p3 + -2*p5 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.18444220656055596 + p3 + -2*p5 + -3*d + l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.3249332083264904 + p3 + -2*p5 + -3*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5818227934102214 + p3 + -3*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.619199219369555 + p3 + -3*p5 + 2*p6 ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6773568721783181 + p3 + -3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5020561766409328 + p3 + -4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5020561766409328 + p3 + -4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.9047586384424124 + p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7620282047132443 + p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.218588028074448 + p3 + -1*p4 + d + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.07699537448465504 + p3 + -1*p4 + d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.900301242065744 + p3 + -2*p4 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.7382458247267939 + p3 + -2*p4 + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.2873682953062575 + 2*p4 + d + 3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.4289609488960515 + 2*p4 + d + -3*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.6739346305810077 + p4 + d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.815527284170801 + p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.014638983094369 + 6*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.873046329504576 + 6*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.543799599419998 + 3*p5 + -3*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.402206945830205 + 3*p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5714611142086646 + 3*p5 + -4*p6 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.713053767798458 + 3*p5 + -4*p6 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.5199091495595828 + 2*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.6615018031493762 + 2*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.274888343984823 + 2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.818025199396255 + 2*p5 + -4*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5473029733325765 + 2*p5 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.6042857129804804 + 2*p5 + -5*p6 + 4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.46736133403258 + 2*p5 + -5*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3257686804427866 + 2*p5 + -5*p6 + d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.46736133403258 + 2*p5 + -5*p6 + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3257686804427866 + 2*p5 + -5*p6 + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.46736133403258 + 2*p5 + -5*p6 + -1*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.3257686804427866 + 2*p5 + -5*p6 + -2*d + l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.785018945842574 + 2*p5 + -5*p6 + -4*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.446413019685518 + p5 + 6*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.687332160978433 + p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.936438433266262 + p5 + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5189211271683456 + p5 + -6*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.101669477179216 + 2*p6 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.9609147561633051 + 2*p6 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.9740482012482707 + p6 + 3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.1174760685465355 + p6 + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.5705978913572616 + p7 + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.712735436739527 + p7 + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.21295320708943452 + p7 + -2*p8 + 2*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.354546035212153 + p7 + -2*p8 + -2*d + 2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.1092687897803746 + 2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.250861443370168 + 2*p8 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9234153099866559 + 5*p1 + -7*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.718969212232242 + 5*p1 + -13*p3 + 7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.577376558642449 + 5*p1 + -13*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4595914517736013 + 3*p1 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9111754989736616 + 3*p1 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.955030072015939 + 3*p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.57163495750048 + 2*p1 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713227611090272 + 2*p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2061597130039217 + 2*p1 + -2*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06456705941412863 + 2*p1 + -2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9175110611550346 + 2*p1 + -4*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7759184075652412 + 2*p1 + -4*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.191382201756844 + 2*p1 + -24*p2 + 21*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.049789548167051 + 2*p1 + -24*p2 + 21*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7881565157405666 + p1 + 15*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6465638621507737 + p1 + 15*p2 + -16*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.400020946437032 + p1 + p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.258428292847239 + p1 + p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5044167599492044 + p1 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5407820741812752 + p1 + -1*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.682374727771069 + p1 + -1*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.8977387666546 + p1 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1328797869325955 + p1 + -4*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.246474566793596 + p1 + -4*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6784688214447636 + p1 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.820061475034557 + p1 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.512312114384769 + p1 + -5*p2 + 4*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3707194607949755 + p1 + -5*p2 + 4*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4260682146988457 + p1 + -5*p2 + 4*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.984144956466007 + p1 + -25*p2 + 25*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8425523028762147 + p1 + -25*p2 + 25*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.961025776100365 + 47*p2 + -52*p3 + 4*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.102618429690159 + 47*p2 + -52*p3 + 4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.603279364632097 + 44*p2 + -42*p3 + -9*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.461686711042304 + 44*p2 + -42*p3 + -9*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.995984214415669 + 39*p2 + -36*p3 + -5*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8543915608258765 + 39*p2 + -36*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7907031171538352 + 38*p2 + -37*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6491104635640419 + 38*p2 + -37*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.268947741314859 + 29*p2 + -33*p3 + 2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.410540394904653 + 29*p2 + -33*p3 + 2*p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.531207057365176 + 29*p2 + -36*p3 + 4*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3313069592252151 + 26*p2 + -28*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0827710265436714 + 26*p2 + -28*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4728996128150085 + 26*p2 + -28*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.021398834816902 + 26*p2 + -29*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8798061812271087 + 26*p2 + -29*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.021398834816902 + 26*p2 + -29*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8798061812271087 + 26*p2 + -29*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5348018780322419 + 26*p2 + -30*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5348018780322419 + 26*p2 + -30*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.703619748090969 + 25*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5608699412071039 + 24*p2 + -24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.702462594796897 + 24*p2 + -24*p3 + 2*d + -5*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.67098471757087 + 24*p2 + -27*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4427610757620117 + 24*p2 + -29*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.228515286326867 + 23*p2 + -22*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08692263273707358 + 23*p2 + -22*p3 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3815860552508172 + 23*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.52317870884061 + 23*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3645411697758407 + 23*p2 + -25*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.5061338233656345 + 23*p2 + -25*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3136353260158473 + 23*p2 + -26*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2597826938417365 + 22*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2597826938417365 + 22*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5577335930395866 + 22*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.69932624662938 + 22*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2259817408897218 + 21*p2 + -20*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.91482202387817 + 21*p2 + -20*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.954084444128893 + 21*p2 + -21*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8124917905390987 + 21*p2 + -21*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8032626724857943 + 21*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.943767287819894 + 21*p2 + -22*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1409130053824332 + 21*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.338221604655766 + 21*p2 + -23*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1409130053824332 + 21*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4798142582455585 + 21*p2 + -23*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.18489599216607447 + 20*p2 + -15*p3 + -8*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.326488645755868 + 20*p2 + -15*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0324914154176104 + 20*p2 + -18*p3 + d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.174084069007403 + 20*p2 + -18*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.368299578783718 + 20*p2 + -19*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.22670692519392546 + 20*p2 + -19*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5933431797055435 + 20*p2 + -19*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.734935833295337 + 20*p2 + -19*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.738826704295124 + 20*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0314555455099182 + 20*p2 + -21*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.173048199099711 + 20*p2 + -21*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0314555455099182 + 20*p2 + -21*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4455324840812533 + 20*p2 + -25*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8056188754743037 + 19*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6640262218845107 + 19*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.053759299550712 + 19*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.22640271430530284 + 19*p2 + -18*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.714490356804092 + 19*p2 + -19*p3 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0022205824073123857 + 19*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5600522544525448 + 19*p2 + -21*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.701644908042338 + 19*p2 + -21*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.829412783132134 + 19*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6878201295423407 + 19*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9002373630151213 + 19*p2 + -24*p3 + 10*p4 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7586447094253279 + 19*p2 + -24*p3 + 10*p4 + -3*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9274725193624755 + 18*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.841316618264119 + 18*p2 + -15*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6997239646743263 + 18*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 2*d + -3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.570246373547593 + 18*p2 + -16*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.711839027137386 + 18*p2 + -16*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3419257084289571 + 18*p2 + -17*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.48351836201875 + 18*p2 + -17*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.488556246406315 + 18*p2 + -18*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5628604892190034 + 18*p2 + -18*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.762778206686093 + 17*p2 + -15*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6211855530962995 + 17*p2 + -15*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.702065881457918 + 17*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.699403556216926 + 17*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5578109026271334 + 17*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4393165024485928 + 17*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.29772384885879905 + 17*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7663337659433056 + 16*p2 + -13*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.907926419533099 + 16*p2 + -13*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.897020189106603 + 16*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5412084581175376 + 16*p2 + -15*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.68280111170733 + 16*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615505762104801 + 16*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.473913108515008 + 16*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7166941585556341 + 16*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.858286812145427 + 16*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.595390842475567 + 15*p2 + -11*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.096926370403996 + 15*p2 + -11*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.096926370403996 + 15*p2 + -11*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.826656899744918 + 15*p2 + -12*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4322115906346238 + 15*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4322115906346238 + 15*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.1718146173810355 + 15*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.030221963791242 + 15*p2 + -13*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.630810379782614 + 15*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.698042548466221 + 15*p2 + -13*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5564498948764285 + 15*p2 + -13*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.70547503308584 + 15*p2 + -15*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5865409419771375 + 15*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5638823794960461 + 15*p2 + -15*p3 + -6*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.675627983014559 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5340353294247657 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615923768460654 + 15*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4743311148708607 + 15*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.018454098306304 + 14*p2 + -9*p3 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8768614447165103 + 14*p2 + -9*p3 + -2*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4032824517085505 + 14*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.261689798118758 + 14*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.711546509954752 + 14*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8975439539168102 + 14*p2 + -14*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.039136607506602 + 14*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.059187780126556906 + 14*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.890776639770078 + 14*p2 + -16*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7491839861802843 + 14*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.932532254358956 + 14*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7909396007691636 + 14*p2 + -21*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9605124662690372 + 13*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.932541130043192 + 13*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.074133783632985 + 13*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.497583106294263 + 13*p2 + -13*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3559904527044702 + 13*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3923468827539882 + 13*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5069582914093258 + 13*p2 + -13*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.648550944999119 + 13*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.416615021864535 + 13*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2890083727060402 + 13*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.05485831638405977 + 13*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.47698819562578 + 13*p2 + -15*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.469750672781927 + 13*p2 + -19*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.469750672781927 + 13*p2 + -19*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.074507624660445 + 13*p2 + -23*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9329149710706526 + 13*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7624317503312557 + 12*p2 + -7*p3 + -4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6665642796827608 + 12*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.808156933272554 + 12*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2140157975313155 + 12*p2 + -9*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06824952960291146 + 12*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4967929957418855 + 12*p2 + -12*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3552003421520922 + 12*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5722105670877875 + 12*p2 + -12*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5393749897383173 + 12*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.680967643328111 + 12*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.239198621211249 + 12*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.841643003332559 + 12*p2 + -14*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.722469312510825 + 12*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.580876658921032 + 12*p2 + -17*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6740765258491949 + 11*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.815669179438988 + 11*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7122418491287466 + 11*p2 + -11*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.807354613913729 + 11*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.492834214437562 + 11*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4565186165942236 + 11*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.538611765754737 + 11*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.612117030829129 + 11*p2 + -17*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.470524377239336 + 11*p2 + -17*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.794898190543928 + 10*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5564736313542555 + 10*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8085681328443237 + 10*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6669754792545307 + 10*p2 + -6*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.598747949298511 + 10*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6037132364875097 + 10*p2 + -10*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7453058900773035 + 10*p2 + -10*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.19429860444534353 + 10*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1131127199216 + 10*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.04753369311221516 + 10*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5673859534364996 + 10*p2 + -12*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7089786070262925 + 10*p2 + -12*p3 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.484229941253105 + 10*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3422257390256915 + 10*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.248695123705959 + 10*p2 + -14*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.248695123705959 + 10*p2 + -14*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4503084030464106 + 10*p2 + -15*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5810017990283995 + 10*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7225944526181936 + 10*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6671294172945565 + 9*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7123231814718896 + 9*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.721443050412335 + 9*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3013847024598073 + 9*p2 + -10*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1817725764316553 + 9*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.665963562849174 + 9*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5243709092593811 + 9*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4745042515326583 + 9*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.616096905122452 + 9*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.081691906463796 + 9*p2 + -13*p3 + -3*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.22328456005359 + 9*p2 + -13*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.450219740320409 + 9*p2 + -14*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.591812393910202 + 9*p2 + -14*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.722577348391523 + 9*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.58098469480173 + 9*p2 + -14*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.296410505593307 + 9*p2 + -15*p3 + 3*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.438003159183101 + 9*p2 + -15*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.745594925099749 + 9*p2 + -15*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6040022715099567 + 9*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.891314209678009 + 8*p2 + -7*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.748175734966357 + 8*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.569673207421238 + 8*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.722755188943984 + 8*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.231884295381991 + 8*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.294599751989312 + 8*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6464493770501596 + 8*p2 + -12*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.788042030639953 + 8*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2368790616387153 + 8*p2 + -13*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.378471715228509 + 8*p2 + -13*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.555342317431429 + 8*p2 + -13*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.722104189631308 + 8*p2 + -13*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.722643321837249 + 8*p2 + -13*p3 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5810623619534443 + 8*p2 + -13*p3 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.682482423084234 + 8*p2 + -13*p3 + -1*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5425085623756645 + 8*p2 + -13*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.581122750345563 + 8*p2 + -13*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.622914335713667 + 8*p2 + -13*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4738570834460187 + 8*p2 + -14*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615449737035813 + 8*p2 + -14*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.36747230121659 + 8*p2 + -14*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.095878649254024 + 8*p2 + -15*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6291124809946909 + 8*p2 + -15*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.770705134584484 + 8*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4840676171343525 + 8*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.34247496354455975 + 8*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6673413002657487 + 7*p2 + -3*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.808933953855542 + 7*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.954733323551517 + 7*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.954733323551517 + 7*p2 + -3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.76052045726403 + 7*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.728791410162008 + 7*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.022858053614594132 + 7*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0882162707786518 + 7*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.50072190642105 + 7*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.486330619540806 + 7*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.997265992716651 + 7*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.391679502841292 + 7*p2 + -11*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.250086849251499 + 7*p2 + -11*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.620330550289014 + 7*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.311803977526679 + 7*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1702113239368863 + 7*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4740562255136718 + 7*p2 + -13*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4740562255136718 + 7*p2 + -13*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615648879103465 + 7*p2 + -13*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615648879103465 + 7*p2 + -13*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.438213471357965 + 7*p2 + -13*p3 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2966208177681717 + 7*p2 + -13*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.172801260505504 + 7*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.476283274137533 + 7*p2 + -14*p3 + 5*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3346906205477398 + 7*p2 + -14*p3 + 5*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2162902936158813 + 6*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.357882947205675 + 6*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7006774635396407 + 6*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5590848099498475 + 6*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6674039575858952 + 6*p2 + -2*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8089966111756883 + 6*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6963725834446467 + 6*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.926793437245474 + 6*p2 + -5*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2158883527874638 + 6*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3323695156738293 + 6*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712910135699335 + 6*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9026186817482253 + 6*p2 + -7*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.0442113353380185 + 6*p2 + -7*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.284314858776527 + 6*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.4421298071681985 + 6*p2 + -8*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7389998409569225 + 6*p2 + -9*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.597407187367129 + 6*p2 + -9*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.129748500219909 + 6*p2 + -9*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.489037267646481 + 6*p2 + -10*p3 + 3*p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3474610201516571 + 6*p2 + -10*p3 + 3*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.251474735072685 + 6*p2 + -10*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.251474735072685 + 6*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.6748307251105645 + 6*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.688639421086493 + 6*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.338979984209025 + 6*p2 + -11*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.524821578767196 + 6*p2 + -11*p3 + 2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3832289251774029 + 6*p2 + -11*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.5926761573570145 + 6*p2 + -11*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.451083503767221 + 6*p2 + -11*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.332259410892978 + 6*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1906667573031853 + 6*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.474217493936556 + 6*p2 + -12*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.615810147526349 + 6*p2 + -12*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.676904308303276 + 5*p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6175875483449966 + 5*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.763827324099466 + 5*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.570034516071351 + 5*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.578890116668095 + 5*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5574592187828566 + 5*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1863376596231716 + 5*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.715553611384406 + 5*p2 + -7*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5739609577946128 + 5*p2 + -7*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.709931731330807 + 5*p2 + -7*p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5683390777410138 + 5*p2 + -7*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3421440576166983 + 5*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.331892517189259 + 5*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.525330874341244 + 5*p2 + -7*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1394785192702193 + 5*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.3938318343765355 + 5*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.656925209283113 + 5*p2 + -8*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.51533255569332 + 5*p2 + -8*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0348741219157995 + 5*p2 + -8*p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1764667755055926 + 5*p2 + -8*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9725685111084297 + 5*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.027268019527192 + 5*p2 + -8*p3 + -2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8856753659373984 + 5*p2 + -8*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6913457116280024 + 5*p2 + -9*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.366870171122969 + 5*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2556856909589715 + 5*p2 + -9*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.166791568292111 + 5*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0251989147023193 + 5*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.472292395771606 + 5*p2 + -11*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.047520288070242 + 5*p2 + -11*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8085185654935674 + 4*p2 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.666925911903774 + 4*p2 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9965531577585531 + 4*p2 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.1381458113483465 + 4*p2 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6176011619131623 + 4*p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1259321547791816 + 4*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.23264156824948176 + 4*p2 + -3*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.058180950670981 + 4*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9826708258848234 + 4*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.053949574432447 + 4*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5754930078120133 + 4*p2 + -4*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.704545121660377 + 4*p2 + -4*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5680408009718478 + 4*p2 + -5*p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.186390194033657 + 4*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1461153252804857 + 4*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.275220497138109 + 4*p2 + -6*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.275220497138109 + 4*p2 + -6*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3973713366046296 + 4*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4750709599407807 + 4*p2 + -8*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.616663613530575 + 4*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.616013303851281 + 4*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.474420650261488 + 4*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.358826646732227 + 4*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2172339931424343 + 4*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1641993627954668 + 3*p2 + 5*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.30579201638526 + 3*p2 + 5*p3 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.003377752698018 + 3*p2 + 2*p3 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6567742298044994 + 3*p2 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6051655164597775 + 3*p2 + p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.5287665464754783 + 3*p2 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.05912199821039 + 3*p2 + -1*p3 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3073158463585424 + 3*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.007112042168951694 + 3*p2 + -1*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1487046957587443 + 3*p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712206593477856 + 3*p2 + -1*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.570613939888063 + 3*p2 + -1*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3716839467362605 + 3*p2 + -2*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.738375536683484 + 3*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.865812463353835 + 3*p2 + -2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.007405116943628 + 3*p2 + -2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7265125252593614 + 3*p2 + -2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5849198716695685 + 3*p2 + -2*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.225010150088403 + 3*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6725125448047995 + 3*p2 + -3*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.179984835678838 + 3*p2 + -3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.241381870569202 + 3*p2 + -3*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5479101733793454 + 3*p2 + -4*p3 + p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5479101733793454 + 3*p2 + -4*p3 + p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.023650258562074363 + 3*p2 + -4*p3 + 3*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.02812458463248703 + 3*p2 + -4*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.16971723822228 + 3*p2 + -4*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1518084147675665 + 3*p2 + -4*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.542804412680511 + 3*p2 + -5*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5651027137090405 + 3*p2 + -5*p3 + 2*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.706695367298834 + 3*p2 + -5*p3 + 2*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.463947644548604 + 3*p2 + -5*p3 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3221806325665366 + 3*p2 + -5*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.235979544437188 + 3*p2 + -5*p3 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1153805837550081 + 3*p2 + -5*p3 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.450928360993353 + 3*p2 + -5*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.14585332586481176 + 3*p2 + -5*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.287445979454605 + 3*p2 + -5*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.597300207182298 + 3*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.738892860772092 + 3*p2 + -6*p3 + -3*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.652304948192284 + 3*p2 + -6*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.652304948192284 + 3*p2 + -6*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0060227906810988 + 3*p2 + -7*p3 + 4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.758107705607755 + 3*p2 + -7*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.616515052017963 + 3*p2 + -7*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2134459390322223 + 3*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.597755589079094 + 3*p2 + -7*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.07185328544242935 + 3*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4561629354893 + 3*p2 + -7*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.875041283331188 + 3*p2 + -8*p3 + 4*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.831265284098517 + 3*p2 + -8*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3800423030291116 + 3*p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.614210553266896 + 3*p2 + -9*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.831544694315128 + 2*p2 + 3*p3 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7917473476453027 + 2*p2 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7917473476453027 + 2*p2 + p3 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.009940697287658902 + 2*p2 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1515333508774517 + 2*p2 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.749607760620985 + 2*p2 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.891200414210779 + 2*p2 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.082232111362238 + 2*p2 + -1*p3 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9055368722575596 + 2*p2 + -1*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.913961925622787 + 2*p2 + -1*p3 + -3*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.596428930321386 + 2*p2 + -1*p3 + -1*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.738021583911179 + 2*p2 + -1*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8659067111334428 + 2*p2 + -1*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.007499364723236 + 2*p2 + -1*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.576613883752595 + 2*p2 + -2*p3 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.576613883752595 + 2*p2 + -2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713190784643055 + 2*p2 + -2*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712189838317037 + 2*p2 + -2*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5722454736728275 + 2*p2 + -2*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5711279393527755 + 2*p2 + -2*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.708998852845616 + 2*p2 + -2*p3 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5696938023064118 + 2*p2 + -2*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5780483443698583 + 2*p2 + -2*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5703966463961898 + 2*p2 + -2*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8150757504966764 + 2*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.95666840408647 + 2*p2 + -2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4928836412486595 + 2*p2 + -3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.351290987658867 + 2*p2 + -3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.414650653791416 + 2*p2 + -3*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.2730580002016225 + 2*p2 + -3*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.245279548353073 + 2*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.683154706915468 + 2*p2 + -3*p3 + -1*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5415620533256749 + 2*p2 + -3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.7853048307740504 + 2*p2 + -4*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6437121771842564 + 2*p2 + -4*p3 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4755989220395094 + 2*p2 + -4*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.652966112906205 + 2*p2 + -5*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3801201447137506 + 2*p2 + -7*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9922387208442562 + 2*p2 + -8*p3 + 9*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.133831374434051 + 2*p2 + -8*p3 + 9*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.616091669134695 + 2*p2 + -8*p3 + 2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4744990155449025 + 2*p2 + -8*p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.614321207141473 + 2*p2 + -8*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8072846177124076 + p2 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.0247259389733445 + p2 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.883133285383552 + p2 + 3*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8476380092852844 + p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.011395952817971773 + p2 + p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.152988606407765 + p2 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713342453755054 + p2 + p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713342453755054 + p2 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7757456199692936 + p2 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.917338273559087 + p2 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.078227453393538 + p2 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.374395490262159 + p2 + -3*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.041604337034315 + p2 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6336976439709219 + p2 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6336976439709219 + p2 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.729682226212225 + p2 + -1*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.729682226212225 + p2 + -1*p5 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8659887416082864 + p2 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.00758139519808 + p2 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.04340218370016 + p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.9018095301103677 + p2 + -1*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.716742180605014 + p2 + -1*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.713061630278409 + p2 + -1*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5706553041913354 + p2 + -1*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712538555101586 + p2 + -1*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712055447964634 + p2 + -1*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712100128393485 + p2 + -1*p3 + -6*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8138493076313003 + p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.955441961221093 + p2 + -1*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5560629638795778 + p2 + -2*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.697655617469371 + p2 + -2*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.493520337359787 + p2 + -2*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.493520162826862 + p2 + -2*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.3519276837699943 + p2 + -2*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.351927509237069 + p2 + -2*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.285361000631856 + p2 + -2*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.4269536542216485 + p2 + -2*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.909734738174457 + p2 + -2*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.060620571899419 + p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.209613719593619 + p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.21504062087481973 + p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.271950273718649 + p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1303576201288554 + p2 + -3*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.430825135070106 + p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8216318968005513 + p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.231391256864937 + p2 + -4*p3 + 4*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.089798603275143 + p2 + -4*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4735329588072903 + p2 + -4*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.685611789934742 + p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7426018344705545 + p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.478787813115828 + p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.620380466705622 + p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3801683158011056 + p2 + -6*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.400754508321645 + p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2591618547318524 + p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7657038936128937 + 29*p3 + -33*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6241112400231011 + 29*p3 + -33*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.668619596406543 + 20*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1752150168677455 + 19*p3 + -24*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5336064935292343 + 16*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.82681260011083 + 16*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.326638586535247 + 15*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1058898408468303 + 14*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0361548530192297 + 13*p3 + -14*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.834498157471987 + 12*p3 + -16*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.83591449215998 + 11*p3 + -15*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0953721377084618 + 11*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.159998555313791 + 11*p3 + -19*p4 + 3*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0601658711376911 + 10*p3 + -11*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.01396162081167 + 10*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.05762623404479758 + 10*p3 + -13*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.837108995500045 + 10*p3 + -14*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.836790298378631 + 10*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4991467297744916 + 10*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.387725259393024 + 10*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1777288060910764 + 10*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.31932145968087 + 10*p3 + -17*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8149951247835507 + 10*p3 + -19*p4 + 3*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.956586731175793 + 10*p3 + -19*p4 + 3*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.14702636165507713 + 10*p3 + -19*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2886190152448704 + 10*p3 + -19*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7521412890614965 + 9*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5811976079738401 + 9*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6986094144106363 + 9*p3 + -13*p4 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.711932934349461 + 9*p3 + -13*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.840202068000428 + 9*p3 + -13*p4 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.83819476482771 + 9*p3 + -13*p4 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.152489808304178 + 9*p3 + -15*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8056464516764854 + 9*p3 + -17*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6073183800921124 + 9*p3 + -17*p4 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7487378970201077 + 9*p3 + -17*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.611583475178477 + 9*p3 + -19*p4 + 3*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5719362013293738 + 8*p3 + -8*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.210859718644934 + 8*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.248135588144403 + 8*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1301872589972273 + 8*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1632600265920434 + 8*p3 + -15*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1640234336068658 + 8*p3 + -15*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.30789740706194 + 8*p3 + -15*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.307674004917685 + 8*p3 + -15*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.485955007689143 + 8*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6585647460874866 + 7*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7066292108218666 + 7*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.999212358403525 + 7*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.849321579376708 + 7*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9634228112950547 + 7*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.400665496529793 + 6*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0601468470488444 + 6*p3 + -7*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.0527349573144003 + 6*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7059787266096484 + 6*p3 + -8*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6306087602607422 + 6*p3 + -12*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.772201413850536 + 6*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.110157370895832 + 5*p3 + -4*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.706568307329288 + 5*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6692002589503647 + 5*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7462314126846852 + 5*p3 + -6*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.4853012073513456 + 5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5628423377947829 + 5*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5490179338555863 + 5*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6461697668056732 + 5*p3 + -8*p4 + 3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.501779584446075 + 5*p3 + -8*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.03149778247781646 + 5*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.814719039190835 + 5*p3 + -9*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7860755511750974 + 5*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.518199250491404 + 4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.779368599925533 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6377759463357404 + 4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.977821437056474 + 4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.2197779765618246 + 4*p3 + -2*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.861047573956232 + 4*p3 + -2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.861047573956232 + 4*p3 + -2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.702912540678062 + 4*p3 + -4*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5054665584976463 + 4*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7229616274012292 + 4*p3 + -4*p5 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3666757074510298 + 4*p3 + -6*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3666757074510298 + 4*p3 + -6*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9087355286793732 + 4*p3 + -6*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1767922624144562 + 4*p3 + -2*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.318384916004249 + 4*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.209653870664731 + 4*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.2021660591078245 + 4*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7043047813240606 + 4*p3 + -6*p4 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5635430789911419 + 4*p3 + -6*p4 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6741894741467482 + 4*p3 + -6*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4345267953823444 + 4*p3 + -8*p4 + 3*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.434523828322616 + 4*p3 + -8*p4 + 3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.29294164670833467 + 4*p3 + -8*p4 + 3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.434527493514045 + 4*p3 + -8*p4 + 3*p5 + 2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4622888751291923 + 4*p3 + -8*p4 + 3*p5 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2929880724664377 + 4*p3 + -8*p4 + 3*p5 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.434144742809083 + 4*p3 + -8*p4 + 3*p5 + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3206325170217011 + 4*p3 + -8*p4 + 3*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.29289871160873565 + 4*p3 + -8*p4 + 3*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.434469723115804 + 4*p3 + -8*p4 + 3*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.29294025044493305 + 4*p3 + -8*p4 + 3*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.29288021111866447 + 4*p3 + -8*p4 + 3*p5 + -6*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.548976386521072 + 4*p3 + -8*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.632643299068109 + 4*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.757193859709729 + 4*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.1933250767852144 + 3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5066406329871463 + 3*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.350755197073455 + 3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.050229754197671 + 3*p3 + -2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.0495900655318655 + 3*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.349660352033679 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.802610783511858 + 3*p3 + -1*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3136121131367957 + 3*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.059522236201139 + 3*p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1114056388751745 + 3*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.860172648900525 + 3*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5723927794616956 + 3*p3 + -3*p5 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.947476985145008 + 3*p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.493603930132641 + 3*p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.904043244978653 + 3*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9132042866928134 + 3*p3 + -4*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.822685586063247 + 3*p3 + -4*p5 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5029463030577666 + 3*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.828097153941981 + 3*p3 + -3*p4 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6865045003521872 + 3*p3 + -3*p4 + d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.7882373244849346 + 3*p3 + -3*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6466446708951408 + 3*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.265068772547252 + 3*p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.210356016622808 + 3*p3 + -4*p4 + d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.074284363055849 + 3*p3 + -4*p4 + d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.16821050397735 + 3*p3 + -4*p4 + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.165341357219996 + 3*p3 + -4*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.141710297279694 + 3*p3 + -4*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.694264774801963 + 3*p3 + -5*p4 + 4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.69028018811966 + 3*p3 + -5*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.695653882353626 + 3*p3 + -5*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.659216792597715 + 3*p3 + -5*p4 + -4*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7989412457561733 + 3*p3 + -5*p4 + -4*p5 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.0896430944387907 + 3*p3 + -8*p4 + 3*p5 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8104660038729423 + 2*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8104660038729423 + 2*p3 + 2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3627834486861572 + 2*p3 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.051278680081486 + 2*p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3470163357531995 + 2*p3 + 2*p5 + -8*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7911095788416747 + 2*p3 + p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9327022324314673 + 2*p3 + p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.091483884702552 + 2*p3 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.159025891819972 + 2*p3 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.020240625826962 + 2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6016732956577786 + 2*p3 + -2*p7 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.158110300592692 + 2*p3 + -1*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.931023391725658 + 2*p3 + -1*p6 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.806866445321946 + 2*p3 + -4*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.8700602541856552 + 2*p3 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9592568849034695 + 2*p3 + -1*p5 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1541703688442904 + 2*p3 + -1*p5 + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4384055981153432 + 2*p3 + -1*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4384055981153432 + 2*p3 + -1*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8860355933966934 + 2*p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.027628246986486 + 2*p3 + -2*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.299168300344383 + 2*p3 + -2*p5 + p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.715814887173429 + 2*p3 + -2*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5727793698910126 + 2*p3 + -2*p5 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.572829809906395 + 2*p3 + -2*p5 + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.67027732712672 + 2*p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.737504442853814 + 2*p3 + -2*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.722401934303381 + 2*p3 + -2*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.37085056051675 + 2*p3 + -2*p5 + -1*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.591891074266201 + 2*p3 + -3*p5 + 2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.888366863671848 + 2*p3 + -3*p5 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7479826760561363 + 2*p3 + -3*p5 + 2*d + -5*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.899037806718542 + 2*p3 + -3*p5 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.8884759467500984 + 2*p3 + -3*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.887218437024036 + 2*p3 + -3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.47018471917026433 + 2*p3 + -4*p5 + 4*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.622996000126027 + 2*p3 + -4*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.751340540498998 + 2*p3 + -4*p5 + 2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.751208942673398 + 2*p3 + -4*p5 + 2*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.057355401436472 + 2*p3 + -4*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.059503203613976 + 2*p3 + -4*p5 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5168880016210142 + 2*p3 + -5*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.858787181045341 + 2*p3 + -5*p5 + 4*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5832628645760416 + 2*p3 + -2*p4 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5620574632301611 + 2*p3 + -2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.057562188959566 + 2*p3 + -3*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.204050491101203 + 2*p3 + -3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5699721738237881 + 2*p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5633430642588634 + 2*p3 + -4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5358049102550464 + 2*p3 + -4*p4 + -3*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.002616125005715 + 2*p3 + -6*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.871679596160606 + 2*p3 + -6*p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.7300869425708125 + 2*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.892408514122375 + 2*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.774568437880407 + p3 + 2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.736117263662645 + p3 + p4 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.6110689351183565 + p3 + 2*p5 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.765239827561422 + p3 + 2*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2336379767194453 + p3 + 2*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.743111670640013 + p3 + 2*p5 + -5*p6 + d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.8886705339650627 + p3 + p5 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7071880567500384 + p3 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2112389701930755 + p3 + p5 + -1*p6 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06964631660328252 + p3 + p5 + -1*p6 + d + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.4214001570814614 + p3 + p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7564459691286154 + p3 + p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.429494845114236 + p3 + p7 + -2*p8 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.364976488884555 + p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.363425065712457 + p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.13987016265604998 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2919352898616347 + p3 + d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.06493846547895302 + p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.7349625283345755 + p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.885445880635712 + p3 + -1*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.263835514399476 + p3 + -2*p7 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3995084922736967 + p3 + -1*p6 + d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.724884141565568 + p3 + -1*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.72444414406114 + p3 + -1*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4297327249929666 + p3 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.2840167310453365 + p3 + -2*p6 + d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4244321600546597 + p3 + -2*p6 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4175211543205875 + p3 + -2*p6 + -1*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.28238798978737534 + p3 + -2*p6 + -4*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.469368628706982 + p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8391604385062053 + p3 + -5*p6 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8520636576661995 + p3 + -5*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5209725871711395 + p3 + -1*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.727350989930336 + p3 + -1*p5 + d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.743751848911327 + p3 + -1*p5 + -2*d + 4*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.741396352552835 + p3 + -1*p5 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.741215710975254 + p3 + -1*p5 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.754769065281616 + p3 + -1*p5 + -3*d + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9426523544970875 + p3 + -1*p5 + -5*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8010597009072942 + p3 + -1*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8413843115441467 + p3 + -1*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.160828276341873 + p3 + -2*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.513180415687636 + p3 + -2*p5 + 4*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3715877620978425 + p3 + -2*p5 + 4*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6196589135995803 + p3 + -2*p5 + p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.761251567189373 + p3 + -2*p5 + p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.3373208572254454 + p3 + -2*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7786789948431204 + p3 + -2*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.242468695592735 + p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.6320509173233485 + p3 + -2*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.763604279519379 + p3 + -3*p5 + 3*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.8452587934455993 + p3 + -3*p5 + p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.37935918115988104 + p3 + -3*p5 + -1*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.752882721924377 + p3 + -4*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.223196552967706 + p3 + -4*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.922282093198286 + p3 + -4*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.87295385254917 + p3 + -4*p5 + 2*p6 ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6206506096805633 + p3 + -5*p5 + 5*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.762243263270356 + p3 + -5*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7399749224167448 + p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.117661405516464 + p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.117661405516464 + p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.00269901114855 + p3 + -2*p4 + 4*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8735919194287494 + p3 + -2*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.99039845417927 + p3 + -2*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1986256502218375 + p3 + -2*p4 + -3*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.8492278212026093 + p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.1453844068847 + p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.293254252174 + p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.469245766025958 + p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.428804392862148 + 2*p4 + -1*d + l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.9727811007096396 + p4 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.10046446787037239 + p4 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.9946925047345845 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.5323891263759684 + 3*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.6815277109867592 + 3*p5 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.336744558004753 + 2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.7485701453840412 + 2*p5 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.890162798973834 + 2*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.71315535445924 + 2*p5 + -6*p6 + 3*p7 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5715627008694473 + 2*p5 + -6*p6 + 3*p7 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.3231225782655214 + 2*p5 + -6*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.4647152318553145 + 2*p5 + -6*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5430679319026124 + p5 + 3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.956347612569953 + p5 + d + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.62392189729421 + p5 + -2*p6 + 2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.4938440534444491 + p5 + -2*p6 + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.9554763272107243 + 3*p6 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.097068980800518 + 3*p6 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 6.135004410224314 + p6 + l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.993411756634522 + p6 + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3779271640035695 + 4*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1855468254441432 + 4*p1 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3036141860463046 + 4*p1 + -3*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3271394790339364 + 4*p1 + -3*p3 + -2*d + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3046463737659337 + 4*p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.994809092728618 + 4*p1 + -5*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8532164391388255 + 4*p1 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.11458714857873492 + 3*p1 + -1*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.10235378678565625 + 3*p1 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.256179802168528 + 3*p1 + -1*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.973798819193111 + 3*p1 + -4*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8443348076412764 + 3*p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.8912406888249159 + 3*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.023139434683282 + 2*p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7881565157405666 + p1 + 15*p2 + -16*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6465638621507737 + p1 + 15*p2 + -16*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1511366290401575 + p1 + -4*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.228125047702755 + p1 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.059482791760044 + p1 + -28*p2 + 26*p3 + -2*d + 2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.917890138170251 + p1 + -28*p2 + 26*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0832178308321818 + 26*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.993783886325996 + 26*p2 + -29*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5348018780322419 + 26*p2 + -30*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.464401238624564 + 26*p2 + -32*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.605993892214357 + 26*p2 + -32*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7038928921189065 + 25*p2 + -27*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4443870159948526 + 24*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.228515286326867 + 23*p2 + -22*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3664633178776953 + 23*p2 + -22*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08692263273707358 + 23*p2 + -22*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7933505900995519 + 23*p2 + -23*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.038776154524483214 + 23*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.778476902712373 + 23*p2 + -24*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.05171881812557237 + 23*p2 + -24*p3 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1877648153525273 + 23*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.920069556302166 + 23*p2 + -24*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.200956388399901 + 23*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.205070295481461 + 23*p2 + -27*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.063477641891667 + 23*p2 + -27*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.559500913440156 + 23*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.701093567029949 + 23*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5192473292055433 + 22*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.93214164967236 + 22*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3825629330297917 + 22*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.582628637420816 + 22*p2 + -24*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.299452980542016 + 22*p2 + -28*p3 + 7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1578603269522234 + 22*p2 + -28*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.687243647290407 + 21*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.032722497010574 + 21*p2 + -19*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.22571697444219427 + 21*p2 + -20*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.367309628031987 + 21*p2 + -20*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.711410374273097 + 21*p2 + -21*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9443683452210148 + 21*p2 + -22*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.981805334105393 + 21*p2 + -23*p3 + p7 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8402126805155996 + 21*p2 + -23*p3 + p7 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.576112101592646 + 21*p2 + -23*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.561221982615548 + 21*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.702814636205341 + 21*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.610070623782849 + 20*p2 + -12*p3 + -15*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4684779701930557 + 20*p2 + -12*p3 + -15*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.017942699838836 + 20*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1606404789143583 + 20*p2 + -19*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2429981859962074 + 20*p2 + -19*p3 + -3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.707428754650522 + 20*p2 + -20*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712456001027967 + 20*p2 + -20*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.729198420943572 + 20*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708633474381732 + 20*p2 + -20*p3 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6122243515814936 + 20*p2 + -21*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5593508151244846 + 20*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.700943468714278 + 20*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.701779821993517 + 19*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.561774047254588 + 19*p2 + -21*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8060840057199603 + 18*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3781530096087775 + 18*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -4*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.6282601046796 + 18*p2 + -18*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.708878948726003 + 18*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.567286295136211 + 18*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.546887069870143 + 18*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.6884797234599365 + 18*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.369331417437498 + 17*p2 + -16*p3 + -2*d + 3*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2277387638477045 + 17*p2 + -16*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.4845125100590035 + 17*p2 + -17*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3429198564692097 + 17*p2 + -17*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5709363022009066 + 17*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5772886025464647 + 17*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.039478824081336135 + 17*p2 + -18*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.546336443986089 + 17*p2 + -22*p3 + 11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4047437903962954 + 17*p2 + -22*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.06512050331993602 + 16*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.06515767883300351 + 16*p2 + -15*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.100987751573387 + 16*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.148970177334606 + 16*p2 + -16*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.614697151062352 + 15*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1693145652688951 + 15*p2 + -12*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.310907218858688 + 15*p2 + -12*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.217235938499561 + 15*p2 + -13*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.075123193789308 + 15*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.496216147427468 + 15*p2 + -13*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2299436382917489 + 15*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.375262395301625 + 15*p2 + -14*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23366974171183158 + 15*p2 + -14*p3 + -3*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3416935881367584 + 15*p2 + -15*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7109468148237665 + 15*p2 + -15*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.33676424623203427 + 14*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26367439501456696 + 14*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.40526704860436 + 14*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.16169380211457 + 14*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8172926677125598 + 14*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7531689219284377 + 14*p2 + -12*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.639833898050033 + 14*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.009748762059839 + 14*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.616404083070803 + 14*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4748114294810093 + 14*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0208945752027336 + 13*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.592812782644179 + 13*p2 + -12*p3 + -1*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.711232176156468 + 13*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.711755949464991 + 13*p2 + -13*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.655508359494661 + 13*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.5139157059048673 + 13*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4486524346521183 + 13*p2 + -18*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.590245088241912 + 13*p2 + -18*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4838543378997593 + 13*p2 + -22*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.342261684309966 + 13*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0337229112395008 + 12*p2 + -7*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.175315564829294 + 12*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4174274471363884 + 12*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.559020100726182 + 12*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5705799059676493 + 12*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5707865529510854 + 12*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.390430196162715 + 12*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8792153872753086 + 12*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04935511871959645 + 12*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.65573560136327 + 12*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.514142947773477 + 12*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3718017564607705 + 11*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5623492822810943 + 11*p2 + -11*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.689029842741848 + 11*p2 + -12*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.362865862220119 + 11*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.237340892755427 + 11*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.06245329115703829 + 11*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.528190945386488 + 11*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3865982917966946 + 11*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7694137484743 + 10*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.333876990542043 + 10*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.042447280073128084 + 10*p2 + -11*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.670659039132448 + 10*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.529066385542655 + 10*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.2498153100131555 + 9*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23205583575251248 + 9*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.2320361135319649 + 9*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.373648489342305 + 9*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3720974152360585 + 9*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3342595327208138 + 9*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712079533508311 + 9*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7661335766781017 + 9*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.11980079612029237 + 9*p2 + -10*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.039149305918559606 + 9*p2 + -10*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.042469794820478815 + 9*p2 + -10*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8934363300205583 + 9*p2 + -10*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1159689512424884 + 9*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4341913261034773 + 9*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3757632878003139 + 9*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.638625938678095 + 9*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.238825844377973 + 8*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.689649443124623 + 8*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3322777113551743 + 8*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712586900721866 + 8*p2 + -8*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.733859846309799 + 8*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.10598197723470207 + 8*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04249859275313673 + 8*p2 + -9*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3768026313698765 + 8*p2 + -10*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4059489317464808 + 8*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3768008860406244 + 8*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.785679195400286 + 8*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.8705447915792766 + 8*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.26388034386630227 + 8*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.396781964411181 + 8*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.335751814726219 + 8*p2 + -14*p3 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.370235157422497 + 8*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9884483723110671 + 7*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.1300410259008595 + 7*p2 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7003109443967217 + 7*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5587182908069288 + 7*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04255217436117295 + 7*p2 + -8*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9341105301065853 + 7*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3774984941426467 + 7*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.51909114773244 + 7*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.392339586364397 + 7*p2 + -11*p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2507469327746037 + 7*p2 + -11*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.113727233354594 + 7*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1692320196935924 + 7*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.064201280894494 + 7*p2 + -13*p3 + 3*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9226086273047005 + 7*p2 + -13*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1965342051825398 + 7*p2 + -19*p3 + 11*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.338126858772333 + 7*p2 + -19*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.680120460509192 + 6*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.828693707480312 + 6*p2 + -6*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04266335183452499 + 6*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.042617500665098 + 6*p2 + -7*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1447452418176707 + 6*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7969800107773906 + 6*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5442545982576763 + 6*p2 + -10*p3 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.40280872685797603 + 6*p2 + -10*p3 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8713006596850479 + 6*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.012893313274841 + 6*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7009762639075823 + 5*p2 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.559383610317789 + 5*p2 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6411519622028226 + 5*p2 + -1*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4995593086130297 + 5*p2 + -1*p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0008304446547323 + 5*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.373892835437585 + 5*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23230018184779166 + 5*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.47309805675096 + 5*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712732286648557 + 5*p2 + -5*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.55064475525137 + 5*p2 + -6*p3 + p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04289164090068585 + 5*p2 + -6*p3 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.045652802767241 + 5*p2 + -6*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.904711156988442 + 5*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9048952892245268 + 5*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1810756664613344 + 5*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3398520912429792 + 5*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.386319388182226 + 5*p2 + -7*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.978538077745659 + 5*p2 + -7*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.5279043623233095 + 5*p2 + -7*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.525330874341244 + 5*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.501554428474251 + 5*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.560675894587548 + 5*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4191596864189933 + 5*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.718821906443374 + 5*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5772292528535806 + 5*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4743414123134473 + 5*p2 + -11*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.61593406590324 + 5*p2 + -11*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4919697698556824 + 5*p2 + -13*p3 + 6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.35037711626588924 + 5*p2 + -13*p3 + 6*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7012617997732082 + 4*p2 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5596691461834152 + 4*p2 + p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6769076244288547 + 4*p2 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6630247519597163 + 4*p2 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8046174055495094 + 4*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.374530229680413 + 4*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.608259636157713 + 4*p2 + -3*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23214921086749415 + 4*p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.899903647563823 + 4*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.716075464830753 + 4*p2 + -4*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5719224132282834 + 4*p2 + -4*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7444885268936439 + 4*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.886081180483436 + 4*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6133947523812475 + 4*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.687870944118523 + 4*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.350219006432292 + 4*p2 + -5*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.491811660022085 + 4*p2 + -5*p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.764732634880793 + 4*p2 + -5*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.707448127805218 + 4*p2 + -5*p3 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.047324130058951 + 4*p2 + -5*p3 + d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.04654833120644 + 4*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.159839372787693 + 4*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.1429412440078592 + 4*p2 + -5*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3119240306842668 + 4*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.768592413524945 + 4*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6269997599351517 + 4*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6176433988810605 + 3*p2 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7138742300831868 + 3*p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.343450445060133 + 3*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.006047791380985 + 3*p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0730924947062954 + 3*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8857837593822637 + 3*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.051287947323155 + 3*p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5711553410220318 + 3*p2 + -3*p3 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.703061242730331 + 3*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.559616437240005 + 3*p2 + -3*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7012090908297983 + 3*p2 + -3*p3 + -3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.150194691839489 + 3*p2 + -4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1487415222059623 + 3*p2 + -4*p3 + 5*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.905574047770627 + 3*p2 + -4*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.286568610937944 + 3*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.044281323041023 + 3*p2 + -4*p3 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3997437626568654 + 3*p2 + -5*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.583544037118538 + 3*p2 + -5*p3 + 2*p5 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.726718831675264 + 3*p2 + -5*p3 + 2*p5 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5528328745345954 + 3*p2 + -5*p3 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.232993128550732 + 3*p2 + -5*p3 + 3*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.23651223592153 + 3*p2 + -5*p3 + 3*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.094919582331736 + 3*p2 + -5*p3 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0912582306269023 + 3*p2 + -5*p3 + 3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.331957268904508 + 3*p2 + -5*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.943100738080242 + 3*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.590175964705216 + 3*p2 + -5*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2199921454576774 + 3*p2 + -6*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1400082436948327 + 3*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.284637029559812 + 3*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0061882478941877 + 3*p2 + -7*p3 + 4*p4 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0061957528099712 + 3*p2 + -7*p3 + 4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.147609510151435 + 3*p2 + -7*p3 + 4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.147615618803817 + 3*p2 + -7*p3 + 4*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7567014683344742 + 3*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8026111410760253 + 3*p2 + -8*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.5236806570351678 + 3*p2 + -8*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.579565410050642 + 3*p2 + -9*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8088260925077684 + 2*p2 + 4*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6672334389179754 + 2*p2 + 4*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.701784874950031 + 2*p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5601922213602379 + 2*p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.017165853788773 + 2*p2 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.369353234053148 + 2*p2 + -1*p3 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.7871241194947454 + 2*p2 + -1*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.928716773084539 + 2*p2 + -1*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9600417679664077 + 2*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.713721364735663 + 2*p2 + -2*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.714964562761858 + 2*p2 + -2*p3 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5774455076462195 + 2*p2 + -2*p3 + -6*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.882214228992718 + 2*p2 + -2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.504803865478981 + 2*p2 + -3*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.646396519068773 + 2*p2 + -3*p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.535592886744196 + 2*p2 + -3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.16355587689689 + 2*p2 + -3*p3 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.002558303617573288 + 2*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.012559214764425996 + 2*p2 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.062214057506489 + 2*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.026021986482609453 + 2*p2 + -3*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.681246014845487 + 2*p2 + -3*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4763874617955604 + 2*p2 + -3*p3 + -3*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.617980115385353 + 2*p2 + -3*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.540088297305291 + 2*p2 + -3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.696750655753895 + 2*p2 + -4*p3 + 2*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.555158002164102 + 2*p2 + -4*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.546563502823457 + 2*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4049708492336634 + 2*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.83771895408035 + 2*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.369922926517632 + 2*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.762561594329287 + 2*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1882412732416887 + 2*p2 + -5*p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.219122630922651 + 2*p2 + -5*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.17351787569974 + 2*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.924008721932334 + 2*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.065601375522127 + 2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.175066523341668 + 2*p2 + -8*p3 + 9*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.194356242802242 + p2 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6831330648327434 + p2 + 3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5415404112429502 + p2 + 3*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.04834928547167212 + p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.628169845662322 + p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.357877511190043 + p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.769762499252115 + p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.508701368729926 + p2 + 2*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.765228998021744 + p2 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.200079517987065 + p2 + p3 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.1146250732134035 + p2 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.0009487609813841175 + p2 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.23278241632011773 + p2 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.268325922993957 + p2 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9096815056322707 + p2 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9035869904172324 + p2 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.720316265847248 + p2 + -1*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5787236122574546 + p2 + -1*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712764400706793 + p2 + -1*p3 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.570960213211659 + p2 + -1*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712621807306906 + p2 + -1*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.659854569899661 + p2 + -2*p3 + p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5182619163098672 + p2 + -2*p3 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.049711915008604 + p2 + -2*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.908730301189934 + p2 + -2*p3 + -3*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.689093547259546 + p2 + -3*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.636436265595177 + p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.129216532362218 + p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.936537261393507 + p2 + -4*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.620385353627527 + p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.464625513433445 + p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.336702844635631 + p2 + -6*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.614399223359036 + p2 + -7*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1659185291053147 + 19*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6736936176079404 + 19*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.653672081592004 + 18*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1782663759990073 + 18*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.128199005408305 + 16*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.042612562753291956 + 16*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5415442509673045 + 15*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.028788167312412 + 14*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.05134479406686999 + 13*p3 + -16*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6831587041761142 + 13*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.82509047523957 + 13*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.294578625007047 + 13*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.592688889762237 + 12*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.259563838051854 + 11*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.51404188471147 + 11*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.823199236462108 + 11*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1816575422373157 + 11*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.160000475175969 + 11*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0184078215861756 + 11*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7321574436590867 + 11*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5604969558476361 + 10*p3 + -12*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.623061100907126 + 10*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1688869850971066 + 10*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7587763157492449 + 10*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2312254165927303 + 10*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2910303621394252 + 10*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.058584070738292054 + 9*p3 + -12*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6887024019775407 + 9*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7736960883269932 + 9*p3 + -15*p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6638319667387637 + 9*p3 + -17*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.799931545573755 + 9*p3 + -17*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4699885526606569 + 9*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.61158120625045 + 9*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.358087316762766 + 8*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.708472453044898 + 8*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.298735109624038 + 8*p3 + -13*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6055905126309546 + 8*p3 + -14*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.747183166220748 + 8*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.868266081209556 + 7*p3 + -8*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.196163165180199 + 7*p3 + -10*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.060445289852618815 + 7*p3 + -10*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7697012127004204 + 7*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6147259150017435 + 7*p3 + -13*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6363997627188593 + 7*p3 + -13*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.755837904915538 + 7*p3 + -13*p4 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.065785167190679 + 6*p3 + -8*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.722556919540959 + 6*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.564646518635836 + 6*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.155960404020086 + 6*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.0551349765654505 + 6*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5501822345012749 + 6*p3 + -8*p4 + 2*d + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.13186870070028195 + 6*p3 + -9*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.816388795686218 + 6*p3 + -10*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.202919849815128 + 6*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3753304631424523 + 6*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6977191049625604 + 5*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.898542490775143 + 5*p3 + -4*p4 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.5543640858806365 + 5*p3 + -4*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0776043283589924 + 5*p3 + -6*p4 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0787812038736122 + 5*p3 + -6*p4 + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.896112460359275 + 5*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4014733839455917 + 5*p3 + -6*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5763717725920758 + 5*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7801330541379063 + 5*p3 + -7*p4 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6935887917860324 + 5*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.624295380757503 + 5*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801873232864915 + 5*p3 + -8*p4 + 3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.05369487990468035 + 5*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1732319822699466 + 5*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.835088602357936 + 5*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.826529507706156 + 5*p3 + -9*p4 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6644885596033638 + 4*p3 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.114131451609356 + 4*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8689177701556168 + 4*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1470605786067327 + 4*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.187739691109615 + 4*p3 + -2*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.237959271407725 + 4*p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.818250538399321 + 4*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.557828181386728 + 4*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.249630994745829 + 4*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.1174020325929845 + 4*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7686199727304932 + 4*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.131301860250817 + 4*p3 + -6*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5325907119045736 + 4*p3 + -6*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5330195393017887 + 4*p3 + -6*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1805602707332197 + 4*p3 + -7*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.29293449085840145 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.434483860282745 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6938872600847565 + 4*p3 + -8*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6970593960002565 + 4*p3 + -8*p4 + 2*p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5554667424104633 + 4*p3 + -8*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7400086242679413 + 4*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.1504266460970785 + 4*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0860424716936095 + 4*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7334838938906025 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.491570962121602 + 3*p3 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.4320233036016 + 3*p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.902269964963677 + 3*p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.893981587875515 + 3*p3 + -2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.940902827956571 + 3*p3 + -3*p5 + p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7624676956155296 + 3*p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2827360339351728 + 3*p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7534151878858941 + 3*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.438873895448603 + 3*p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.472540249522022 + 3*p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.004351646420631 + 3*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.129413039439359 + 3*p3 + -6*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9106166530454893 + 3*p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.827904120526711 + 3*p3 + -3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.196140658931165 + 3*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0687628394342394 + 3*p3 + -4*p4 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0475056018095747 + 3*p3 + -4*p4 + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.189098255399368 + 3*p3 + -4*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.669099063847016 + 3*p3 + -4*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.6892384010891446 + 3*p3 + -5*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.5507178760487119 + 3*p3 + -5*p4 + -4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.187320463023286 + 3*p3 + -6*p4 + 2*p5 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0457878487597618 + 3*p3 + -6*p4 + 2*p5 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2814858545919696 + 3*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.03477760520816421 + 3*p3 + -6*p4 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.075255315213683 + 3*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9508389703915419 + 3*p3 + -7*p4 + -1*d + 4*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9103693228938486 + 3*p3 + -7*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.075879253424638 + 3*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0907539965076847 + 3*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.9307922931360603 + 2*p3 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.129126307338207 + 2*p3 + -1*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6357421226567082 + 2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.552934976295837 + 2*p3 + -2*p7 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708931925683822 + 2*p3 + -2*p6 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708931925683822 + 2*p3 + -2*p6 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.636390887034624 + 2*p3 + -2*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1943052621914507 + 2*p3 + -3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1941530694806772 + 2*p3 + -3*p6 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6915462329624233 + 2*p3 + -4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.704870076472148 + 2*p3 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.118352398363963 + 2*p3 + -1*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9281957838045014 + 2*p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.059270534228051 + 2*p3 + -1*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.026810551733611 + 2*p3 + -1*p5 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.977601708601965 + 2*p3 + -1*p5 + -5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4125644277432403 + 2*p3 + -2*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.332778114248354 + 2*p3 + -2*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.713976008273528 + 2*p3 + -2*p5 + 6*d + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.714515315012394 + 2*p3 + -2*p5 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5708444978822516 + 2*p3 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.694539672657469 + 2*p3 + -2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3205562546317056 + 2*p3 + -2*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.702019247173624 + 2*p3 + -3*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.939524532947955 + 2*p3 + -3*p5 + 2*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.111938653930418 + 2*p3 + -3*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.737376684752568 + 2*p3 + -3*p5 + p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.886778963118384 + 2*p3 + -3*p5 + 6*d + -4*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.888419223549408 + 2*p3 + -3*p5 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.8984388097192575 + 2*p3 + -3*p5 + d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.901322617242328 + 2*p3 + -3*p5 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7392190288160227 + 2*p3 + -3*p5 + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.543182101930642 + 2*p3 + -4*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.7100935318507835 + 2*p3 + -4*p5 + 3*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.74496660656903 + 2*p3 + -4*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.8379036099152113 + 2*p3 + -4*p5 + p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.9188149796425658 + 2*p3 + -4*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.086451087264768 + 2*p3 + -4*p5 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4781401214304135 + 2*p3 + -5*p5 + 5*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.880275700290846 + 2*p3 + -5*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6880602953457315 + 2*p3 + -5*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.0871041639759147 + 2*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.36516406928756084 + 2*p3 + -2*p4 + 2*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.719924613963101 + 2*p3 + -2*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.716488409731774 + 2*p3 + -2*p4 + d + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0883555565512777 + 2*p3 + -3*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0667216768740324 + 2*p3 + -3*p4 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.7228642635239173 + 2*p3 + -4*p4 + 3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.3157724731865977 + 2*p3 + -5*p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8865887137316 + 2*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.887006894620378 + 2*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6968302257711527 + p3 + 2*p4 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7207728269829365 + p3 + p4 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6015115121344357 + p3 + 2*p5 + -5*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.881090769051526 + p3 + 2*p5 + -5*p6 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7659791150393005 + p3 + 2*p5 + -6*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7650120281007704 + p3 + 2*p5 + -6*p6 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.907571768629094 + p3 + 2*p5 + -6*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.4491995953726184 + p3 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7244193433891284 + p3 + p5 + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8886703594321377 + p3 + p5 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.7290517962897716 + p3 + p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.261131135221827 + p3 + p6 + d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1195384816320342 + p3 + p6 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.463005341285452 + p3 + p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.062160275870578 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.208004551518229 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.650521247191695 + p3 + -1*p7 ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1921284875483638 + p3 + -3*p7 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.585534236064587 + p3 + -1*p6 + -3*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4175215033864379 + p3 + -2*p6 + 3*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.4184540583007283 + p3 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.559114156976231 + p3 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4175190599254851 + p3 + -2*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.41751871085963466 + p3 + -2*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.033843696522055 + p3 + -3*p6 + d + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.175436350111848 + p3 + -3*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.864009023136066 + p3 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.583777911238305 + p3 + -1*p5 + 3*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.270570914515847 + p3 + -1*p5 + d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7348890669697 + p3 + -1*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.592738257085119 + p3 + -1*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.11679586274713374 + p3 + -1*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.144265450806297 + p3 + -2*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.918060665336487 + p3 + -2*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.363462556298108 + p3 + -2*p5 + 4*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.764347083150711 + p3 + -2*p5 + p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18368037034206044 + p3 + -2*p5 + 3*d + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18368037034206044 + p3 + -2*p5 + 3*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18367897407865882 + p3 + -2*p5 + -1*d + -2*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.766049311268498 + p3 + -3*p5 + 3*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.6244566576787043 + p3 + -3*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.4679128240829433 + p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.43043257652806594 + p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.8271394832830947 + p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.6968869319752095 + p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.0017231720688107 + p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7179197542513345 + p3 + -1*p4 + 4*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.720750678298069 + p3 + -1*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.7237004592668645 + p3 + -1*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.7791703135258734 + p3 + -2*p4 + p5 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.920762967115666 + p3 + -2*p4 + p5 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.976962219964033 + p3 + -2*p4 + p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.011486394866491 + p3 + -2*p4 + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9761766387693944 + p3 + -2*p4 + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.336423417422386 + p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.9791494580843163 + p3 + -2*p4 + -3*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.639058090699205 + 2*p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.427978503060103 + 2*p4 + d + l + -3*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.428804392862148 + 2*p4 + -1*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.238530177104368 + p4 + 2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.083431642163868 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.231169076451157 + p4 + d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2501440960509647 + p4 + -4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 6.131923031429919 + 4*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.666906398209419 + 4*p5 + -10*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5253137446196254 + 4*p5 + -10*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.2548533434386955 + 4*p5 + -10*p6 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.8339549855138157 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.290047052137169 + 3*p5 + -2*p6 + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1484543985473756 + 3*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.316987605405102 + 3*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.2579270342860662 + 3*p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.424342965231566 + 2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.18155525744483214 + 2*p5 + -6*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3367714275769176 + 2*p5 + -6*p6 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.653739285266522 + p5 + 4*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3970130205091953 + p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.4672604285068644 + p5 + d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5885653493765257 + p5 + -1*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.628612129091412 + p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.439930875341928 + p8 + 2*d + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9878054100112656 + p8 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.571235800700549 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712437151472045 + d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8219415352064887 + 4*p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.381613997515482 + 3*p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.144359673090955 + 3*p1 + -2*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5785721176783818 + 3*p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2032886208894411 + p1 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.234413652028931 + p1 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.023892369722593 + p1 + -5*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.42337097437449694 + p1 + -7*p2 + 9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.5649636279642904 + p1 + -7*p2 + 9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.567544088765047 + 29*p2 + -34*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.70913674235484 + 29*p2 + -34*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.47505418778332853 + 27*p2 + -32*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3313069592252151 + 26*p2 + -28*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.4728996128150085 + 26*p2 + -28*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.883245727078963 + 25*p2 + -26*p3 + d + 2*l + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.74165307348917 + 25*p2 + -26*p3 + d + -3*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.582711723591529 + 25*p2 + -30*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.704449477617367 + 24*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.904150233661801 + 24*p2 + -25*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1938343723592633 + 23*p2 + -24*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7878095187903205 + 22*p2 + -22*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.03905575627065271 + 22*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.358003523962037 + 22*p2 + -24*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.24200194356085258 + 21*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5995616217957906 + 21*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.815636175719492 + 20*p2 + -20*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8040890773882976 + 20*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.957228829309286 + 20*p2 + -20*p3 + -3*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.018343951033869 + 19*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9002373630151213 + 19*p2 + -24*p3 + 10*p4 + d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7586447094253279 + 19*p2 + -24*p3 + 10*p4 + -3*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5571085906344475 + 19*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.698701244224241 + 19*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.841316618264119 + 18*p2 + -15*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6997239646743263 + 18*p2 + -15*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 2*d + -3*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 2*d + -5*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -6*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3688301588763245 + 18*p2 + -17*p3 + d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5731689273800578 + 18*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.231251805057703 + 18*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5145921870246242 + 18*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.195173222926785 + 17*p2 + -14*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0535805693369913 + 17*p2 + -14*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1005388358931407 + 17*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.593017509765438 + 17*p2 + -16*p3 + -1*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.709275662064982 + 17*p2 + -17*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.707114246319313 + 16*p2 + -14*p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.201796938967661 + 16*p2 + -14*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0602042853778686 + 16*p2 + -14*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.342367983359729 + 16*p2 + -16*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.71105502523739 + 16*p2 + -16*p3 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5580983583549368 + 16*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.031803389629840674 + 16*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1818025960947898 + 16*p2 + -17*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.484416316922268 + 16*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.963762452367493 + 16*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.588748293875401 + 16*p2 + -21*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.169552845203375 + 15*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.22460208361097 + 15*p2 + -14*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.082217791164056 + 15*p2 + -15*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.563920095604522 + 14*p2 + -10*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.710733186523322 + 14*p2 + -14*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5691169709886275 + 14*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.638390161692783 + 14*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4967975081029907 + 14*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9195274400398636 + 13*p2 + -8*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.7779347864500702 + 13*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.419030016953887 + 13*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2774373633640934 + 13*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.162009183110406 + 13*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.722166838453138 + 13*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.04196347480447526 + 13*p2 + -14*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.015988837734494 + 13*p2 + -14*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.0159432846410175 + 13*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7117088255751876 + 12*p2 + -12*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.021534970498557 + 12*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.2635195928082317 + 12*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.051523043173398 + 12*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5951375612078353 + 11*p2 + -10*p3 + -1*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5704659359674942 + 11*p2 + -11*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5702594635169829 + 11*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.713262343142389 + 11*p2 + -11*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.04052410177035554 + 11*p2 + -12*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8843108760265057 + 11*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3721904412851895 + 10*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5668672415828069 + 10*p2 + -10*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.571458504713103 + 10*p2 + -10*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7161358532228705 + 10*p2 + -10*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.689290420399171 + 10*p2 + -11*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.506971564409958 + 10*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.933984359798299 + 9*p2 + -7*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7923917062085062 + 9*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.710389705726531 + 9*p2 + -7*p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3736406353606716 + 9*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5716452549430666 + 9*p2 + -9*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5703175829810745 + 9*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7701136509993 + 9*p2 + -9*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.16878438523204 + 9*p2 + -10*p3 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.03520887606633201 + 9*p2 + -10*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0271917316422456 + 9*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.0258396505656755 + 9*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.828948525551103 + 9*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7623734393376054 + 8*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.807682561280179 + 8*p2 + -8*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5480878478971982 + 8*p2 + -9*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.04260174171192959 + 8*p2 + -9*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3415080766339043 + 8*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.904662287769386 + 8*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.253749073620959 + 8*p2 + -12*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.7220190175638095 + 8*p2 + -13*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.581282971570896 + 8*p2 + -13*p3 + -3*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.034192064240753 + 7*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.712113567428725 + 7*p2 + -5*p3 + -2*p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5705209138389316 + 7*p2 + -5*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3300243167579244 + 7*p2 + -7*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.712095765070355 + 7*p2 + -7*p3 + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.708098786550362 + 7*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5698636228426308 + 7*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.844015778450645 + 7*p2 + -7*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.17392191092326 + 7*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8997884558331912 + 7*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3839490565250923 + 7*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3777384769147958 + 7*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.278466417989386 + 7*p2 + -9*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1656940712651913 + 7*p2 + -10*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.5961868786490845 + 7*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4545942250592914 + 7*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3274820701694694 + 6*p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.7135450864812105 + 6*p2 + -6*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.571373507178531 + 6*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.781257927339134 + 6*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.878717636369273 + 6*p2 + -6*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.551416050241092 + 6*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.118998493758101 + 6*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.873938235243928 + 6*p2 + -9*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8883841169364934 + 6*p2 + -10*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.029976770526287 + 6*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3735504018383438 + 5*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3246476554642308 + 5*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.716249823223026 + 5*p2 + -5*p3 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5757881429885257 + 5*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.69209464090835 + 5*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5490495243150473 + 5*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.91130572603081 + 5*p2 + -5*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.1095089385871322 + 5*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.05975521216133 + 5*p2 + -6*p3 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.97824974935323 + 5*p2 + -7*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.282390816307445 + 5*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.557441965518212 + 5*p2 + -7*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.962651401260623 + 5*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8322253642250894 + 5*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6588670286156154 + 5*p2 + -10*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.9937812683321186 + 4*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8805774252269315 + 4*p2 + -4*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3215493469760904 + 4*p2 + -4*p3 + p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5742724990660937 + 4*p2 + -4*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.941185937357878 + 4*p2 + -4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.278609402946707 + 4*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5507554091259466 + 4*p2 + -5*p3 + p5 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.06924279648022144 + 4*p2 + -5*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.258678091954783 + 4*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.710144137900774 + 4*p2 + -6*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.312444138801361 + 4*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3829718466769008 + 4*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.701511381856244 + 3*p2 + 2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5599187282664504 + 3*p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.773517034542372 + 3*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.93570349211488 + 3*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.968071670290666 + 3*p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.570481643930762 + 3*p2 + -3*p3 + 6*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.570556867621523 + 3*p2 + -3*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.82740530542649 + 3*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.710676986921408 + 3*p2 + -3*p3 + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.570556867621523 + 3*p2 + -3*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6395371665822445 + 3*p2 + -3*p3 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.76407831094422 + 3*p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.07293835663839422 + 3*p2 + -4*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.164639551829453 + 3*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.067278130331152 + 3*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.1884971810016145 + 3*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.049719419924387 + 3*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9256854767413585 + 3*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.024054302283911047 + 3*p2 + -4*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5561465566524317 + 3*p2 + -5*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5524591995417432 + 3*p2 + -5*p3 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.938925386910695 + 3*p2 + -5*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3432764272353923 + 3*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1842357426083616 + 3*p2 + -5*p3 + l + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.325828396198155 + 3*p2 + -5*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.482466984175665 + 3*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.289434765140619 + 3*p2 + -5*p3 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.08179904418491904 + 3*p2 + -6*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6003714630670327 + 3*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6597955692726267 + 2*p2 + 2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.7711500190108174 + 2*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6674821483363846 + 2*p2 + 2*p3 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.8090748019261778 + 2*p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.178315760318522 + 2*p2 + 2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.713400390187904 + 2*p2 + p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7313168760946929 + 2*p2 + -1*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7307693663083423 + 2*p2 + -3*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8188111126601116 + 2*p2 + -1*p3 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8977942256332295 + 2*p2 + -1*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6687499640033499 + 2*p2 + -2*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5728442961391866 + 2*p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.717494068446774 + 2*p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5867753396956803 + 2*p2 + -2*p3 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7838216159824385 + 2*p2 + -2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.623676661537671 + 2*p2 + -3*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8286283981730209 + 2*p2 + -3*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9203683311751574 + 2*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.00844564825040056 + 2*p2 + -3*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5681671628096925 + 2*p2 + -4*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.392577615281102 + 2*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.574589825419056 + 2*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6182535829841913 + 2*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.905580007385034 + 2*p2 + -5*p3 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.049760435161809 + 2*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.0104596006709103 + p2 + p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5732792321887836 + p2 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.9107039365047225 + p2 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.23429788570962434 + p2 + d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.4760961663434022 + p2 + -1*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.091418460350552 + p2 + -1*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.705361761217385 + p2 + -1*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2856566424105103 + p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.688809224626079 + p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.9079709084323913 + p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.740051218800007 + p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4094132357787643 + p2 + -3*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.310372633007119 + p2 + -3*p3 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.522714783328797 + p2 + -4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.9562107787565965 + p2 + -5*p3 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1729974100184783 + 18*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6781166309983444 + 18*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1809042666304714 + 17*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.183155566832619 + 16*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.04696436671021462 + 15*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.829580866837418 + 15*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.328273785511441 + 14*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1127547443936994 + 13*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.258189914864683 + 10*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.814993204921374 + 10*p3 + -19*p4 + 3*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.95658865103797 + 10*p3 + -19*p4 + 3*p6 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.16740761852816607 + 10*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0643618171924107 + 9*p3 + -10*p4 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.060792784906690885 + 9*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.306598533032607 + 9*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2140470304266096 + 8*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.8041393513690713 + 8*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.8103771751123325 + 8*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0782455623261753 + 8*p3 + -15*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.3237868675754636 + 7*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1961560093302657 + 7*p3 + -10*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1949711053010867 + 7*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4671345817694791 + 7*p3 + -13*p4 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6088499320056875 + 7*p3 + -13*p4 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.10007740483218 + 7*p3 + -15*p4 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.047255538619347 + 7*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.977185422080414 + 6*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.2307428245562371 + 6*p3 + -6*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.013815877320812 + 6*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.142857868259514 + 6*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.1298191775562985 + 6*p3 + -11*p4 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.292614265432244 + 6*p3 + -11*p4 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8140980170497096 + 6*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.53997506792842 + 5*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0050180046307255 + 5*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0924155584539 + 5*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.720580334163075 + 5*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.794178250725797 + 5*p3 + -8*p4 + 3*p5 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.619322090548896 + 5*p3 + -8*p4 + p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.03450550837777829 + 5*p3 + -8*p4 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.273833475483234 + 5*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.8068997726123426 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.568827769931572 + 4*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0675917235061514 + 4*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.706026208063619 + 4*p3 + -4*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.555358399955497 + 4*p3 + -4*p4 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.159223812157148 + 4*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.131106034308744 + 4*p3 + -6*p4 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9895133807189505 + 4*p3 + -6*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.04835015813629811 + 4*p3 + -7*p4 + -4*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.415272514603902 + 3*p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.053952890558025 + 3*p3 + -2*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5352923155520526 + 3*p3 + -3*p6 ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4885576341714002 + 3*p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.191178355798528 + 3*p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3076924969094397 + 3*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.228660131658149 + 3*p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.059519618207261 + 3*p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.9042111116594287 + 3*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3666263146331983 + 3*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5916709882475242 + 3*p3 + -5*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.528041030102059 + 3*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.722692880689689 + 3*p3 + -3*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.722033844364136 + 3*p3 + -3*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.778260673414684 + 3*p3 + -3*p4 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.165347814938229 + 3*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.0069450226578525 + 3*p3 + -4*p4 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5511960962637583 + 3*p3 + -5*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.223825237560907 + 3*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.231453914185082 + 3*p3 + -8*p4 + 3*p5 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.231598078381297 + 3*p3 + -8*p4 + 3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.096346755057725 + 3*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.864842268815918 + 2*p3 + 2*p5 + -7*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.91764442130652 + 2*p3 + -1*p7 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.715904946162833 + 2*p3 + -2*p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6645753109655048 + 2*p3 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.845706653429977 + 2*p3 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.069649509185836 + 2*p3 + -1*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.045823295940211 + 2*p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1594119246572465 + 2*p3 + -1*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.440685713246782 + 2*p3 + -2*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.817015360389367 + 2*p3 + -2*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5737473294941686 + 2*p3 + -2*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.73909373967068 + 2*p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.727744387143735 + 2*p3 + -2*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.457423429271724 + 2*p3 + -2*p5 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7705225561480922 + 2*p3 + -3*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.53408684213265 + 2*p3 + -3*p5 + 2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.558832469333276 + 2*p3 + -4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.126603425406132 + 2*p3 + -4*p5 + 5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.4176974410733556 + 2*p3 + -4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.74045088220208 + 2*p3 + -4*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.429090111759015 + 2*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.04378739486271 + 2*p3 + -1*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5601906590622279 + 2*p3 + -2*p4 + 3*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5493361073782248 + 2*p3 + -2*p4 + -4*d + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.2025057001802635 + 2*p3 + -3*p4 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.6234967350884237 + 2*p3 + -4*p4 + 3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.48436482121101754 + 2*p3 + -4*p4 + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6321558286080267 + p3 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.3778023644637356 + p3 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.160254263045841 + p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.716071957175615 + p3 + 2*p5 + -5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.717365595217193 + p3 + 2*p5 + -5*p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.062008981319381 + p3 + 2*p5 + -6*p6 + 3*p7 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.908309519303912 + p3 + 2*p5 + -6*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.030750134416163 + p3 + p5 + 3*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.021608972458841 + p3 + p5 + d + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.889157480826369 + p3 + p5 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.07329213487777347 + p3 + p5 + -1*p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.214884788467567 + p3 + p5 + -1*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.768704995760015 + p3 + p5 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.7748204294311278 + p3 + p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6753888559104024 + p3 + 2*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.442043413370225 + p3 + p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0324919475147025 + p3 + p7 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7657658443030235 + p3 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.2607321444565045 + p3 + -2*p7 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.715666883252861 + p3 + -1*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5826771320790722 + p3 + -1*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.4175209797876623 + p3 + -2*p6 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5828682456321657 + p3 + -1*p5 + -1*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.5934301056006095 + p3 + -1*p5 + -6*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.4386382675012674 + p3 + -1*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.165524259227289 + p3 + -2*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.5822711939900085 + p3 + -3*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.6265074195497973 + p3 + -3*p5 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.3605378995722246 + p3 + -3*p5 + -1*d + -2*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.21140789256971876 + p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.810757124792175 + p3 + -4*p5 + 2*p6 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.6691644712023819 + p3 + -4*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.754651396096765 + p3 + -4*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.717411339840229 + p3 + -1*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.8083635632593567 + p3 + -2*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8864951385887434 + p3 + -2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.1250722225584076 + p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.803306812319237 + p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.05785277778170643 + p3 + -2*p4 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.44900567229608884 + p3 + -4*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.4534617064026225 + p3 + -4*p4 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.311869052812829 + p3 + -4*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.167495966181584 + 2*p4 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.749983538507256 + 2*p4 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.874027396073755 + 4*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.373892328835442 + 4*p5 + -10*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.502042248000183 + 3*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.316987430872177 + 3*p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.5323891263759684 + 3*p5 + -4*p6 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.939765945976773 + 2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 5.820729255003004 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.618448012662863 + 2*p5 + -5*p6 + -1*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.10546309084808415 + p5 + d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.0821825440114825 + p5 + -1*d + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.940589890421689 + p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.3740039959143036 + p5 + -4*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.5577559332540125 + 3*p6 + -2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.0908904897535074 + p6 + 4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.097719264984861 + p6 + 4*d + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.243259853342665 + p6 + -4*d + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 6.245665091584839 + p6 + -4*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.20959519360859744 + p7 + -2*p8 + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.3511878471983905 + p7 + -2*p8 + -2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.9208893204551942 + p8 + 2*d ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.8698368435430835 + p8 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.1855468254441432 + 4*p1 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3271394790339364 + 4*p1 + -3*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.144537390100392 + 4*p1 + -4*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.8082647861220105 + 2*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.965782521938701 + 2*p1 + -3*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.14572509515469 + p1 + -2*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.9556229433662087 + p1 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3432762696991007 + 43*p2 + -42*p3 + 3*d + -1*l + -3*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.20168361610930713 + 43*p2 + -42*p3 + -1*d + l + -3*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03744429377228634 + 27*p2 + -28*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2186058134361852 + 26*p2 + -28*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.7356955496237797 + 25*p2 + -29*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2383350237990456 + 24*p2 + -28*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7933860202833674 + 23*p2 + -23*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.705246220420904 + 23*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.93497867387316 + 23*p2 + -23*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.2887577519237705 + 23*p2 + -24*p3 + -1*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.588758757352597 + 23*p2 + -25*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.02433948908368692 + 21*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.039311796071920285 + 21*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.172761965102384 + 21*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.172761965102384 + 21*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.06401483723879763 + 21*p2 + -23*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.610070623782849 + 20*p2 + -12*p3 + -15*p4 + d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4684779701930557 + 20*p2 + -12*p3 + -15*p4 + -3*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4532316635088924 + 20*p2 + -19*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.043251702325372274 + 20*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.019611217607109082 + 20*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3790565665625354 + 18*p2 + -15*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -6*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.8306406137625952 + 18*p2 + -17*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5943245868422564 + 18*p2 + -17*p3 + -1*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.128426753879057 + 18*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3687720394122334 + 17*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.056142746672186 + 17*p2 + -17*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5081334215946938 + 17*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.544310440295424 + 16*p2 + -13*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.059806499346388896 + 15*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.131048770512645 + 15*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.711488215957735 + 15*p2 + -15*p3 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.776731590457011 + 15*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.04030820454188384 + 15*p2 + -16*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03543838686296927 + 15*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.589277652237532 + 15*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.23040108908869664 + 14*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.589776641870675 + 14*p2 + -19*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.04189854855630107 + 13*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.419271204459879 + 13*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.552856819538614 + 12*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.162331719956174 + 12*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.711928038929238 + 12*p2 + -12*p3 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.04200780616747592 + 12*p2 + -13*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.021578952795707 + 12*p2 + -13*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.20029311229424324 + 12*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.4701547165037634 + 12*p2 + -18*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.7124341844123165 + 11*p2 + -11*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.026555584624844 + 11*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.566953660875731 + 11*p2 + -13*p3 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712509408103077 + 10*p2 + -10*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712291591012429 + 10*p2 + -10*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5706902107763754 + 10*p2 + -10*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.042114445784772775 + 10*p2 + -11*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.8888667089729867 + 10*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.787879191420742 + 10*p2 + -14*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.040465850264922 + 9*p2 + -10*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.507213117978434 + 9*p2 + -12*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.2493662028033508 + 9*p2 + -13*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.787988623564842 + 9*p2 + -13*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.4711598516199866 + 9*p2 + -15*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.171339015159867 + 8*p2 + -6*p3 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0297463615700737 + 8*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2322521852933618 + 8*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.373838032099072 + 8*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.373844838883155 + 8*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.71285829942055 + 8*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5717885464746553 + 8*p2 + -8*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.22867007153656865 + 8*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4683680144501803 + 8*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.2492049513770995 + 8*p2 + -12*p3 + d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1076122977873066 + 8*p2 + -12*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.364812593969476 + 8*p2 + -14*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6416410034592315 + 7*p2 + -3*p3 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.218664149924785 + 7*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712265934672424 + 7*p2 + -7*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7580748679228684 + 7*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.416717613231286 + 7*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.009499179976804 + 7*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.7233953672153 + 7*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1101859603022974 + 6*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.0148025034486476 + 6*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.182958378620412 + 6*p2 + -5*p3 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.887036582214295 + 6*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.024012639904688 + 6*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7532104607646353 + 6*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.7122497031103805 + 6*p2 + -6*p3 + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5698161498869765 + 6*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9841763468975935 + 6*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3786055564871866 + 6*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.520198384609905 + 6*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.9362110423596772 + 6*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.787967854146743 + 6*p2 + -10*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9714577665758273 + 5*p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.23251887160306658 + 5*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.136761607715223 + 5*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.6528709839636555 + 5*p2 + -5*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.571382233824791 + 5*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7478636446011506 + 5*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.1325747373726145 + 5*p2 + -5*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.903694502699155 + 5*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3896423205450978 + 5*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.825286135147035 + 5*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.963466993620079 + 5*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.4217188542028758 + 5*p2 + -9*p3 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.073619784168272 + 4*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5710893675763062 + 4*p2 + -4*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5715349501343405 + 4*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7424669120210587 + 4*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.933148347086594 + 4*p2 + -4*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.12575952471952623 + 4*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.446652461862258 + 4*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.9585046394975427 + 4*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.947983437202354 + 4*p2 + -8*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.22982181430995974 + 3*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.44520259985599314 + 3*p2 + -2*p3 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.3750894331727523 + 3*p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2306335669450623 + 3*p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.716121192457154 + 3*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6858945077786154 + 3*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.623362004168487 + 3*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.687586106384598 + 3*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.04871039409390975 + 3*p2 + -3*p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.146531935372937 + 3*p2 + -4*p3 + 3*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9085119605005096 + 3*p2 + -4*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.0480596118057415 + 3*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03479715289578655 + 3*p2 + -4*p3 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3773565988744594 + 3*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3432767763012425 + 3*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.6174802530875825 + 3*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.4758875994977894 + 3*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6674821483363846 + 2*p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6585657847867212 + 2*p2 + p3 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.061492355362473 + 2*p2 + p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.735968029513282 + 2*p2 + -1*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712064349143819 + 2*p2 + -2*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5706125436246616 + 2*p2 + -2*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5764456085177518 + 2*p2 + -2*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.970985522971821 + 2*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.764994085202741 + 2*p2 + -3*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9070964984771424 + 2*p2 + -3*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.03437024536074873 + 2*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.042567733286466 + 2*p2 + -3*p3 + d + -2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.012864298317674603 + 2*p2 + -3*p3 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.046064875003636 + 2*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1546103663487175 + 2*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.272867967839347 + 2*p2 + -4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.0306522129468085 + 2*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.907768990834569 + 2*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.247819832587767 + 2*p2 + -5*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7447674305081124 + p2 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.707147748142634 + p2 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.155454931173758 + p2 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.2000737753971675 + p2 + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3318083923193131 + p2 + -1*p3 + p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712262618546845 + p2 + -1*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.707294713363969 + p2 + -1*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3357334632741231 + p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.586496644607403 + p2 + -3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6655226926801205 + 17*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.152791043634756 + 15*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1850462820113044 + 15*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.8560756630143915 + 14*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.04181303592127 + 13*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6949206695348624 + 13*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.329576673798055 + 13*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.193206760458562 + 12*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.277579475656789 + 10*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.022159057747487 + 9*p3 + -10*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5556205059175641 + 9*p3 + -11*p4 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5414847352398116 + 9*p3 + -11*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5426139717641687 + 9*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.0427209561981574 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.06213057977834455 + 8*p3 + -11*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.203723233368138 + 8*p3 + -11*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.189516602322754 + 8*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.21931079441265 + 8*p3 + -11*p4 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.0889704785383385 + 8*p3 + -11*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6856981497394494 + 8*p3 + -12*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6737639458784792 + 8*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6579706360101079 + 8*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.220509094985485 + 7*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.213980367347499 + 7*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4274443983157265 + 7*p3 + -9*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9789563991740958 + 7*p3 + -10*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7380782816169191 + 6*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.710935295650704 + 6*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.213706874253712 + 6*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.1222119854785557 + 6*p3 + -11*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.612841508503315 + 5*p3 + -8*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.701357609850826 + 5*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.618834960656347 + 4*p3 + p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.421205203804014 + 4*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6806970917991015 + 4*p3 + -5*p5 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7689416369116358 + 4*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.753684517684427 + 4*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.214607813213592 + 4*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.350926396876442 + 4*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.566534398796135 + 4*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4345288897774466 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4345540225186753 + 4*p3 + -8*p4 + 3*p5 + 3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.4024141334090503 + 4*p3 + -8*p4 + 3*p5 + 2*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2608230506155838 + 4*p3 + -8*p4 + 3*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2928489697250537 + 4*p3 + -8*p4 + 3*p5 + -3*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2928847489747196 + 4*p3 + -8*p4 + 3*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.058105552447294 + 3*p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.834792419983874 + 3*p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.709876578926444 + 3*p3 + -3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.569155891830947 + 3*p3 + -3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.107189272468206 + 3*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.964936203286093 + 3*p3 + -4*p5 + 5*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.963767530818957 + 3*p3 + -4*p5 + 5*d + -4*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7671193386396282 + 3*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8233435496962989 + 3*p3 + -4*p5 + d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.749389262395269 + 3*p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.054371586547261 + 3*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.919899710270997 + 3*p3 + -2*p4 + d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.049317819663504 + 3*p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.702439041350312 + 3*p3 + -4*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.210162459608762 + 3*p3 + -6*p4 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.0674356910710232 + 3*p3 + -6*p4 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6754717590498722 + 2*p3 + p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.571127590286925 + 2*p3 + -2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.716212124111182 + 2*p3 + -2*p8 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712106411578792 + 2*p3 + -2*p6 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5683389032080888 + 2*p3 + -2*p6 + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7046398675438101 + 2*p3 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.7745544327548076 + 2*p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.9281957838045014 + 2*p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.573239089615988 + 2*p3 + -2*p5 + 4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5729278974103573 + 2*p3 + -2*p5 + -4*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.207277787919383 + 2*p3 + -2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.9068542637735995 + 2*p3 + -3*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.7520417882975 + 2*p3 + -3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.746826744492541 + 2*p3 + -3*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.752060288787571 + 2*p3 + -3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.907860795153224 + 2*p3 + -5*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.580805615522159 + 2*p3 + -2*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.202902588052167 + 2*p3 + -3*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5025441876964236 + 2*p3 + -3*p4 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.7130659851032215 + 2*p3 + -4*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.4842824416703234 + 2*p3 + -4*p4 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6258750952601164 + 2*p3 + -4*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5906871376498585 + 2*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.640274602184478 + 2*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.7451575030976166 + 2*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.6321558286080267 + p3 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.631695759817201 + p3 + 2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.0306333293976202 + p3 + 3*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.032336464173299 + p3 + p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.871130524076245 + p3 + p5 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.8872416329064547 + p3 + p5 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.870822473463268 + p3 + p5 + -4*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.050888066896573 + p3 + d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.193864068451497 + p3 + d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.10123258727417511 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.69522820504738 + p3 + -1*p7 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.2845511508622971 + p3 + -2*p6 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.033844569186681 + p3 + -3*p6 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.867759212099826 + p3 + -3*p6 + -1*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.447701404742707 + p3 + -1*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.715761654631243 + p3 + -1*p5 + 4*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.767333690566724 + p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.718490302383811 + p3 + -1*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6001223960844564 + p3 + -1*p5 + -2*d + -3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.607129543965363 + p3 + -1*p5 + -3*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5894910720117834 + p3 + -1*p5 + -4*d + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5480817307464997 + p3 + -2*p5 + l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.18318714029544686 + p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.224971220747767 + p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.5023474975880404 + p3 + -3*p5 + -1*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.6860796787139353 + p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.19293916749096518 + p3 + -4*p5 + 2*p6 + d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.073827984951402 + p3 + -5*p5 + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9322353313616093 + p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.5829656350044268 + p3 + -1*p4 + -4*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9130440399725299 + p3 + -2*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.05785277778170643 + p3 + -2*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.045197080302912 + p3 + -2*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.05831284657253214 + p3 + -2*p4 + -3*d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.9769070420647208 + p3 + -4*p4 ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.349828567780304 + p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.5419025840593723 + p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.9888096554662299 + 3*p4 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.6815277109867592 + 3*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.032322842106817 + 2*p5 + -6*p6 + 3*p7 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.8963527667023239 + 2*p5 + -6*p6 + 3*p7 + -2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.18155525744483214 + 2*p5 + -6*p6 + 2*d ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.3779292414020385 + p5 + 3*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.941992262475666 + p5 + d + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.71618557810992 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 6.088920387588806 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.228036035910902 + p5 + -1*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.5034006037637441 + p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.696737033687413 + p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.738679223973331 + 4*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8817316114612753 + 2*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.38529818753856737 + p1 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.066640910621247 + p1 + -2*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.925048257031455 + p1 + -2*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.891658537644477 + p1 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4174028209973023 + 35*p2 + -31*p3 + -3*p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5589954745870953 + 35*p2 + -31*p3 + -3*p6 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.601623413234439 + 28*p2 + -34*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.802772085928009 + 28*p2 + -34*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.6611794323382156 + 28*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.4794685000224224 + 26*p2 + -31*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.03551553041590741 + 25*p2 + -26*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5626388324040004 + 23*p2 + -23*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.994265065102455 + 23*p2 + -23*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.037469426513515064 + 23*p2 + -26*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7177816817108686 + 23*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.8582499771998937 + 19*p2 + -20*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.973963918842032 + 19*p2 + -21*p3 + 3*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8323712652522393 + 19*p2 + -21*p3 + 3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.18256584557332 + 18*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7087044158008045 + 18*p2 + -18*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.031217657132871373 + 18*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.031217657132871373 + 18*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.22888928489061916 + 17*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.21619236364821082 + 17*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.03299265698214961 + 17*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.70973677805336 + 16*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.682368968184537 + 16*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.03381086733548455 + 16*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5010311532695533 + 16*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.17046303440829 + 15*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.1819003345329016 + 15*p2 + -16*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.466904572869016 + 14*p2 + -11*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.711882311302836 + 14*p2 + -14*p3 + 3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.040376272382711624 + 14*p2 + -15*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.23081717558237208 + 13*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.711107908713726 + 13*p2 + -13*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5695147315251572 + 13*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5927291813730085 + 12*p2 + -11*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.6854246906389285 + 12*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.1626738044895655 + 11*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.684086197635574 + 11*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1442582779597308 + 10*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.570841530822523 + 9*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5708993012207642 + 9*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.048707303491156 + 9*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8929071461913534 + 9*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.5423659774740934 + 9*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.4007733238843003 + 9*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2322376990605703 + 8*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.372826264731691 + 8*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5971155428491206 + 8*p2 + -7*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.038006166248403 + 8*p2 + -9*p3 + d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.03686135380212024 + 8*p2 + -9*p3 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8968978415260387 + 8*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.8964135126586097 + 8*p2 + -9*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.381275412138913 + 8*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.17329623588137 + 8*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.597130727213613 + 7*p2 + -6*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5718880302420188 + 7*p2 + -7*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.04147762613062 + 7*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.478084794493125 + 7*p2 + -13*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6414340074099454 + 6*p2 + -2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.187189056727244 + 6*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5719433571793073 + 6*p2 + -6*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712724781732774 + 6*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9015966169382574 + 6*p2 + -7*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9023982466636986 + 6*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3481696323262833 + 6*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3805856325235741 + 6*p2 + -8*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1467179704745665 + 6*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.0672941703636365 + 6*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.939729119529555 + 5*p2 + -4*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.05431133019648474 + 5*p2 + -4*p3 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5964694219600324 + 5*p2 + -4*p3 + -1*p5 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.3898229536243627 + 5*p2 + -7*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.157921455967626 + 4*p2 + -3*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3737158590514325 + 4*p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.714147399606074 + 4*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5714790995982766 + 4*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5906965709261356 + 4*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.571636702829732 + 4*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.047801477609371 + 4*p2 + -5*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.906207602289101 + 4*p2 + -5*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.382183481453775 + 4*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.756855065806967 + 4*p2 + -7*p3 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.909720251941665 + 3*p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0492572142468761 + 3*p2 + -3*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5719032146065113 + 3*p2 + -3*p3 + 6*d + -3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5499267267970995 + 3*p2 + -3*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6288890873487523 + 3*p2 + -3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.339752990534732 + 3*p2 + -3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4942158170734408 + 3*p2 + -4*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2375196144708305 + 3*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.047277180702071 + 3*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.007755370531236804 + 3*p2 + -4*p3 + -3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3336354029803008 + 3*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2819425987588997 + 3*p2 + -6*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.4683921169904908 + 3*p2 + -6*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.273153329172048 + 3*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.235132378614903 + 3*p2 + -7*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9186870470083948 + 2*p2 + p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1430459722612956 + 2*p2 + -4*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.572852499186671 + 2*p2 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.069122245218808 + 2*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.034335215232684 + 2*p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.063516422194327 + 2*p2 + -1*p3 + -3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.6152331246790057 + 2*p2 + -1*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.3001083516761405 + 2*p2 + -2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3348297317874405 + 2*p2 + -2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6778590119024335 + 2*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5704504025371513 + 2*p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.717718168722729 + 2*p2 + -2*p3 + -2*d + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.717807529580431 + 2*p2 + -2*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5762215082417956 + 2*p2 + -2*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.013911670401796401 + 2*p2 + -3*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.476459718426593 + 2*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.5236593555199764 + 2*p2 + -7*p3 + 7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.666839036998608 + 2*p2 + -7*p3 + 7*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1561811541771965 + p2 + p3 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.23274017935221944 + p2 + d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.3743354509358907 + p2 + d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.571050263702745 + p2 + -2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.521512966602507 + p2 + -1*p3 + p5 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3799203130127138 + p2 + -1*p3 + p5 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.712038343737964 + p2 + -1*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.348703388004809 + p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.7743504462568325 + p2 + -2*p3 + 2*p5 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.63275779266704 + p2 + -2*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5263002047128522 + p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.918149868657897 + p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9690900529125718 + p2 + -8*p3 + 12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.110680961173113 + p2 + -8*p3 + 12*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.179052131726572 + 17*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.6819434399162674 + 17*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.548046126029759 + 14*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.05059273169218562 + 14*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.186616903805174 + 14*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2954671636309203 + 14*p3 + -23*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1878915177579055 + 13*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.116687494797218 + 12*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.811659293980847 + 12*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.190448076046227 + 10*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.253913683664372 + 9*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.789367774241451 + 9*p3 + -9*p4 + 4*d + l + -4*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6477751206516578 + 9*p3 + -9*p4 + 4*d + -1*l + -4*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.077143237865566 + 9*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.634817115149784 + 9*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9969633271294045 + 9*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.1911959496307065 + 9*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.8317003946810395 + 8*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.880637856110633 + 8*p3 + -12*p4 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.3070439410577155 + 8*p3 + -15*p4 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.164031462121425 + 8*p3 + -15*p4 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.65476571339962 + 7*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.532540280387508 + 7*p3 + -7*p4 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.21017345518305 + 7*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7747598750044005 + 7*p3 + -11*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6649343251926398 + 7*p3 + -13*p4 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.571325353087809 + 6*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.168724137379579 + 6*p3 + -11*p4 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9287127418306256 + 5*p3 + -7*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.775677577623416 + 5*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0784951444092103 + 5*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.745688457751023 + 5*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6461563192721163 + 5*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.640876715281467 + 5*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.575760400751735 + 5*p3 + -9*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.777686643122019 + 5*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.3140343167811697 + 5*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.710420423521365 + 4*p3 + -4*p6 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.0474417227589516 + 4*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.890513095053026 + 4*p3 + -5*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.951392107723082 + 4*p3 + -3*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.4137674916949567 + 4*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.295908565897066 + 4*p3 + -5*p4 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.20133908811496345 + 4*p3 + -6*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.058306563387224966 + 4*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.264060312807133 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.12246573935516253 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.6033875920423535 + 4*p3 + -8*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5461048048010821 + 3*p3 + -3*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.897664215600589 + 3*p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.7036920047220026 + 3*p3 + -3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5977323422067753 + 3*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.9430719401475836 + 3*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.257600168110434 + 3*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.344568519975594 + 3*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.531162193905082 + 3*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.902012877964858 + 3*p3 + -7*p4 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.043605531554652 + 3*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.532576783263824 + 3*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.0647337723509605 + 2*p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.19913002488071424 + 2*p3 + 2*p5 + -8*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.9748397335589996 + 2*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2935368039832647 + 2*p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7926594397157622 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7522632705795778 + 2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5708647437015746 + 2*p3 + -2*p6 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.892209363556406 + 2*p3 + -1*p5 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.5362681546317924 + 2*p3 + -1*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.038866779604245 + 2*p3 + -1*p5 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9028504529745738 + 2*p3 + -1*p5 + -5*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.88751863365538 + 2*p3 + -3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.890582210091405 + 2*p3 + -3*p5 + -3*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.5708605634096866 + 2*p3 + -4*p5 + 3*p6 + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.9335900644253239 + 2*p3 + -4*p5 + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.0583055586812575 + 2*p3 + -4*p5 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.6992492776093675 + 2*p3 + -5*p5 + 5*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.305923099110402 + 2*p3 + -5*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6073302568293426 + 2*p3 + -2*p4 + l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5886883950887911 + 2*p3 + -2*p4 + -4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.156040646674094 + 2*p3 + -4*p4 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.290820232995802 + 2*p3 + -4*p4 + p5 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.741457754149239 + 2*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.12811659187434454 + p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.0761951920125155 + p3 + 4*p5 + -10*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.530324444362443 + p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.778277603108429 + p3 + 2*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.391817558385124 + p3 + p5 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.2067847154090607 + p3 + p5 + -1*p6 + 3*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.0651920618192678 + p3 + p5 + -1*p6 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.263426068655275 + p3 + p6 + 3*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.118069961599406 + p3 + p6 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4144355952343033 + p3 + p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.259662615189199 + p3 + p6 + -1*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.1218334150654816 + p3 + p6 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2330330456007041 + p3 + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.0751622806662353 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.398123398979314 + p3 + -1*p6 + d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.539716052569107 + p3 + -1*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.559115553239633 + p3 + -2*p6 + d + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.2806510381157906 + p3 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.011165786381217 + p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.576644593049112 + p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.5057845914806265 + p3 + -1*p5 + p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5831909570108595 + p3 + -1*p5 + 3*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.053579390098099 + p3 + -2*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.2206496024885873 + p3 + -2*p5 + 5*p6 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.7638944937807184 + p3 + -2*p5 + 2*p6 + d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.753520797302273 + p3 + -2*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.7574769351177686 + p3 + -2*p5 + 3*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.77111284349775 + p3 + -2*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.781100490142287 + p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6225509156718181 + p3 + -2*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.4092076359928796 + p3 + -3*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.663005587331211 + p3 + -3*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.35989492027578995 + p3 + -3*p5 + d + -3*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.623981762087553 + p3 + -4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6756684491582554 + p3 + -4*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.8281936366563492 + p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5821840765653838 + p3 + -1*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.8093620661244225 + p3 + -2*p4 + p5 + 2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.976962219964033 + p3 + -2*p4 + p5 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.9591399308469523 + p3 + -3*p4 ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.23277826152318 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.044604698558152 + 2*p4 + -2*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5151297484342383 + 3*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.2579270342860662 + 3*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.9564962976255895 + 2*p5 + -4*p6 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 6.0980889512153835 + 2*p5 + -4*p6 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.44279652294246 + 2*p5 + -5*p6 + 2*d + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.3036105038582422 + 2*p5 + -5*p6 + -2*d + -2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.336771253043992 + 2*p5 + -6*p6 + -2*d ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.779573161012184 + p5 + -3*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.7655988247919243 + p6 + -3*p7 + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.6240061712021311 + p6 + -3*p7 + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5713975927222088 + 3*d + -1*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.573312917043347 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.622971897585716 + 4*p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.248020928510864 + 4*p1 + -5*p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.10642827492107 + 4*p1 + -5*p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.607007047346823 + 3*p1 + 7*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.4654143937570299 + 3*p1 + 7*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.11310134978651214 + 3*p1 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.709649511590759 + 21*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.052157768432448945 + 20*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.769424595010612 + 20*p2 + -22*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5687328240202636 + 19*p2 + -19*p3 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.368826842750746 + 18*p2 + -17*p3 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.22601996360034043 + 18*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.22723418916095292 + 18*p2 + -17*p3 + -3*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.717507682014938 + 18*p2 + -18*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1422579731006532 + 18*p2 + -19*p3 + -3*d + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0006653195108602384 + 18*p2 + -19*p3 + -3*d + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.019074545858754 + 17*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.22942614816853257 + 16*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.2150795587137724 + 15*p2 + -9*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.3566722123035655 + 15*p2 + -9*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.22992304340657538 + 15*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3698974277139193 + 15*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9542066001798983 + 15*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1217931149563936 + 14*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1135747000762866 + 12*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.7044700725025415 + 12*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.7121133928958 + 11*p2 + -11*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.026597297993966 + 11*p2 + -12*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5944891713907197 + 10*p2 + -9*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712383569864008 + 10*p2 + -10*p3 + 4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5946724309621791 + 9*p2 + -8*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712485497092326 + 8*p2 + -8*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.934915492954238 + 8*p2 + -9*p3 + p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.182637736141869 + 8*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.6075271469656007 + 8*p2 + -12*p3 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.7106567496004015 + 8*p2 + -13*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.708829015312763 + 8*p2 + -13*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5691684666998778 + 8*p2 + -13*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.171797164088515 + 7*p2 + -5*p3 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.23240315627365934 + 7*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3739903993427713 + 7*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3739958098634526 + 7*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.71243732600497 + 7*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712858473953476 + 7*p2 + -7*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.175363403847433 + 7*p2 + -8*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.173720325394654 + 7*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5970930281017701 + 6*p2 + -5*p3 + -1*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.338979984209025 + 6*p2 + -11*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.0120476757573 + 5*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.968935110166578 + 5*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5719550508852955 + 5*p2 + -5*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712547281747846 + 5*p2 + -5*p3 + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5687275880325076 + 5*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.09885736869513602 + 5*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3931610788500435 + 5*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.52716050299611 + 5*p2 + -7*p3 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.849469915366494 + 5*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.3436640563639435 + 4*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3739455443809945 + 4*p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.781589365364088 + 4*p2 + -3*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5719236349587595 + 4*p2 + -4*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1666142173451597 + 4*p2 + -5*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.385283735299042 + 4*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.524126597157369 + 4*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3825339435675754 + 4*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.304746189602515 + 4*p2 + -6*p3 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.25994375373842904 + 4*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5629725478552983 + 4*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9154725080903883 + 3*p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3744385998946838 + 3*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0119125957715123 + 3*p2 + -3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0279830639250997 + 3*p2 + -4*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.888236994178867 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.01599018300799645 + 3*p2 + -4*p3 + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.003732386605389874 + 3*p2 + -4*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.694690992703617 + 3*p2 + -5*p3 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.316848477168769 + 3*p2 + -5*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.14731820620096 + 3*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1637199378465772 + 3*p2 + -6*p3 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.703204542760236 + 3*p2 + -6*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6890703003872277 + 2*p2 + 3*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.935584469158211 + 2*p2 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.712547281747846 + 2*p2 + -2*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2300068192106711 + 2*p2 + -1*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.05972068013709 + 2*p2 + -1*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.0028351128369395887 + 2*p2 + -3*p3 + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.167730529934735 + 2*p2 + -3*p3 + -3*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5953283171967618 + 2*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5719688474847024 + 2*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.8198195724002306 + p2 + 2*p3 + p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1531469077709207 + p2 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.032371145235514424 + p2 + -1*p3 + p5 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.244929958903898 + p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.3852514212129308 + p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.4718085820046365 + p2 + -5*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.137599872358322 + 20*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.9960072187685293 + 20*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.67520124151413 + 16*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.685220644652737 + 16*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.15128671035919528 + 14*p3 + -23*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.833691815357565 + 13*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1889109645739957 + 12*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1990918276650455 + 11*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.1897338873163106 + 11*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5443615699441904 + 10*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.052666914968522 + 10*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.703110286482312 + 9*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.278109157589819 + 9*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.9200667212837796 + 8*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.1635960024730523 + 8*p3 + -15*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.984945164433097 + 8*p3 + -16*p4 + 6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.126537818022891 + 8*p3 + -16*p4 + 6*p5 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3599898916820483 + 7*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1742100647827636 + 5*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.820546344497394 + 4*p3 + -3*p5 ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.6886802362960402 + 4*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.303143130179508 + 4*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.960054700399505 + 4*p3 + -3*p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1636710686275213 + 4*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.0458458021892447 + 4*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.0942198628379787 + 4*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.434527144448195 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2928819564479164 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.060219495237311 + 3*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.65665957017096 + 3*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.0365676403839594 + 3*p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9196970775448405 + 3*p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.831317635477761 + 3*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.139144322711728 + 3*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.046243945784891 + 3*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.061492887459566 + 3*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.205232777136505 + 3*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.0236314175044696 + 3*p3 + -4*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.14332416924574673 + 3*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.074238660924396 + 3*p3 + -7*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.194451712312327 + 3*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.037456204502783 + 2*p3 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.0010458182844286 + 2*p3 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3243818588157854 + 2*p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.04007035865642 + 2*p3 + -1*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5726287479765653 + 2*p3 + -2*p5 + -2*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.746827966223017 + 2*p3 + -3*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7467742100820556 + 2*p3 + -3*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.7467742100820556 + 2*p3 + -3*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.555194155974569 + 2*p3 + -4*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.064230951491778 + 2*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.5159888079903863 + 2*p3 + -5*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.38468998278583 + 2*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.308419967138304 + 2*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.706882117528797 + 2*p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.724548340217484 + 2*p3 + -2*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.204891390734814 + 2*p3 + -3*p4 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.059858518656415 + 2*p3 + -3*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.7339685718238815 + 2*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.5263207910997092 + 2*p3 + -4*p4 + -4*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.572083532613193 + 2*p3 + -5*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.009711578048455 + 2*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.904949219898413 + p3 + p4 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.5563954576003995 + p3 + 2*p5 + -7*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.15829577810227932 + p3 + p5 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.810163887379422 + p3 + p5 + -3*p6 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.6685712337896291 + p3 + p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.678946867126885 + p3 + p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.262330001885022 + p3 + p6 + d + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.19435812017283655 + p3 + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.1919630303352746 + p3 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.736448344123431 + p3 + -1*p8 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5948556905336384 + p3 + -1*p8 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6004609899593432 + p3 + -1*p8 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.378708547909687 + p3 + -2*p8 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.23711589431989438 + p3 + -2*p8 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.2372682615635935 + p3 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.576352931534471 + p3 + -1*p6 + d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.717563532551003 + p3 + -1*p6 + d + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5666098055181379 + p3 + -1*p6 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.924337218392509 + p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.742820192156612 + p3 + -1*p5 + -2*d + l + -2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6022145222588218 + p3 + -1*p5 + -4*d + l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.8413918164599303 + p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.103513775098115 + p3 + -2*p5 + 2*p6 + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.9619211215083219 + p3 + -2*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3245246267485986 + p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.18366466237879248 + p3 + -2*p5 + d + 2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.3252566178368848 + p3 + -2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.6696961239874897 + p3 + -2*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.65648905150304 + p3 + -3*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.358213819140269 + p3 + -3*p5 + d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.779592010568106 + p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.083876203019301 + p3 + -3*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 0.9131040792987986 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.758883845027801 + 2*p4 + -4*d + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 5.383401406199083 + p4 + -2*d + 2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.035453081621952 + 2*p5 + -1*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 6.083099889066331 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.9429846566883504 + p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.949856392514253 + 2*p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6558231828984538 + p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.6446258400510424 + p1 + -10*p3 + 11*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7862184936408356 + p1 + -10*p3 + 11*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.603279364632097 + 44*p2 + -42*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.461686711042304 + 44*p2 + -42*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3432762696991007 + 43*p2 + -42*p3 + 3*d + -3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.20168361610930713 + 43*p2 + -42*p3 + -1*d + -3*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.995984214415669 + 39*p2 + -36*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8543915608258765 + 39*p2 + -36*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5221491136199092 + 25*p2 + -27*p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5608938522178566 + 24*p2 + -24*p3 + 4*d + -4*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.94324804386911 + 23*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.181405359157036 + 23*p2 + -24*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.03981270556724265 + 23*p2 + -24*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.56441522851668 + 22*p2 + -22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5376092401340749 + 22*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.714627190617447 + 21*p2 + -21*p3 + -3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.2470903019570665 + 21*p2 + -22*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.8024825103101536 + 21*p2 + -22*p3 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9367140292534686 + 20*p2 + -18*p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.1365294704263915 + 16*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.369344507406887 + 16*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.644162314594979 + 16*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.0451307407947024 + 15*p2 + -9*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.186723394384496 + 15*p2 + -9*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4931961957244255 + 15*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.23037892340719632 + 14*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3704208519565926 + 14*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.712141492696757 + 14*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.690730317032067 + 14*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.519201627074091 + 14*p2 + -16*p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9437243272253455 + 14*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71223626407514 + 13*p2 + -13*p3 + 3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.690838003846914 + 13*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.23119085057522407 + 12*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.033954907988674 + 11*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.163050970140921 + 10*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.031040557203695 + 10*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.529979384271006 + 10*p2 + -12*p3 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5711122313895076 + 8*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.8964536552314053 + 8*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.370764864850477 + 8*p2 + -14*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.376790605594671 + 7*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.717759882091851 + 7*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.914576647581972 + 7*p2 + -8*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.03376339437983031 + 7*p2 + -8*p3 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.8942049900197695 + 6*p2 + -7*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.2007312154314436 + 6*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.0433807076520445 + 6*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.378567333776568 + 6*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2608569185013894 + 6*p2 + -8*p3 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.520159987366361 + 6*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.143166242443391 + 6*p2 + -9*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.882299733129433 + 5*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5951323252200795 + 4*p2 + -3*p3 + -1*p5 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7176303786613545 + 4*p2 + -8*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.3887663312952053 + 3*p2 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.782277548688149 + 3*p2 + -2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.65431452029303 + 3*p2 + -2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6072789441493343 + 3*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.748871597739127 + 3*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.159796437688094 + 3*p2 + -4*p3 + 3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.049803719327259 + 3*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9082110657374654 + 3*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.152943576913064 + 3*p2 + -4*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.147655935909538 + 3*p2 + -7*p3 + 4*p4 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0061468835909155 + 3*p2 + -7*p3 + 4*p4 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.772559014817636 + 3*p2 + -8*p3 + 4*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2067415887799033 + 2*p2 + p3 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.922124132402664 + 2*p2 + -1*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5707951050644204 + 2*p2 + -2*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.005382071814374913 + 2*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4423992605097564 + 2*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.6177158725366025 + 2*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.5695897891813098 + 2*p2 + -7*p3 + 7*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.711182442771102 + 2*p2 + -7*p3 + 7*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.480506953930726 + p2 + p3 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.22309863149835235 + p2 + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.2328485642987683 + p2 + -1*d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5695318357518266 + p2 + -1*p3 + 4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5650515755619574 + p2 + -1*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.6282293783864485 + p2 + -2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.6588534320440833 + p2 + -4*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.3306322489296605 + 12*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.117957919959745 + 11*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.6556474537377275 + 11*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0636245901163683 + 10*p3 + -17*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.205217243706162 + 10*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.862280832104009 + 9*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.2053517915948566 + 9*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.554059691960772 + 9*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9504583225799985 + 9*p3 + -15*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0427209561981574 + 9*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0548295269497185 + 8*p3 + -9*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.848832372085691 + 8*p3 + -12*p4 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.3079174783483385 + 8*p3 + -15*p4 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.485955007689143 + 8*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4762816863445727 + 7*p3 + -7*p4 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.486923158821857 + 7*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.814422324719679 + 7*p3 + -13*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9059224154893255 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.285384562576758 + 6*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7845593836538898 + 6*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.320537788134901 + 6*p3 + -11*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.8635363794763092 + 5*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.223995947758387 + 5*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.6971121134419835 + 5*p3 + -5*p5 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5165080349445381 + 5*p3 + -5*p5 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.757880114673296 + 5*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.673912656429066 + 5*p3 + -9*p4 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.7860755511750974 + 5*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.481222215353143 + 4*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.9649239604863782 + 4*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.741487633272715 + 4*p3 + -4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.5327713534821551 + 4*p3 + -6*p4 + -4*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4345257481847926 + 4*p3 + -8*p4 + 3*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.28348527828810416 + 4*p3 + -8*p4 + 3*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4250229540064594 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.29289068309417643 + 4*p3 + -8*p4 + 3*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.3016430111891024 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.16010516093782182 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.916399452456122 + 3*p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.4708914199810303 + 3*p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.706948090974523 + 3*p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.8873885811311557 + 3*p3 + -5*p5 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.102971160731987 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7128794179044995 + 3*p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.026254647370217 + 3*p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.6906737598659847 + 3*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9539030874229764 + 2*p3 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.4807184878360677 + 2*p3 + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.195843595394159 + 2*p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.706761140716684 + 2*p3 + -5*p6 + -2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.168078399549607 + 2*p3 + -1*p5 + -3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.23584878528294656 + 2*p3 + -2*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.572923185021377 + 2*p3 + -2*p5 + 6*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5729252794164792 + 2*p3 + -2*p5 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.715225664017956 + 2*p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.902741901993416 + 2*p3 + -3*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.7516627027839666 + 2*p3 + -3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.5610998095679083 + 2*p3 + -5*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.9674004166603494 + 2*p3 + -6*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5746138854677836 + 2*p3 + -2*p4 + 3*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.16702888208048333 + 2*p3 + -2*p4 + d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71181703598881 + 2*p3 + -2*p4 + 3*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.682053761721627 + 2*p3 + -2*p4 + -3*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.0624693566844732 + 2*p3 + -3*p4 + -4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.7297843279734675 + 2*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.872458894169938 + p3 + p5 + -4*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.859903161565699 + p3 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.3110890651701128 + p3 + p6 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.017891395657144 + p3 + d + -1*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5821341601487768 + p3 + -1*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.4144223477286215 + p3 + -2*p6 + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 3.469369675904533 + p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5861814041512265 + p3 + -1*p5 + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.0721596077227877 + p3 + -2*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.5608845934745041 + p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.252847977124787 + p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.716455946607687 + p3 + -1*p4 + d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.8366127559021195 + p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.483088504420617 + p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.5715627008694473 + 2*p5 + -6*p6 + 3*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71315535445924 + 2*p5 + -6*p6 + 3*p7 + -2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.941801847054274 + p5 + d + -1*l + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.539673624071651 + p5 + -3*p6 + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 5.681266277661444 + p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.891233916034099 + 4*p1 + -15*p2 + 6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.749641262444307 + 4*p1 + -15*p2 + 6*p3 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.8252302421193881 + p1 + -3*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.700937526096505 + 28*p2 + -28*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.037800340939693186 + 26*p2 + -27*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.0832178308321818 + 26*p2 + -28*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5348018780322419 + 26*p2 + -30*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.258355704146989 + 23*p2 + -22*p3 + 2*d + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.367242781921636 + 22*p2 + -21*p3 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.505883892216748 + 22*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.368299578783718 + 20*p2 + -19*p3 + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.22670692519392546 + 20*p2 + -19*p3 + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.181135356721752 + 20*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.708085172982196 + 19*p2 + -19*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.22648806090572535 + 18*p2 + -17*p3 + -3*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.575346574687771 + 18*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.0194093000092868 + 16*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.82887118197029 + 15*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.711144909693868 + 15*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.690818979758068 + 15*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.04532271001578875 + 15*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.9933267675982664 + 14*p2 + -9*p3 + -2*p5 + 2*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5347121596103728 + 14*p2 + -9*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.71753892340855 + 14*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.23079326457161978 + 13*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.37091320933858 + 13*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.507838835511907 + 13*p2 + -15*p3 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.419357083157394 + 12*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.712549376142947 + 12*p2 + -12*p3 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.021313105157362 + 11*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -4*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.031072147663155 + 10*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.712407655407686 + 9*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5650788026982883 + 8*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.582053010836876 + 8*p2 + -13*p3 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.724558820691312 + 8*p2 + -13*p3 + -3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.899884448942051 + 7*p2 + -8*p3 + d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.866760892266002 + 7*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.7030460243725722 + 7*p2 + -11*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.844638677962365 + 7*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.171542520550649 + 6*p2 + -4*p3 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.23250822509462937 + 6*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.374100878684423 + 6*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.0987835667627266 + 6*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.712691271411135 + 6*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.044008353546013 + 6*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.517776042141062 + 6*p2 + -8*p3 + 2*d + -4*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5722325582363628 + 5*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.873906985352002 + 5*p2 + -6*p3 + p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.181823016447038 + 5*p2 + -6*p3 + 4*d + l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1821356049160703 + 5*p2 + -6*p3 + 4*d + -2*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.0163066366963327 + 5*p2 + -6*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.040542951326277075 + 5*p2 + -6*p3 + 2*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.04023036285724489 + 5*p2 + -6*p3 + -1*l + -2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3364464302735626 + 5*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.3830585895407248 + 5*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.713080654367254 + 4*p2 + -4*p3 + 2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.906803981294508 + 4*p2 + -5*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.201096861909736 + 4*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.00722955381751 + 4*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.967516332017632 + 3*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5871945677820094 + 3*p2 + -2*p3 + -1*p5 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.730301643563758 + 3*p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.4034782606539915 + 3*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.208955406894716 + 3*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.23224799650315703 + 2*p2 + -1*p3 + 3*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.782937108612477 + 2*p2 + -1*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.7115473826193774 + 2*p2 + -2*p3 + d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.13924885093729 + 2*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.8963676104992824 + 2*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.0592724455919122 + 2*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.098310433497461 + 2*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9337057882530475 + p2 + -4*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.711529231195157 + p2 + -1*p3 + -3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.8879968368737927 + p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.9572726030802434 + p2 + -8*p3 + 12*p4 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.098865256670036 + p2 + -8*p3 + 12*p4 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1842062635406356 + 16*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6879887368464 + 15*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.170384835159484 + 14*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.15686111745713996 + 14*p3 + -23*p4 + 4*d + -3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5533334264657507 + 13*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.05356293301322958 + 13*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.051625102443057 + 12*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.2004257828123452 + 10*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.052666565902672 + 10*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.246082042244822 + 8*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.023374679571501 + 8*p3 + -9*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.534852309549308 + 8*p3 + -10*p4 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.4887178468984166 + 8*p3 + -10*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.205567863356254 + 8*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.341407039066847 + 8*p3 + -13*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.694142252688473 + 7*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.18554963496758 + 7*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.9587470572323283 + 6*p3 + -10*p4 + d + -1*l + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.6793549421026346 + 6*p3 + -10*p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.3753304631424523 + 6*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.7613726845411453 + 5*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.5773762095765985 + 5*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.277926098046236 + 5*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.7054099153081066 + 4*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.744618238850334 + 4*p3 + -3*p5 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.892454599312945 + 4*p3 + -5*p5 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.1472628792636725 + 4*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.2000425085086066 + 4*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9139933415493227 + 3*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.271057878373787 + 3*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.647788585181848 + 3*p3 + -3*p5 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.866698434973731 + 3*p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.9049888388724336 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.21039231947125 + 3*p3 + -4*p4 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.901071953968475 + 2*p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.9957670869584048 + 2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.716060804065036 + 2*p3 + -2*p6 + -4*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.050630081738178304 + 2*p3 + -3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.202776068678031 + 2*p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.903120455409857 + 2*p3 + -1*p5 + -5*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.523101216221821 + 2*p3 + -2*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.225723649184935 + 2*p3 + -2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.626488761523434 + 2*p3 + -4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6148046293510083 + 2*p3 + -4*p5 + 2*p6 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6123314978009324 + 2*p3 + -4*p5 + 2*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.060405364304331 + 2*p3 + -4*p5 + 4*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.720249070671047 + 2*p3 + -2*p4 + 4*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.709986360136394 + 2*p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.002616125005715 + 2*p3 + -6*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.765239827561422 + p3 + 2*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.678946867126885 + p3 + p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.012662580747727 + p3 + -3*p6 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.0721596077227877 + p3 + -2*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.7652769860778563 + p3 + -2*p5 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.6053301010082405 + p3 + -2*p5 + 2*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.372985413264523 + p3 + -4*p5 + 5*p6 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.5145780668543156 + p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.0017575550550748 + p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.029639564416485 + p3 + -2*p4 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 5.422139687078799 + p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.215475399388125 + 4*p4 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.007457093762070972 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.136544454763008 + p4 ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 2.810541219065387 + 2*p5 + -4*p6 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.7310171945638089 + p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.9250437276737165 + p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.243071881382225 + p6 + d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.3970374806136725 + 2*p7 + l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.25544482702388 + 2*p7 + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.71311573548522 + 3*d ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.711216642726125 + 2*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5707403017259076 + l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.2408821658077227 + 3*p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.8134370693602957 + 3*p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5475307387999615 + p1 + -1*p3 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.268947741314859 + 29*p2 + -33*p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.410540394904653 + 29*p2 + -33*p3 + 2*p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.706186952887728 + 25*p2 + -25*p3 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3645411697758407 + 23*p2 + -25*p3 + d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.5061338233656345 + 23*p2 + -25*p3 + -3*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.707317402644245 + 22*p2 + -22*p3 + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5331087341248824 + 21*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.518052502294578 + 20*p2 + -20*p3 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.969636549494638 + 20*p2 + -22*p3 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.181342003705188 + 19*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.973963918842032 + 19*p2 + -21*p3 + 3*p4 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.8323712652522393 + 19*p2 + -21*p3 + 3*p4 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.10035538479212275 + 17*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.6861955685762678 + 15*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.70547503308584 + 15*p2 + -15*p3 + -4*d + 2*l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5638823794960461 + 15*p2 + -15*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.187604943193045 + 13*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9326283965057915 + 13*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.23116484516936936 + 12*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.371372579997705 + 12*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.711586827060473 + 12*p2 + -12*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.714473427110347 + 10*p2 + -10*p3 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.692267428504298 + 10*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.163484509927116 + 9*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.584882181056042 + 9*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.691423561810958 + 9*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3952928239984295 + 8*p2 + -10*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.497162464947899 + 8*p2 + -13*p3 + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.6570952128505745 + 8*p2 + -13*p3 + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.2482036304902808 + 8*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.23239268429814738 + 7*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.571198276121631 + 7*p2 + -7*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.041337476191685 + 7*p2 + -8*p3 + d + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.8997448226018916 + 7*p2 + -8*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.8995254347149158 + 7*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3899042944658222 + 7*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.374097388025919 + 6*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.705879076807676 + 6*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.040227570330441706 + 6*p2 + -7*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.135478590687131 + 5*p2 + -6*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.6736089521425854 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.029221715596924 + 4*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.841160245261457 + 4*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.906641491141147 + 4*p2 + -5*p3 + -1*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.04762671916134646 + 4*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.373019298146962 + 3*p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.3962634015954636 + 3*p2 + -4*p3 + p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1579004865216525 + 3*p2 + -4*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.028600535919505878 + 3*p2 + -4*p3 + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.008634343837491 + 3*p2 + -5*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.629156148219257 + 3*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.480753419916057 + 3*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.061492355362473 + 2*p2 + p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.9186870470083948 + 2*p2 + p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5702172265490848 + 2*p2 + -2*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.85699457036725 + 2*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.576144015623007 + 2*p2 + -2*p3 + -4*d + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.667289681011472 + 2*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.666839036998608 + 2*p2 + -7*p3 + 7*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.564225004624846 + 2*p2 + -13*p3 + 15*p4 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.4226323510350529 + 2*p2 + -13*p3 + 15*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.6615127902253466 + p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.9690900529125718 + p2 + -8*p3 + 12*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.110680961173113 + p2 + -8*p3 + 12*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.701977027202359 + 14*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.1512175953208163 + 14*p3 + -23*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.2928102489106097 + 14*p3 + -23*p4 + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.6642368831252263 + 11*p3 + -21*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.6967680750531486 + 11*p3 + -21*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.8389693249531125 + 11*p3 + -21*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.806325035689661 + 11*p3 + -21*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.1165824259762482 + 10*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.33329557887662076 + 10*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.201310664743106 + 9*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.4730933273653464 + 8*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.8177813514048015 + 7*p3 + -8*p4 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.45740454572253597 + 7*p3 + -13*p4 + -1*p5 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.5991244338148 + 7*p3 + -13*p4 + -1*p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4943048288652923 + 7*p3 + -16*p4 + 4*p5 + 5*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.5643740302480164 + 6*p3 + -8*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.2720136036755454 + 6*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.799959479340104 + 5*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.1907866784194305 + 5*p3 + -8*p4 + d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.980923942833136 + 4*p3 + -6*p5 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.6874199425414917 + 4*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.012155869174290106 + 4*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.782282269575445 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.6407049748830707 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.4507791268439902 + 4*p3 + -8*p4 + 3*p5 + d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.30921649291733133 + 4*p3 + -8*p4 + 3*p5 + -1*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.042760251601278 + 4*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.04760699694079893 + 3*p3 + -4*p6 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.009826029155802876 + 3*p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.9438353301657725 + 3*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.594693932505245 + 3*p3 + -2*p5 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4839215160793278 + 3*p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 6.05748438976651 + 3*p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.838906327065432 + 3*p3 + -3*p4 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.091743589695249 + 3*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.668743889344235 + 3*p3 + -4*p4 + d + l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.5271512357544412 + 3*p3 + -4*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.0696396928504417 + 3*p3 + -4*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.238645194302075 + 3*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.248313794759349 + 2*p3 + 2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.0214448775158878 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.7127972128967315 + 2*p3 + -2*p6 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.824129496953422 + 2*p3 + -4*p6 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.764017207423767 + 2*p3 + -1*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4297459724986479 + 2*p3 + -1*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5775701241548117 + 2*p3 + -2*p5 + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.722221118192874 + 2*p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5931344468253217 + 2*p3 + -3*p5 + p6 + 4*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.888163707346917 + 2*p3 + -3*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.745556493862939 + 2*p3 + -3*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.740899465813109 + 2*p3 + -4*p5 + 3*p6 + 4*d + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.759753725625312 + 2*p3 + -4*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.918585119780078 + 2*p3 + -4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.668234602268503 + 2*p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.7119666022073905 + 2*p3 + -4*p4 + 4*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.839694526253949 + p3 + 2*p5 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.807030340237025 + p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.552462898726439 + p3 + p5 + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.2971259245520153 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.714053483895683 + p3 + -4*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5982215579961092 + p3 + -1*p5 + -6*d + 2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.764347083150711 + p3 + -2*p5 + p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.7671975463867504 + p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.8061560878180676 + p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.761359070972979 + p3 + -2*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4398592828493293 + p3 + -3*p5 + 5*p6 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.686215665357616 + p3 + -4*p5 + d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.95956250055381 + p3 + -4*p5 ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.9942942036026468 + p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.187405643589101 + p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.8171829034992424 + p4 + d + -1*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.7904498528827373 + 2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.9478291925880615 + 2*p5 + -4*p6 + -2*d ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.5454441976792026 + p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.7168170552299244 + p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.4935122748519616 + p5 + -1*p6 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.637116594937603 + p5 + -1*p6 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 2.7031020664381944 + p5 + -5*p6 + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.844694720027988 + p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.929491533237815 + p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.0970066470512716 + p6 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.2514597337394346 + 3*p1 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.7352693742137095 + 3*p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.0432023350024906 + p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.03691720433818406 + 24*p2 + -25*p3 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.22704551906881235 + 20*p2 + -19*p3 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.8150944255196726 + 20*p2 + -20*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.07634942812849195 + 19*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.22730539859443433 + 19*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5566424046929235 + 19*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -2*d + -4*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5676878953970947 + 17*p2 + -17*p3 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.636307983895154 + 15*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.8251253648279766 + 14*p2 + -11*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.025268353311598303 + 14*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.4845224329407891 + 14*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5700381557678302 + 12*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.4955571280985485 + 12*p2 + -14*p3 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.9208908827532047 + 12*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.2315214159355518 + 11*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.712234693278813 + 11*p2 + -11*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.712821123907484 + 11*p2 + -11*p3 + 3*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.021721686735254 + 10*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.04709753533214178 + 9*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.512198667983389 + 9*p2 + -11*p3 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.713055696158952 + 8*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.0394806204004885 + 8*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.008225038632948477 + 8*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.708661663732447 + 8*p2 + -13*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.755962704455371 + 8*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.616068256227769 + 8*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.5694370728717595 + 8*p2 + -13*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.039979559043733306 + 7*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.321876796238715 + 7*p2 + -9*p3 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.104196364870253 + 7*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.770929243358756 + 6*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.6917565536356056 + 6*p2 + -8*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.3481448486509051 + 6*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.7148992874478335 + 5*p2 + -5*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.710648014455826 + 5*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.636353711521557 + 5*p2 + -5*p3 + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.793543657508089 + 5*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.4640478009527187 + 5*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.2325593632417128 + 4*p2 + -3*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.714383019055093 + 4*p2 + -4*p3 + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.713327269390562 + 4*p2 + -4*p3 + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.0477632548987525 + 4*p2 + -5*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.9062428579399913 + 4*p2 + -5*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.170783110796473 + 3*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5704884507148447 + 3*p2 + -3*p3 + 6*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.712801925285712 + 3*p2 + -3*p3 + d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.014753093634182868 + 3*p2 + -4*p3 + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.005012411078802515 + 3*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1536088964239233 + 3*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5679303216301967 + 2*p2 + -2*p3 + l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.5236593555199764 + 2*p2 + -7*p3 + 7*p4 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.594161415553829 + 2*p2 + -13*p3 + 15*p4 + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.45256876196403517 + 2*p2 + -13*p3 + 15*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.4595228688323147 + p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.8859954678205306 + p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.16023345113616 + p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.68313864988635 + 15*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1885578929646337 + 15*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.15136612284016102 + 14*p3 + -23*p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.809425787638754 + 13*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.69916251774891 + 12*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.835175868820535 + 12*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.387725259393024 + 10*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.698871213798435 + 9*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.108016367004094 + 8*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.2332952365459375 + 7*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.1598945166937393 + 7*p3 + -12*p4 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.301487170283533 + 7*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.315232685340538 + 7*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.4381923103824327 + 7*p3 + -13*p4 + -1*p5 + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.5797849639722257 + 7*p3 + -13*p4 + -1*p5 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.9405303576975628 + 6*p3 + -7*p4 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.14930052567042573 + 6*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.0703053954204185 + 5*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.46014383998354097 + 4*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.464250459173825 + 3*p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.577427556249875 + 3*p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6156549537625802 + 3*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.715191081003817 + 2*p3 + 2*p5 + -7*p6 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.9589013613348376 + 2*p3 + -1*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.1762501801454204 + 2*p3 + -3*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.663058968911372 + 2*p3 + -5*p6 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5958990483604807 + 2*p3 + -3*p5 + p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.7468272680913164 + 2*p3 + -3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.8953967008330315 + 2*p3 + -3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.9137727234335542 + 2*p3 + -4*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.237024656091599 + 2*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 2.1051236413052044 + 2*p3 + -5*p5 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5717546870871668 + 2*p3 + -2*p4 + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.6990979405665856 + 2*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 5.950217326603565 + p3 + p4 + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5945097662758934 + p3 + p5 + -2*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.906754430940385 + p3 + p5 + -5*p6 ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.2807739347900813 + p3 + d + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5885587171253681 + p3 + -1*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.589179181674452 + p3 + -1*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.5765222284719143 + p3 + -1*p5 + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.74316855987531 + p3 + -1*p5 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.363462556298108 + p3 + -2*p5 + 4*p6 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.5236394417698703 + p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.754651396096765 + p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.7205841738874295 + p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 0.8771457588516601 + p3 + -2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.7813603696679094 + p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.4903298414938753 + 2*p5 + -5*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.493762231495797 + 2*p5 + -5*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.351797473709479 + 2*p5 + -5*p6 + -2*d + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.632953461072821 + 2*p5 + -5*p6 + -4*d + 2*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.4518535515315176 + p5 + 3*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.676741652115307 + p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.1518750693483593 + p7 + -2*p8 + 2*d ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 4.288188800082571 + p7 + -2*p8 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.981781780658807 + 4*p1 + -5*p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.716322254386984 + 2*p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.678068476907622 + p1 + -1*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5380307371484314 + p1 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.6446258400510424 + p1 + -10*p3 + 11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.7862184936408356 + p1 + -10*p3 + 11*p4 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.701862027001285 + 27*p2 + -27*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.021398834816902 + 26*p2 + -29*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.8798061812271087 + 26*p2 + -29*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.03814731239498966 + 25*p2 + -26*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.778476902712373 + 23*p2 + -24*p3 + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.920069556302166 + 23*p2 + -24*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.712456001027967 + 20*p2 + -20*p3 + -1*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5708633474381732 + 20*p2 + -20*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.173006136664738 + 20*p2 + -21*p3 + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.0314555455099182 + 20*p2 + -21*p3 + -4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -4*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.177076785075798 + 18*p2 + -16*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.708725010685978 + 18*p2 + -18*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.714147748671924 + 18*p2 + -18*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.7104359569517085 + 18*p2 + -18*p3 + -4*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.14108390710947 + 17*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5681853142339128 + 16*p2 + -16*p3 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.1693145652688951 + 15*p2 + -12*p3 + d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.310907218858688 + 15*p2 + -12*p3 + -3*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.0197286952624016 + 15*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.04731290896183788 + 14*p2 + -15*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.2341055759210047 + 14*p2 + -15*p3 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.7078376852942645 + 13*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.1809662343172342 + 12*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.3717979167364156 + 11*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.723033743492603 + 11*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.712383395331083 + 8*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.858901674644272 + 8*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.641709262829617 + 8*p2 + -13*p3 + l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.5001166092398246 + 8*p2 + -13*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.527164168187539 + 7*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.03757938225639071 + 6*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.03441911457980457 + 6*p2 + -7*p3 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.914600392558116 + 6*p2 + -9*p3 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.1812065491586003 + 6*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.170819430641548 + 5*p2 + -3*p3 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.017132377460401 + 5*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.432180557767205 + 5*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.440928322511126 + 4*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.3734615645794173 + 3*p2 + -2*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.711366217443021 + 3*p2 + -3*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.71206644353892 + 3*p2 + -3*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.049863060521827 + 3*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.169111285400938 + 3*p2 + -5*p3 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.436461326823571 + 3*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.944096448418504 + 3*p2 + -5*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.3599642183454106 + 3*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.0061905168222154 + 3*p2 + -7*p3 + 4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.045293788540106 + 2*p2 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5762888779509228 + 2*p2 + -2*p3 + -6*d + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.549142201298328 + 2*p2 + -3*p3 + p5 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.260188831958676 + 2*p2 + -4*p3 + d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.751500570194773 + 2*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.6921059685518545 + 13*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.200630518431921 + 11*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.0184067743886245 + 11*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6864750042878287 + 10*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.4699899489240584 + 9*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.810378745908659 + 8*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.679526874030589 + 6*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5379342204407964 + 6*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.706564808172468 + 6*p3 + -8*p4 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.9498951388236465 + 5*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.8264680721164845 + 5*p3 + -9*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.06558266650586413 + 3*p3 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.189199650530592 + 3*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.86266881029841 + 3*p3 + -1*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.8263167180770712 + 3*p3 + -4*p5 + 3*d + -4*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.3656873274956254 + 3*p3 + -5*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.1055564829596993 + 3*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.5621742172588027 + 3*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.22522867380907 + 3*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.096346755057725 + 3*p3 + -8*p4 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.9257669666207932 + 2*p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 6.082069446675952 + 2*p3 + -1*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.762003621065741 + 2*p3 + -1*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.69279015461527 + 2*p3 + -2*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6336651808468348 + 2*p3 + -3*p5 + p6 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.887692119383027 + 2*p3 + -3*p5 + 6*d + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.7429268062789596 + 2*p3 + -3*p5 + 4*d + -4*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.5764841887925374 + 2*p3 + -4*p5 + 3*p6 ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.891445624472367 + 2*p3 + -5*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.16301916265695157 + 2*p3 + -2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.3046118162467444 + 2*p3 + -2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5649011281804353 + 2*p3 + -2*p4 + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.56406947879186 + 2*p3 + -2*p4 + -3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.6827319966689505 + 2*p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.695028888446803 + 2*p3 + -2*p4 + -2*d + l + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.1111954587416508 + 2*p3 + -4*p4 + p5 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.2527881123314435 + 2*p3 + -4*p4 + p5 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5560585920581314 + p3 + p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 5.582782758492085 + p3 + 2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.0482459704782707 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.264029769545223 + p3 + -2*p7 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.12243711595542982 + p3 + -2*p7 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.12215123102395314 + p3 + -2*p7 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5756237329729876 + p3 + -1*p6 + -4*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.27242599948284213 + p3 + -2*p6 + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6019811717378303 + p3 + -1*p5 + -4*d + 2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.6403791049150899 + p3 + -2*p5 + -3*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 2.6265074195497973 + p3 + -3*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.630015722875864 + p3 + -3*p5 + 2*p6 + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.4884230692860714 + p3 + -3*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5059662462624923 + p3 + -3*p5 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.502183785704204 + p3 + -3*p5 + d + -2*l + f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.719237303303665 + p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 0.762218794667562 + 2*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.778463804244666 + 2*p5 + -5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.927456653862915 + 2*p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.480676276363119 + p5 + 3*d ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 3.507359385068067 + p5 + -1*l + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.3296112143206105 + 4*p1 + -3*p3 + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.12737011455326658 + 3*p1 + -1*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5948370155106422 + 3*p1 + -3*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.4153084258949091 + 2*p1 + -2*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.5569010794847027 + 2*p1 + -2*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5282129110401128 + 20*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.1651914419355665 + 14*p2 + -12*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9099104928301327 + 11*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.713050634704121 + 10*p2 + -10*p3 + 3*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.044873687789151 + 10*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.074177906469794 + 9*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.035028809077426 + 9*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.035005596198375 + 9*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.128166899848385 + 8*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5576960599623524 + 8*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.05602995591092356 + 8*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1746875698694763 + 8*p2 + -12*p3 + d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.2324993239154442 + 6*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.373338693400077 + 6*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.935005734974882 + 6*p2 + -9*p3 + d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.23256686815749641 + 5*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.3741595217472895 + 5*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3852791719480373 + 5*p2 + -7*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.52687182553783 + 5*p2 + -7*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.7683429889782016 + 3*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.7046259049097938 + 3*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3206393323041006 + 3*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.14761369894164 + 3*p2 + -7*p3 + 4*p4 + -4*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.0352123837214693 + 2*p2 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.2628518383347354 + 2*p2 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.716253837480306 + 2*p2 + -2*p3 + 3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.7149060942319165 + 2*p2 + -2*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.038647208686028 + 2*p2 + -13*p3 + 15*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5711083916651534 + p2 + -1*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.789791025083376 + p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.903040876894283 + p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.11580384309525 + p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.693570997925979 + 12*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.3218551541559895 + 12*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.331502121028855 + 11*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.1123041003808347 + 9*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.966887481389821 + 9*p3 + -15*p4 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.5014003074029834 + 8*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.09825470650442238 + 8*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.984945164433097 + 8*p3 + -16*p4 + 6*p5 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.126537818022891 + 8*p3 + -16*p4 + 6*p5 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.180485562142918 + 7*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.9180470517683217 + 6*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.745770147658333 + 5*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.771555991093148 + 5*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.619322090548896 + 5*p3 + -8*p4 + p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.07123897203731 + 4*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.9075448735619793 + 4*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.1567639196144373 + 4*p3 + -4*p4 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1637031656891248 + 4*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1803832943470685 + 4*p3 + -7*p4 + 2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.292895953075199 + 3*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.817522876640898 + 3*p3 + -4*p5 + d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.276531545980625 + 3*p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.027000294518252 + 2*p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5714633916350087 + 2*p3 + -2*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.5758384084709829 + 2*p3 + -2*p6 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.714649007233096 + 2*p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.3205585235597332 + 2*p3 + -2*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.604206292001198 + 2*p3 + -3*p5 + p6 + 4*d + -3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.74496660656903 + 2*p3 + -4*p5 + 3*p6 + -2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.104892734245166 + 2*p3 + -5*p5 + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.218597993447818 + 2*p3 + -5*p5 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.2683793300690684 + p3 + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.421446250770347 + p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.008998785581941 + p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.7899667372474686 + p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.1839449622566628 + p3 + -2*p5 + 3*d + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.811596104563609 + p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.28697193103313 + 2*p4 + 3*d + l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.428564584622923 + 2*p4 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 2.24638535497387 + p4 + -2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.9744990112957441 + p5 + 2*d + -3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.23602733246542557 + p5 + -3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 5.042403514800486 + p5 + -2*d + 3*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.251346121303446 + 2*p8 + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.1097534677136531 + 2*p8 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.994923760860475 + 4*p1 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.568916607190499 + 2*p1 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.8485239299152799 + p1 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5608699412071039 + 24*p2 + -24*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.702462594796897 + 24*p2 + -24*p3 + -3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.565286696907151 + 24*p2 + -26*p3 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.08695474679531029 + 23*p2 + -22*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.367034738674798 + 21*p2 + -20*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -5*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -3*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.369206451863055 + 17*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.627610310100765 + 14*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.044835588621557135 + 13*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.183666782268845 + 11*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.527819364788738 + 11*p2 + -13*p3 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.2318085225975049 + 10*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.897044972781982 + 10*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.4480469629379683 + 8*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.712583933662137 + 7*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.710005733291092 + 7*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.525959716470738 + 6*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.604518033300555 + 6*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.401627522013493 + 4*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.4964742986204715 + 3*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.933120081251029 + 2*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.528006438589602 + 2*p2 + -1*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5874432772004183 + 2*p2 + -1*p3 + -1*p5 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.048921455390376 + 2*p2 + -3*p3 + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.9088463655851915 + 2*p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.159377558667615 + 2*p2 + -3*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.08846253673610818 + p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.2327276129816051 + p2 + 3*d + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.110468048001004 + p2 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5711565627525081 + p2 + -1*p3 + 3*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.155886708634068 + p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.1834090056366415 + 13*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.5575719585542188 + 12*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.05577478877428199 + 12*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.7024784687947734 + 11*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.6946770130729676 + 11*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.0326244010082954 + 7*p3 + -8*p4 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.46260807035443186 + 7*p3 + -9*p4 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.929204933178004 + 7*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.879670935206712 + 6*p3 + -7*p5 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.48971269307037 + 6*p3 + -6*p4 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.202084901297607 + 6*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.9388101696851137 + 5*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.0326984114668964 + 5*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.705043413161822 + 5*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.2191894770330025 + 5*p3 + -6*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.4141978813901817 + 4*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.244776527466015 + 4*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.698298230703322 + 4*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.53978111935694 + 4*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.4330731106483583 + 4*p3 + -8*p4 + 3*p5 + 4*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.29143315863583596 + 4*p3 + -8*p4 + 3*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.9179271391503927 + 3*p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.8867922021257495 + 3*p3 + -5*p5 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.207237113249494 + 3*p3 + -4*p4 + 3*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.0967701379409927 + 3*p3 + -4*p4 + -4*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.260001400593645 + 3*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.160712045912007 + 2*p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.959215346067271 + 2*p3 + -1*p6 + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.159670974009827 + 2*p3 + -1*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.040217838978213 + 2*p3 + -1*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.56901399656276 + 2*p3 + -2*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.742774289997285 + 2*p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.7600870580174928 + 2*p3 + -3*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.111938653930418 + 2*p3 + -3*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.7720469267167838 + 2*p3 + -3*p5 + -1*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.610322623831887 + 2*p3 + -4*p5 + 2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.5880623539844176 + 2*p3 + -5*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.272755211071352 + 2*p3 + -5*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.2827728688807065 + 2*p3 + -4*p4 + p5 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.908309519303912 + p3 + 2*p5 + -6*p6 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.5609099177452914 + p3 + 2*p6 + d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.702502571335084 + p3 + 2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.12215123102395314 + p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.24286500887596374 + p3 + -2*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.18426383391100212 + p3 + -2*p5 + -1*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.5059664207954178 + p3 + -3*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.4017292407156176 + p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.3669601876207881 + p3 + -3*p5 + d + l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.5085528412105815 + p3 + -3*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 4.041107948398414 + 2*p5 ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.6716481002229204 + 2*p5 + -3*p6 + 2*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.670185514309748 + 2*p5 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 0.529422939312204 + 2*p5 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.8106335469828174 + 2*p5 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 5.947786082955537 + 2*p5 + -4*p6 + -2*d + l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.2609625109211346 + p5 + -3*d ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.097560090957079 + p6 + 4*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 2.9484929158076447 + p7 + -2*p8 + 2*d + -1*l ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.08866539498509 + p7 + -2*p8 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.8482204171583582 + p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.472658408312383 + 26*p2 + -28*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.706826441525658 + 24*p2 + -24*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.720919975235512 + 23*p2 + -23*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.2245762527380406 + 21*p2 + -22*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.04121787014802329 + 20*p2 + -21*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.236835096338198 + 19*p2 + -20*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1807297422035887 + 18*p2 + -19*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.0200381421387803 + 14*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.111157095491374 + 13*p2 + -11*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.712358611655706 + 12*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.467971675672002 + 10*p2 + -12*p3 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.714437996926531 + 9*p2 + -9*p3 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.038471121961134 + 8*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.4897397711687255 + 8*p2 + -10*p3 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.039110087000289 + 8*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.1624447917967538 + 7*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.165497747219292 + 7*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.18374549661811 + 7*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.3733732509192658 + 6*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.663412598112775 + 5*p2 + -5*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1582916148070246 + 5*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.53022285770166 + 5*p2 + -7*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.169879221773499 + 4*p2 + -2*p3 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.712614825989898 + 4*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.7116121343346276 + 4*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.046922180732216 + 4*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.0300840827803346 + 3*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.2320053957371298 + 3*p2 + -2*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.048984636309298 + 3*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.197920737231907 + 3*p2 + -5*p3 + p5 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5774090302648527 + 2*p2 + -2*p3 + -3*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1179333193156085 + 2*p2 + -3*p3 + 3*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.3741858762189945 + p2 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5697074158745774 + p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5489903576534045 + p2 + -2*p3 + p5 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.679810664566963 + p2 + -2*p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.3345717721239956 + p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.4761644257137885 + p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.6896401758829542 + 14*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.1921862579466045 + 14*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.0590418790994067 + 11*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.685963473779019 + 10*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.6954775956008574 + 10*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5615415439032714 + 9*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.0427209561981574 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.33538093226017 + 8*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.1150264479514619 + 7*p3 + -10*p4 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.846801506968069 + 7*p3 + -11*p4 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.4943048288652923 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.233403097893709 + 6*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.680650491508073 + 6*p3 + -6*p4 ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.0247922529866043 + 6*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.0797390405671068 + 5*p3 + -6*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.03449782892906952 + 5*p3 + -8*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.6110048730364916 + 4*p3 + -4*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.6939673706974236 + 4*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.6384205219234516 + 3*p3 + -5*p4 + l + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.5533035813355416 + 3*p3 + -5*p4 + -4*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.691417976757352 + 2*p3 + -2*p7 + -2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.5906974435907617 + 2*p3 + -2*p5 + -3*d + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.888420096214035 + 2*p3 + -3*p5 + d + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.713207199236342 + 2*p3 + -4*p5 + 3*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.058237141774578 + 2*p3 + -4*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.1447850183279829 + 2*p3 + -4*p4 + p5 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.764112336366317 + 2*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.991574465527581 + 2*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 2.2201258291800636 + p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 5.846520334425573 + p3 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.632231592894197 + p3 + -1*p7 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 3.8503382251676777 + p3 + -5*p6 + l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.582918013010797 + p3 + -3*p5 + 5*p6 + d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.2873682953062575 + 2*p4 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.4289609488960515 + 2*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.0420684030857865 + 3*p5 + 2*d ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 1.4066784793738145 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 0.442477268229004 + p5 + l + -2*f ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 6.245401721400712 + p6 + -4*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.710840698805246 + 2*p1 + -2*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.061808268455401 + p1 + -2*p3 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.0384724672346362 + 24*p2 + -25*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.953366241141696 + 20*p2 + -20*p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5228749960558137 + 19*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.6997196013511963 + 18*p2 + -15*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.4700597705924547 + 18*p2 + -18*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.709292068159951 + 17*p2 + -17*p3 + 2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.2312364291636513 + 13*p2 + -14*p3 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.475209006986297 + 13*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.116003525758312 + 12*p2 + -10*p3 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.23150099558330348 + 11*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.372300397028065 + 10*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.713237384934084 + 9*p2 + -9*p3 + 3*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.8835558465920927 + 9*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.100311768557456 + 8*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.038490320582907 + 8*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.1655296612496535 + 6*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.901934687214369 + 6*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.1278370071248083 + 5*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.23256128310389002 + 5*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.713497788058482 + 5*p2 + -5*p3 + 3*d + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.018238516150415544 + 5*p2 + -6*p3 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.4492585790030195 + 5*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.0285312633448354 + 4*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.07259679570377894 + 4*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.3972144569998255 + 4*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.712303284718417 + 3*p2 + -3*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.3684990529205883 + 3*p2 + -5*p3 + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.4485424789092423 + 3*p2 + -6*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.8346093009520719 + 3*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.3726578404588734 + 2*p2 + -1*p3 + -1*d + l + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 6.25666293480043 + 2*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1728535948881142 + 2*p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.03139829871045279 + 2*p2 + -3*p3 + -3*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.3152886764162615 + 2*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1513059344759173 + p2 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.7121835551317295 + p2 + -1*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.836306144044128 + 11*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.814993903053075 + 10*p3 + -19*p4 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.956587952906269 + 10*p3 + -19*p4 + 3*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.1044693173686317 + 8*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.1959406187039365 + 8*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.313752646134848 + 7*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.666132851288301 + 5*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.391858365096355 + 5*p3 + -5*p4 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.696759731466006 + 4*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6052419703793315 + 4*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5303078297412815 + 4*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.130512430833507 + 3*p3 + -6*p4 + 2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.366745022517284 + 3*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.7179352621867274 + 2*p3 + -5*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.897241313824514 + 2*p3 + -1*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.3627757692374485 + 2*p3 + -2*p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.888420445279885 + 2*p3 + -3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.891474073339174 + 2*p3 + -3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.560262766655286 + 2*p3 + -4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 5.066919282138624 + 2*p3 + -4*p5 + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.441318561135238 + 2*p3 + -1*p4 ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6101102172619193 + 2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.7209686699216435 + 2*p3 + -2*p4 + d + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.199659766301961 + 2*p3 + -3*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.200561926992317 + 2*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.726611319393341 + 2*p3 + -4*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.73162371347551 + p3 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 2.738933675981638 + p3 + 2*p5 + -5*p6 + -4*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.892912399175743 + p3 + p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.7664098622986928 + p3 + p5 + -5*p6 + d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.440544001009837 + p3 + p6 + -1*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1442129163958117 + p3 + -2*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.1690812402428534 + p3 + -1*d + f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.4560899722282503 + p3 + -1*p7 + -2*d + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5452665231613496 + p3 + -1*p5 + l + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.4393562789589045 + p3 + -3*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.945898841438722 + p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.4645337176131075 + 3*p5 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 4.642696587089154 + 2*p5 + -2*p6 + l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.5306546181653363 + 2*p5 + -3*p6 + -2*d ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.5589469374372564 + 2*p6 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.6176025666748803 + 4*p1 + -4*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.999557784557445 + 4*p1 + -5*p3 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.720164073136473 + 3*p1 + -3*p3 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5775771054718197 + 2*p1 + -2*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.754096938986673 + p1 + 15*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.6125042853968798 + p1 + 15*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.702755635578308 + 26*p2 + -26*p3 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.04799952148957244 + 23*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.3645411697758407 + 23*p2 + -25*p3 + d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.5061338233656345 + 23*p2 + -25*p3 + -3*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.706008231172324 + 22*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.0558229768582703 + 19*p2 + -17*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.22642697438190554 + 19*p2 + -18*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1800748946682402 + 17*p2 + -18*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.567508160477406 + 12*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.23187746310295865 + 10*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.716147023330084 + 10*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.23221570791199517 + 9*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.474693113154358 + 9*p2 + -11*p3 ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.169647101481299 + 8*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5694998962265152 + 7*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.028053724264856052 + 7*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.043656669701734 + 6*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.373532774012898 + 5*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.105229965849917 + 5*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.7568945102480615 + 5*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.1465123876853145 + 3*p2 + -4*p3 + d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.147249963827208 + 3*p2 + -4*p3 + -3*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.271051080088021 + 3*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.59311996059253 + 2*p2 + -1*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 6.088959657496976 + 2*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.20617455680088 + 10*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.7134784149037845 + 8*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.8041379551056695 + 8*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.091677973813691 + 7*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.62716888233967 + 7*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.0707432730347946 + 6*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.1463282469509126 + 5*p3 + -10*p4 + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.287920900540706 + 5*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.704944627526158 + 4*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.782282269575445 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.6407049748830707 + 4*p3 + -8*p4 + 5*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.669020174964825 + 3*p3 + -4*p4 + d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.6636682803498766 + 3*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.03232105428598219 + 3*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.091192614745345 + 3*p3 + -7*p4 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5715560686182897 + 2*p3 + -2*p6 + 4*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5725673123868953 + 2*p3 + -2*p5 + 4*d + -4*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.950874766637841 + 2*p3 + -6*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5388939769964676 + 2*p3 + -2*p4 + -3*d ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.2460418826753936 + 2*p3 + -5*p4 + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.07014390997302611 + 2*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.7511345576539963 + 2*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.2490524011021593 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 5.713476154474074 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.6778047236643798 + p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5741641141195448 + p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5800999789055774 + p3 + -1*p4 + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 1.5061849360177673 + 2*p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.6802770080447798 + 2*p5 + -3*p6 + l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 0.5387461391105073 + 2*p5 + -3*p6 + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.633720533279074 + p5 + -2*d + 2*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.714761755502776 + 4*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.03578186765976175 + 19*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.9002373630151213 + 19*p2 + -24*p3 + 10*p4 + -1*d + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.7586447094253279 + 19*p2 + -24*p3 + 10*p4 + -1*d + -2*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.06960791935973865 + 17*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.5909842011868645 + 17*p2 + -16*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.0288040583069216 + 15*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.5894001403577547 + 15*p2 + -15*p3 + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.253504936051872 + 13*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.04172506282865284 + 12*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.713380676465673 + 8*p2 + -8*p3 + 3*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.201198806134686 + 6*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.3741645832021203 + 5*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.712441165729325 + 5*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.698583076935564 + 5*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.0787115822330913 + 5*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.920787584756436 + 5*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.922810421359498 + 5*p2 + -8*p3 ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.895094043744102 + 4*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.713484698089092 + 3*p2 + -3*p3 + 3*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.5744047950233948 + 3*p2 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.137743836526662 + 3*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 4.626991939946784 + 3*p2 + -3*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7330745971843764 + 3*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.049939680475989 + 3*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.152140550924221 + 3*p2 + -4*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.374247660874515 + 2*p2 + -1*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.3325037484899407 + 2*p2 + -1*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.06464669741792 + 2*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.255594967831135 + 2*p2 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1140023142413416 + 2*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.2327829399188933 + p2 + 2*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.23363518419264212 + p2 + d + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.1951562847347237 + 13*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.704970624433696 + 10*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.7798496126673835 + 5*p3 + -7*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.430159790064296 + 4*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.28400974972832843 + 4*p3 + -8*p4 + 3*p5 + d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.4255856481573024 + 4*p3 + -8*p4 + 3*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7212407412570792 + 3*p3 + -1*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.7113707213058097 + 3*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.574638494610237 + 2*p3 + -2*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.808897842536659 + 2*p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.573043961805615 + 2*p3 + -2*p5 + 6*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.584445499677193 + 2*p3 + -2*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.7483162084761925 + 2*p3 + -3*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.4177360128498246 + 2*p3 + -4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.4701766906557052 + 2*p3 + -4*p5 + 4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 5.65058059688458 + 2*p3 + -5*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.5609511075156384 + 2*p3 + -5*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 2.5254683892896685 + 2*p3 + -1*p4 + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 6.088766973147556 + 2*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.7205673847333433 + p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.11593995328195573 + p3 + -1*p5 + d + l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.11602948867258302 + p3 + -1*p5 + d + -1*l + f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.2575326068717483 + p3 + -1*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 1.600074923128802 + p3 + -1*p5 + -3*d ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.76517540791539 + p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.8145537395140385 + p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.894716537525213 + p3 + -2*p4 + 3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.7504901820941601 + p3 + -2*p4 + -3*l ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.50766795927982 + p3 + -3*p4 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.304573942601977 + 4*p1 + -3*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.8228169753626555 + p1 + -3*p3 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.178888419842735 + 22*p2 + -23*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.03974969918124565 + 19*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.711152240076727 + 13*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.617942058709343 + 13*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.022096059859807 + 12*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.208930614721021 + 11*p2 + -9*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.020794044237819 + 11*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.437420908846318 + 8*p2 + -10*p3 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.4832439962603368 + 8*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 6.041462092700278 + 7*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.0976482215859877 + 6*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.7128275816257155 + 6*p2 + -6*p3 + 4*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.183408124473699 + 5*p2 + -6*p3 + l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.139488118581105 + 5*p2 + -7*p3 + d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.2326019492754615 + 4*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.36955954046905 + 4*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.1623634849485605 + 3*p2 + -1*p3 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.5935809020479814 + 3*p2 + -2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.419120267472849 + 3*p2 + -5*p3 + d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.5726182760010532 + 2*p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.840855170206525 + 9*p3 + -13*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.699262516616732 + 9*p3 + -13*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.306797658103626 + 8*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.7111703830026306 + 7*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.07563017794374507 + 7*p3 + -10*p4 ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.689569481549931 + 6*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.75517064004755 + 5*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.798547158909391 + 5*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.789031274761666 + 5*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.744857838563366 + 4*p3 + -5*p5 + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.131301860250817 + 4*p3 + -6*p4 + d + -1*l + f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.710960777457782 + 3*p3 + -3*p6 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 2.9031197657764736 + 3*p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.516522546672279 + 3*p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.230382805623134 + 3*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.215665491238617 + 3*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.878361065603091 + 2*p3 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.043780928646161 + 2*p3 + -1*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.748279058458076 + 2*p3 + -4*p5 + 2*p6 + 2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 4.718330081158478 + 2*p3 + -2*p4 + -1*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.587591630186838 + 2*p3 + -4*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.1397321071122172 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.4850552819614231 + p3 + -1*p7 + -1*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.6273085086798295 + p3 + -2*p5 + -1*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.745616550185841 + p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.6858906595559443 + p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 3.6239810639558527 + p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 1.5820084964426333 + p3 + -1*p4 + -4*d + l ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 0.74427646089121 + p3 + -2*p4 + l + -2*f ), twopi ) );
        a += 0.0002 * sin ( fmod ( ( 5.067625791419832 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.04156170001066617 + p1 + -2*p3 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.7058391087678055 + 21*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.610070623782849 + 20*p2 + -12*p3 + -15*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.4684779701930557 + 20*p2 + -12*p3 + -15*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.565836275593654 + 20*p2 + -20*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.825720688137515 + 20*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.3022250784946423 + 18*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.5883732056225144 + 17*p2 + -16*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.689582912086855 + 15*p2 + -9*p3 + -4*p4 ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.831175565676648 + 15*p2 + -9*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.1693145652688951 + 15*p2 + -12*p3 + d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.310907218858688 + 15*p2 + -12*p3 + -3*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.3727114220669097 + 9*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.713479985700111 + 7*p2 + -7*p3 + 3*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5736953186824594 + 7*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.462646501591242 + 7*p2 + -9*p3 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.560864032582597 + 7*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.8550144773342296 + 7*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.934249632847969 + 6*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.373669607826255 + 5*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.4911047676817608 + 5*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.719360698081781 + 4*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.2103476305440823 + 4*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.23153956735977255 + 3*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.004928809807631986 + 3*p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.282388215310202 + 3*p2 + -4*p3 + d + -3*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.7841249627047517 + 3*p2 + -8*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.05760354476452165 + 11*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 5.368254042686876 + 8*p3 + -13*p4 + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.449772254896832 + 5*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.0759886770704215 + 4*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.29515074393585 + 4*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.91336519755153 + 3*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.5266677625550057 + 3*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.6645754854984298 + 2*p3 + -4*p6 + -2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.735206891426488 + 2*p3 + -3*p5 + p6 + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.876887833181482 + 2*p3 + -3*p5 + -4*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.490362138583354 + 2*p3 + -4*p5 + 3*p6 + 2*d + -3*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.7145278728846924 + 2*p3 + -4*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.031461181553425 + p3 + p5 + d + 2*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 2.889868527963631 + p3 + p5 + d + -2*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 6.035761847363265 + p3 + p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.493583335247468 + p3 + p6 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5831914806096352 + p3 + -1*p5 + d + 2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 3.5676547511379404 + p3 + -2*p5 + 4*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.6023106814022904 + p3 + -2*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5162256406715655 + p5 + -1*p6 + 2*d ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.412654486732643 + p7 + 2*d + -1*l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 4.51806297427009 + p7 + -2*d + l ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 1.5710956507616136 + d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.1873787230270364 + 4*p1 + -3*p3 + 2*l + -2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.9593616131569056 + p1 + -3*p3 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.935023005236161 + 23*p2 + -23*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.725805849943546 + 11*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.04455441607906084 + 11*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.23426210645995849 + 8*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.394602920840066 + 8*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 6.180257307070024 + 7*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.713535487170325 + 6*p2 + -6*p3 + 3*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.373680603400542 + 4*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.5620700296007755 + 4*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.025629636466761127 + 4*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.5907414258879122 + 3*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.131707466270664 + 3*p2 + -7*p3 + 4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.9898683721904896 + 3*p2 + -7*p3 + 4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.294430105986019 + 2*p2 + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.374383971089096 + 2*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.810322197240894 + 2*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.140849666927219 + 2*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.141507830588146 + 2*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.161922946848724 + 2*p2 + -3*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.714222623296834 + p2 + -1*p3 + d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.5608875605342325 + 11*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.823201156324286 + 11*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.7003624316096557 + 9*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.707329436917767 + 8*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.6947667229965204 + 8*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.335060830377038 + 7*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.887823891741553 + 5*p3 + -6*p5 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1885385198099363 + 5*p3 + -8*p4 ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.263232145578745 + 5*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.276136428932923 + 4*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.6722015441287272 + 4*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.86082575110662 + 4*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.375924058119373 + 3*p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.7525238737318505 + 3*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.6862025753882253 + 3*p3 + -5*p4 + 2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.6271931509145894 + 2*p3 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.332779335978831 + 2*p3 + -2*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 5.05870174842146 + 2*p3 + -4*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.521478566619609 + 2*p3 + -5*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.912848422556648 + 2*p3 + -5*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.720330577547114 + 2*p3 + -4*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 2.8364825713365542 + p3 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.6004609899593432 + p3 + -1*p8 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.2372682615635935 + p3 + -2*p8 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.27863308843463475 + p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.886200552505957 + p3 + -2*p4 + -1*l + 2*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.208547506451892 + 2*p5 + 2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.8598532111558257 + 2*p5 + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.51980411473188 + 2*p5 + -5*p6 + 3*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.3780131917390597 + 2*p5 + -5*p6 + -3*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.5178594433843573 + p5 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.665007829049099 + p5 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.662573967407193 + p5 + -1*p6 + -2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 0.0407232438380081 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.1912415112225005 + p6 + -2*d + 2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.7370110127793243 + p7 + 2*d ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.849646385150503 + p7 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -3*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.568141681002613 + 18*p2 + -18*p3 + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.70984655926331 + 16*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.1821167553601484 + 16*p2 + -17*p3 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.031501639198804 + 15*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.037211832912554 + 13*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.244471460909399 + 12*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.1772048922428935 + 10*p2 + -8*p3 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.022870986047692 + 10*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.1820270454365964 + 10*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.7214584093097525 + 9*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.371023522645623 + 9*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.7125900423145195 + 8*p2 + -8*p3 + d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.354722994601672 + 8*p2 + -14*p3 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.16002646358519 + 5*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.480112535014725 + 5*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.2732025134636875 + 4*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.2325351031651101 + 4*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.3741277567549037 + 4*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.713515415883927 + 4*p2 + -4*p3 + 3*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.1028051799201215 + 4*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.714525088856206 + 3*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 6.151435463401365 + 3*p2 + -5*p3 + p5 + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.009842809811572 + 3*p2 + -5*p3 + p5 + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.011167165647985 + 3*p2 + -5*p3 + p5 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.257473972307199 + 3*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.23173329890674393 + 2*p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.712287925820999 + 2*p2 + -2*p3 + 3*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.9088845882958103 + 2*p2 + -3*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.6064579582658287 + 2*p2 + -4*p3 ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.5712820519257265 + p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.2788078213877094 + 14*p3 + -23*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.2042318223121686 + 12*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.0184067743886245 + 11*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.942760564910711 + 7*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.160951828656281 + 6*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.6876983140588684 + 4*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.155712558767986 + 4*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 0.33391359996475195 + 4*p3 + -8*p4 + 3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.475508522482573 + 4*p3 + -8*p4 + 3*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.65663304116633 + 3*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.763937105309417 + 3*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.7128882935887355 + 3*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.0687631885000901 + 3*p3 + -4*p4 + -1*d + l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.571628848848098 + 2*p3 + -2*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 2.5696205069761446 + 2*p3 + -4*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 5.9044616004003565 + p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 3.345034165321709 + 2*p4 + 2*d ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.003876410261946 + 2*p5 + 2*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.807367154789393 + p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.181577099555432 + 17*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1683815377457285 + 15*p2 + -16*p3 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.711663447014636 + 12*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.224419173105361 + 12*p2 + -13*p3 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.372627646262814 + 8*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.271855634381607 + 8*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 6.043997532504648 + 6*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1981718646163193 + 5*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.3834755486990262 + 5*p2 + -7*p3 + 3*d + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.817910871831933 + 5*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.371113232569176 + 4*p2 + -6*p3 + d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.768026394750206 + 3*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.3769030047985 + 3*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.5648339330042336 + 2*p2 + -2*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.053793882564851 + 2*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.3743968865255605 + p2 + -1*d + l + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.5913644999325575 + 11*p3 + -21*p4 + 2*p5 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.7329571535223502 + 11*p3 + -21*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.222401406455448 + 9*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.4699897743911332 + 9*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 4*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -4*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1754096295776595 + 7*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.9647677450200078 + 6*p3 + -7*p4 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.7161140281089047 + 6*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.212388976135531 + 5*p3 + -6*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.9308050425379166 + 4*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.1669285511434433 + 4*p3 + -7*p4 ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.04818923877926424 + 4*p3 + -7*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.1726355862679065 + 3*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.7031633359932568 + 3*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.092764981868466 + 3*p3 + -7*p4 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.715073994905958 + 2*p3 + -2*p5 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.737809351874136 + 2*p3 + -3*p5 + p6 + 2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.5804589931327127 + 2*p3 + -4*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.86876033295877 + p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.7823382521528518 + p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.724784134199429 + p3 + -1*p5 + d + -2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 0.35209940717175725 + p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.323810105949466 + p3 + -2*p4 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.183122056510981 + p3 + -2*p4 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 5.215928512356892 + p3 + -4*p4 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 1.5450073417674284 + 4*p5 + -10*p6 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.686599995357222 + 4*p5 + -10*p6 + -1*l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 6.2541093435718365 + 3*p5 + -5*p6 + l ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 3.113332456874426 + 3*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.9559013233819016 + p1 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.02635975868277 + 26*p2 + -29*p3 + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 4*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -4*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.2337640149863893 + 11*p2 + -12*p3 + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.0233230263239586 + 9*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.526654340516399 + 8*p2 + -13*p3 + 4*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.671360312425899 + 8*p2 + -13*p3 + -4*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.571150279567201 + 6*p2 + -6*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.8442028607498258 + 6*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.713546831810463 + 5*p2 + -5*p3 + 3*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.046463857270642 + 5*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.262511358590937 + 4*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.04647340559162861 + 4*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.71236751283489 + 3*p2 + -3*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.889865586398854 + 2*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.570367673930607 + p2 + -1*p3 + -3*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.1538427535470577 + 8*p3 + -15*p4 + 2*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.112480195604044 + 8*p3 + -15*p4 + 2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.254927362395613 + 8*p3 + -15*p4 + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 2.6987246061412673 + 7*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.182803201853275 + 6*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.713023748135323 + 6*p3 + -8*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.391364994510083 + 4*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.2956664547365482 + 4*p3 + -8*p4 + 3*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.4371983708683715 + 4*p3 + -8*p4 + 3*p5 + -3*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.045848279643463 + 3*p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.05271016514070515 + 2*p3 + -3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.4125644277432403 + 2*p3 + -2*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.714609039193227 + 2*p3 + -2*p5 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.5877145013661786 + 2*p3 + -2*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.759569942455077 + 2*p3 + -4*p5 + 2*p6 + -2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.693035373375175 + 2*p3 + -2*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.775923511511655 + p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.904626534014669 + p3 + p5 + -4*d + l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.3252730239318535 + p3 + -2*p5 + d + -2*l + f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.8337481470008211 + p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.2046901202787926 + p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 6.192464663457248 + 3*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 1.3276503199093617 + 2*p5 + -5*p6 + l + -2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.469242973499155 + 2*p5 + -5*p6 + -1*l + 2*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 4.7125830609975115 + d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.2577331452028027 + 3*p1 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.1723732802779647 + 20*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.039930515291752275 + 18*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.161817371425612 + 16*p2 + -14*p3 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.20072128405134 + 16*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.723155043875617 + 12*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.4648421002953014 + 12*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.041198496993326145 + 10*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.170958533382931 + 9*p2 + -7*p3 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.025839825098602 + 9*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.373142169326302 + 7*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.489793876375537 + 6*p2 + -8*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.201214165032104 + 5*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.8904130706902538 + 5*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.3741895414104235 + 4*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.36535675363698095 + 2*p2 + -13*p3 + 15*p4 + -2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.7645929745473665 + p2 + p3 + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.050689473922645 + p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.0753854912809322 + 10*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.239768462713709 + 8*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.29793349689523 + 8*p3 + -15*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.7448496355158813 + 7*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.05455393096251196 + 7*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.679110272436454 + 6*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.6899731762059176 + 6*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.6594908262869112 + 6*p3 + -10*p4 + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.808799921067305 + 4*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.5341019925038756 + 4*p3 + -6*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.079502931512579 + 3*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.834664478851385 + 3*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.2113375812958136 + 3*p3 + -6*p4 + 2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.02404732096690307 + 3*p3 + -6*p4 ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.864843141480544 + 2*p3 + 2*p5 + -7*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.5666187066973227 + 2*p3 + -2*p7 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.716022406821493 + 2*p3 + -2*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.71265968944999 + 2*p3 + -4*p5 + 3*p6 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.5551122745377 + 2*p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.0665504600744116 + 2*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.7181564208979045 + p3 + -1*p6 + 2*d + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 1.4467845747883172 + p3 + -3*p5 + 5*p6 + l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 0.6190696819457904 + p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.822902696523878 + p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 5.298195130248421 + p3 + -2*p4 + 2*p6 + 2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 2.157414752892506 + p3 + -2*p4 + 2*p6 + -2*d ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.1639079353019675 + p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 6.182612628895591 + 3*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 3.0446776618192017 + 3*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.568641368767459 + 21*p2 + -21*p3 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.6029140502230215 + 20*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.2461661756130855 + 11*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.468860746392967 + 8*p2 + -12*p3 ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.562642506093746 + 8*p2 + -13*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.705253035703302 + 8*p2 + -13*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.015088596906316 + 4*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.382972021209826 + 4*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.336472784745268 + 4*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.373116163920447 + 3*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.030341850914220623 + 3*p2 + -6*p3 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.717645737558772 + 2*p2 + -2*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.1090075309879848 + 2*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.0489254696476555 + 2*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.7124120187308165 + p2 + -1*p3 + -2*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 6.05057480579079 + p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.1848104795310435 + p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.837138666097328 + 10*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.208644895824152 + 8*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.719655135126592 + 7*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.0670993576258472 + 6*p3 + -9*p4 ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.4244321430580262 + 5*p3 + -5*p4 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.8113980266901395 + 4*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.7142870089496003 + 3*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.2913706843469313 + 3*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.678963805318946 + 3*p3 + -4*p5 ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.18595805900918 + 3*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.9492215737737187 + 3*p3 + -7*p4 + d + 2*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.5941898474240026 + 2*p3 + -3*p5 + p6 + 2*d + -2*l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.5559397266377538 + 2*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 0.07205940882708989 + p3 + p4 + -2*d ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 2.8926158507391952 + p3 + p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.770580701107134 + p3 + p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 5.005313522866355 + p3 + -3*p6 + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.580449070250927 + p3 + -3*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 1.4926043545750742 + 2*p4 ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 4.555212830997565 + 2*p6 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.3318213077557777 + 26*p2 + -28*p3 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.22723052396952376 + 18*p2 + -17*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.1645638045399167 + 14*p2 + -15*p3 ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.606938281374295 + 12*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.3364811878206275 + 10*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.7125896932486695 + 9*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.0380338829902436 + 8*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.23239896748345457 + 7*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.125145202816091 + 6*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.349445118943641 + 6*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.873938235243928 + 6*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.956802628404264 + 5*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.0203754972865574 + 4*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 6.049544712466263 + 2*p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.00447939602356 + 2*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.9337253359406703 + p2 + -4*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.226432767961703 + 6*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.7060181710507436 + 6*p3 + -8*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 5.799752840854984 + 6*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.7462312381517602 + 5*p3 + -6*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.4719370637325335 + 4*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.231042880647921 + 4*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.5485404032739238 + 3*p3 + -5*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.191218821942224 + 2*p3 + -3*p6 + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.046857727092917766 + 2*p3 + -3*p6 + -2*d + l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.7145743071411115 + 2*p3 + -2*p5 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.3923912056186723 + 2*p3 + -4*p4 + d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 2.745109698072745 + p3 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 0.4175209797876623 + p3 + -2*p6 + d + -1*l + f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.3253135155705 + p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.980466134472021 + p3 + -2*p4 + 4*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.8225890608572954 + 2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 3.0538971890599367 + 3*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.476658004826253 + p5 + 2*d + 2*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 4.711355221868733 + 2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.097839160606156 + p1 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.8806210754548647 + 26*p2 + -29*p3 + -3*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.8416597499950615 + 18*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.3639144475364 + 8*p2 + -14*p3 + 2*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.3667385563007346 + 4*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.3160599374127178 + 4*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.3175509721926966 + 3*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.1140637498310113 + p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.87590119855533 + 9*p3 + -15*p4 + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.7774508236451254 + 7*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.0232326097703888 + 3*p3 + -4*p4 + -4*d + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.235611462996259 + 2*p3 + -5*p5 + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.6009549181376577 + p3 + p5 + -2*p6 + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 4.917283478718891 + p3 + p5 + -5*p6 + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.5767470268795714 + p3 + -1*p5 + -4*d + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 3.804708337203538 + p3 + -3*p5 + d ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.8980193731067367 + p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 0.7638286863696014 + 3*p5 + -1*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 2.9854167523969863 + p8 + l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 6.127009405986779 + p8 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.5668405380452515 + 21*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -2*d + 2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.5569394937248795 + 12*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.5708321060445625 + 6*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.9016538637377227 + 6*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.168122896947216 + 4*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 6.258681233547437 + 4*p2 + -5*p3 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.0117062808572932 + 3*p2 + -7*p3 + 4*p4 + 2*d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.0371910549961387 + 3*p2 + -7*p3 + 4*p4 + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.178713895415853 + 3*p2 + -7*p3 + 4*p4 + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.153144821874135 + 3*p2 + -7*p3 + 4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.714667856789018 + 2*p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.093683382619182 + p2 + p3 + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.3579312758293205 + p2 + -1*d + l + -1*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.713885949284125 + p2 + -1*p3 + l + -2*f ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.3250117481428303 + p2 + -2*p3 + d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 0.058930344061887734 + 10*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.5683558329018328 + 8*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.7029962994855237 + 8*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.8636620856740365 + 7*p3 + -11*p4 + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.818310403192664 + 6*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.8856560097793342 + 5*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.89217045971072 + 3*p3 + -4*p5 + 2*d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.884513700282221 + 3*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 2.137507003845483 + 3*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.2104708592875895 + 3*p3 + -4*p4 + 3*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.062133729869315 + 2*p3 + -3*p4 + -4*d + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.697296594743919 + 2*p3 + -4*p4 + 2*p5 + l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 5.871742436511995 + p3 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 3.992645565591213 + p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 4.8620219912776195 + p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0003 * sin ( fmod ( ( 1.76148471768249 + p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.177892011372771 + 20*p2 + -21*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.1792455142076927 + 16*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.1711697012257893 + 13*p2 + -14*p3 ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.712405735545509 + 11*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.452765120003201 + 11*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 5.141124922346892 + 8*p2 + -6*p3 ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.045345241759773 + 7*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.23250054564592063 + 6*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.7099996246387095 + 4*p2 + -4*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.031811975736442 + 2*p2 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.5706125436246616 + 2*p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.719327885891843 + 2*p2 + -2*p3 + -3*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.5705310367485936 + p2 + -1*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.9079709084323913 + p2 + -2*p3 + f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.215023376108491 + 7*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.0820184575668446 + 5*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.773131674341848 + 4*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.2976453090424594 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 3.4392171932141538 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.8488190820884256 + 2*p3 + -1*p5 + d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.7731321724456741 + p3 + p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 2.7845578043592463 + p3 + -2*d + -1*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.4604300824791847 + p3 + -1*p7 + -2*d ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.719041302828666 + p3 + -1*p6 + 2*l ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.18402437473762853 + p3 + -2*p5 + -1*d + l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.451537131836448 + p5 + 4*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.21683137117895 + p1 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.71242859935871 + 10*p2 + -10*p3 + 2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.180244017072759 + 10*p2 + -11*p3 + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.442013891810916 + 10*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.171206710704248 + 8*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.71258637712309 + 7*p2 + -7*p3 + d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 6.057062369153378 + 3*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.5706350583720121 + 3*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.6028953836983417 + 3*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.744488037288136 + 3*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 6.049755199174054 + 2*p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.908470945263088 + p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.5693159300250383 + 10*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.7687772353944147 + 4*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.717048136822889 + 3*p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 3.135944244531564 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.731865807639395 + p3 + -1*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.730892612048484 + p3 + -1*p5 + 3*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 5.186808217386142 + p3 + -2*p4 + 2*p6 + l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 2.045444376461286 + p3 + -2*p4 + 2*p6 + -1*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.049856760339886 + p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 0.8637999241933604 + p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.688893532527268 + 2*p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.400390058078879 + p5 + -2*d + -2*l ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 4.544287418945931 + p5 + -2*p6 + 2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.4363253401798908 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00032 * sin ( fmod ( ( 1.2797424282055192 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 2.102121151392999 + p1 + -4*p3 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.3432762696991007 + 43*p2 + -42*p3 + d + l + -3*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.20168361610930713 + 43*p2 + -42*p3 + d + -1*l + -3*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.028164203606507298 + 23*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.711985460261628 + 15*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.2334874057948975 + 10*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.041153467498624696 + 5*p2 + -6*p3 + 4*d + -1*l + -2*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 6.047851917624754 + 4*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 2.4260039950806886 + 3*p2 + -6*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.5712424329517063 + 2*p2 + -2*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 2.9805994691285567 + p2 + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 2.9324372829526983 + 7*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.61284168303624 + 5*p3 + -8*p4 + d + -1*l + f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.714515315012394 + 2*p3 + -2*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.717756042367498 + 2*p3 + -2*p5 + -2*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.708988031804253 + 2*p3 + -3*p5 + p6 + 2*d + -3*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 5.6728021289209725 + 2*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.71645542300891 + 2*p3 + -2*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.864468568328116 + p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 0.7375611320612366 + p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.587095982174222 + p3 + -3*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 3.8950743300218713 + 2*p5 + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.707429278249297 + 20*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.5664926939253292 + 19*p2 + -19*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.04008462786470336 + 17*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.171907992496017 + 15*p2 + -13*p3 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.0557608431368997 + 14*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.711440393936231 + 14*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1704144972584514 + 12*p2 + -13*p3 ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1303722808945724 + 9*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.4260080008396518 + 9*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.713166524566454 + 8*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.582286361357867 + 8*p2 + -13*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.6939204383371775 + 8*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.1369371623430236 + 6*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 2.903694502699155 + 5*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.293656226995685 + 3*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.2322577703469682 + 3*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.2332501645596522 + 3*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.373895627964388 + 3*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.052187490019632 + 3*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.04352728981426218 + 3*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 0.6167654982673073 + 6*p3 + -8*p4 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.737894873007485 + 5*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.0776786793851276 + 5*p3 + -6*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.71911059239997 + 2*p3 + -2*p5 + 2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.713911954689981 + 2*p3 + -2*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.4236376691825183 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 5.221044246927413 + 2*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.5589678813882806 + 2*p3 + -4*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 6.029676407860335 + p3 + p5 + 3*d + -1*f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 1.86780633598963 + p3 + -3*p6 + d ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.7714845986284242 + p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.717399122535464 + p3 + -1*p4 + 2*d + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.724657772361583 + p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.42678469785174 + 2*p4 + d + -1*l + f ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 3.932065361787415 + 3*p5 + l ), twopi ) );
        a += 0.00034 * sin ( fmod ( ( 4.714526310586682 + 4*d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5712368478981 + 21*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.766139859863409 + 18*p2 + -18*p3 ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 5.136188782156402 + 7*p2 + -5*p3 ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.23255308005640565 + 5*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.893054818042705 + 5*p2 + -6*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.7516878355251952 + 5*p2 + -6*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.524235156636843 + 5*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.572583893014789 + 4*p2 + -4*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.69611134164889 + 4*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.0711495941829754 + 4*p2 + -5*p3 + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5702236842673172 + 3*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.954911032062636 + 2*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 2.6991246356058247 + 2*p2 + -5*p3 + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.572043713611297 + p2 + -1*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.6309197949300813 + p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.7207325268738485 + 6*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.8099095759107735 + 3*p3 + -4*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.957905318927358 + 3*p3 + -5*p5 + -2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5913561308504645 + 3*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.2980008581060405 + 2*p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 6.1331972963168 + 2*p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.196876664276731 + 2*p3 + -3*p4 + 2*d + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.7541417854501327 + 2*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.747270083617497 + p3 + p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5815899664880053 + p3 + -1*p5 + 3*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.698049006184454 + p3 + -1*p4 ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5816915446504711 + p3 + -1*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 1.5611240611461943 + 2*p5 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.075293529425985 + p6 + 2*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.712143238026009 + 11*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 6.045396413900122 + 5*p2 + -6*p3 + d + l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 2.9038037603103297 + 5*p2 + -6*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.3701072162900085 + 3*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.010495362923942701 + 3*p2 + -4*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.712833690278098 + p2 + -1*p3 + 2*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.277579475656789 + 10*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.8109386390343825 + 9*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.198017752043368 + 7*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.2416300563888365 + 3*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.845949254196005 + 2*p3 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 5.830762454741018 + p3 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.7754073836585738 + p3 + p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.41752063072181195 + p3 + -2*p6 + d + l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 3.559113284311605 + p3 + -2*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.72595437746289 + p3 + -1*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.754954244715252 + p3 + -1*p5 + -3*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 2.879580161088975 + p3 + -2*p5 + 5*p6 + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 4.969738127657104 + p3 + -2*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.6273809398437873 + p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.6661509857158885 + p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 0.8282554213118698 + p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.5772765597746263 + p5 + -4*d ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 6.21903223986403 + p6 + -2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.711163235651014 + 16*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.594776478080548 + 11*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.4465325492443295 + 7*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 6.27779712671283 + 6*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.426923626060198 + 6*p2 + -8*p3 + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.5559500495752907 + 6*p2 + -10*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.181949727350733 + 5*p2 + -6*p3 + 2*d + 2*l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.04035707376093968 + 5*p2 + -6*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 2.9042442814135327 + 5*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 0.2335542009153496 + 4*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.5773386934959972 + 4*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.5553777391169281 + 4*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.5707521699648213 + 3*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.126168480858219 + 3*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.3723604363543336 + 2*p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 6.019396942164864 + p2 + -2*d + 2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.300239425902965 + p2 + -3*p3 ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.267329672060285 + 4*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 5.054030025612647 + 2*p3 + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.184099632421655 + 2*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.582573459521504 + p3 + -1*p6 + -4*d + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.486739716219156 + p3 + -2*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.487708373954013 + p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.691725852837403 + 2*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 4.712661600813851 + 2*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.957783669478495 + 20*p2 + -20*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.23748363519328963 + 18*p2 + -15*p3 + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 5.197581262194078 + 17*p2 + -15*p3 ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.5676922587202247 + 17*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.022960329908761005 + 16*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.030139060651772 + 15*p2 + -13*p3 + -4*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 3.1328729886468296 + 8*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.4515447857902068 + 8*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.41444797857367593 + 6*p2 + -10*p3 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.008023453104343131 + 3*p2 + -4*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.571115198449236 + p2 + -1*p3 + 3*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.5708338513738145 + p2 + -1*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 2.908771141894431 + p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 0.6760058128043493 + 9*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.0968895184618292 + 5*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 6.046499985586159 + 3*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.19562055081407 + 3*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.013646065282909 + 2*p3 + p5 + -2*d ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 1.5565135993941261 + 2*p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.1797219890934874 + 14*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.166695026089527 + 11*p2 + -12*p3 ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 6.218433940996447 + 9*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.721138141392012 + 9*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 2.749970090973699 + 6*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.5714398296901066 + 5*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 6.022379535323598 + 4*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 6.0501540069081345 + p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.8393864416477057 + 9*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.73476654485621 + 5*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 2.924404230537469 + 3*p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.855405971682086 + 2*p3 + -3*p5 + d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.5871301651326108 + p3 + -1*p5 + 3*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 0.5853209483316767 + p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.402967760346099 + 2*p6 + -2*d + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.5708621257076967 + 14*p2 + -14*p3 + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.713823815562754 + 13*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.1684483838560804 + 10*p2 + -11*p3 ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 3.179292114498721 + 9*p2 + -10*p3 + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.478482746559213 + 3*p2 + -5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.011802614533686454 + 2*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.232750302261881 + p2 + d + -1*f ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.1971442062544284 + 9*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 2.727359699579963 + 7*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.1621681486119957 + 5*p3 + -6*p4 + l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 1.0434574851424991 + 2*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 4.741012903716173 + p3 + -1*p5 + -2*d + l + 2*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.708074002874984 + 19*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + -4*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.6890292851498058 + 18*p2 + -17*p3 + -3*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.712467171135179 + 9*p2 + -9*p3 + 2*d + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.7210505258635616 + 8*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 5.134761975492896 + 6*p2 + -4*p3 ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 5.953800138492059 + 6*p2 + -9*p3 + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.875671513225767 + 5*p2 + -6*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.7342650862671616 + 5*p2 + -6*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.23220907566083757 + 2*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.29432499467346535 + p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 2.2964324967418817 + 8*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 2.907736336180924 + 3*p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 6.048578323659434 + 3*p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 5.232458874768382 + 3*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.58558938846895 + 2*p3 + -2*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 4.894185616865073 + 2*p3 + -3*p5 + -4*d + l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.5789201363312293 + p3 + -1*p6 + -2*l ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 0.3603689517006316 + p3 + -3*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.11458714857873492 + 3*p1 + -1*p3 + l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 3.256179802168528 + 3*p1 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.05950141579314028 + 23*p2 + -24*p3 ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.745896334963252 + 22*p2 + -22*p3 ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 6.212891997022589 + 8*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 6.1151518135816545 + 4*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 2.9064566607733613 + 4*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.6713320040987503 + 5*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 2.099856412155611 + 3*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 6.019706738107094 + 2*p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.536263616775737 + 2*p3 + -1*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.5727655817899218 + 2*p3 + -2*p5 + 2*d + l + -2*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.909425831893487 + 2*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 1.5525745658052998 + p3 + -1*p5 + -3*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 0.6230888261472829 + p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 5.968344490747703 + p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 2.203439608866372 + 2*p4 + l ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 5.785405710804815 + p7 + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 4.711663272481711 + 21*p2 + -21*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.420191699605698 + 12*p2 + -8*p3 ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5729341805956643 + 4*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.571577187102239 + 3*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.242823512531349 + 2*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5830968837641768 + 2*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.3743452247797014 + p2 + -1*d + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5703325928126415 + p2 + -1*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.0686190243038753 + 9*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 5.082731441562918 + 2*p3 ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.7564930760217858 + 2*p3 + -3*p5 + 2*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5170928947768814 + 2*p3 + -2*p4 + -4*d ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.891873911274173 + p3 + p5 + d + -1*l + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.981119402712726 + p6 + 2*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 6.123371441693923 + p6 + -2*l ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 2.6452056554251886 + p7 + l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 5.229745411380305 + p1 + -4*p3 + -2*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.0329183229526477 + 18*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.368444441111634 + 18*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.5928489109596955 + 17*p2 + -17*p3 ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.1084725875722476 + 7*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.7466363375694645 + 6*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.5718519019265027 + 5*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.7921719777539966 + 3*p2 + -8*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.371605232386996 + 2*p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.458811489625835 + 3*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.047218146081771 + 3*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 0.9397522899170236 + 3*p3 + -7*p4 + d + l + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.71140320142653 + p3 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 2.8892974562323785 + p3 + p5 + -1*d + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 3.432609725731954 + p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.860798315444097 + p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.738361399516543 + p3 + -1*p5 + 4*d ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.7278824426875685 + p3 + -1*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.979463276782141 + 19*p2 + -21*p3 + 3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 1.8378706231923483 + 19*p2 + -21*p3 + 3*p4 + -2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.71228391156372 + 10*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 6.199151717953339 + 7*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.0868619207740537 + 2*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 6.048940130413372 + 2*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 0.2913858602131069 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 3.4329395929605804 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 4.2859772933873685 + 3*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.875056642228605 + p3 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00045 * sin ( fmod ( ( 5.132895869456664 + p4 + 2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.1817530287440325 + 15*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.1529161752438073 + 9*p2 + -10*p3 ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.1156834153768624 + 4*p2 + -5*p3 ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.712581490201185 + p2 + -1*p3 + -1*d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.570529989551042 + p2 + -1*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.332456458565528 + p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 5.956586731175793 + 10*p3 + -19*p4 + 3*p6 + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.797225587101463 + 9*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 5.816238173771771 + 6*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 2.91430104309645 + 3*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 1.0718946582440183 + 3*p3 + -6*p4 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 3.19254998456272 + 2*p3 + -3*p6 + -1*l ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.389185210315684 + p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.6890675078604245 + 18*p2 + -17*p3 + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 3.543344932651537 + 6*p2 + -10*p3 + 3*p5 + 2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.4018941743299311 + 6*p2 + -10*p3 + 3*p5 + -2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.116538294641122 + 5*p2 + -3*p3 ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.801675836126515 + 5*p2 + -6*p3 + -4*p4 + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.66013414615088 + 5*p2 + -6*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.5718026836415966 + 4*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.5642742059131192 + 3*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.260159169859709 + 2*p2 ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 1.628698846460285 + 4*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.214916387425344 + 3*p3 + -6*p4 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 5.961046571013413 + p3 + -2*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.006732467049909 + p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.6686962333573385 + p5 + 4*d + -2*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 0.9916777550260321 + 2*p6 + -1*l ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.715557276575835 + 4*d + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.31288170984147 + 3*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.7013968712606795 + 2*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.842989524850473 + 2*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 1.571002275646632 + p2 + -1*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.6606216081126454 + 9*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.0790693492347999 + 6*p3 + -9*p4 + l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 0.5525078857295573 + 5*p3 + -7*p4 ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.484191884577095 + 5*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 2.729746088266215 + 4*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 2.2845541349186584 + 3*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 3.891604615468907 + p3 + -4*p5 + l ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.1357400495073975 + 2*p6 + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.9557079409007807 + p1 + -3*p3 + -2*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.0421807767946651 + 19*p2 + -21*p3 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.0622635738673465 + 15*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 6.17569501640531 + 6*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.152501152944316 + 4*p2 + -2*p3 ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 2.9074720933321716 + 2*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.334345952013738 + 2*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.155102740727339 + p2 + p3 ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.224210082660972 + p2 + 2*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.712532446449203 + p2 + -1*p3 + -3*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 3.419272966785764 + p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 0.059810339070743276 + 9*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.5153205129214813 + 4*p3 + -4*p5 + l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.853797999842223 + 2*p3 + -3*p5 + 4*d ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 1.7479861667146404 + 2*p3 + -3*p5 + 2*d + -4*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 5.386107015605525 + 2*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00049 * sin ( fmod ( ( 4.582452533699291 + p3 + -3*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 0.23744541248267095 + 18*p2 + -15*p3 + -3*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 2.4174274471363884 + 12*p2 + -8*p3 + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 5.559020100726182 + 12*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.176526125198477 + 8*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 6.155087041262387 + 5*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 6.050541295469151 + p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.569052568339229 + 3*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.774409429887234 + 3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.5348491764549712 + 2*p3 + -2*p4 + -4*d + 2*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 4.209228184860169 + 2*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 0.6229671766984188 + 2*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 3.4238436350308867 + p3 + -2*p6 + 2*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.702437811121519 + 24*p2 + -24*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 5.175677729147399 + 18*p2 + -16*p3 + 2*d + -4*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.602731514278212 + 18*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 1.5628631072128816 + 18*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 1.5682083525800392 + 16*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.150344083525143 + 8*p2 + -9*p3 ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 2.762324927682717 + 3*p2 + -2*p3 ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.712746772881349 + 2*p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 0.03795462804556949 + 2*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 0.5648721472165356 + 9*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.698612747532849 + 5*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 2.924741428148955 + 4*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 3.6801757789481644 + 3*p3 + -5*p4 ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.724978040279324 + p3 + -1*p5 + 3*d + -2*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.597179796460543 + 10*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.5055927458025655 + 5*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 5.14864467342911 + 3*p2 + -1*p3 ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.544749033038133 + 3*p2 + -5*p3 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 2.8933487144921077 + 3*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.727350640864486 + p3 + -1*p5 + d + -2*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 0.7545300957137513 + p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 0.836468940771755 + p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 4.249481062464765 + 2*p5 + -5*p6 + 2*d + l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.0867400797956317 + 2*p5 + -5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.6015584529929976 + p5 + -4*d + 2*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.180696930013651 + 13*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 5.725192549742711 + 8*p2 + -13*p3 + d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 2.536908673470641 + 8*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.4423992605097564 + 2*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 6.252247600858734 + p2 + 2*d + -2*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.8599710463752857 + 6*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.465976589804048 + 5*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 4.791944927414946 + 5*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 3.423931599625187 + 4*p3 + -8*p4 + 3*p5 + 2*d + 2*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.2823148604917168 + 4*p3 + -8*p4 + 3*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 0.932436393291439 + 2*p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.573045009003166 + 2*p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.708074701006685 + 17*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.5702608597803844 + 13*p2 + -13*p3 + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.7125022522531435 + 8*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.23443855924733512 + 2*p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.5754279070309138 + 2*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.021829705619319077 + 2*p2 + -3*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.5718466659387467 + 7*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 2.177888686748876 + 6*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 3.4039095315121592 + 4*p3 + -8*p4 + 3*p5 + 3*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.26230658047977895 + 4*p3 + -8*p4 + 3*p5 + -3*l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.4177253663413876 + 2*p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.767336657626452 + p3 + p5 + -2*p6 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.77485271802229 + p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 4.456239746973021 + p3 + p6 + -2*d ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 0.9040178952129161 + p3 + -2*p4 + d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.7085419256474434 + 21*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.847156140875442 + 18*p2 + -17*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.0745069095321114 + 6*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.716602903330704 + 2*p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.5711766340389062 + p2 + -1*p3 + d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.9226313165849764 + 9*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 2.7729414164567476 + 7*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.7043047813240606 + 4*p3 + -6*p4 + d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 1.28715152541316 + 2*p4 + d + 2*l + -1*f ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 4.428744179002953 + 2*p4 + d + -2*l + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.587035044688377 + 16*p2 + -16*p3 ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 5.591486540938855 + 10*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 6.043070588138915 + 10*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.717822888477849 + 10*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.161974259528732 + 7*p2 + -8*p3 ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.712729319588829 + 6*p2 + -6*p3 + d ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.063463338690117 + 6*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 6.059393430902341 + 2*p2 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 0.5330116853201546 + 2*p2 + -4*p3 + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.3746223830649185 + p2 + -1*d + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 2.913286832268116 + p2 + -4*d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 0.2583118708878143 + 4*p3 + -8*p4 + 3*p5 + l + -2*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 3.4000593351822594 + 4*p3 + -8*p4 + 3*p5 + -1*l + 2*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 2.884611945322475 + 3*p3 + -2*p4 ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.210377833238459 + 3*p3 + -4*p4 + d + l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 1.0684635154675226 + 3*p3 + -4*p4 + d + -1*l ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 4.749537964447539 + p3 + -1*p5 + -2*d + 3*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.5700786474064763 + 12*p2 + -12*p3 + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.1814811064465727 + 8*p2 + -9*p3 + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 2.866755830811171 + 7*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.144364760040735 + 3*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 4.687093574469686 + 3*p2 + -5*p3 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.3735055468765673 + 2*p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.6735838278996735 + 7*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.0742841885229237 + 3*p3 + -4*p4 + d + -2*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.0659483214824734 + 3*p3 + -6*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 4.82812699907219 + 2*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.0588113211052184 + 2*p3 + -3*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 2.5433129846279092 + p3 + p5 ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 3.502642109165777 + p5 + -2*p6 + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 0.36233279617497566 + p5 + -2*p6 + -1*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 0.2334721704405059 + 21*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 3.3790565665625354 + 18*p2 + -15*p3 + d + -1*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.7270692937890635 + 7*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.7312127054332995 + 6*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.208447324552827 + 3*p3 + -6*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.754402895204548 + 2*p3 + -4*p5 + 2*p6 + -1*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.725202315088206 + p3 + -1*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 0.18355086691156247 + p3 + -2*p5 + -1*d + -1*l + f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 3.098453175935324 + 6*p2 + -7*p3 ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 3.373727552757421 + 2*p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.718180506441583 + 2*p2 + -2*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 3.7063012634554173 + 6*p3 + -8*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.17501030674312 + 5*p3 + -6*p4 ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 3.195713917430736 + 5*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.892903497996557 + 4*p3 + -5*p5 + 2*d ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 6.070414661529911 + 2*p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 0.862433505921974 + p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 4.709731891131454 + 2*p5 + -6*p6 + 3*p7 + l ), twopi ) );
        a += 0.00059 * sin ( fmod ( ( 1.5681392375416603 + 2*p5 + -6*p6 + 3*p7 + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 4.716579166852878 + 9*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 4.712531224718727 + 7*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 4.540656785035932 + 5*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 5.450668140900196 + p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 1.2880238409733071 + 2*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.0006 * sin ( fmod ( ( 3.4045378500428773 + p5 ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 1.815636175719492 + 20*p2 + -20*p3 + d + l + -1*f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.957228829309286 + 20*p2 + -20*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.7201323081440885 + 8*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 3.146779597593795 + 3*p2 + -4*p3 + 3*d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 4.7127167532182135 + p2 + -1*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 6.151647869971333 + 2*p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 1.5730303482374492 + 2*p3 + -2*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 0.2840167310453365 + p3 + -2*p6 + d ), twopi ) );
        a += 0.00061 * sin ( fmod ( ( 1.5419336424217411 + p5 + d ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 2.128952796115608 + p1 + -4*p3 + l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.995532357170646 + 4*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 4.825413186618264 + 7*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 1.0739714255209665 + 5*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 5.043821594817732 + 2*p3 + -1*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 1.574895930674906 + 2*p3 + -2*p4 + d + l ), twopi ) );
        a += 0.00062 * sin ( fmod ( ( 0.5405008931404623 + 2*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 5.267825877664944 + p1 + -4*p3 + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.3645411697758407 + 23*p2 + -25*p3 + -1*d + l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.5061338233656345 + 23*p2 + -25*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.5601061851264313 + 8*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.7157876600370985 + 7*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.499893390126812 + 6*p2 + -10*p3 + 3*p5 + l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 0.3583675826473697 + 6*p2 + -10*p3 + 3*p5 + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.3661370988438641 + 5*p2 + -7*p3 ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.5521706966163886 + 3*p2 + -5*p3 + 2*p5 + 2*d ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 2.936476672973514 + 2*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 3.311235689823914 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 0.16970743888351905 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 1.573038900350784 + 2*p3 + -2*p6 ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 0.7312269831398986 + 2*p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00063 * sin ( fmod ( ( 4.716415454969041 + 2*p3 + -2*p4 + d + -1*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 0.5501820599683497 + 6*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 3.2751410591621943 + 6*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 5.76206926244225 + 4*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00064 * sin ( fmod ( ( 5.2640886041376485 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 1.5651627530353094 + 19*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 2.573530219033537 + 8*p2 + -13*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 1.571052366596164 + 3*p2 + -3*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 4.315625026858071 + 3*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.197967486560911 + 6*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 0.9103691483609234 + 3*p3 + -7*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 6.0061125430962345 + 2*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 4.02831346325082 + p3 + -2*p4 + 4*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 0.076946330732674 + 14*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.718396063102521 + 8*p2 + -13*p3 + -4*d + l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.6643416113786629 + 3*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 5.82805998692723 + 9*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.2223755670842014 + 6*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 2.1679478149282914 + 6*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 2.6283892335492975 + 4*p3 + -8*p4 + l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 6.054956454877922 + 3*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 1.5800219626880132 + p3 + -1*p5 + -1*d + -1*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 1.568455665735047 + 21*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 1.3479193521115476 + 6*p2 + -8*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 5.108870016039561 + p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.724060869757401 + 18*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.343618711796657 + 8*p2 + -14*p3 + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.712891635209264 + 6*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.027210755731093 + 5*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 1.2796179862298518 + p2 + -3*p3 + l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 5.227332144623573 + 3*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 5.710421828283083 + 2*p3 + -4*p5 + 3*p6 + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 4.4295173598615865 + 2*p4 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 1.200228369077311 + 3*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 4.735255586112618 + 5*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 3.059902343417273 + 2*p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 1.601477469715705 + 2*p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 1.9215331554196218 + 2*p3 + -4*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00069 * sin ( fmod ( ( 2.5213823989778246 + 2*p3 + -5*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.5842891181762142 + 19*p2 + -19*p3 ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.5828226925386888 + 15*p2 + -15*p3 ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.712373796020197 + 8*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 2.901077206952864 + 6*p2 + -7*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.716074243100275 + 4*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.694834982366907 + 3*p2 + -5*p3 + 2*p5 + -2*d ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.712691445944061 + p2 + -1*p3 + d + -1*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.662598376521771 + 7*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.073312214662488 + 4*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.7332594275521627 + 4*p3 + -4*p4 + l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 4.175210321475398 + 3*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.0007 * sin ( fmod ( ( 1.570521088371857 + 2*p3 + -2*p5 + -3*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 0.6133840973744936 + 9*p3 + -17*p4 + l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 3.7540674344239973 + 9*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 1.0713035152263677 + 8*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00071 * sin ( fmod ( ( 5.22718937669076 + 2*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 1.5680947316457345 + 15*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 4.576342659586834 + 9*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.1816570356351734 + 5*p2 + -6*p3 + 4*d + -2*f ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 1.55321335631153 + 5*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.174065726053624 + 5*p3 + -8*p4 + l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.012791369049891 + 2*p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 0.7442104874454846 + 2*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 1.5819083145435686 + p3 + -1*p6 + -2*d + -1*l ), twopi ) );
        a += 0.00072 * sin ( fmod ( ( 3.434741121814489 + p3 + -2*p6 ), twopi ) );
        a += 0.00073 * sin ( fmod ( ( 1.596275690413061 + 2*p3 + -2*d ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 0.1693145652688951 + 15*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.310907218858688 + 15*p2 + -12*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.187263556791355 + 12*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 1.5655917549654494 + 11*p2 + -11*p3 + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 3.1917289816825822 + 8*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 1.3329121385382743 + 6*p2 + -8*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00074 * sin ( fmod ( ( 0.06324252904479014 + 5*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 4.709278454591786 + 17*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 3.177149024710197 + 7*p2 + -8*p3 + l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 4.712737697169238 + 5*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 2.8993547415140712 + 3*p3 + -2*p4 + l ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 4.74308059528101 + p3 + -1*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 2.2343495644521165 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.722287964303225 + 7*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 3.058583747167392 + 5*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 1.2941494230490314 + 3*p2 + -5*p3 ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 3.0090572371152495 + 6*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 4.734117805973243 + 2*p3 + -2*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 5.328092620335084 + 6*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 3.6936795659037696 + 2*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00077 * sin ( fmod ( ( 1.59775834761263 + p3 + -1*p5 + -2*d + -2*l ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 4.41338615425003 + 4*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 2.908077548049688 + p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00078 * sin ( fmod ( ( 4.811596985726551 + 7*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 1.5276671465830143 + 5*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 4.78738420754656 + 5*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 3.2994011357649162 + 4*p3 + -8*p4 + p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 0.1578594457892807 + 4*p3 + -8*p4 + p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 1.7063019445904846 + 3*p3 + -4*p5 + l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 0.9508389703915419 + 3*p3 + -7*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 4.82032118852557 + 2*p3 + -4*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 5.813101642573012 + p3 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 4.71639328928754 + 5*p2 + -5*p3 + d ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.04007258509286461 + 5*p2 + -6*p3 + -2*f ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 5.318210042511516 + 6*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 3.2098564948925707 + p3 + p5 + -1*p6 + d + l + -1*f ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 0.06826384130277782 + p3 + p5 + -1*p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 1.5936826547433731 + 20*p2 + -20*p3 ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.05886402155031196 + 13*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 0.6432454591456401 + p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 4.364985556098349 + 2*p4 + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 6.061937771885899 + 2*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.724810837736984 + p3 + -1*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 1.9265228772181486 + 2*p5 + -2*d ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.5000441950725 + p5 + 4*d + -1*l ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 4.920611123470743 + p5 + -1*d ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 0.23745291739845453 + 18*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 4.374116246080157 + 8*p2 + -12*p3 + l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 4.305334914654162 + 2*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 1.9879385701348762 + 9*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 5.264996175348685 + 6*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00083 * sin ( fmod ( ( 0.48601537908462855 + 2*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 1.5820243789388264 + 14*p2 + -14*p3 ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 1.5716590430441575 + 4*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 0.5659540768198468 + 8*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 2.122214079873658 + 6*p3 + -11*p4 + l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 3.7048648574810255 + 4*p3 + -6*p4 ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 5.226943285266229 + 3*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 4.747546020172237 + 2*p3 + -2*p5 + -4*d ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 1.3201021199603367 + 2*p3 + -2*p5 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 4.558807685657897 + 2*p3 + -4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 1.2612403673380523 + 3*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 4.188246011125619 + 3*p3 + -6*p4 + 2*p5 + l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 1.0464662582400122 + 3*p3 + -6*p4 + 2*p5 + -1*l ), twopi ) );
        a += 0.00085 * sin ( fmod ( ( 0.05744227634163737 + 2*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 6.064062535717277 + 3*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 3.6267107589059715 + 2*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00086 * sin ( fmod ( ( 0.5233270278337633 + 2*p3 + -4*p4 ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.238414087214161 + 18*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 0.010211572387568424 + 3*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.473031210640609 + 3*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 3.852332961969782 + 2*p2 + -2*d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 1.692670574066558 + 5*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.673737599905091 + 5*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 4.747305688334238 + 3*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 2.0905374011475124 + 3*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00087 * sin ( fmod ( ( 3.727027571921625 + p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 0.6890008362829984 + 18*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 2.9215865709930497 + p2 + -2*d + -1*l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 0.5861489325288228 + 5*p3 + -7*p4 + l ), twopi ) );
        a += 0.00088 * sin ( fmod ( ( 1.0282914466072943 + 3*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 0.005829923300436659 + 3*p2 + -4*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 0.576532168350334 + 6*p3 + -8*p4 ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 1.5729341805956643 + 2*p3 + -2*p5 + 4*d ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 5.069612325174452 + 2*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 3.2065747523000456 + p3 + d + l + -1*f ), twopi ) );
        a += 0.00089 * sin ( fmod ( ( 1.2866808101138971 + 2*p4 + 3*d + -1*f ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 1.78237456349961 + 5*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 2.6853049440556083 + 4*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 4.4789024982443175 + 4*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 3.432951112133644 + 4*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 0.2912821876555385 + 4*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 1.7006207233423174 + 2*p3 + -5*p6 + -1*l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 1.7507991138700798 + 2*p3 + -3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 4.732134588344203 + 2*p3 + -2*p4 + 2*d + l ), twopi ) );
        a += 0.0009 * sin ( fmod ( ( 0.08717326201765997 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 2.6792198536185303 + 5*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 4.261775336248738 + p3 + p6 + d + l + -1*f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 1.1201826826589456 + p3 + p6 + d + -1*l + -1*f ), twopi ) );
        a += 0.00092 * sin ( fmod ( ( 0.026240850770809548 + 20*p2 + -21*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 5.174741185470779 + 18*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 6.039113228592943 + 8*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 3.270798854516158 + 6*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00093 * sin ( fmod ( ( 3.509021113048891 + p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 6.020572945014857 + 26*p2 + -29*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 3.174461915793827 + 6*p2 + -7*p3 + l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 2.954152844038937 + 4*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 2.1186471504813573 + 3*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 4.428294233121789 + 2*p4 + -1*d + -1*f ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 3.185234262470061 + 5*p2 + -6*p3 + l ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 2.9062969631468034 + 4*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 4.428613104776129 + 4*p2 + -6*p3 ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 1.5664895523326754 + 3*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 1.1872886725359502 + p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00095 * sin ( fmod ( ( 1.5946448547599976 + p5 + -4*d + l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.74357539612395 + 3*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 3.205986925407974 + 7*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 1.6166616596751302 + 7*p3 + -13*p4 + l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.760017095809437 + 7*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.713102121917054 + 2*p3 + -2*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.5617832720046727 + 24*p2 + -24*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 4.709509710717675 + 16*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.5691881804221088 + 14*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.57636096004903 + 3*p2 + -5*p3 + 2*p5 + l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 4.71780648238288 + 3*p2 + -5*p3 + 2*p5 + -1*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.5696653534396041 + p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00097 * sin ( fmod ( ( 1.7709126372359125 + 2*p3 + -3*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 1.570700333686037 + 10*p2 + -10*p3 + l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 4.712260873217593 + p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 5.149382598636852 + p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 4.521720835316419 + 5*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 1.0939325816431003 + 4*p3 + -5*p4 ), twopi ) );
        a += 0.00098 * sin ( fmod ( ( 4.737240898136761 + 2*p3 + -3*p5 + p6 + -1*l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 0.05896734504203002 + 12*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 1.5627526278712303 + p3 + -1*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 4.12726734865359 + p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00099 * sin ( fmod ( ( 2.2359063981448957 + p4 + -2*d + l ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 3.1866832348150664 + 11*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 2.272849433356009 + p4 + -2*d ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 1.5764332166800625 + 13*p2 + -13*p3 ), twopi ) );
        a += 0.00102 * sin ( fmod ( ( 4.712763702575093 + 6*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 3.3743785605684145 + p2 + d + -1*l + f ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 5.426810886288836 + p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00103 * sin ( fmod ( ( 4.575126863229896 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00104 * sin ( fmod ( ( 2.6127648715525194 + p3 + p5 + l ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 1.947064704382421 + 2*p3 + -4*p5 ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 2.8759264888328504 + 26*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 4.742808498450624 + 4*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 4.78433965519938 + 3*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 1.5240452393192758 + 2*p3 + -2*p4 + -4*d + l ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 1.3553804601308979 + 3*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00107 * sin ( fmod ( ( 1.9134877111667037 + 3*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 6.049121470122654 + 2*p2 + -3*p3 + d + -1*l + f ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 1.4650286759923394 + p2 + p3 + -2*d ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 4.5543466240898 + 5*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 2.632700371334649 + 5*p3 + -9*p4 + l ), twopi ) );
        a += 0.00109 * sin ( fmod ( ( 1.7502809256151626 + 4*p3 + -5*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 5.552856819538614 + 12*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 0.03489524039974863 + 5*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 5.958006731055216 + 3*p3 + -2*p5 + l ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 3.050888066896573 + p3 + d ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 4.553253349846351 + 8*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 0.9699217023011473 + 7*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00111 * sin ( fmod ( ( 1.5774207239708409 + 2*p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 1.5368508945740833 + 5*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 0.005546132764062381 + 3*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 4.711831871287453 + p2 + -1*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 3.78017546563873 + 5*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 6.056806852950887 + 2*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 0.049759511507283534 + 8*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 5.777137388006418 + 5*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 5.830149320574792 + 5*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00113 * sin ( fmod ( ( 1.9363541423617072 + 2*p3 + -4*p5 + l ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 4.464933755575981 + 3*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 4.635897482455086 + 7*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 3.2603825550073307 + 4*p3 + -8*p4 + p5 + 5*p6 + l ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 0.11879984979427363 + 4*p3 + -8*p4 + p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00114 * sin ( fmod ( ( 6.035073838572128 + 3*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 6.034587240776671 + p1 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 1.3602619715158009 + 5*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 5.164366599331075 + 4*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 0.1945534225161347 + p7 + -2*p8 + l ), twopi ) );
        a += 0.00115 * sin ( fmod ( ( 3.3361460761059276 + p7 + -2*p8 + -1*l ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 3.1537705139126584 + 2*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 0.03455734465656252 + 2*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00117 * sin ( fmod ( ( 4.18431360978795 + 9*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00118 * sin ( fmod ( ( 3.6809873570503417 + 4*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 3.15153596887133 + 3*p2 + -4*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00119 * sin ( fmod ( ( 0.23346274566254507 + p2 + d + l + -1*f ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 0.02213967609447327 + 5*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 5.824757649449532 + 5*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 4.194397947673049 + 2*p3 + -3*p4 ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 6.047801477609371 + 4*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 2.9062088240195783 + 4*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 5.856093116306912 + p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00121 * sin ( fmod ( ( 4.72306655568254 + p3 + -1*p5 + -1*d + l ), twopi ) );
        a += 0.00122 * sin ( fmod ( ( 3.9177496476637814 + p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 4.713925917323996 + 4*p2 + -4*p3 + d ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 4.703089167998363 + 3*p2 + -3*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 3.4406881567077345 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00123 * sin ( fmod ( ( 0.2990733374364411 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 5.17046303440829 + 15*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 0.0638992964423156 + 11*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 1.5846385330924635 + 2*p2 + -2*p3 + -4*d ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 3.3743326584090876 + p2 + d + -1*l + -1*f ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 0.9785127364782389 + p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00124 * sin ( fmod ( ( 4.714336069698215 + 2*d + l ), twopi ) );
        a += 0.00125 * sin ( fmod ( ( 1.3826344745324903 + 5*p2 + -7*p3 + l ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 2.690979183986767 + 8*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 0.09908513416252127 + p3 ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 3.7498147651685882 + p3 + -3*p5 ), twopi ) );
        a += 0.00127 * sin ( fmod ( ( 4.713638810662044 + 2*p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 1.569953158233258 + 12*p2 + -12*p3 ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 3.7274818811259194 + 5*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00128 * sin ( fmod ( ( 1.5688563933313049 + 2*p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 0.03526856632675021 + 2*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00129 * sin ( fmod ( ( 1.6907480938954866 + 6*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 6.08038153875635 + 2*p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 4.7111943025117 + 15*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 3.3194355957156336 + 8*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 1.580332282229018 + 2*p2 + -2*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 3.366244104523645 + p2 + -2*p3 ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 1.1011898352058178 + 3*p3 + -3*p5 ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 0.06835634375313351 + 3*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00131 * sin ( fmod ( ( 6.263714064978487 + p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 0.00538940219723329 + 3*p2 + -4*p3 + -1*d + l ), twopi ) );
        a += 0.00134 * sin ( fmod ( ( 4.444902088152066 + 3*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 0.23745693165573414 + 18*p2 + -15*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 4.7242633279506325 + 2*p3 + -2*p5 + d ), twopi ) );
        a += 0.00136 * sin ( fmod ( ( 5.481843386532245 + p3 + 2*d ), twopi ) );
        a += 0.00137 * sin ( fmod ( ( 1.572761392999717 + 9*p2 + -9*p3 + l ), twopi ) );
        a += 0.00138 * sin ( fmod ( ( 0.0345651986381965 + 5*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 2.833178313996678 + 2*p2 + -1*p3 ), twopi ) );
        a += 0.00139 * sin ( fmod ( ( 6.172026857916394 + 2*p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 5.175671096896242 + 18*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.0014 * sin ( fmod ( ( 1.5715307613441356 + 13*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00141 * sin ( fmod ( ( 2.426755184790747 + p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 0.017237569824396795 + 3*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 3.18655006619314 + 10*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 1.5727022263380743 + 2*p3 + -2*p6 + l ), twopi ) );
        a += 0.00144 * sin ( fmod ( ( 0.6294994204898579 + 18*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00144 * sin ( fmod ( ( 3.05586906204884 + 5*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00144 * sin ( fmod ( ( 3.1811582205349533 + 4*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00144 * sin ( fmod ( ( 1.576352931534471 + p3 + -1*p6 + d ), twopi ) );
        a += 0.00145 * sin ( fmod ( ( 2.034056975756649 + 18*p2 + -16*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00145 * sin ( fmod ( ( 1.7466200975091046 + 2*p3 + -3*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 3.325257490501511 + p3 + -2*p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 4.886894503914866 + 2*p3 + -3*p5 + 2*d + l ), twopi ) );
        a += 0.00148 * sin ( fmod ( ( 5.175633572317324 + 18*p2 + -16*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 0.05579294019850273 + 10*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 3.6882720122823156 + p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 6.021398834816902 + 26*p2 + -29*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 2.8798061812271087 + 26*p2 + -29*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 0.03146741374883177 + 20*p2 + -21*p3 + -4*d + l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 0.06127117965466253 + 5*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 3.157895250533896 + 3*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.0015 * sin ( fmod ( ( 0.15128671035919528 + 14*p3 + -23*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 0.11310134978651214 + 3*p1 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 1.094040093925023 + 4*p3 + -5*p4 + l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 3.187150808521676 + 4*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.900154119308118 + 3*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 0.18367862501280846 + p3 + -2*p5 + d + l + -1*f ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 4.587963934411238 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00151 * sin ( fmod ( ( 1.4470465487090418 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00153 * sin ( fmod ( ( 3.703876302992696 + 5*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 1.3466063409152722 + 6*p2 + -8*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 0.8253648070047169 + p3 + -2*p4 ), twopi ) );
        a += 0.00154 * sin ( fmod ( ( 4.251652601120097 + 2*p5 + 2*d ), twopi ) );
        a += 0.00155 * sin ( fmod ( ( 3.1730366799266485 + 20*p2 + -21*p3 + l ), twopi ) );
        a += 0.00155 * sin ( fmod ( ( 3.92785178790725 + 2*p4 + -2*d + l ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( 3.1749834201743226 + 20*p2 + -21*p3 ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + l ), twopi ) );
        a += 0.00156 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 4.714627190617447 + 21*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 2.0340054885437153 + 18*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00158 * sin ( fmod ( ( 1.6137720925655283 + 3*p3 + -3*p4 ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 3.178419798938574 + 4*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 2.858177363004694 + 2*p2 + -1*p3 + l ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 1.6237438567138731 + p3 + -1*p5 + -4*d ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00161 * sin ( fmod ( ( 1.5699568234246872 + 11*p2 + -11*p3 ), twopi ) );
        a += 0.00163 * sin ( fmod ( ( 4.712658110155347 + 2*p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00165 * sin ( fmod ( ( 5.542196697533284 + p3 + p5 + -1*l ), twopi ) );
        a += 0.00166 * sin ( fmod ( ( 0.01951941328845418 + 3*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00168 * sin ( fmod ( ( 5.743998472432951 + 8*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00169 * sin ( fmod ( ( 0.5647051192071197 + 6*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00171 * sin ( fmod ( ( 0.061796349226587624 + 9*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00172 * sin ( fmod ( ( 2.638690690393344 + 8*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00173 * sin ( fmod ( ( 1.0794709579940005 + 5*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00174 * sin ( fmod ( ( 3.778242862557997 + 5*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00174 * sin ( fmod ( ( 4.717066462780034 + 2*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00175 * sin ( fmod ( ( 3.591520383329711 + 4*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 4.483154469368026 + 6*p2 + -8*p3 ), twopi ) );
        a += 0.00176 * sin ( fmod ( ( 5.058008329109642 + 2*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00177 * sin ( fmod ( ( 4.711563265115571 + 14*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00177 * sin ( fmod ( ( 2.6130231802818145 + p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00177 * sin ( fmod ( ( 3.765158129155796 + p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00178 * sin ( fmod ( ( 0.513379000163246 + p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00179 * sin ( fmod ( ( 4.207588622560846 + 3*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 0.024553815515831825 + 3*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.0018 * sin ( fmod ( ( 3.4153560988784384 + p3 + -2*p6 + l ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + l ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -1*l ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 1.611982082884683 + p3 + -1*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00182 * sin ( fmod ( ( 3.2310557875860697 + 3*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 2.4995174377076155 + 8*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 4.517706927102684 + 6*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 4.7133969080277165 + 2*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 1.5632945526039745 + 2*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 2.419357083157394 + 12*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 5.636035721030161 + 8*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 2.750810117942684 + 2*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 3.1483345114243972 + 4*p3 + -7*p4 + l ), twopi ) );
        a += 0.00184 * sin ( fmod ( ( 1.5767342859760318 + 2*p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00185 * sin ( fmod ( ( 0.5550750905263159 + 7*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 4.712348488746044 + 5*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 1.607274580826204 + 3*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00186 * sin ( fmod ( ( 2.9506668979239286 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 0.0077620027823943815 + 4*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00187 * sin ( fmod ( ( 3.4327455123477586 + 4*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00188 * sin ( fmod ( ( 0.2911514624945641 + 4*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 0.07021686473575947 + 8*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00189 * sin ( fmod ( ( 4.706976888907181 + 4*p3 + -4*p5 + 2*d ), twopi ) );
        a += 0.0019 * sin ( fmod ( ( 3.1264465118080613 + 2*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.0019 * sin ( fmod ( ( 5.054230913009551 + 2*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00191 * sin ( fmod ( ( 3.7060618042820432 + 6*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 1.571074881343515 + 8*p2 + -8*p3 + l ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 4.377001449866628 + 8*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 4.892061027566619 + 2*p3 + -3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 2.890386192619773 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00192 * sin ( fmod ( ( 6.112682870821784 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00193 * sin ( fmod ( ( 5.116904464718191 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00195 * sin ( fmod ( ( 0.3786360912507798 + p5 + -2*l ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 1.5699817816329906 + 12*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 6.135205123088294 + p2 + l ), twopi ) );
        a += 0.00196 * sin ( fmod ( ( 6.154341436605936 + p2 ), twopi ) );
        a += 0.00197 * sin ( fmod ( ( 4.716839744510201 + p3 + -1*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 5.9585322496929916 + 5*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 4.288147784845148 + 4*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 3.187618033162434 + 9*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 2.553365906586471 + 8*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 2.6823204310346984 + 2*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00199 * sin ( fmod ( ( 4.74242836573954 + 2*p3 + -2*p5 + -4*d + l ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 4.71182070118024 + 2*p2 + -2*p3 + d ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 1.6409740961554111 + 2*p3 + -2*p5 ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 0.2727982782122925 + p3 + -2*p6 + -1*l ), twopi ) );
        a += 0.002 * sin ( fmod ( ( 3.496446713919973 + p5 + 2*l ), twopi ) );
        a += 0.00201 * sin ( fmod ( ( 5.6943869648462355 + 8*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00201 * sin ( fmod ( ( 0.049232422073181244 + 4*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00203 * sin ( fmod ( ( 6.064472862624421 + 3*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00203 * sin ( fmod ( ( 1.572196953519622 + 2*d + -2*l ), twopi ) );
        a += 0.00204 * sin ( fmod ( ( 5.976043138078249 + 5*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00205 * sin ( fmod ( ( 3.1474695262471086 + 3*p2 + -4*p3 + 3*d + -1*l ), twopi ) );
        a += 0.00207 * sin ( fmod ( ( 4.734829376709281 + 3*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00208 * sin ( fmod ( ( 3.221992292780463 + 3*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00209 * sin ( fmod ( ( 3.0495958251183968 + 2*p3 + -1*p5 ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 0.06209410239697785 + 6*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.0021 * sin ( fmod ( ( 5.023872656000362 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 0.053433429582731604 + 7*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00211 * sin ( fmod ( ( 6.054560439670644 + 2*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00212 * sin ( fmod ( ( 1.569864495507257 + 10*p2 + -10*p3 ), twopi ) );
        a += 0.00213 * sin ( fmod ( ( 0.23746391297274208 + 18*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00213 * sin ( fmod ( ( 0.6890479601728021 + 18*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00214 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00214 * sin ( fmod ( ( 0.04686680280502813 + 4*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00214 * sin ( fmod ( ( 3.7819356301893667 + p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00215 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00215 * sin ( fmod ( ( 0.8108827630033687 + p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 3.2514597337394346 + 3*p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00216 * sin ( fmod ( ( 4.683545494633306 + 18*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00219 * sin ( fmod ( ( 1.8150944255196726 + 20*p2 + -20*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00219 * sin ( fmod ( ( 4.713784894720434 + p3 + -1*p6 + 2*d ), twopi ) );
        a += 0.00222 * sin ( fmod ( ( 0.23191114795752216 + 3*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00222 * sin ( fmod ( ( 3.6792250981046024 + p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 3.153265241094206 + 3*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00224 * sin ( fmod ( ( 5.176727021093698 + 4*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00225 * sin ( fmod ( ( 4.683494531019148 + 3*p2 + -3*p3 + d ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 3.685591884682953 + 4*p3 + -6*p4 + l ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 1.615088768953233 + 3*p3 + -3*p4 + l ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 0.360691314013475 + p3 + -3*p5 + d + -1*l + f ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 3.99756111089653 + p3 + -2*p4 + 2*d + l ), twopi ) );
        a += 0.00226 * sin ( fmod ( ( 4.312597578737561 + p5 + 2*d + l ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 5.175696927769171 + 18*p2 + -16*p3 + 2*l ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 4.71084017520647 + 13*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 1.2931202023891302 + 5*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00228 * sin ( fmod ( ( 4.21935790130582 + 5*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00229 * sin ( fmod ( ( 0.277869332353962 + p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00233 * sin ( fmod ( ( 4.245345504802164 + 4*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00235 * sin ( fmod ( ( 4.512854213650438 + 7*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 3.4362117362422193 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00237 * sin ( fmod ( ( 0.2945881903246661 + 4*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00238 * sin ( fmod ( ( 4.716074766699052 + 2*p3 + -2*p6 + -2*d + l ), twopi ) );
        a += 0.00242 * sin ( fmod ( ( 2.034063258941956 + 18*p2 + -16*p3 + -4*l ), twopi ) );
        a += 0.00243 * sin ( fmod ( ( 3.6878793132006162 + 3*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00244 * sin ( fmod ( ( 3.1902126396284496 + 2*p3 + -1*p5 + l ), twopi ) );
        a += 0.00247 * sin ( fmod ( ( 1.5309193931111804 + 4*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.0025 * sin ( fmod ( ( 1.3852791719480373 + 5*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.0025 * sin ( fmod ( ( 4.52687182553783 + 5*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00253 * sin ( fmod ( ( 4.712239580200719 + p2 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00255 * sin ( fmod ( ( 1.4283757145029072 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.0026 * sin ( fmod ( ( 1.5708183179434718 + p2 + -1*p3 + 2*d + l ), twopi ) );
        a += 0.0026 * sin ( fmod ( ( 6.259594040746229 + p3 + l ), twopi ) );
        a += 0.00262 * sin ( fmod ( ( 1.5720611669038167 + 9*p2 + -9*p3 ), twopi ) );
        a += 0.00262 * sin ( fmod ( ( 1.579633975995295 + 2*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00263 * sin ( fmod ( ( 1.0619408709869693 + 6*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00263 * sin ( fmod ( ( 0.527420697594316 + 4*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 2.8344300641362086 + 5*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 1.5515244011943752 + 4*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 4.714838899055715 + 2*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00265 * sin ( fmod ( ( 1.5653660838931664 + 5*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00266 * sin ( fmod ( ( 1.6873492397101526 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00267 * sin ( fmod ( ( 2.034047550978688 + 18*p2 + -16*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00268 * sin ( fmod ( ( 1.5715162751113443 + 7*p2 + -7*p3 + l ), twopi ) );
        a += 0.00269 * sin ( fmod ( ( 5.956586556642867 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00269 * sin ( fmod ( ( 2.814995299316476 + 10*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.0027 * sin ( fmod ( ( 3.116175074627149 + 2*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.0027 * sin ( fmod ( ( 3.1755637421506107 + 2*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00271 * sin ( fmod ( ( 4.510751790033486 + 5*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00271 * sin ( fmod ( ( 0.6308665368929451 + p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00272 * sin ( fmod ( ( 1.4888796474183932 + 3*p3 + -3*p5 + l ), twopi ) );
        a += 0.00272 * sin ( fmod ( ( 4.717646959289248 + p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 4.7197258209612984 + p3 + -1*p6 ), twopi ) );
        a += 0.00274 * sin ( fmod ( ( 4.720186587883825 + p3 + -1*p4 + l ), twopi ) );
        a += 0.00277 * sin ( fmod ( ( 3.8976602098416264 + 2*p4 + -2*d ), twopi ) );
        a += 0.00278 * sin ( fmod ( ( 3.6936765988440414 + 3*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00279 * sin ( fmod ( ( 4.753957138113589 + 2*p3 + -4*p5 + 2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00281 * sin ( fmod ( ( 4.714930528841444 + 2*p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00283 * sin ( fmod ( ( 6.256893318261694 + 2*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00283 * sin ( fmod ( ( 6.263489441103756 + 3*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00284 * sin ( fmod ( ( 5.175603378121265 + 18*p2 + -16*p3 + -2*f ), twopi ) );
        a += 0.00284 * sin ( fmod ( ( 6.055752499549756 + 3*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00285 * sin ( fmod ( ( 1.570322295370055 + 11*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00285 * sin ( fmod ( ( 1.5746555988369064 + 2*p3 + -2*p5 + 2*d + l ), twopi ) );
        a += 0.00286 * sin ( fmod ( ( 3.1881828217083803 + 8*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00286 * sin ( fmod ( ( 3.128426238778599 + 3*p3 + -6*p4 + l ), twopi ) );
        a += 0.00287 * sin ( fmod ( ( 4.6976158154641094 + 2*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00288 * sin ( fmod ( ( 0.010913718345645742 + 3*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00288 * sin ( fmod ( ( 5.03763736967914 + 2*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00289 * sin ( fmod ( ( 3.1927747829703774 + 4*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.0029 * sin ( fmod ( ( 2.8244279312588794 + 5*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.0029 * sin ( fmod ( ( 4.819839128586169 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00293 * sin ( fmod ( ( 3.1673554586784816 + 5*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00293 * sin ( fmod ( ( 2.7202645871047557 + p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00295 * sin ( fmod ( ( 2.687161101715104 + p3 + -2*d + l ), twopi ) );
        a += 0.00296 * sin ( fmod ( ( 0.04121787014802329 + 20*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00296 * sin ( fmod ( ( 4.7121830315329545 + 3*p2 + -3*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 4.71150549471733 + 12*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00299 * sin ( fmod ( ( 4.19281964643047 + 3*p3 + -4*p4 ), twopi ) );
        a += 0.00301 * sin ( fmod ( ( 5.05747652728656 + 2*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00301 * sin ( fmod ( ( 3.1701547922657554 + p3 + -1*l ), twopi ) );
        a += 0.00301 * sin ( fmod ( ( 0.26958320719719375 + p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00302 * sin ( fmod ( ( 4.3594790423083065 + 8*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00302 * sin ( fmod ( ( 1.5799680320141267 + p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00304 * sin ( fmod ( ( 1.5836346197067164 + 2*p2 + -2*p3 + -4*d + l ), twopi ) );
        a += 0.00306 * sin ( fmod ( ( 5.852906145092771 + p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00307 * sin ( fmod ( ( 4.810647526613466 + 5*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00308 * sin ( fmod ( ( 0.755302578440684 + p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00309 * sin ( fmod ( ( 3.8950921323802414 + p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00313 * sin ( fmod ( ( 5.222010286668392 + 3*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00314 * sin ( fmod ( ( 4.953366241141696 + 20*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00315 * sin ( fmod ( ( 4.309502411842075 + 4*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00315 * sin ( fmod ( ( 4.841933949718866 + 3*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00316 * sin ( fmod ( ( 1.3197712055341586 + 4*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00317 * sin ( fmod ( ( 1.1618388049821444 + 8*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00319 * sin ( fmod ( ( 0.005412789609210014 + 3*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00319 * sin ( fmod ( ( 1.1734407066518515 + 8*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00319 * sin ( fmod ( ( 4.711928911593864 + p3 + -1*p5 + 2*d + l ), twopi ) );
        a += 0.00325 * sin ( fmod ( ( 1.5673985198071139 + 4*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00326 * sin ( fmod ( ( 2.9196998700716437 + 3*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00327 * sin ( fmod ( ( 3.1466116969197526 + 3*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00327 * sin ( fmod ( ( 4.212197164450737 + 4*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00329 * sin ( fmod ( ( 0.5355511393818064 + 4*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.0033 * sin ( fmod ( ( 4.317373323169793 + 8*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00331 * sin ( fmod ( ( 4.306283501102621 + 8*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00331 * sin ( fmod ( ( 4.230686484414664 + 3*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00333 * sin ( fmod ( ( 5.043352624847721 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00337 * sin ( fmod ( ( 1.571966046459583 + 8*p2 + -8*p3 ), twopi ) );
        a += 0.00337 * sin ( fmod ( ( 5.066318888875938 + 2*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00338 * sin ( fmod ( ( 2.0287480332379326 + 15*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00338 * sin ( fmod ( ( 4.451007773474317 + 3*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.0034 * sin ( fmod ( ( 4.724576789084291 + p3 + -1*p5 + d + -1*l ), twopi ) );
        a += 0.00342 * sin ( fmod ( ( 0.2375162728503019 + 18*p2 + -15*p3 ), twopi ) );
        a += 0.00343 * sin ( fmod ( ( 1.5832951531672035 + p3 + -1*p5 + d + l ), twopi ) );
        a += 0.00343 * sin ( fmod ( ( 1.5710949526299127 + d ), twopi ) );
        a += 0.00344 * sin ( fmod ( ( 3.665108875114473 + 3*p3 + -5*p4 + l ), twopi ) );
        a += 0.00344 * sin ( fmod ( ( 4.476361996985115 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00344 * sin ( fmod ( ( 1.334744559719943 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00345 * sin ( fmod ( ( 4.886799558003559 + 2*p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00348 * sin ( fmod ( ( 5.8889471941464535 + p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00353 * sin ( fmod ( ( 4.524308460465425 + 5*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00356 * sin ( fmod ( ( 1.535452187711535 + 2*p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00359 * sin ( fmod ( ( 5.1756419498977335 + 18*p2 + -16*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00359 * sin ( fmod ( ( 0.024581566250938536 + 2*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0036 * sin ( fmod ( ( 5.922359428280782 + 5*p2 + -8*p3 + l ), twopi ) );
        a += 0.00362 * sin ( fmod ( ( 3.3663818110016273 + 3*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00364 * sin ( fmod ( ( 2.8993571849750235 + 3*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00365 * sin ( fmod ( ( 0.6890587812141645 + 18*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00365 * sin ( fmod ( ( 0.5254992646207955 + 3*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00368 * sin ( fmod ( ( 2.034035159140999 + 18*p2 + -16*p3 + -4*d ), twopi ) );
        a += 0.00368 * sin ( fmod ( ( 4.718700789091603 + p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0037 * sin ( fmod ( ( 2.7821242917831905 + 5*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.0037 * sin ( fmod ( ( 4.713996952224552 + 2*p3 + -2*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00376 * sin ( fmod ( ( 2.0340522633676685 + 18*p2 + -16*p3 + d + -1*l ), twopi ) );
        a += 0.00376 * sin ( fmod ( ( 5.175644916957462 + 18*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00376 * sin ( fmod ( ( 5.870742537383526 + 2*p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.00377 * sin ( fmod ( ( 2.5170744027851266 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00377 * sin ( fmod ( ( 2.702433954400531 + p3 + -2*d ), twopi ) );
        a += 0.0038 * sin ( fmod ( ( 6.282388215310202 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00382 * sin ( fmod ( ( 1.570985695018738 + 6*p2 + -6*p3 + l ), twopi ) );
        a += 0.00384 * sin ( fmod ( ( 4.767020403965991 + 3*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00386 * sin ( fmod ( ( 0.8333495137996658 + 2*p5 + -1*l ), twopi ) );
        a += 0.0039 * sin ( fmod ( ( 4.712314629358555 + 11*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00391 * sin ( fmod ( ( 4.48885942709402 + 6*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00391 * sin ( fmod ( ( 4.888384142431443 + 2*p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00393 * sin ( fmod ( ( 1.3156562427567315 + 4*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00393 * sin ( fmod ( ( 6.031461181553425 + p3 + p5 + d + l + -1*f ), twopi ) );
        a += 0.00393 * sin ( fmod ( ( 2.889868527963631 + p3 + p5 + d + -1*l + -1*f ), twopi ) );
        a += 0.00393 * sin ( fmod ( ( 0.18370637574791518 + p3 + -2*p5 + d + -1*l + f ), twopi ) );
        a += 0.00397 * sin ( fmod ( ( 3.966785371130263 + 2*p5 + l ), twopi ) );
        a += 0.00398 * sin ( fmod ( ( 0.5548525610466866 + 3*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.004 * sin ( fmod ( ( 3.7510111883708306 + p3 + -3*p5 + l ), twopi ) );
        a += 0.00401 * sin ( fmod ( ( 1.6150254135013855 + p3 + -1*p5 + -4*d + l ), twopi ) );
        a += 0.00406 * sin ( fmod ( ( 4.19183510619942 + 3*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00407 * sin ( fmod ( ( 0.6388053415285666 + p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00408 * sin ( fmod ( ( 0.530054748501426 + 4*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00413 * sin ( fmod ( ( 4.409185495806329 + 4*p2 + -6*p3 + l ), twopi ) );
        a += 0.00414 * sin ( fmod ( ( 3.216450872405381 + 4*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00416 * sin ( fmod ( ( 1.0073206175128817 + 3*p2 + -7*p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.00419 * sin ( fmod ( ( 4.712600688822956 + 4*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00419 * sin ( fmod ( ( 4.148757762266322 + 3*p2 + -7*p3 + 4*p4 + -2*d ), twopi ) );
        a += 0.0042 * sin ( fmod ( ( 1.5705811276981254 + 10*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00421 * sin ( fmod ( ( 6.050542866265478 + 3*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00421 * sin ( fmod ( ( 0.5570705254601209 + 3*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00423 * sin ( fmod ( ( 0.6891001455174367 + 18*p2 + -17*p3 ), twopi ) );
        a += 0.00426 * sin ( fmod ( ( 1.00058486833066 + 3*p2 + -7*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00427 * sin ( fmod ( ( 3.1917260146228537 + 2*p3 + -3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00429 * sin ( fmod ( ( 4.142007526851309 + 3*p2 + -7*p3 + 4*p4 + -2*d + l ), twopi ) );
        a += 0.00429 * sin ( fmod ( ( 2.7329499891741005 + p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.0043 * sin ( fmod ( ( 1.5716323395066019 + 7*p2 + -7*p3 ), twopi ) );
        a += 0.0043 * sin ( fmod ( ( 3.1563925220479296 + 3*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00431 * sin ( fmod ( ( 3.1775001849556985 + 7*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00431 * sin ( fmod ( ( 1.5718056507013247 + 2*p3 + -2*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00433 * sin ( fmod ( ( 2.8921238424230586 + 3*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00439 * sin ( fmod ( ( 1.354768024096373 + 6*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00439 * sin ( fmod ( ( 0.6891867138483356 + p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00442 * sin ( fmod ( ( 4.716434653590813 + 2*p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00442 * sin ( fmod ( ( 4.737809351874136 + 2*p3 + -3*p5 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00444 * sin ( fmod ( ( 0.013705896082986271 + 4*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00447 * sin ( fmod ( ( 0.03821398397241584 + 4*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00447 * sin ( fmod ( ( 1.2685140269957385 + 4*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.0045 * sin ( fmod ( ( 4.714496814522323 + 2*p3 + -2*p5 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00451 * sin ( fmod ( ( 0.23747490854702966 + 18*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00451 * sin ( fmod ( ( 1.1110823614061218 + 8*p3 + -15*p4 + l ), twopi ) );
        a += 0.00451 * sin ( fmod ( ( 1.5847373187281266 + 2*p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00452 * sin ( fmod ( ( 4.253075568059248 + 8*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00457 * sin ( fmod ( ( 5.710077474821665 + 2*p3 + -4*p5 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00458 * sin ( fmod ( ( 4.1985455481074885 + 2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00461 * sin ( fmod ( ( 4.739017119716517 + 2*p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00463 * sin ( fmod ( ( 3.1965111838330467 + 7*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00467 * sin ( fmod ( ( 6.02635975868277 + 26*p2 + -29*p3 ), twopi ) );
        a += 0.00467 * sin ( fmod ( ( 3.121284875078213 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00469 * sin ( fmod ( ( 6.26833814029872 + p6 + -2*d + l ), twopi ) );
        a += 0.00487 * sin ( fmod ( ( 6.2428757063743 + p6 + -2*d ), twopi ) );
        a += 0.0049 * sin ( fmod ( ( 1.5700746331491968 + 3*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00495 * sin ( fmod ( ( 1.5686370054443293 + 21*p2 + -21*p3 ), twopi ) );
        a += 0.00495 * sin ( fmod ( ( 3.087561972337029 + p6 + 2*d ), twopi ) );
        a += 0.00497 * sin ( fmod ( ( 1.570236774236707 + 3*p2 + -3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.005 * sin ( fmod ( ( 4.854499622201525 + 3*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.005 * sin ( fmod ( ( 5.8412045851227745 + p3 + p5 + -2*d ), twopi ) );
        a += 0.00502 * sin ( fmod ( ( 1.1096836545435735 + 10*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00504 * sin ( fmod ( ( 4.712432788148915 + 10*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00505 * sin ( fmod ( ( 4.249958759081036 + 10*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00511 * sin ( fmod ( ( 1.5709612604092098 + p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.0052 * sin ( fmod ( ( 2.7435713648700375 + p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00521 * sin ( fmod ( ( 0.6890237000961994 + 18*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00527 * sin ( fmod ( ( 1.572455087715992 + 6*p2 + -6*p3 ), twopi ) );
        a += 0.00533 * sin ( fmod ( ( 0.6903478813996875 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00534 * sin ( fmod ( ( 1.5530026950708142 + 4*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00534 * sin ( fmod ( ( 3.710615717366347 + 6*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00535 * sin ( fmod ( ( 2.8806210754548647 + 26*p2 + -29*p3 + -2*l ), twopi ) );
        a += 0.00535 * sin ( fmod ( ( 1.5826469378830128 + p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00536 * sin ( fmod ( ( 4.208619414017074 + 2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00539 * sin ( fmod ( ( 1.5714836374543317 + 5*p2 + -5*p3 + l ), twopi ) );
        a += 0.0054 * sin ( fmod ( ( 1.0374003199734527 + 3*p2 + -7*p3 + 4*p4 + l ), twopi ) );
        a += 0.00541 * sin ( fmod ( ( 4.178946547805143 + 3*p2 + -7*p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00549 * sin ( fmod ( ( 2.996102181676471 + p2 + -1*l ), twopi ) );
        a += 0.00552 * sin ( fmod ( ( 4.763118894956082 + 3*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00554 * sin ( fmod ( ( 0.23741713814878862 + 18*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00555 * sin ( fmod ( ( 6.048297500182788 + 3*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00558 * sin ( fmod ( ( 1.5706296478513309 + p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00558 * sin ( fmod ( ( 4.7289189937303275 + 3*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0056 * sin ( fmod ( ( 3.177892011372771 + 20*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00564 * sin ( fmod ( ( 1.5826572353255997 + p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00565 * sin ( fmod ( ( 3.452416943814062 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00566 * sin ( fmod ( ( 3.1772233757363324 + 3*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00566 * sin ( fmod ( ( 0.31085692788128083 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00569 * sin ( fmod ( ( 4.730049443486845 + p3 + -1*p5 + 2*l ), twopi ) );
        a += 0.00584 * sin ( fmod ( ( 1.7307829798765082 + 3*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00585 * sin ( fmod ( ( 4.559130047970741 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.0059 * sin ( fmod ( ( 6.052514739254381 + 3*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00595 * sin ( fmod ( ( 1.5756727767249685 + 4*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00614 * sin ( fmod ( ( 1.5707043479433165 + 9*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00614 * sin ( fmod ( ( 2.915511428932708 + p2 + -2*d + l ), twopi ) );
        a += 0.00625 * sin ( fmod ( ( 1.7044124511422754 + 2*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00626 * sin ( fmod ( ( 1.5720086324933318 + 5*p2 + -5*p3 ), twopi ) );
        a += 0.00627 * sin ( fmod ( ( 1.5732965109483783 + 4*p2 + -4*p3 ), twopi ) );
        a += 0.00636 * sin ( fmod ( ( 1.569133028017746 + 2*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00637 * sin ( fmod ( ( 4.719299437025036 + p3 + -1*p6 + l ), twopi ) );
        a += 0.00638 * sin ( fmod ( ( 3.140979170357717 + 2*p2 + -3*p3 ), twopi ) );
        a += 0.00641 * sin ( fmod ( ( 3.773724205124584 + p3 + -2*p5 + d ), twopi ) );
        a += 0.00649 * sin ( fmod ( ( 4.712561418914787 + 9*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00652 * sin ( fmod ( ( 1.5710865750495036 + p2 + -1*p3 + 2*l ), twopi ) );
        a += 0.00658 * sin ( fmod ( ( 1.5732448492025195 + 3*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00679 * sin ( fmod ( ( 1.0693141889449447 + 5*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00682 * sin ( fmod ( ( 3.181949727350733 + 5*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00682 * sin ( fmod ( ( 1.592621320025235 + p3 + -1*p5 + -2*l ), twopi ) );
        a += 0.0069 * sin ( fmod ( ( 0.040252004939969624 + 5*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00702 * sin ( fmod ( ( 4.184242051288619 + 2*p3 + -3*p4 + l ), twopi ) );
        a += 0.00707 * sin ( fmod ( ( 1.5564378521045894 + 3*p2 + -3*p3 + l ), twopi ) );
        a += 0.0071 * sin ( fmod ( ( 4.804215290188166 + 5*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00716 * sin ( fmod ( ( 5.235326276196483 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00717 * sin ( fmod ( ( 1.5732094190187038 + 2*p3 + -2*p5 + 4*d + -2*l ), twopi ) );
        a += 0.0072 * sin ( fmod ( ( 4.711336197779887 + l ), twopi ) );
        a += 0.00724 * sin ( fmod ( ( 5.166255045581733 + 18*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00732 * sin ( fmod ( ( 1.5719686644534612 + 4*p2 + -4*p3 + l ), twopi ) );
        a += 0.00737 * sin ( fmod ( ( 4.72243544462502 + 3*p2 + -3*p3 ), twopi ) );
        a += 0.00739 * sin ( fmod ( ( 4.712561069848936 + p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00744 * sin ( fmod ( ( 3.144955379459611 + p2 + 2*d + -1*l ), twopi ) );
        a += 0.00749 * sin ( fmod ( ( 4.200235550422194 + 3*p3 + -4*p4 + l ), twopi ) );
        a += 0.00761 * sin ( fmod ( ( 1.5787218669282026 + p3 + -1*p6 + -1*l ), twopi ) );
        a += 0.00768 * sin ( fmod ( ( 1.0443062387577438 + 2*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00775 * sin ( fmod ( ( 0.2807365592491383 + p2 + -2*p3 + l ), twopi ) );
        a += 0.00775 * sin ( fmod ( ( 0.28636559515267046 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00776 * sin ( fmod ( ( 3.42798565041172 + 4*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00785 * sin ( fmod ( ( 6.122058430497646 + p6 + -1*l ), twopi ) );
        a += 0.00786 * sin ( fmod ( ( 2.9799435743956573 + p6 + l ), twopi ) );
        a += 0.0079 * sin ( fmod ( ( 4.423993916377801 + 3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00793 * sin ( fmod ( ( 1.580938086012385 + p3 + -1*p5 + -1*d ), twopi ) );
        a += 0.00794 * sin ( fmod ( ( 3.156919960547882 + 6*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00794 * sin ( fmod ( ( 6.060527894916138 + 2*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00804 * sin ( fmod ( ( 4.887989698020492 + 2*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00807 * sin ( fmod ( ( 4.246482237743988 + 10*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00807 * sin ( fmod ( ( 1.1048895841541955 + 10*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00819 * sin ( fmod ( ( 4.712798260094282 + 8*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00819 * sin ( fmod ( ( 4.716192576423561 + 2*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00819 * sin ( fmod ( ( 1.7587827734674772 + 2*p3 + -3*p5 + l ), twopi ) );
        a += 0.00831 * sin ( fmod ( ( 4.712204848148604 + p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00834 * sin ( fmod ( ( 0.5665338751973594 + 2*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00844 * sin ( fmod ( ( 1.0636118492128286 + 2*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00861 * sin ( fmod ( ( 0.5334312624723341 + 2*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00862 * sin ( fmod ( ( 3.4032621888925942 + 4*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00862 * sin ( fmod ( ( 0.26166639371014744 + 4*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.00871 * sin ( fmod ( ( 3.4164155137343997 + p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00879 * sin ( fmod ( ( 1.0417069199027487 + 3*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00887 * sin ( fmod ( ( 1.5730062626937718 + 2*p3 + -2*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00895 * sin ( fmod ( ( 1.7479308397773523 + 2*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00895 * sin ( fmod ( ( 1.5828387495678071 + p3 + -1*p6 + -2*d + l ), twopi ) );
        a += 0.00911 * sin ( fmod ( ( 1.06556016025683 + 2*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00915 * sin ( fmod ( ( 1.5709837751565607 + 8*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00957 * sin ( fmod ( ( 3.1476306201370674 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00978 * sin ( fmod ( ( 1.5792526215537344 + 2*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00987 * sin ( fmod ( ( 1.6182547962163507 + 3*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.01002 * sin ( fmod ( ( 3.6822900708040303 + p3 + -2*p5 ), twopi ) );
        a += 0.01008 * sin ( fmod ( ( 1.28715152541316 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.01008 * sin ( fmod ( ( 4.428744179002953 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.01013 * sin ( fmod ( ( 4.71275218340203 + 7*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.01021 * sin ( fmod ( ( 3.724678707814291 + 2*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.01034 * sin ( fmod ( ( 4.741414503977056 + p3 + -1*p5 + -2*d + 2*l ), twopi ) );
        a += 0.01035 * sin ( fmod ( ( 3.751700244359518 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.01039 * sin ( fmod ( ( 6.193680808880037 + 2*p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.0104 * sin ( fmod ( ( 4.210294057434362 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.01042 * sin ( fmod ( ( 1.568723748308153 + p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01046 * sin ( fmod ( ( 2.8924585965735914 + 3*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.01067 * sin ( fmod ( ( 1.0238003653760623 + 3*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.01073 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d ), twopi ) );
        a += 0.01073 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.01092 * sin ( fmod ( ( 4.729105918493217 + 2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.01093 * sin ( fmod ( ( 1.5711617987402642 + p2 + -1*p3 + d ), twopi ) );
        a += 0.01097 * sin ( fmod ( ( 3.712741353862351 + 2*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.01105 * sin ( fmod ( ( 4.796453636471623 + 5*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.01112 * sin ( fmod ( ( 1.5755928406452275 + 2*p3 + -2*p4 + d ), twopi ) );
        a += 0.01116 * sin ( fmod ( ( 5.2304166650106225 + 3*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.01117 * sin ( fmod ( ( 4.72098333068736 + 2*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.01128 * sin ( fmod ( ( 4.68875600058221 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.01131 * sin ( fmod ( ( 1.54497819476892 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.01139 * sin ( fmod ( ( 1.5682312163932406 + 3*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.01143 * sin ( fmod ( ( 2.915222402408578 + p2 + -2*d ), twopi ) );
        a += 0.01145 * sin ( fmod ( ( 3.159392743032108 + 3*p2 + -4*p3 ), twopi ) );
        a += 0.0116 * sin ( fmod ( ( 1.570737858264955 + 2*p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.01165 * sin ( fmod ( ( 1.3462881673926335 + 6*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.01179 * sin ( fmod ( ( 1.583865177700905 + p3 + -1*p6 + -2*d ), twopi ) );
        a += 0.01191 * sin ( fmod ( ( 5.057287508128569 + 2*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01224 * sin ( fmod ( ( 3.7946639673583107 + 2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01237 * sin ( fmod ( ( 4.713504071243789 + 6*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.01241 * sin ( fmod ( ( 4.892881332315057 + 2*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.01279 * sin ( fmod ( ( 1.6068694899068163 + p3 + -1*p5 + -2*d + -1*l ), twopi ) );
        a += 0.01314 * sin ( fmod ( ( 1.1840280484273744 + 3*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.01329 * sin ( fmod ( ( 4.707910640056997 + 2*p3 + -2*p4 ), twopi ) );
        a += 0.01339 * sin ( fmod ( ( 1.2920927270584812 + 3*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.01354 * sin ( fmod ( ( 1.0130774115176597 + 3*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.01375 * sin ( fmod ( ( 4.340936664335119 + 3*p2 + -5*p3 + l ), twopi ) );
        a += 0.01377 * sin ( fmod ( ( 2.839309306593084 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.01377 * sin ( fmod ( ( 5.9809019601828775 + 8*p3 + -16*p4 + 4*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.0139 * sin ( fmod ( ( 1.5712408621553797 + 7*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01411 * sin ( fmod ( ( 0.6890488328374281 + 18*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01416 * sin ( fmod ( ( 0.2374628657751909 + 18*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.01439 * sin ( fmod ( ( 4.71339533723139 + 5*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.01476 * sin ( fmod ( ( 4.713468466527048 + 4*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.0148 * sin ( fmod ( ( 1.7486240845562444 + 2*p3 + -3*p5 ), twopi ) );
        a += 0.01558 * sin ( fmod ( ( 1.3242158610072872 + 3*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.01569 * sin ( fmod ( ( 3.6883240230940246 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.01596 * sin ( fmod ( ( 0.4850537026667797 + 2*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.01622 * sin ( fmod ( ( 3.6316350308575482 + 2*p3 + -4*p4 + l ), twopi ) );
        a += 0.01639 * sin ( fmod ( ( 6.058367002769243 + 2*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.01727 * sin ( fmod ( ( 5.1757231077079515 + 18*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.01729 * sin ( fmod ( ( 1.6229392599287036 + 3*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.01755 * sin ( fmod ( ( 1.5713843282198936 + 2*p3 + -2*p6 + 2*d + -1*l ), twopi ) );
        a += 0.01777 * sin ( fmod ( ( 2.0340548813615467 + 18*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.01777 * sin ( fmod ( ( 4.47749541380136 + 3*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.0183 * sin ( fmod ( ( 4.485105398405906 + 3*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.01882 * sin ( fmod ( ( 1.604310488157542 + 4*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0196 * sin ( fmod ( ( 4.713725728058792 + 2*d ), twopi ) );
        a += 0.0201 * sin ( fmod ( ( 6.18649738274468 + 2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.02045 * sin ( fmod ( ( 1.5707963267948966 ), twopi ) );
        a += 0.0211 * sin ( fmod ( ( 3.1748415249061357 + 5*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02139 * sin ( fmod ( ( 1.4644186834187676 + 3*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.02196 * sin ( fmod ( ( 1.5715253508234548 + 6*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02206 * sin ( fmod ( ( 4.890020737671039 + 2*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.02341 * sin ( fmod ( ( 1.747016112716382 + 2*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.0246 * sin ( fmod ( ( 4.893594648380347 + 2*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.02591 * sin ( fmod ( ( 0.8880722181008455 + p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.02611 * sin ( fmod ( ( 4.716469909241702 + 2*p2 + -2*p3 ), twopi ) );
        a += 0.02671 * sin ( fmod ( ( 0.024070533845954593 + 4*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02704 * sin ( fmod ( ( 3.1415729313692458 + 2*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.02747 * sin ( fmod ( ( 1.5709581188165567 + p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.02756 * sin ( fmod ( ( 3.6904960853481317 + p3 + -2*p5 + l ), twopi ) );
        a += 0.02778 * sin ( fmod ( ( 3.1615744045971 + 3*p2 + -4*p3 + l ), twopi ) );
        a += 0.02834 * sin ( fmod ( ( 3.15935923271047 + 2*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.02841 * sin ( fmod ( ( 4.048788269771816 + p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.02854 * sin ( fmod ( ( 1.1014114920208211 + 10*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.02862 * sin ( fmod ( ( 0.8415511650206374 + p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.02873 * sin ( fmod ( ( 4.241745937752852 + 10*p2 + -3*p3 ), twopi ) );
        a += 0.02975 * sin ( fmod ( ( 2.5693103619680655 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.03005 * sin ( fmod ( ( 5.713242105821381 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.03048 * sin ( fmod ( ( 3.7060956636695317 + 6*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.03074 * sin ( fmod ( ( 4.714221925165135 + 2*d + -1*l ), twopi ) );
        a += 0.03103 * sin ( fmod ( ( 2.583907597700045 + 8*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.03116 * sin ( fmod ( ( 4.7148992874478335 + 2*p3 + -2*p4 + l ), twopi ) );
        a += 0.03123 * sin ( fmod ( ( 4.018705425718591 + p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.03125 * sin ( fmod ( ( 5.726159287615392 + 8*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.0328 * sin ( fmod ( ( 1.5776779855025849 + 2*p3 + -2*p5 + l ), twopi ) );
        a += 0.03351 * sin ( fmod ( ( 0.542443444597932 + p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.03426 * sin ( fmod ( ( 0.6285469943170446 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.03452 * sin ( fmod ( ( 4.712314454825629 + 3*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.03488 * sin ( fmod ( ( 0.020795772570437635 + 3*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.03489 * sin ( fmod ( ( 0.010672688375945327 + 3*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.03539 * sin ( fmod ( ( 4.470744305721721 + p5 + 2*d ), twopi ) );
        a += 0.03574 * sin ( fmod ( ( 2.5033868326592867 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.03577 * sin ( fmod ( ( 5.645117018194137 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.03716 * sin ( fmod ( ( 0.4358472859994532 + p5 + -1*l ), twopi ) );
        a += 0.03722 * sin ( fmod ( ( 5.175696927769171 + 18*p2 + -16*p3 + l ), twopi ) );
        a += 0.03726 * sin ( fmod ( ( 1.5626859562938042 + 2*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.0374 * sin ( fmod ( ( 1.5715658424621008 + p2 + -1*p3 ), twopi ) );
        a += 0.03741 * sin ( fmod ( ( 3.553229430337282 + p5 + l ), twopi ) );
        a += 0.0376 * sin ( fmod ( ( 1.5719885612069338 + 5*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.03875 * sin ( fmod ( ( 4.720494638496802 + p3 + -1*p5 + 2*d ), twopi ) );
        a += 0.03968 * sin ( fmod ( ( 2.034063258941956 + 18*p2 + -16*p3 + -3*l ), twopi ) );
        a += 0.03974 * sin ( fmod ( ( 1.0774643529529826 + 5*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.04106 * sin ( fmod ( ( 1.488778069255927 + p5 + -2*d ), twopi ) );
        a += 0.0427 * sin ( fmod ( ( 4.711869919465146 + 2*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.04277 * sin ( fmod ( ( 4.73379108033727 + p3 + -1*p5 ), twopi ) );
        a += 0.04282 * sin ( fmod ( ( 4.644244519602749 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.04322 * sin ( fmod ( ( 0.628768825664973 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.0435 * sin ( fmod ( ( 1.5729902056646532 + 2*p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.04366 * sin ( fmod ( ( 4.721996145252293 + p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.04396 * sin ( fmod ( ( 1.551093828467908 + 2*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.04556 * sin ( fmod ( ( 0.009425476092470176 + 3*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.04609 * sin ( fmod ( ( 1.568014621033068 + p5 + -2*d + l ), twopi ) );
        a += 0.04883 * sin ( fmod ( ( 0.027749164310383042 + 2*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.04919 * sin ( fmod ( ( 1.5776338286725096 + 2*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.04924 * sin ( fmod ( ( 4.71488340495164 + 2*p2 + -2*p3 + l ), twopi ) );
        a += 0.05164 * sin ( fmod ( ( 3.116427623769913 + 2*p2 + -3*p3 + l ), twopi ) );
        a += 0.05247 * sin ( fmod ( ( 0.025033955593055466 + 2*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.05507 * sin ( fmod ( ( 6.260704419216348 + 2*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.05723 * sin ( fmod ( ( 1.5459428382464973 + 2*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.05857 * sin ( fmod ( ( 0.7551692352858317 + p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.05896 * sin ( fmod ( ( 3.9002420754041016 + p3 + -2*p4 + l ), twopi ) );
        a += 0.06007 * sin ( fmod ( ( 3.146634560732955 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.06082 * sin ( fmod ( ( 4.7274096329932025 + 2*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.0609 * sin ( fmod ( ( 4.714444629177688 + 2*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.06209 * sin ( fmod ( ( 1.5831686167964338 + p3 + -1*p5 + d ), twopi ) );
        a += 0.06312 * sin ( fmod ( ( 1.3362184902732523 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.06313 * sin ( fmod ( ( 4.4778451777834585 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.07054 * sin ( fmod ( ( 1.3477584327545138 + 6*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.07725 * sin ( fmod ( ( 4.889804491376717 + 2*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.07945 * sin ( fmod ( ( 1.5706608892449418 + 4*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.09932 * sin ( fmod ( ( 1.5726359038264985 + 3*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.1006 * sin ( fmod ( ( 4.712118803416481 + p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.10503 * sin ( fmod ( ( 4.728782508982822 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.10504 * sin ( fmod ( ( 4.731016181359523 + p3 + -1*p5 + l ), twopi ) );
        a += 0.11216 * sin ( fmod ( ( 0.29127747526655806 + 4*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.11226 * sin ( fmod ( ( 3.4329272011228915 + 4*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.11251 * sin ( fmod ( ( 0.29867173717555723 + 4*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.11256 * sin ( fmod ( ( 3.440291966967532 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.11617 * sin ( fmod ( ( 1.5762209846430204 + 2*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.11998 * sin ( fmod ( ( 1.5710766266727667 + p2 + -1*p3 + l ), twopi ) );
        a += 0.12047 * sin ( fmod ( ( 4.712335224243728 + 2*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.12362 * sin ( fmod ( ( 4.7121311952541705 + p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.12666 * sin ( fmod ( ( 1.5922204178960522 + p3 + -1*p5 + -1*l ), twopi ) );
        a += 0.12671 * sin ( fmod ( ( 5.175640902700182 + 18*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.13477 * sin ( fmod ( ( 2.034002870549837 + 18*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.13811 * sin ( fmod ( ( 4.712562291579413 + p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.1445 * sin ( fmod ( ( 1.5704233499337454 + 2*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.15751 * sin ( fmod ( ( 1.601265935810363 + p3 + -1*p5 + -2*d + l ), twopi ) );
        a += 0.1578 * sin ( fmod ( ( 3.4031883614652347 + 4*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.1578 * sin ( fmod ( ( 0.2615971041388433 + 4*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.16644 * sin ( fmod ( ( 1.5771468818112033 + 2*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.20367 * sin ( fmod ( ( 5.175651549208618 + 18*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.20473 * sin ( fmod ( ( 2.034045456583586 + 18*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.20497 * sin ( fmod ( ( 1.602188167787117 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.41011 * sin ( fmod ( ( 4.888130371558203 + 2*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.59827 * sin ( fmod ( ( 1.57047989860151 + 3*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.68256 * sin ( fmod ( ( 5.17569954576305 + 18*p2 + -16*p3 ), twopi ) );
        a += 0.72783 * sin ( fmod ( ( 2.034060990013929 + 18*p2 + -16*p3 + -2*l ), twopi ) );
        a += 1.0587 * sin ( fmod ( ( 1.5728853113766086 + 2*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        return a;
    }

    double planetary_lon12 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 3.7357688789473134 + 13*p1 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.6212477208109375 + 9*p1 + -13*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.13334228218774077 + 8*p1 + -9*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.048138317656689 + 5*p1 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7605410096576198 + 4*p1 + -3*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.811271298789813 + 3*p1 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7500257499802043 + 3*p1 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.3566821521819845 + 51*p2 + -58*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.232694634757059 + 50*p2 + -57*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.32447695376506897 + 48*p2 + -53*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1635682517379458 + 47*p2 + -52*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.973466125444414 + 45*p2 + -47*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.68747526947878 + 43*p2 + -46*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.685116265465151 + 42*p2 + -43*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.167899294775086 + 42*p2 + -44*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.987871391955308 + 40*p2 + -39*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.686380581975296 + 40*p2 + -41*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9815503160067265 + 38*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7960643940551614 + 37*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.601511363096461 + 34*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.801904806327743 + 34*p2 + -35*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8013377403554536 + 33*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9862262276057445 + 33*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7996714830168914 + 33*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.601085502758973 + 32*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8601413820119634 + 32*p2 + -28*p3 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8601413820119634 + 32*p2 + -28*p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.987104128219498 + 32*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8216233616838498 + 32*p2 + -38*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.797249481115582 + 31*p2 + -35*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2107013917868281 + 31*p2 + -36*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.821909595681177 + 31*p2 + -37*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4220398372489504 + 31*p2 + -38*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.792037412868668 + 30*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.383996729508621 + 30*p2 + -35*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.40911215798447886 + 30*p2 + -37*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7400960567651498 + 29*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.695975388998476 + 29*p2 + -34*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.456355985901204 + 29*p2 + -34*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8224045710570427 + 29*p2 + -35*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9639972246468345 + 29*p2 + -35*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.506756539846112 + 28*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7077299814827827 + 28*p2 + -31*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2280981271406901 + 28*p2 + -34*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.682581732318671 + 27*p2 + -31*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.108735983251324 + 27*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9520640594851 + 26*p2 + -25*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8104714058953073 + 26*p2 + -25*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.750848515186228 + 26*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.750848515186228 + 26*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.417092360916639 + 26*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7186337429533753 + 26*p2 + -28*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7613602757068227 + 26*p2 + -28*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.860226396543169 + 26*p2 + -28*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2149713398018323 + 26*p2 + -31*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8229367219459753 + 26*p2 + -32*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.333691628077165 + 26*p2 + -33*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8112053168457702 + 25*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8608599340650094 + 25*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.711343536661062 + 25*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.610687606171746 + 25*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5574829637590004 + 25*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.121418584295549 + 25*p2 + -27*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.709270592111835 + 25*p2 + -28*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.868022956844753 + 25*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2738168863570225 + 25*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9031979395303291 + 25*p2 + -29*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2157558653006038 + 25*p2 + -30*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8230529608741586 + 25*p2 + -31*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.964645614463952 + 25*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.953505003315546 + 24*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.669847452531954 + 24*p2 + -24*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.153644858704832 + 24*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2755614919823666 + 24*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5161897038856074 + 24*p2 + -25*p3 + d + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.85353340792762 + 24*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9276140655648115 + 24*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.0692067191546055 + 24*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9276140655648115 + 24*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2332374491510625 + 24*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9798388461422207 + 24*p2 + -26*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9647288666692715 + 24*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9939144029607794 + 23*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.356478472258278 + 23*p2 + -23*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.356478472258278 + 23*p2 + -23*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.31408107460848994 + 23*p2 + -24*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.455673728198283 + 23*p2 + -24*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5168691605634086 + 23*p2 + -24*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.820611436780177 + 23*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.375276506973616 + 23*p2 + -24*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.821238891144585 + 23*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.466352359192002 + 23*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.252730341933203 + 23*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9945362637732649 + 22*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9848784843573546 + 22*p2 + -23*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.970255443247395 + 22*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7487740083389907 + 22*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9797477399552668 + 22*p2 + -24*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.1213403935450605 + 22*p2 + -24*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2667613843575194 + 22*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6181233814219924 + 22*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0891378131220213 + 22*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.4671119264824695 + 22*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5137870836373124 + 21*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.933692357716124 + 21*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7303529392471333 + 21*p2 + -20*p3 + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.262902129312143 + 21*p2 + -20*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1213094757223496 + 21*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9472022278291613 + 21*p2 + -21*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.218796960982545 + 21*p2 + -22*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7228963605855212 + 21*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9796398786074936 + 21*p2 + -23*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.508523877243315 + 21*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.3865880028524247 + 21*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.467845662900008 + 21*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2664400692422273 + 20*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2664400692422273 + 20*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8271164364386516 + 20*p2 + -18*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0789047731846535 + 20*p2 + -18*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.220497426774447 + 20*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.137281532801076 + 20*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.995688879211282 + 20*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4710919583120843 + 20*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6340029020570956 + 20*p2 + -20*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7662731945199449 + 20*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3173739873082277 + 20*p2 + -21*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.695181438721745 + 20*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.847529824366611 + 20*p2 + -21*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3173739873082277 + 20*p2 + -21*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7227883247048228 + 20*p2 + -22*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.860396740678163 + 20*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.864380978294617 + 20*p2 + -22*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9794866386991683 + 20*p2 + -22*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.121079292288962 + 20*p2 + -22*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.121079292288962 + 20*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8014592067730757 + 20*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.432285085992766 + 20*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.993597825729418 + 19*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.12251775016687194 + 19*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7315057292180756 + 19*p2 + -18*p3 + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0663234097353604 + 19*p2 + -18*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.207916063325154 + 19*p2 + -18*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.191786236980364 + 19*p2 + -18*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.103694740246597 + 19*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.722635259329423 + 19*p2 + -21*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.864227912919215 + 19*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1702800984077317 + 19*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.964465496485146 + 19*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3615528085322593 + 18*p2 + -14*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8427715247285814 + 18*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.122508874482637 + 18*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.068240130319901 + 18*p2 + -17*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1363976725729157 + 18*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1363976725729157 + 18*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.04209385089959924 + 18*p2 + -17*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.046802617180138 + 18*p2 + -18*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.41634954878699 + 18*p2 + -18*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.41634954878699 + 18*p2 + -18*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.667203793815641 + 18*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.37823152393016757 + 18*p2 + -19*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.519824177519961 + 18*p2 + -19*p3 + -3*d + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.37823152393016757 + 18*p2 + -19*p3 + -3*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7224343719325184 + 18*p2 + -20*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.8640270255223115 + 18*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1701270330323315 + 18*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2205005428721503 + 18*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.362093196461943 + 18*p2 + -23*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.822845790291947 + 18*p2 + -24*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.96443844388174 + 18*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.964673016133208 + 18*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.912875624198029 + 17*p2 + -12*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.054468277787822 + 17*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.054468277787822 + 17*p2 + -12*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.912875624198029 + 17*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.912875624198029 + 17*p2 + -12*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.940254978734865 + 17*p2 + -15*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.940254978734865 + 17*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3037237927233303 + 17*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.780610052622477 + 17*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8067671190908743 + 17*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.948359772680667 + 17*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0679743166748223 + 17*p2 + -16*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8160437185981495 + 17*p2 + -16*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3719261729414876 + 17*p2 + -16*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6477197937143697 + 17*p2 + -17*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.16234965435588652 + 17*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.863775523577099 + 17*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.1714200069354765 + 17*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5104789695764491 + 17*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2210614916937412 + 17*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.964951745214752 + 17*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8407158589389496 + 16*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8788143021148835 + 16*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.284847018163776 + 16*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0871947465640925 + 16*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.15901782081382937 + 16*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.4386783845791131 + 16*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.37919215315046517 + 16*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.471265993133459 + 16*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5049701868583794 + 16*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.221590675522946 + 16*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2364291412525015 + 15*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.094836487662708 + 15*p2 + -9*p3 + 2*d + -2*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6003388254100206 + 15*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.705369249136535 + 15*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.223071446853605 + 15*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0262893879206483 + 15*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.415256274543541 + 15*p2 + -15*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4636401005377695 + 15*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3796222022781566 + 15*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9779411496465273 + 15*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.119533803236321 + 15*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.509172973690448 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.377471109470023 + 15*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.23587845588023043 + 15*p2 + -18*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7672889761446055 + 15*p2 + -18*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9088816297343985 + 15*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.035668072192531715 + 15*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.585068939784322 + 15*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.970306938958645 + 15*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.970306938958645 + 15*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9141650734494025 + 14*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3098811142964908 + 14*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.6983188340868125 + 14*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.556726180497019 + 14*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.20728913255952 + 14*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.3037447281760373 + 14*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.977021561158601 + 14*p2 + -11*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2331780909598615 + 14*p2 + -11*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.148052134148057 + 14*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.350126695511494 + 14*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1655940638990523 + 14*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.817333167849523 + 14*p2 + -13*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.803039112805247 + 14*p2 + -13*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.312836139751359 + 14*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3033029768440407 + 14*p2 + -14*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.907851170347388 + 14*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0109664442856894 + 14*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2731737070327132 + 14*p2 + -14*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.964891680393533 + 14*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9774510611925675 + 14*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.11904371478236 + 14*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.11659968773920958 + 14*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5137254735147168 + 14*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2225514792761687 + 14*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.545551220355616 + 14*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4039585667658234 + 14*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6934289196265495 + 14*p2 + -21*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.835021573216342 + 14*p2 + -21*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.3395793047792095 + 13*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36944588554147845 + 13*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1748204064221865 + 13*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.154836403483484 + 13*p2 + -11*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.1402828009828045 + 13*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.154836403483484 + 13*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5013694150752226 + 13*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8176937528729846 + 13*p2 + -12*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.959286406462777 + 13*p2 + -12*p3 + -4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.407005928636439 + 13*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2654132750466456 + 13*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.666899940491186 + 13*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.121588230298842 + 13*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9181322068391857 + 13*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9768913341014527 + 13*p2 + -15*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9768913341014527 + 13*p2 + -15*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.1184839876912465 + 13*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.09035168111846686 + 13*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.20420282435163578 + 13*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1523506715695275 + 13*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.22298152840386 + 13*p2 + -18*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1237246538429426 + 13*p2 + -20*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2349693138728666 + 12*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2598549419744525 + 12*p2 + -6*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2598549419744525 + 12*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9148506387795858 + 12*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9125801399556666 + 12*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3931727895526653 + 12*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.604518041798871 + 12*p2 + -8*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.604518041798871 + 12*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.454794273784836 + 12*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.567118926559261 + 12*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.09594109804797869 + 12*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.40524258849988215 + 12*p2 + -9*p3 + -3*d + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.1709452603823 + 12*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.2945581876581653 + 12*p2 + -11*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.899932820057281 + 12*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.959611386769499 + 12*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.021350829764155 + 12*p2 + -11*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.959611386769499 + 12*p2 + -11*p3 + -4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2684421194305564 + 12*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.602953843729967 + 12*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.03425802068984549 + 12*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.32020892561224207 + 12*p2 + -13*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6351583100219158 + 12*p2 + -13*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.112645163211624 + 12*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5690131323964507 + 12*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2119204957710295 + 12*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.143878877373614 + 12*p2 + -15*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2233770200123621 + 12*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.962402866375139 + 12*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.820810212785346 + 12*p2 + -18*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9164050290114119 + 11*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.997174703498455 + 11*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.997174703498455 + 11*p2 + -6*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.802805587751331 + 11*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6612129341615378 + 11*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5096935884096845 + 11*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3681009348198917 + 11*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5096935884096845 + 11*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5096935884096845 + 11*p2 + -7*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5053501365382217 + 11*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.24749559290433 + 11*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.225678594195284 + 11*p2 + -8*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.09009232519162048 + 11*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.868982364334574 + 11*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1879796568851315 + 11*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8138662458233608 + 11*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6712012874360926 + 11*p2 + -10*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.707700685446299 + 11*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6032974990596844 + 11*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3205695106357041 + 11*p2 + -12*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3205197687520222 + 11*p2 + -12*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5225852883966158 + 11*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.039798959957735 + 11*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.033395129907659506 + 11*p2 + -14*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4465297567175264 + 11*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.851777415170556 + 11*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.951327356007833 + 11*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.815441047909119 + 11*p2 + -18*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.815441047909119 + 11*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.545361154000075 + 10*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1401108520582166 + 10*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.855352547610341 + 10*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4241698370680846 + 10*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.056985391635048 + 10*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9153927380452556 + 10*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8560056413181207 + 10*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8560056413181207 + 10*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.625151315717631 + 10*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.625151315717631 + 10*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3673090789382618 + 10*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.872535156559933 + 10*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.872535156559933 + 10*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.971619051995345 + 10*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.08352709467731863 + 10*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.860816317830342 + 10*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3040030454036486 + 10*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9944691025903305 + 10*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.212846792994963 + 10*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.325397614945496 + 10*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.666385242894772 + 10*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.7696108216418 + 10*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.960153486035169 + 10*p2 + -9*p3 + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0794060487424595 + 10*p2 + -10*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.582339253332519 + 10*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4624873190651435 + 10*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.204551749662376 + 10*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.46215989529747 + 10*p2 + -11*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.83816578386381 + 10*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8569458416878534 + 10*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.31480852784072116 + 10*p2 + -11*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.046717968711416 + 10*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9164488367756372 + 10*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9484415946293192 + 10*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.05804149036543 + 10*p2 + -12*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.05804149036543 + 10*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.390779087480189 + 10*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9434155699823512 + 10*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.14479181661374876 + 10*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7790177632509326 + 10*p2 + -13*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7790177632509326 + 10*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4551923493939496 + 10*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7178939148800882 + 10*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3202461011253095 + 10*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.365655238932339 + 10*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2240625853425453 + 10*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.768860670630976 + 10*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.700703967049321 + 9*p2 + -1*p3 + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8011591846746579 + 9*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057201986995221 + 9*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057201986995221 + 9*p2 + -4*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057201986995221 + 9*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5080281952374315 + 9*p2 + -5*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.338691472785353 + 9*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.07615412578519379 + 9*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.043795929979411 + 9*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0128177235215965 + 9*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.712099255728859 + 9*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.380342708186647 + 9*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.978680139048455 + 9*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8187774278055477 + 9*p2 + -8*p3 + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.838044483480797 + 9*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2179548056251912 + 9*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.411196289637552 + 9*p2 + -9*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.078593074376881 + 9*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3678344485380625 + 9*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.02633440041871644 + 9*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6903341017969136 + 9*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2719655901244826 + 9*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.115473643797406 + 9*p2 + -11*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.397449727382995 + 9*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.115473643797406 + 9*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.503239726898293 + 9*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9493493403732816 + 9*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.778179341071541 + 9*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.122308685217433 + 9*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.847345683632208 + 8*p2 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.3062981448717053 + 8*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.135188708495009 + 8*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.890855362617659 + 8*p2 + -3*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.507075943597544 + 8*p2 + -4*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.260080289475834 + 8*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9217000173944294 + 8*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.348615406413876 + 8*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.06787358568203189 + 8*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.810310312005348 + 8*p2 + -7*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.161685607565403 + 8*p2 + -7*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.901732254516087 + 8*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9853113345101656 + 8*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0302048595645723 + 8*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.358327116503673 + 8*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4630292437978882 + 8*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6407220621131067 + 8*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.114521392157518 + 8*p2 + -10*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.114521392157518 + 8*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3650293553642565 + 8*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6899103528511628 + 8*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.767296340520731 + 8*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6257036869309371 + 8*p2 + -12*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.9061812648140295 + 8*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.316844313873514 + 8*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1295510864848752 + 8*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.224604684608215 + 8*p2 + -13*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8181136790910144 + 8*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.313567973303354 + 8*p2 + -15*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5829644217722674 + 7*p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.701904779069643 + 7*p2 + p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1978051539438421 + 7*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057527665433643 + 7*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8047720247246029 + 7*p2 + -2*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.75415994537267 + 7*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.697751402052039 + 7*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9748688465642419 + 7*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2100879085547522 + 7*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.351680562144545 + 7*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.814734721659154 + 7*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.897923056426977 + 7*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.096321098717721 + 7*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0717964132037645 + 7*p2 + -6*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.127293860661588 + 7*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.960695759833763 + 7*p2 + -6*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.568045547354095 + 7*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.490784001660194 + 7*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.318259043771914 + 7*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2045597441836686 + 7*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.791948601104692 + 7*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7021375804969092 + 7*p2 + -8*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6022798060711634 + 7*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3817878068140312 + 7*p2 + -8*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3817878068140312 + 7*p2 + -8*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.516243468524886 + 7*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.084928287492402 + 7*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.819539604591577 + 7*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.113498803748774 + 7*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.113498803748774 + 7*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.2350285230260925 + 7*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9203477277916672 + 7*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6747256392929613 + 7*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7274568974226658 + 7*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.096857587434834 + 7*p2 + -11*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.817240141800391 + 7*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.452345202283488 + 7*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057638319308221 + 6*p2 + -1*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.71360495977287 + 6*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.858325707492797 + 6*p2 + -1*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.580533378152115 + 6*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3633874986419558 + 6*p2 + -2*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3633874986419558 + 6*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.847222471885335 + 6*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9624141940186437 + 6*p2 + -3*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.5603760385237395 + 6*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0719070670783406 + 6*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.705470503728101 + 6*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0719070670783406 + 6*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6977205097242787 + 6*p2 + -5*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.049949603357775 + 6*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9608064137083385 + 6*p2 + -5*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.756561160859247 + 6*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.780561898531755 + 6*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0841390156113846 + 6*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.408148072098943 + 6*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4905876266243947 + 6*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.38189846068860767 + 6*p2 + -7*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5968129112551415 + 6*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.523491114278401 + 6*p2 + -7*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.686889711514736 + 6*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.110320035582118 + 6*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.12397248209840923 + 6*p2 + -9*p3 + d + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.35783617238172 + 6*p2 + -9*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.8787640621273765 + 6*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.10997703589251709 + 6*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.559225875044992 + 6*p2 + -9*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7491548476800927 + 6*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0917369574440914 + 6*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8162878901605035 + 6*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.31999075945574273 + 5*p2 + p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.31999075945574273 + 5*p2 + p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9161236819359904 + 5*p2 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0516854908351758 + 5*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.539804881329717 + 5*p2 + -1*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3623006821167389 + 5*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.841153438477375 + 5*p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.3874362498655275 + 5*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.625590789623283 + 5*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6238941295624698 + 5*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8540552358790172 + 5*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.02820750476859 + 5*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.407061430106652 + 5*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.463571692129408 + 5*p2 + -6*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7719401125665621 + 5*p2 + -6*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8017095039844446 + 5*p2 + -6*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.463571692129408 + 5*p2 + -6*p3 + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.703341866179102 + 5*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.300062108949279 + 5*p2 + -6*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.523569130495965 + 5*p2 + -6*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.432480413831014 + 5*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.613682225105684 + 5*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.975176216042151 + 5*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9413367083103006 + 5*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3303843781826108 + 5*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.092342237628683 + 5*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3045451446693184 + 5*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.8780983935506645 + 5*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.3977317555934827 + 5*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.594364405844152 + 5*p2 + -8*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9499102891948727 + 5*p2 + -9*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6896314237417438 + 5*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366739611996603 + 5*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2251469584068095 + 5*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2251469584068095 + 5*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366739611996603 + 5*p2 + -10*p3 + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.425924067499264 + 5*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366739611996603 + 5*p2 + -10*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.956857955341553 + 5*p2 + -11*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9780469081008816 + 5*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3245654419581451 + 4*p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9161716784904204 + 4*p2 + p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.110008834878171 + 4*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.538488030409087 + 4*p2 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36126640000200705 + 4*p2 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6231986158555498 + 4*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.785738702629462 + 4*p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5918961357210315 + 4*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2277335363582653 + 4*p2 + -2*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2277335363582653 + 4*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9982953539162105 + 4*p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.07203325438326 + 4*p2 + -3*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.07203325438326 + 4*p2 + -3*p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.952556067801236 + 4*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6092335553752757 + 4*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6074152458655981 + 4*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.325467985707618 + 4*p2 + -3*p3 + d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.550237744469805 + 4*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8193397728905407 + 4*p2 + -3*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8617544068083396 + 4*p2 + -4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.459917853838674 + 4*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8008139755452466 + 4*p2 + -5*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.302396835889672 + 4*p2 + -5*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.738441850696743 + 4*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.10759239253551724 + 4*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9297885627815552 + 4*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.143925460668009 + 4*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0251050159885615 + 4*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5462280165479565 + 4*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.877246847408617 + 4*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.723303396862037 + 4*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.581710743272243 + 4*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366850265871179 + 4*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.225257612281386 + 4*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4915205221062187 + 4*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2206754248632 + 4*p2 + -9*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2206754248632 + 4*p2 + -9*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.054952764191542 + 4*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.469456942367133 + 3*p2 + 3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.32786428877733964 + 3*p2 + 3*p3 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.05778702136049 + 3*p2 + 2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.0917263449289205 + 3*p2 + 2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.05778702136049 + 3*p2 + 2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7441310834628354 + 3*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9161943677706963 + 3*p2 + 2*p3 + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6003978005421046 + 3*p2 + p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.5533667962477296 + 3*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8703876949499625 + 3*p2 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.23214415791098 + 3*p2 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.33855076525437566 + 3*p2 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2969410771875964 + 3*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.146525660685946 + 3*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7671717070155046 + 3*p2 + -2*p3 + d + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9687626546398476 + 3*p2 + -2*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0154872046125214 + 3*p2 + -2*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.819362462170816 + 3*p2 + -2*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.009219918798168 + 3*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.547210321844245 + 3*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.035341563581067 + 3*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4637601876886235 + 3*p2 + -4*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.228759832450021 + 3*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.843383079600164 + 3*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.843383079600164 + 3*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3668525008059401 + 3*p2 + -4*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.10644501308525615 + 3*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.865150485463503 + 3*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5237445190891572 + 3*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.140020661027473 + 3*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9797058435549022 + 3*p2 + -6*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.876169630194287 + 3*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9907754367993844 + 3*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.57261669670641 + 3*p2 + -6*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9899943849624835 + 3*p2 + -7*p3 + 4*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.712883083095929 + 3*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5712904295061363 + 3*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.847292459588339 + 3*p2 + -7*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.45040350649401106 + 3*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.912388013198289 + 3*p2 + -7*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366928282088743 + 3*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.336038023228596 + 3*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9945846008952287 + 3*p2 + -8*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2562249891995212 + 3*p2 + -8*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.3323951975087835 + 3*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366928282088743 + 3*p2 + -8*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9526483617254011 + 2*p2 + 3*p3 + 4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.094241015315195 + 2*p2 + 3*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057790337486067 + 2*p2 + 3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9161976838962753 + 2*p2 + 3*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5014549362085705 + 2*p2 + 2*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.750496848338584 + 2*p2 + 2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.750496848338584 + 2*p2 + 2*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5689166156888157 + 2*p2 + p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3766886613697211 + 2*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.611420993523433 + 2*p2 + p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8708465335119957 + 2*p2 + p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1508109421034183 + 2*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.729461791127699 + 2*p2 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.033524641836474 + 2*p2 + -1*p3 + d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.839566061522686 + 2*p2 + -1*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.819365778296395 + 2*p2 + -1*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.960958431886189 + 2*p2 + -1*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.290965793455419 + 2*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1493731398656253 + 2*p2 + -2*p3 + d + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.114763826888937 + 2*p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4638083587759785 + 2*p2 + -3*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4638083587759785 + 2*p2 + -3*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.32221570518618514 + 2*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.207813587003112 + 2*p2 + -3*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6590792606526579 + 2*p2 + -3*p3 + -4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6562095987948455 + 2*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.375167640919875 + 2*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7437811364494938 + 2*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.339572331960518 + 2*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7753700421108976 + 2*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2253837995863053 + 2*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.366976453176098 + 2*p2 + -7*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8120710001547597 + 2*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.472464319201244 + p2 + 5*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.472464319201244 + p2 + 5*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8852158207453482 + p2 + 4*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8852158207453482 + p2 + 4*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8852158207453482 + p2 + 4*p3 + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0235169239055386 + p2 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3969585832331664 + p2 + 3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5015090414153827 + p2 + 3*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.745254751930219 + p2 + 3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.745254751930219 + p2 + 3*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0276451681819148 + p2 + 2*p3 + 4*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3596621188485236 + p2 + 2*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5605589405310316 + p2 + p3 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.811111941730789 + p2 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9095444802893561 + p2 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.236049174576025 + p2 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9699941589600547 + p2 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.929976394202337 + p2 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.788383740612543 + p2 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.01709362265269 + p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.335143043883123 + p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2037546322980401 + p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.335143043883123 + p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.079909767761219 + p2 + -1*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.377474425595602 + p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9383171141714255 + p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3120549303781666 + p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.691190560355817 + p2 + -1*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.463830873523329 + p2 + -2*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.32223821993353585 + p2 + -2*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2115642995656475 + p2 + -2*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.267583110864309 + p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.875360836120596 + p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.4169181770572905 + p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4260455254185698 + p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.073876696634167 + p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.073876696634167 + p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.058990208855231145 + p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5083925944902983 + p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5726873825411158 + p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0774107713449463 + p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.31566880062902924 + p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.397943655561308 + p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.225406314333656 + p2 + -6*p3 + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.15967022488822483 + p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.3669989679234495 + p2 + -6*p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8112000808580144 + p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7758908483596927 + p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1988603800095978 + 51*p3 + -71*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8230580138306727 + 45*p3 + -63*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36294558127535076 + 40*p3 + -54*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.091034670946356 + 35*p3 + -41*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5497782077760713 + 35*p3 + -44*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3511606200620596 + 34*p3 + -37*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5413435550999584 + 34*p3 + -41*p4 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5413435550999584 + 34*p3 + -41*p4 + -1*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.06875166082871022 + 33*p3 + -37*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1688192493254959 + 32*p3 + -39*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1688192493254959 + 32*p3 + -39*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.940856244662177 + 31*p3 + -34*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4431138068038396 + 31*p3 + -35*p4 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1543759601318584 + 31*p3 + -36*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.26226159347666 + 31*p3 + -36*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.2959686137216515 + 31*p3 + -36*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1704057621138753 + 29*p3 + -34*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.284248902327435 + 29*p3 + -34*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1704057621138753 + 29*p3 + -34*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6793798918126215 + 29*p3 + -35*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.152576734199244 + 27*p3 + -26*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.227334771115768 + 27*p3 + -30*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.671927693470773 + 27*p3 + -31*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.671927693470773 + 27*p3 + -31*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1839985608613324 + 27*p3 + -32*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1707208025421774 + 25*p3 + -28*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1707208025421774 + 25*p3 + -28*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6876154109193986 + 25*p3 + -29*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.180631131100851 + 24*p3 + -27*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.180631131100851 + 24*p3 + -27*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.836030382022312 + 24*p3 + -28*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.694437728432519 + 24*p3 + -28*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2610089366792379 + 23*p3 + -23*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1976014910167674 + 22*p3 + -25*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7062970661668952 + 22*p3 + -26*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7062970661668952 + 22*p3 + -26*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2048479235381224 + 21*p3 + -24*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.637477695061524 + 20*p3 + -18*p4 + -3*d + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.637477695061524 + 20*p3 + -18*p4 + -3*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.358158883760415 + 20*p3 + -25*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.216566230170621 + 20*p3 + -25*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.361247418404743 + 19*p3 + -24*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.2196547648149503 + 19*p3 + -24*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8352646805845123 + 18*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8352646805845123 + 18*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2224563758285685 + 18*p3 + -21*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.455114358671336 + 17*p3 + -11*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.980969678957855 + 17*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.337635531591263 + 17*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5805350809897831 + 17*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0742307984444457 + 17*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.215823452034239 + 17*p3 + -20*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2271218154520747 + 17*p3 + -20*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.110988679716873 + 17*p3 + -26*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.9693960261270798 + 17*p3 + -26*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.689818872103408 + 16*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.4815644829177765 + 16*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.835346353495189 + 16*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.976939007084982 + 16*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2312554532524977 + 16*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.58397914770106 + 16*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.725571801290853 + 16*p3 + -22*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6042380739902176 + 16*p3 + -30*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2348921958148784 + 15*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.11035894792612 + 15*p3 + -28*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1832819201721467 + 14*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0887292315441295 + 14*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0887292315441295 + 14*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7183325161211145 + 14*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0935215736008894 + 14*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2380645062633038 + 14*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.233740819103971 + 14*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7182970859372992 + 14*p3 + -22*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5767044323475059 + 14*p3 + -22*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.992072241928566 + 13*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.850479588338773 + 13*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.0599672781637635 + 13*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9183746245739709 + 13*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.050209291353839 + 13*p3 + -14*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2395010952689365 + 13*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5877329933579328 + 13*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.240803451458458 + 13*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7400110677288945 + 13*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.091216334226538 + 13*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8358062392547729 + 13*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7174228250200252 + 12*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7174228250200252 + 12*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5590228592597182 + 12*p3 + -12*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5833082601332262 + 12*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6179266913136092 + 12*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.746079935102246 + 12*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1028555944405545 + 12*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2431399237281027 + 12*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3490162830481093 + 12*p3 + -20*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.131833496039292 + 12*p3 + -21*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2171824974311838 + 11*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.358775151020977 + 11*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8631892589830374 + 11*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7215966053932443 + 11*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8631892589830374 + 11*p3 + -7*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3594638494454974 + 11*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.488536375147792 + 11*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2185135025153877 + 11*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.346943721557999 + 11*p3 + -10*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9858811675143084 + 11*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5873889889623649 + 11*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7490806796852 + 11*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2451062116633995 + 11*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.753402306442696 + 11*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.591037616760292 + 11*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.732674069615993 + 11*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.470183880498905 + 11*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8500847778653385 + 11*p3 + -18*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.494721281421451 + 11*p3 + -19*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.494721281421451 + 11*p3 + -19*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.630653998281635 + 11*p3 + -21*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.489061344691842 + 11*p3 + -21*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2023241519447891 + 10*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.749826816438744 + 10*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6099964132963726 + 10*p3 + -12*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.251005799095941 + 10*p3 + -13*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2467382690469395 + 10*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6156900433788617 + 10*p3 + -14*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.716354551476463 + 10*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0945719042464224 + 10*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.094910323588384 + 10*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.733595952526898 + 10*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6773099313197561 + 10*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.818902584909549 + 10*p3 + -16*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.632283263138372 + 10*p3 + -20*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.632283263138372 + 10*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.707641510286339 + 10*p3 + -22*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5660488566965467 + 10*p3 + -22*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.869061244718447 + 9*p3 + -5*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.869061244718447 + 9*p3 + -5*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8498348637130864 + 9*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.9914275173028795 + 9*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3954652795251596 + 9*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.615458778754656 + 9*p3 + -9*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.757051432344449 + 9*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.47377276704651433 + 9*p3 + -11*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.47377276704651433 + 9*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.2647520122846485 + 9*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.253232839221485 + 9*p3 + -12*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.253232839221485 + 9*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.248078856445397 + 9*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.767468263950368 + 9*p3 + -13*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.767468263950368 + 9*p3 + -13*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.747212496250498 + 9*p3 + -13*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.747212496250498 + 9*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7420260588486385 + 9*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.821542718974091 + 9*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.734518009970726 + 9*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4920692451247297 + 9*p3 + -19*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7256525845402706 + 8*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7256525845402706 + 8*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.376109063020084 + 8*p3 + -3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2345164094302907 + 8*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.376109063020084 + 8*p3 + -3*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8709481201727782 + 8*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5677652049846413 + 8*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.406179864301469 + 8*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.715046776267943 + 8*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.255724288230391 + 8*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.793998107252042 + 8*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9908162605072477 + 8*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.232669719040338 + 8*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6186827679455735 + 8*p3 + -10*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7553034766002598 + 8*p3 + -10*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2439588322131385 + 8*p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7553034766002598 + 8*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.249180508269255 + 8*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.7482427641079505 + 8*p3 + -12*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7472831565902536 + 8*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.735560669665866 + 8*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.229272418654698 + 8*p3 + -15*p4 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.140507258822928 + 8*p3 + -17*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.140507258822928 + 8*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.6348307457145825 + 8*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2377901235082567 + 7*p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.37938277709805 + 7*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2377901235082567 + 7*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2377901235082567 + 7*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7306820913474261 + 7*p3 + -3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7306820913474261 + 7*p3 + -3*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7306820913474261 + 7*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.12646376507270593 + 7*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.713183262730639 + 7*p3 + -5*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.222279556978708 + 7*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.261943070888171 + 7*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.040438423100716 + 7*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.261943070888171 + 7*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.182031076690508 + 7*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9434260589544965 + 7*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.766357178850233 + 7*p3 + -7*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.766357178850233 + 7*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9895549110568314 + 7*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7851637656789054 + 7*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5593998418798326 + 7*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7431718675025727 + 7*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.625039606147187 + 7*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3172104499573158 + 7*p3 + -9*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3172104499573158 + 7*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5711853521868494 + 7*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1146557655132883 + 7*p3 + -10*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1146557655132883 + 7*p3 + -10*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.749087503465916 + 7*p3 + -11*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.242990898104932 + 7*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6761122863870377 + 7*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.367635114940851 + 7*p3 + -13*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8681932669864806 + 7*p3 + -14*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8944784491202906 + 7*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0002551926315917 + 7*p3 + -16*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0002551926315917 + 7*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.507178036860469 + 7*p3 + -17*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.507178036860469 + 7*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4942493358933957 + 7*p3 + -17*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.635841989483189 + 7*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.33092577081826285 + 6*p3 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.371253906106886 + 6*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2445073722004072 + 6*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2400970997135425 + 6*p3 + -1*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2400970997135425 + 6*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.862899010728431 + 6*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.731584252037782 + 6*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.731584252037782 + 6*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1783686352965409 + 6*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.345311855704018 + 6*p3 + -3*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.53898333785417 + 6*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0778099281448774 + 6*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.267667044204695 + 6*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.264354409284411 + 6*p3 + -7*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.48520781523973083 + 6*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.698316033061692 + 6*p3 + -8*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.115614823937259 + 6*p3 + -9*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.115614823937259 + 6*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.797157885323118 + 6*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.749872727096388 + 6*p3 + -10*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.847453004384573 + 6*p3 + -11*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.847453004384573 + 6*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8779884038145231 + 6*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.001356844455451 + 6*p3 + -15*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.001356844455451 + 6*p3 + -15*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.636764046927017 + 6*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.8885190563826235 + 5*p3 + p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6666356721474842 + 5*p3 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.057775676720351 + 5*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.916183023130558 + 5*p3 + 2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.885218962338002 + 5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.133524013454457 + 5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.386517508547277 + 5*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.132797781952702 + 5*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.17919155803885622 + 5*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2242997670895749 + 5*p3 + -2*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2242997670895749 + 5*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.228513042893789 + 5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7071297457563885 + 5*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.203242220626288 + 5*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.341414343954756 + 5*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4871847581817816 + 5*p3 + -5*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.487509913021428 + 5*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6306366855287742 + 5*p3 + -5*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.229418677246016 + 5*p3 + -6*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.255321457740714 + 5*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.265647523727214 + 5*p3 + -6*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6283431653553615 + 5*p3 + -7*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.678540763003212 + 5*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8139297758081336 + 5*p3 + -7*p4 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6244510811234143 + 5*p3 + -7*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7626703368400025 + 5*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1163689807070463 + 5*p3 + -8*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.257961634296839 + 5*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1163689807070463 + 5*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.88167158913164 + 5*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.7507747132538185 + 5*p3 + -9*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.33135828040354 + 5*p3 + -9*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.872526753484574 + 5*p3 + -10*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.945890646889555 + 5*p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5997007245371744 + 5*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5997007245371744 + 5*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3769408614466343 + 5*p3 + -11*p4 + -1*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.222300717954241 + 5*p3 + -11*p4 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3671952834710318 + 5*p3 + -13*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3671952834710318 + 5*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5087879370608244 + 5*p3 + -13*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.891813016279912 + 4*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7502203626901185 + 4*p3 + 2*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7502203626901185 + 4*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.3799233055673925 + 4*p3 + p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.380625102459619 + 4*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.919424972216138 + 4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5421949097124481 + 4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1906180541187379 + 4*p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1906180541187379 + 4*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.22585991690793258 + 4*p3 + -1*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.22585991690793258 + 4*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.817812286224146 + 4*p3 + -2*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.099292704800483 + 4*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.817812286224146 + 4*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.752048446043607 + 4*p3 + -4*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.971092145592484 + 4*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.511290896744477 + 4*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7181401808375445 + 4*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1633485147851195 + 4*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7007420407219644 + 4*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7052119779742972 + 4*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.544551661794682 + 4*p3 + -6*p4 + d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4029590082048893 + 4*p3 + -6*p4 + d + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.44291552040417975 + 4*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.578091104936532 + 4*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.576654690463824 + 4*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1171006227294815 + 4*p3 + -7*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.10238816977192054 + 4*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.576817372146743 + 4*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.260540881865436 + 4*p3 + -7*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1753181743248553 + 4*p3 + -8*p4 + 3*p5 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1753181743248553 + 4*p3 + -8*p4 + 3*p5 + d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.17530927314567 + 4*p3 + -8*p4 + 3*p5 + -1*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.17530927314567 + 4*p3 + -8*p4 + 3*p5 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.75203693536886 + 4*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.66862868061697 + 4*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1058123482280418 + 4*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.247405001817834 + 4*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.503283858233419 + 4*p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.521850862345693 + 4*p3 + -10*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.905240864416422 + 4*p3 + -11*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36822555132848406 + 4*p3 + -12*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36822555132848406 + 4*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36822555132848406 + 4*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36822555132848406 + 4*p3 + -12*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4971361104761938 + 4*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4971361104761938 + 4*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7521983443314035 + 3*p3 + 3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7521983443314035 + 3*p3 + 3*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7521983443314035 + 3*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.861087708030711 + 3*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5689019549230987 + 3*p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.3369051197976205 + 3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1006676496902545 + 3*p3 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1006676496902545 + 3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.197992627800456 + 3*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.056399974210663 + 3*p3 + -4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.360122370670591 + 3*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.14142058112218 + 3*p3 + -2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.38243480036774546 + 3*p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.337724892448965 + 3*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.799545836307381 + 3*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6897687896521925 + 3*p3 + -3*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.663948214165263 + 3*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.047169800461491 + 3*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.46757353207635566 + 3*p3 + -5*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6260187358575555 + 3*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9209081530144825 + 3*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.4855294794208733 + 3*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.48608225068993 + 3*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1180687568655627 + 3*p3 + -6*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.4151304023112056 + 3*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.577581826359117 + 3*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7432908989575586 + 3*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7432908989575586 + 3*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.986104088551372 + 3*p3 + -7*p4 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0998543262588254 + 3*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.8890044069526524 + 3*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.331886084965977 + 3*p3 + -9*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.019669021998617 + 3*p3 + -10*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8835029461191244 + 3*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5106627697433175 + 3*p3 + -11*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7645713409629584 + 2*p3 + 6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.7645713409629584 + 2*p3 + 6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.401980959685338 + 2*p3 + 5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7360278603133595 + 2*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8745749143584223 + 2*p3 + 2*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.017000230541076 + 2*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.23258135439028796 + 2*p3 + p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.23258135439028796 + 2*p3 + p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.0010676179034449314 + 2*p3 + p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.041377227207047 + 2*p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.322102816376847 + 2*p3 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.077191068385386 + 2*p3 + -1*p5 + -5*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.175356929132566 + 2*p3 + -3*p5 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3020241741011045 + 2*p3 + -4*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.466915934505788 + 2*p3 + -5*p5 + 5*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.597372489308281 + 2*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.005843204799385 + 2*p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.653309585204682 + 2*p3 + -2*p4 + 4*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.5489991097946145 + 2*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7846557003336498 + 2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.91090880416564 + 2*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0323667904107012 + 2*p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.268092380943407 + 2*p3 + -3*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.47751143683721137 + 2*p3 + -4*p4 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.35114820272942027 + 2*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.072691243511262 + 2*p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.181790753350826 + 2*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.040198099761033 + 2*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.106183762791183 + 2*p3 + -5*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.10601114972816 + 2*p3 + -5*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4632659019461416 + 2*p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4632659019461416 + 2*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.1123917159092844 + 2*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.031453319073474 + 2*p3 + -7*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8743267030438389 + 2*p3 + -9*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.018782743804454 + 2*p3 + -9*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5114481679067144 + 2*p3 + -10*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.00170224511442 + 2*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.641870705785427 + 2*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5002780521956343 + 2*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.2707944911930276 + p3 + 8*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.403541284036621 + p3 + 6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7534445094173274 + p3 + 5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.892864053555463 + p3 + 5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.899732971359611 + p3 + 5*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8809146483333663 + p3 + 3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7393219947435736 + p3 + 3*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7393219947435736 + p3 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8265484893034194 + p3 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7607893700101787 + p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.004350582226446265 + p3 + 2*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1459432358162394 + p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1508196857463115 + p3 + 2*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.211164819194816 + p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.211164819194816 + p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.645285084902787 + p3 + p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8061278049858687 + p3 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7259562633318011 + p3 + p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8111154323892933 + p3 + 2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8111154323892933 + p3 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.135886499628273 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.565298399111455 + p3 + d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.960943771120472 + p3 + -4*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.47866426080142 + p3 + -1*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6402300537969695 + p3 + -2*p6 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.097640899701446 + p3 + -2*p5 + 5*p6 + -2*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.107778461630413 + p3 + -2*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7397112031667684 + p3 + -2*p5 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.73821615412951 + p3 + -2*p5 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.889521582003284 + p3 + -2*p5 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7670278748885072 + p3 + -2*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3233690272542196 + p3 + -3*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5879183473244947 + p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.18170448309587764 + p3 + -4*p5 + 5*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.645967159574466 + p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.088242842274865 + p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.222385349426329 + p3 + -1*p4 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2739123558671075 + p3 + -2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2941103276737866 + p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.040372632686233 + p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.738889544646512 + p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.718241069366627 + p3 + -4*p4 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.247464176977794 + p3 + -4*p4 + -4*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.620065060214836 + p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.761657713804629 + p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.100909386289972 + p3 + -5*p4 + -1*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.656560793033614 + p3 + -5*p4 + -4*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.789512968638583 + p3 + -6*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.523630400051027 + p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.3467342735494432 + p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.386026347400816 + p3 + -7*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.0195369005742405 + p3 + -8*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.404509243639778 + 7*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.2629165900499846 + 7*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.2629165900499846 + 7*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.804474471582088 + 6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.90044925448463 + 6*p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.890890260704382 + 6*p4 + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.890890260704382 + 6*p4 + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.243780966165727 + 5*p4 + 3*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.2461511232899352 + 5*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5621127816691326 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.7073025758439195 + 3*p4 + d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6533884570902386 + 2*p4 + -2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.1873010643736392 + p4 + 2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.194796057275429 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.091845525421882 + p4 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.9974802766572124 + p4 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4410044018698795 + p4 + -2*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.626158719761882 + 3*p5 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6612403273324772 + 2*p5 + -3*p6 ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.248599330624975 + p5 + 2*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9030386164645723 + p5 + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8979457457072524 + p5 + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.248063340011687 + p5 + -2*d + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.203221434211556 + d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.34481408780135 + d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.05258188344068356 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.493129707178241 + 7*p1 + -5*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.009295317021855 + p1 + -4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3361788882958647 + p1 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7682775476295687 + 52*p2 + -60*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5382670547291515 + 51*p2 + -55*p3 + d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.954941409289939 + 50*p2 + -56*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.955696787790202 + 48*p2 + -54*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.336784002445849 + 46*p2 + -51*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.709273376140321 + 45*p2 + -48*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.306908162940227 + 45*p2 + -49*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.34164715388033884 + 44*p2 + -47*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9934484340437635 + 43*p2 + -44*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.312574523394802 + 43*p2 + -44*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.106890987200724 + 42*p2 + -42*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3584817271804501 + 42*p2 + -43*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.376931287630698 + 41*p2 + -41*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.159456971148581 + 41*p2 + -43*p3 + -3*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.742240568312026 + 39*p2 + -38*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5590596772086188 + 39*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.387330482912856 + 38*p2 + -36*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.80659749858253 + 36*p2 + -32*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8822763542157728 + 36*p2 + -35*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.405898866291899 + 36*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4460051192426935 + 35*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.935781359294469 + 35*p2 + -34*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.306113497535161 + 31*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.352294045376621 + 31*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.205715509712656 + 31*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.837548643938622 + 30*p2 + -38*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5518912609048278 + 29*p2 + -33*p3 + d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2427685006666451 + 29*p2 + -34*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.353602327187283 + 29*p2 + -36*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.352663007980492 + 28*p2 + -33*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2110703543906995 + 28*p2 + -33*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6276588047590215 + 28*p2 + -34*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6845171109295745 + 27*p2 + -32*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.028181873923535 + 27*p2 + -32*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4819620434264302 + 26*p2 + -27*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4819620434264302 + 26*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.009770702218514655 + 26*p2 + -29*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.35820038010502864 + 26*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.01055718157273 + 26*p2 + -30*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.964889611493381 + 26*p2 + -30*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.341150458670171 + 26*p2 + -30*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.679745912851715 + 26*p2 + -31*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.506417090303232 + 25*p2 + -27*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6741740897543813 + 25*p2 + -28*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3239554578828898 + 25*p2 + -28*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6741740897543813 + 25*p2 + -28*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3242825325847134 + 25*p2 + -30*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.803526217202846 + 24*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.803526217202846 + 24*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1330990087849626 + 24*p2 + -25*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.924999762373199 + 24*p2 + -26*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6548566195586993 + 24*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.860609670846906 + 24*p2 + -27*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.094052179188446 + 24*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.952459525598652 + 24*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0652851133633496 + 23*p2 + -22*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.945857319599157 + 23*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.80426484054229 + 23*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.409282710645665 + 23*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.409282710645665 + 23*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.39781202374244157 + 23*p2 + -25*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.173272490905226 + 23*p2 + -25*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1161576128363127 + 23*p2 + -25*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0581995832023943 + 23*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.531359416110559 + 23*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.389766762520765 + 23*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3055829174425546 + 23*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1386850925922625 + 23*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8985375698599705 + 22*p2 + -21*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.040130223449763 + 22*p2 + -21*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.704067582580398 + 22*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3147882820213981 + 22*p2 + -23*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.220149748689133 + 22*p2 + -23*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.09964381405608466 + 22*p2 + -23*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5175203429073285 + 22*p2 + -23*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5175203429073285 + 22*p2 + -23*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.607894730302704 + 22*p2 + -24*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.466280260097261 + 22*p2 + -24*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8234552677650595 + 22*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8803212193910555 + 21*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0917348715473056 + 21*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5366585677888303 + 21*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.389510748214447 + 21*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3154677386991995 + 21*p2 + -22*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9366688422224754 + 21*p2 + -22*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.679334521750386 + 21*p2 + -22*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7900400665710023 + 21*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.829852065508227 + 21*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6487039848795688 + 21*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9641511626868615 + 21*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9647653440506385 + 21*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3799491024470552 + 20*p2 + -19*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.135621724682429 + 20*p2 + -19*p3 + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.888386036798671 + 20*p2 + -19*p3 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.546482677082456 + 20*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7413692744544795 + 20*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8717493838357357 + 20*p2 + -21*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.939627366834164 + 20*p2 + -21*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.5126383249202835 + 20*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3710456713304895 + 20*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8233515867091747 + 20*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9642984684757305 + 20*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8228712720990257 + 20*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.390740158139552 + 19*p2 + -17*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.928439946868539 + 19*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.174375364459561 + 19*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.04701886347446 + 19*p2 + -18*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4759453528993969 + 19*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7602380289977901 + 19*p2 + -18*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5212209475236986 + 19*p2 + -19*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.395374705435298 + 19*p2 + -19*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3199263568063442 + 19*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.961316049849922 + 19*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.959195125742898 + 19*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9875200571768814 + 19*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9044170945044305 + 19*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37770216556803765 + 19*p2 + -20*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9198309358001517 + 19*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.495131267761062 + 19*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3621495536001493 + 19*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.019443367922967 + 19*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8199026415743087 + 19*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8819084218128193 + 18*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.34031599125984274 + 18*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4819086448496357 + 18*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.346897478831138 + 18*p2 + -15*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + 2*d + -2*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1429595784633217 + 18*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5645306032785538 + 18*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3131410572699993 + 18*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.402302091769388 + 18*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.201926774467377 + 18*p2 + -18*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7067483998131445 + 18*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.271049841360911 + 18*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.702892967495489 + 18*p2 + -19*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.061270524014545 + 18*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9032422793916461 + 18*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.762763903484543 + 18*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.18642053726769153 + 18*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1770849626283324 + 18*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.2995603182910145 + 18*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.2995603182910145 + 18*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.946360838590041 + 17*p2 + -12*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.946360838590041 + 17*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.590128474752928 + 17*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.502895024371025 + 17*p2 + -14*p3 + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.706257813255358 + 17*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5888428567275927 + 17*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9032316243848927 + 17*p2 + -16*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.983314703340834 + 17*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.841722049751041 + 17*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9680943510726259 + 17*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9680943510726259 + 17*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4609556181135934 + 17*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4594860508834144 + 17*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3787284191682103 + 17*p2 + -18*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9009354777192855 + 17*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6844109694161036 + 17*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3289123674914787 + 17*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2256312872742379 + 17*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2106876036857375 + 17*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.822645077427967 + 17*p2 + -23*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8051636766087502 + 16*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5969265321894466 + 16*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.883593039101795 + 16*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.973617820051362 + 16*p2 + -14*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8320251664615688 + 16*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3120359062893197 + 16*p2 + -14*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3916758036565964 + 16*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.4397668143922395 + 16*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6564267177537937 + 16*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.754058699279421 + 16*p2 + -15*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.298174160802447 + 16*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.510943418687038 + 16*p2 + -15*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.439654755755945 + 16*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.109262366055408 + 16*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9676697124656155 + 16*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.13960927842446 + 16*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.460015234712619 + 16*p2 + -17*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9180487801009405 + 16*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.968601752279447 + 16*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.0495396510114325 + 15*p2 + -10*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.027845548976676 + 15*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1291171976328298 + 15*p2 + -11*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.41839853133556504 + 15*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4765733308625812 + 15*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.843961498710907 + 15*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.633863275716936 + 15*p2 + -14*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.633863275716936 + 15*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.24700283546659188 + 15*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.9039526538921585 + 15*p2 + -14*p3 + -3*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.438935156505348 + 15*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.282343534881349 + 15*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.348694112264824 + 15*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.059545964180649 + 15*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0605125275204035 + 15*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2220875707609886 + 15*p2 + -20*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.218329876881445 + 15*p2 + -20*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.363680224350782 + 15*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.363680224350782 + 15*p2 + -20*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8220879683307305 + 15*p2 + -21*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.282893471132019 + 15*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.025150935144523 + 14*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8835582815547292 + 14*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.025151109677447 + 14*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.025151109677447 + 14*p2 + -9*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.483300370395176 + 14*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.401232379470842 + 14*p2 + -10*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.367008916300185 + 14*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2254162627103922 + 14*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.148052134148057 + 14*p2 + -12*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.148052134148057 + 14*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.574110541009825 + 14*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.75777137216258 + 14*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.454571386741041 + 14*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.686915035785523 + 14*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.511699669851927 + 14*p2 + -13*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0449185172559767 + 14*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7575168946593225 + 14*p2 + -13*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.463975735851245 + 14*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8737034714629015 + 14*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.058860224317541 + 14*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.45082364973655 + 14*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.363493648653744 + 14*p2 + -19*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8217247653133906 + 14*p2 + -20*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8217247653133906 + 14*p2 + -20*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.639771240729886 + 14*p2 + -21*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.947731096585782 + 13*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.43895190316785 + 13*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.154331645765491 + 13*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6431081017335082 + 13*p2 + -10*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6431081017335082 + 13*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7847007553233007 + 13*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.780540946082414 + 13*p2 + -12*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5844456827084348 + 13*p2 + -12*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2089590380928787 + 13*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9240268988515044 + 13*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2381346684992334 + 13*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8676618142292483 + 13*p2 + -14*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.058083029201628 + 13*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.362149387565541 + 13*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8213003012393054 + 13*p2 + -19*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8213003012393054 + 13*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8213003012393054 + 13*p2 + -19*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.722146601132132 + 13*p2 + -21*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.722146601132132 + 13*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.76524837117644 + 12*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.922765723934014 + 12*p2 + -6*p3 + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.33529716495439 + 12*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.214921116810959 + 12*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.310375608565164 + 12*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.860425181046654 + 12*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6776075184555377 + 12*p2 + -10*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.993561880445142 + 12*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0707120401395 + 12*p2 + -11*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.352929702788514 + 12*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.512313851215704 + 12*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9077071721857817 + 12*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9282003301588735 + 12*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3205187215544711 + 12*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3614587607805264 + 12*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.061857801812891 + 12*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3243881335027754 + 12*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1604558060828642 + 12*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5968572341198255 + 12*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.117850258639847 + 12*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.25323226463281007 + 12*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.501133446560353 + 12*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.263526267550973 + 12*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.364550794581676 + 12*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.362794818821245 + 12*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2189325390721586 + 12*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.780503055441013 + 12*p2 + -18*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.2566810692280175 + 12*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.269651658097138 + 11*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.026018189249839 + 11*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6532247282097681 + 11*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9053414038796532 + 11*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.7654824283274495 + 11*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.915419475576076 + 11*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0063322375574772 + 11*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.849754604062444 + 11*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.971480323814761 + 11*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0710012411965555 + 11*p2 + -10*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6454693661768482 + 11*p2 + -10*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.743443283197891 + 11*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3553005240511569 + 11*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.688680768393133 + 11*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0652500237470672 + 11*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4195328208164361 + 11*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4621693200754304 + 11*p2 + -12*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.981799906588078 + 11*p2 + -12*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2962869362822653 + 11*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.38099263480682255 + 11*p2 + -12*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.0986080121349255 + 11*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.12179436218182 + 11*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9170823912941108 + 11*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.860022716619461 + 11*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.117139036969659 + 11*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.19746829689989046 + 11*p2 + -14*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1919160809783955 + 11*p2 + -14*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7107879558685687 + 11*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.436583499871211 + 11*p2 + -16*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2237376050358242 + 11*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.3779474183212095 + 11*p2 + -18*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5284258327105396 + 10*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.02623478461001 + 10*p2 + -5*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.36461222167303 + 10*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3089058243104764 + 10*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8506069973741686 + 10*p2 + -6*p3 + -3*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.960526628930928 + 10*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.577176560906804 + 10*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.104455563260808 + 10*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.691376097353621 + 10*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7140895952145663 + 10*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1214206616940183 + 10*p2 + -9*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6495087561976638 + 10*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6495087561976638 + 10*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.955497994788399 + 10*p2 + -9*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4333230163022938 + 10*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6816350317391233 + 10*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3208946654753506 + 10*p2 + -11*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3208946654753506 + 10*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0009585348251952856 + 10*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.83164399505125 + 10*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1425511884149886 + 10*p2 + -11*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8963569554925288 + 10*p2 + -11*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.11634718108803 + 10*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.312920124081646 + 10*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3323792895176403 + 10*p2 + -15*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.367943540114628 + 10*p2 + -15*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.445479102501092 + 10*p2 + -16*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.212483415444697 + 10*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.45617133856466 + 9*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.536537075876258 + 9*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.028252385225317 + 9*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.761510399517444 + 9*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5728961409162876 + 9*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.842734715277998 + 9*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.728338854785282 + 9*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.177585889120288 + 9*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.497993965298499 + 9*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9438281658175227 + 9*p2 + -8*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1768313747863344 + 9*p2 + -8*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.42473621340699 + 9*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9350941806763758 + 9*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.102169173442379 + 9*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.30190495961487673 + 9*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.32048451310113196 + 9*p2 + -10*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.701518354674935 + 9*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7163548835456797 + 9*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7602563549549362 + 9*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0573300941623165 + 9*p2 + -11*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0573300941623165 + 9*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6403270941033804 + 9*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9915992322063256 + 9*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.1270174345013375 + 9*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.647528348092059 + 9*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2721827090834308 + 9*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2721827090834308 + 9*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.863452646163798 + 9*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.224351786399601 + 9*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.365944439989394 + 9*p2 + -14*p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.080729706447172 + 9*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3112534751856506 + 8*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.084115628199408 + 8*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.026560463048432 + 8*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.948636398868792 + 8*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8866986524778424 + 8*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.47508615280359 + 8*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.47508615280359 + 8*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5100988368653645 + 8*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.667366475498561 + 8*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.976682243657064 + 8*p2 + -5*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.129898424002655 + 8*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.30948160843070927 + 8*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1825574339996439 + 8*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.380455805522176 + 8*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7173989310059063 + 8*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2394836334781 + 8*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8985677640560301 + 8*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8164248985067846 + 8*p2 + -7*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1569246559402293 + 8*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1263447421160366 + 8*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4630292437978882 + 8*p2 + -9*p3 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3203227210794721 + 8*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.024953861977022 + 8*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3648087457468048 + 8*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6904471991324426 + 8*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.251783326281071 + 8*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5377588148509707 + 8*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9103654916678108 + 8*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.12181300321155 + 8*p2 + -10*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.027523335701808 + 8*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9385209686280582 + 8*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.457682270098112 + 8*p2 + -11*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.625734962317815 + 8*p2 + -11*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.625734962317815 + 8*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4046896681928504 + 8*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6188319765999852 + 8*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8570781631401045 + 8*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8581216870015553 + 8*p2 + -13*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.563356520290737 + 8*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1820031344258437 + 8*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.959706332680809 + 8*p2 + -14*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.216308985635511 + 8*p2 + -15*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.822684687903671 + 8*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0547735018807294 + 8*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1621524406487278 + 7*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8071215869636377 + 7*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8868035467658875 + 7*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.473370145083029 + 7*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3317774914932361 + 7*p2 + -3*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.706352244066209 + 7*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3473610212838345 + 7*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5907735314478322 + 7*p2 + -4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4940056794315002 + 7*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.907032644921469 + 7*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.533529192440004 + 7*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.453463783801091 + 7*p2 + -7*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1114712292617828 + 7*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.461666665250856 + 7*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2045597441836686 + 7*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.606324806640536 + 7*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1432014980942817 + 7*p2 + -8*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5233804604038244 + 7*p2 + -8*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1898167904557804 + 7*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.055664875522989 + 7*p2 + -9*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.047904269003997 + 7*p2 + -9*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.095234771798013 + 7*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.14829591415297777 + 7*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.314900200118034 + 7*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.173307546528241 + 7*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.944231196335076 + 7*p2 + -10*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.944231196335076 + 7*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.38470830024466 + 7*p2 + -10*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.229265977933099 + 7*p2 + -11*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.107735351997889 + 7*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.744181199907317 + 7*p2 + -11*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1106058865203272 + 7*p2 + -12*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7198807722056089 + 7*p2 + -12*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1106058865203272 + 7*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.183517565116116 + 7*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.744107713047492 + 7*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.24512280078961 + 7*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8071701071168431 + 6*p2 + -1*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.886887148037058 + 6*p2 + -1*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4136889603769336 + 6*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.581160998551132 + 6*p2 + -3*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.953504130650921 + 6*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.213499720668135 + 6*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.527348990057009 + 6*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.011741736536059 + 6*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.289034586638087 + 6*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.61767361857207 + 6*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.454530720569469 + 6*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4634264807356416 + 6*p2 + -7*p3 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4634264807356416 + 6*p2 + -7*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.00592280880991 + 6*p2 + -7*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.87864780620256 + 6*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.032026319165221 + 6*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0968640281564333 + 6*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.032026319165221 + 6*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8790591633106216 + 6*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.907705086288996 + 6*p2 + -8*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1122738976864581 + 6*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0978273008655592 + 6*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9449095718220581 + 6*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.1333070265368505 + 6*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.033117797089517606 + 6*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.703063162592509 + 6*p2 + -10*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.703063162592509 + 6*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.796491659154366 + 6*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.366594575135762 + 6*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.366594575135762 + 6*p2 + -11*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.366594575135762 + 6*p2 + -11*p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.144573177848373 + 6*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.752668727561449 + 6*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.23098282432502 + 5*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.372575477914813 + 5*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8852044761052102 + 5*p2 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0267971296950025 + 5*p2 + 4*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8071926218641938 + 5*p2 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8869553904108112 + 5*p2 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.12504114719940534 + 5*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9648386223842715 + 5*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.694686637878803 + 5*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.526687684803428 + 5*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.245469423179056 + 5*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.992096651043144 + 5*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4155470124036567 + 5*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.630101916645963 + 5*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.798748403870461 + 5*p2 + -4*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9599616488554243 + 5*p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.256347545306278 + 5*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.458137792534566 + 5*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2319830555227043 + 5*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7282260725223362 + 5*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.572732620562009 + 5*p2 + -6*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4015412857518115 + 5*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4640324590519342 + 5*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0154149394831724 + 5*p2 + -8*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7100622734605393 + 5*p2 + -8*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1817777954227782 + 5*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8806153243666497 + 5*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.799972569309493 + 5*p2 + -9*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.278176527298946 + 5*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9488950481656206 + 5*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.780847242867823 + 5*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7687631067257903 + 5*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.94878841704664 + 4*p2 + p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8852271653854862 + 4*p2 + p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.94878841704664 + 4*p2 + p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8852271653854862 + 4*p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8028261571415543 + 4*p2 + p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.803564465408415 + 4*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.536325218400016 + 4*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.306607425713475 + 4*p2 + -2*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3910151880364 + 4*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.207170092606218 + 4*p2 + -4*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.207170092606218 + 4*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8107153944264194 + 4*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.508926350168824 + 4*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.460306530164777 + 4*p2 + -5*p3 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.31871387657498373 + 4*p2 + -5*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.473476435634475 + 4*p2 + -5*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0019423769245444894 + 4*p2 + -5*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.306089944088575 + 4*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.306089944088575 + 4*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.093525413325243 + 4*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4001729476182474 + 4*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7265261303292103 + 4*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9741586805899223 + 4*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9649012882027357 + 4*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.968155429098129 + 4*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0395657499764022 + 4*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.366850265871179 + 4*p2 + -9*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.61073909338468 + 4*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.438980718097142 + 4*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4460518770700136 + 3*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8071882585410637 + 3*p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8852304815110648 + 3*p2 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.948780912130857 + 3*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8852304815110648 + 3*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.90584456530637 + 3*p2 + 2*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3603954807052619 + 3*p2 + p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.068907918786663 + 3*p2 + -2*p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.056203458635205 + 3*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.905419437093851 + 3*p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0610408216883487 + 3*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.656793445422904 + 3*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9033492680747937 + 3*p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.656793445422904 + 3*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.046469267791323 + 3*p2 + -2*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1395649300648256 + 3*p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.467779523419674 + 3*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7388566984633085 + 3*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.009818392198677 + 3*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3880839330526253 + 3*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.919556927605905 + 3*p2 + -3*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.459609969260306 + 3*p2 + -4*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.890123520567348 + 3*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.19014576802314823 + 3*p2 + -4*p3 + d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8912804908301784 + 3*p2 + -4*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8912804908301784 + 3*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.1459624089430614 + 3*p2 + -4*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.16394348902880773 + 3*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.475013372573782 + 3*p2 + -4*p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.407357778515324 + 3*p2 + -5*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.09021973422701607 + 3*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.236206428741631 + 3*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.136166433443659 + 3*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.091826160765502 + 3*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.762556034770631 + 3*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7718687455967883 + 3*p2 + -7*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.762556034770631 + 3*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.912388013198289 + 3*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.13254105251805 + 3*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.475741706968956 + 3*p2 + -8*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2820141487599146 + 3*p2 + -8*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.396376524425943 + 3*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.760221282335288 + 3*p2 + -9*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1841886272168742 + 2*p2 + 5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1841886272168742 + 2*p2 + 5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.948773581747998 + 2*p2 + 3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.505944795709326 + 2*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.718781780867211 + 2*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2962165910150936 + 2*p2 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.27103411640101 + 2*p2 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.882012294398263 + 2*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.001593362064045 + 2*p2 + -1*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5911042968360354 + 2*p2 + -1*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.847224042681661 + 2*p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5911042968360354 + 2*p2 + -1*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.281179923869046 + 2*p2 + -1*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4436281553344026 + 2*p2 + -1*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5479199557214733 + 2*p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0396505729780492 + 2*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0396505729780492 + 2*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3289343671383707 + 2*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.132579415768327 + 2*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.405103336720523 + 2*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.464990470278354 + 2*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7006917582428738 + 2*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8022083020880316 + 2*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8588767164359683 + 2*p2 + -3*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.32221570518618514 + 2*p2 + -3*p3 + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.213271057041173 + 2*p2 + -3*p3 + 3*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.213271057041173 + 2*p2 + -3*p3 + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1707951365716787 + 2*p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1707951365716787 + 2*p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.49555447611140363 + 2*p2 + -3*p3 + -4*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5387768569053423 + 2*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1427168201610027 + 2*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.107483709513018 + 2*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.107483709513018 + 2*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2186074012291455 + 2*p2 + -5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7203144865247293 + 2*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.911128400578807 + 2*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.740350908829208 + 2*p2 + -5*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.7030713656399925 + 2*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.475852186310606 + 2*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2253837995863053 + 2*p2 + -7*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.066290780576665 + 2*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2366776591413515 + p2 + 6*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2999585684330527 + p2 + 5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.948776723340652 + p2 + 4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.807183895217934 + p2 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.026808474335141 + p2 + 4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6207258248730076 + p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.529200452324157 + p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.16082044785519 + p2 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.869413460659817 + p2 + p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.869413460659817 + p2 + p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.715391993895671 + p2 + p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.771004790620418 + p2 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4112144325634564 + p2 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.759553519363475 + p2 + d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.281183239994624 + p2 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.205397553214526 + p2 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.333525655763617 + p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.954999869321563 + p2 + -1*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2732628848591734 + p2 + -2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.17525479337805777 + p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3161862907522455 + p2 + -2*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.295876966939289 + p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.288607321538882 + p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3523659274468534 + p2 + -2*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4820381482801337 + p2 + -2*p3 + -3*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.06954491297374166 + p2 + -2*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1483346859573222 + p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2772209510351629 + p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1483346859573222 + p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.308608113631669 + p2 + -2*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.419894661563641 + p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.212900881205141 + p2 + -3*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0028470065708026 + p2 + -4*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6104304851796603 + p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9311445175757456 + p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.529412484333325 + p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.694094788231135 + p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.924028137578614 + p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.475930027995246 + p2 + -6*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3343380725371534 + p2 + -6*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9621581287224259 + p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.152742872547401 + p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.151897967154826 + 44*p3 + -61*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.995412436054399 + 43*p3 + -56*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0008498093111127 + 37*p3 + -44*p4 + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.92526662321583 + 37*p3 + -46*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.775512835538661 + 36*p3 + -46*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.128343152607887 + 34*p3 + -39*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.16834730379743984 + 34*p3 + -43*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.089487270529854 + 34*p3 + -43*p4 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.298862535656067 + 32*p3 + -39*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5483487916170047 + 30*p3 + -32*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.849026278165588 + 29*p3 + -33*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.944945376566674 + 28*p3 + -28*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.427903636933509 + 28*p3 + -29*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.951258398505746 + 26*p3 + -27*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.942450768968482 + 25*p3 + -25*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.027452666863736 + 25*p3 + -26*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3148141298909604 + 24*p3 + -23*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.03675279432264619 + 23*p3 + -20*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.395781899248105 + 23*p3 + -22*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.700650402437918 + 23*p3 + -27*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.780140916617857 + 20*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5643988139233947 + 19*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.705991467513188 + 19*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3297091272916477 + 18*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.334896411863183 + 18*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2224134322306526 + 18*p3 + -23*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0839004376009536 + 17*p3 + -22*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0758069882952888 + 16*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.08966279966270468 + 16*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.587440842237782 + 16*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4673398579844634 + 16*p3 + -24*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9746327120147638 + 16*p3 + -25*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.20315649946506514 + 15*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.836724814538414 + 15*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0834442000361655 + 15*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5731176316966824 + 15*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5853263588523578 + 15*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0885093370550116 + 15*p3 + -18*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5915533615542565 + 15*p3 + -19*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0898116932445334 + 15*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5858932502917225 + 15*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.958427512941238 + 15*p3 + -22*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.47942398562818 + 15*p3 + -25*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3481727909155703 + 14*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9903682769798445 + 14*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.480234542027756 + 14*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.338641888437963 + 14*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.071164787045784 + 14*p3 + -14*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5835876873464714 + 14*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.1815268510696075 + 14*p3 + -16*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.235803981311071 + 14*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.224869991651152 + 14*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.08327733806135823 + 14*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5936336194897085 + 14*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.729115343271177 + 14*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.480457403576602 + 14*p3 + -22*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.480457403576602 + 14*p3 + -22*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.616516648309239 + 14*p3 + -26*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.21284901093309044 + 13*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8387076915999216 + 13*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4508279705680961 + 13*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.098625614465421 + 13*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.215101217793131 + 13*p3 + -16*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5970626678711017 + 13*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9870683574681487 + 13*p3 + -22*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.981077331779436 + 13*p3 + -24*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9787679121131971 + 13*p3 + -24*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.981077331779436 + 13*p3 + -24*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.352506277413664 + 12*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.19626908117084516 + 12*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.343800732641008 + 12*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5908143806506456 + 12*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.0770507354152095 + 12*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0751709903158622 + 12*p3 + -13*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.246243476702316 + 12*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0820044779361953 + 12*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.45825818625968634 + 12*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.45825818625968634 + 12*p3 + -14*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5953417732286357 + 12*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6043787390296114 + 12*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.735277560264561 + 12*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7511939158451972 + 12*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5900699977246697 + 12*p3 + -18*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.463868755666414 + 12*p3 + -18*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.463868755666414 + 12*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9907358178253642 + 12*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.124307278740525 + 12*p3 + -23*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.124307278740525 + 12*p3 + -23*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2150437709657897 + 11*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.995036334597228 + 11*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.995036334597228 + 11*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5375745165802766 + 11*p3 + -11*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.742464494055056 + 11*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.07488495634641 + 11*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1149880762028683 + 11*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.7223961832151655 + 11*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.494721281421451 + 11*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9566266737207134 + 11*p3 + -20*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.992979787644653 + 11*p3 + -20*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.725424137937818 + 11*p3 + -21*p4 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7254274540633965 + 11*p3 + -21*p4 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4856546365248744 + 11*p3 + -21*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2373016058506232 + 11*p3 + -21*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4856546365248744 + 11*p3 + -21*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.12997536752771854 + 10*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.361186314884291 + 10*p3 + -7*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.508607636050777 + 10*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.489388095822766 + 10*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.324300867040176 + 10*p3 + -9*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7801660408607693 + 10*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.117348110417415 + 10*p3 + -13*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.238153360518863 + 10*p3 + -15*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1154682077817752 + 10*p3 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.997379247588472 + 10*p3 + -17*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.997379247588472 + 10*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8698755898524778 + 10*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.193833350656662 + 10*p3 + -19*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.193833350656662 + 10*p3 + -19*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.490690609548579 + 10*p3 + -20*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.490690609548579 + 10*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.490690609548579 + 10*p3 + -20*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.369840189412771 + 9*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2282475358229776 + 9*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.371705771850227 + 9*p3 + -4*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7246584365000179 + 9*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7176612369958475 + 9*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7219599829435096 + 9*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.261479502940525 + 9*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.193263841223419 + 9*p3 + -9*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.753647682738893 + 9*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.745858295283876 + 9*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.604265641694082 + 9*p3 + -13*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.917863077068528 + 9*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.520961600095169 + 9*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9866772376810933 + 9*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.01757180037615371 + 9*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4920692451247297 + 9*p3 + -19*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.996273249438116 + 8*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.144371941385619 + 8*p3 + -6*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5089338295896584 + 8*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.2506240870902126 + 8*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.124433440550494 + 8*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.159046652739754 + 8*p3 + -8*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9453823730181069 + 8*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.630283273351879 + 8*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4770901143557799 + 8*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4770901143557799 + 8*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2594082867239172 + 8*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.589609064767535 + 8*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.1447449182467695 + 8*p3 + -12*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.023679231027657465 + 8*p3 + -12*p4 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.255070313359669 + 8*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1134776597698752 + 8*p3 + -13*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.5031062007122 + 8*p3 + -14*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.361513547122406 + 8*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.096389332593157 + 8*p3 + -15*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.096141495839374 + 8*p3 + -15*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5000009024087344 + 8*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5000009024087344 + 8*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.290059801539025 + 7*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.877291527837468 + 7*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.976610544618073 + 7*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.355999213343996 + 7*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3590023758929535 + 7*p3 + -6*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.587597938867096 + 7*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6383583712054475 + 7*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5154460190913333 + 7*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1146557655132883 + 7*p3 + -10*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.255931467310919 + 7*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.522093446115087 + 7*p3 + -10*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2501118159581193 + 7*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6074948498761223 + 7*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.613381845443099 + 7*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.745927410322254 + 7*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.745927410322254 + 7*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.097220990480049 + 7*p3 + -12*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.639010285674334 + 7*p3 + -12*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.097220990480049 + 7*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.732431817915817 + 7*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.732431817915817 + 7*p3 + -13*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7002093407393057 + 7*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.009261100070199 + 7*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.003688804363991 + 7*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.376932509361175 + 6*p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2353398557713815 + 6*p3 + -1*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.731584252037782 + 6*p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8616580816302633 + 6*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8627983052305903 + 6*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.867056385006681 + 6*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.984039014980412 + 6*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7099608613326818 + 6*p3 + -4*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9724631187165595 + 6*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.591517058705815 + 6*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.994986767246471 + 6*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.1347588423985595 + 6*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.086166066499601 + 6*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.128285224673354 + 6*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.944624551056891 + 6*p3 + -7*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.944624551056891 + 6*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1041841220705393 + 6*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1516322940494068 + 6*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.2392422629408655 + 6*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.598715494672741 + 6*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1233740341928504 + 6*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.015952683924028 + 6*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.199222054722195 + 6*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.199222054722195 + 6*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.2375002583127666 + 6*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.311144392107401 + 6*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4206980111233845 + 6*p3 + -12*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4206980111233845 + 6*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3720832610724838 + 6*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.012581239906267 + 6*p3 + -13*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.013059460121314 + 6*p3 + -13*p4 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.010489288264828 + 6*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.36588698466373687 + 6*p3 + -14*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.307353877539603 + 6*p3 + -14*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.36588698466373687 + 6*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.217256890948902 + 6*p3 + -15*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0756642373591085 + 6*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8072065844982097 + 5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.885219136870927 + 5*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2454454866733542 + 5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.916183023130558 + 5*p3 + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.916183023130558 + 5*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7322497460815673 + 5*p3 + -1*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8676162866307213 + 5*p3 + -1*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7322497460815673 + 5*p3 + -1*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7322497460815673 + 5*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.2358331283095785 + 5*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9352240756643075 + 5*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4738361309966785 + 5*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.687984049952369 + 5*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.499341534013965 + 5*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.276914156145929 + 5*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1332812126605543 + 5*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.764950792538976 + 5*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.906141296774158 + 5*p3 + -5*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.13129242697454 + 5*p3 + -6*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1774148383552756 + 5*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.503215275292132 + 5*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.61782668394747 + 5*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.550575491175016 + 5*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7717896651850398 + 5*p3 + -8*p4 + d + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.014119407074366 + 5*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.526814753271291 + 5*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.526814753271291 + 5*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8770307416539538 + 5*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2869731442652897 + 5*p3 + -13*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.496093450781053 + 5*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7502203626901185 + 4*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2425299141578976 + 4*p3 + p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3563227548957331 + 4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.637120094094424 + 4*p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.771854799959406 + 4*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.840960920162563 + 4*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.150627891058151 + 4*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6993682665727697 + 4*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0787812208702454 + 4*p3 + -3*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.2883888233131655 + 4*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.635736388565126 + 4*p3 + -4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9922734358997377 + 4*p3 + -5*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.490635980742992 + 4*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.188179165015267 + 4*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.325483693670886 + 4*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9098373465378408 + 4*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4837605882239771 + 4*p3 + -6*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.602322051537378 + 4*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.1268376400934326 + 4*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6401049136896015 + 4*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.03373145485451881 + 4*p3 + -8*p4 + 3*p5 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0337323275191448 + 4*p3 + -8*p4 + 3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.033709987304719274 + 4*p3 + -8*p4 + 3*p5 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.03371068543642008 + 4*p3 + -8*p4 + 3*p5 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8754224292465576 + 4*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.603413388922017 + 4*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.521850862345693 + 4*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.016530745470606 + 4*p3 + -11*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.638728764065987 + 4*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.747032693344276 + 3*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7502959354467296 + 3*p3 + 3*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.3810935488308544 + 3*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.654375291744266 + 3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5810855578358621 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.242260303280048 + 3*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.380657548587073 + 3*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.397356335271379 + 3*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.043898904405278 + 3*p3 + -4*p5 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.926807557415782 + 3*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.032081446074633 + 3*p3 + -1*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8639187811154211 + 3*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.6406952180358925 + 3*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.134410283150303 + 3*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.255205218812531 + 3*p3 + -4*p4 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.100563811098077 + 3*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.696910170349211 + 3*p3 + -5*p4 + 3*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.423452481250565 + 3*p3 + -5*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.22520349857625752 + 3*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.019556239735671263 + 3*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8075811321556876 + 3*p3 + -8*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.02737675353959 + 3*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2780163060736136 + 3*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0493888120724766 + 3*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.524405500771836 + 3*p3 + -9*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5166949767040605 + 3*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.12422939456430279 + 2*p3 + 7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.90294682914255 + 2*p3 + 6*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7533017414845145 + 2*p3 + 4*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.889322082371465 + 2*p3 + 4*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.379963448140188 + 2*p3 + 3*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.848491666819068 + 2*p3 + 2*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.631254723613538 + 2*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4896620700237455 + 2*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0567287942417387 + 2*p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3544872006197273 + 2*p3 + p5 + 2*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.461277299291369 + 2*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.146632134268634 + 2*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6112378659933161 + 2*p3 + -3*p6 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6107184560079226 + 2*p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.972626647569156 + 2*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8847592341147099 + 2*p3 + -1*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2146100736433025 + 2*p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.162594741074449 + 2*p3 + -1*p5 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.24565426204516 + 2*p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.261785650687958 + 2*p3 + -1*p5 + -4*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9339351160184433 + 2*p3 + -1*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9393222492876487 + 2*p3 + -2*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0813664025582996 + 2*p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0356050743048513 + 2*p3 + -3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0248123072763689 + 2*p3 + -3*p5 + 4*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.439174092079947 + 2*p3 + -4*p5 + 5*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.602169177691537 + 2*p3 + -4*p5 + 3*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3179998793746264 + 2*p3 + -5*p5 + 5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.556188120983579 + 2*p3 + -5*p5 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0003644417444497 + 2*p3 + -1*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0003644417444497 + 2*p3 + -1*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.590534778904476 + 2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5777401192239562 + 2*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5172564321277933 + 2*p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.003608859785932 + 2*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6282508204412978 + 2*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9925212726535211 + 2*p3 + -3*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.713030205853556 + 2*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8811553122405833 + 2*p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5155334345919078 + 2*p3 + -4*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8201695024169386 + 2*p3 + -5*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.117745521888094 + 2*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4963458083942578 + 2*p3 + -5*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5541109706475141 + 2*p3 + -5*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.012674806550808 + 2*p3 + -5*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.015283026584988 + 2*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.25483137778507 + 2*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.031453319073474 + 2*p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.5272594631646985 + 2*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8771900902146609 + 2*p3 + -9*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8771900902146609 + 2*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.018782743804454 + 2*p3 + -9*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8784709873526996 + 2*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.904896885515804 + p3 + 7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7539984769219104 + p3 + 5*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.277063522336633 + p3 + 4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7393219947435736 + p3 + 3*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.189374008922867 + p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.18202458497901 + p3 + 4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.18202458497901 + p3 + 4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0359035426035756 + p3 + p5 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8910979293904195 + p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.36498067767476 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7270575830864425 + p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.03557001018352 + p3 + d + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.210718172442597 + p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3583166445281614 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3583166445281614 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.036692107854576 + p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.376342222011517 + p3 + -3*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8876022009332835 + p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9622272607574383 + p3 + -1*p5 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9627688279260156 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8247068263750315 + p3 + -2*p5 + 5*p6 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7754024882383516 + p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.233640279640739 + p3 + -1*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.625033829564022 + p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.137748574410592 + p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8916963942926117 + p3 + -2*p4 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0253729070321096 + p3 + -2*p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.117232203558449 + p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9263738176017113 + p3 + -2*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6346012179213125 + p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6410978569960113 + p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7351332045387872 + p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.373070436294045 + p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.467886486607872 + p3 + -5*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.151882233696609 + p3 + -6*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.386026347400816 + p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8779442469844476 + p3 + -8*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8779442469844476 + p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.0195369005742405 + p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.517717041514028 + p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.011411860809115 + p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.906158933097921 + 8*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2644784851975936 + 7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.397976650782487 + 7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.404509243639778 + 7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.404509243639778 + 7*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7095168410726578 + 6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2018729928314653 + 5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7442808242143399 + 4*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7442808242143399 + 4*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3113578543732367 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6201346818553573 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6201346818553573 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.217687280644127 + 2*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.84858345414109 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.728669062581442 + p4 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.141498746377719 + p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.189016407955766 + p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.28729031308196 + p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.9986608513565285 + 2*p5 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.578373533202771 + 2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.005161862252673 + 2*p5 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.513946972793428 + 2*p5 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.521824507873988 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.521857145531 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.07077345023422046 + p5 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.3892697267430645 + p5 + -5*p6 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5054779031377845 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3954867300783262 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.272057585972696 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.836607379374705 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0055740750287274 + 8*p1 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.952053587509589 + 52*p2 + -58*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7780192773824997 + 49*p2 + -55*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.096233823756805 + 44*p2 + -45*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.10261366631127822 + 40*p2 + -40*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9817747568502162 + 38*p2 + -38*p3 + -3*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.556909640096355 + 37*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8668130606140033 + 36*p2 + -47*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0542485153400465 + 35*p2 + -31*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1121979843623135 + 34*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.381557274314793 + 34*p2 + -42*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.9631374754573025 + 31*p2 + -37*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2050095240302243 + 31*p2 + -38*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.341137900797873 + 30*p2 + -35*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.822170696937275 + 30*p2 + -36*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.767725167917946 + 28*p2 + -33*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5064816504889227 + 28*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2141623796935328 + 27*p2 + -32*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.353567263065951 + 27*p2 + -32*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.336781908050746 + 27*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.147359762033791 + 26*p2 + -29*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.069900470535639 + 26*p2 + -29*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4435950025769313 + 26*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.650601889901455 + 26*p2 + -30*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.639132101157807 + 26*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2149713398018323 + 26*p2 + -31*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.333691628077165 + 26*p2 + -33*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.175504775516844 + 25*p2 + -24*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.767965657292237 + 25*p2 + -26*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.257897380685416 + 25*p2 + -26*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.31268013281118 + 25*p2 + -27*p3 + l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.691996170345271 + 25*p2 + -28*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7968740777901115 + 25*p2 + -28*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.794714573408302 + 25*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2157558653006038 + 25*p2 + -30*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2897937793677543 + 25*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.330388767000691 + 25*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.819773312676736 + 24*p2 + -25*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3745970502958146 + 24*p2 + -25*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.147078423456686 + 24*p2 + -26*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7585801322430042 + 24*p2 + -26*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20827747002334174 + 24*p2 + -27*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6268592864253164 + 24*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2165154325910714 + 24*p2 + -29*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.356165011124619 + 24*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.326854300732477 + 24*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1311672613722221 + 23*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0745629346011007 + 23*p2 + -24*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1100620504237226 + 23*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.21724916900861 + 23*p2 + -28*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.964777910421253 + 23*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.323071299578779 + 23*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2288770760841718 + 22*p2 + -23*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7229619849653963 + 22*p2 + -24*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5552859262999567 + 22*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.217956376421518 + 22*p2 + -27*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.357796195843534 + 22*p2 + -27*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.964251693651776 + 22*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.964790651324793 + 22*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.319015852528845 + 22*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3115489509296966 + 21*p2 + -17*p3 + 4*d + -3*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.44441234026564 + 21*p2 + -20*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.71495235395541 + 21*p2 + -22*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7228963605855212 + 21*p2 + -23*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.121232532197286 + 21*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4736329746717465 + 21*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.337980757717308 + 21*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1011186257723364 + 21*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2186358330993194 + 21*p2 + -26*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.31466561936825 + 21*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.601561786115209 + 20*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.509023381976919 + 20*p2 + -19*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.551926899614835 + 20*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.233244447464704 + 20*p2 + -20*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.31876676005131915 + 20*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9199389716808504 + 20*p2 + -22*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.806700281478839 + 20*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3269600421901981 + 20*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.309993198427735 + 20*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7174917740237956 + 19*p2 + -17*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.859084427613589 + 19*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0677107719577705 + 19*p2 + -18*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5986552638169135 + 19*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5588149905458057 + 19*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.112906613533573 + 19*p2 + -19*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.37770216556803765 + 19*p2 + -20*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.3600864168880005 + 19*p2 + -24*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2184937632982071 + 19*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3276394988679994 + 19*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.30496891911002 + 19*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.34454948738843 + 18*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.2883802542031977 + 18*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.068240130319901 + 18*p2 + -17*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.9368334352692544 + 18*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.654540880998697 + 18*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1086567028117 + 18*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.460574263672033 + 18*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.37823152393016757 + 18*p2 + -19*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.424691707511064 + 18*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.27449478923513 + 18*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7330271157304057 + 18*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7560878190677895 + 17*p2 + -15*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.146631602171542 + 17*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.068737025557944 + 17*p2 + -16*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0156135494537326 + 17*p2 + -16*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.698846106552157 + 17*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.698846106552157 + 17*p2 + -16*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.440292324531699 + 17*p2 + -17*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3033307190808309 + 17*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9189357564268041 + 17*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8952422136992801 + 17*p2 + -19*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.16942801167027471 + 17*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.854054048141807 + 16*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.453313187381594 + 16*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.073309422135685 + 16*p2 + -14*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.982529122146195 + 16*p2 + -15*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.122443599168612 + 16*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.064548060820232 + 16*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5241347747099032 + 16*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.363183329112739 + 16*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.822393575482755 + 16*p2 + -22*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.233457377633448 + 15*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.930179009931859 + 15*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5923094296879037 + 15*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2957083596352295 + 15*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.06963080866789 + 15*p2 + -14*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.94754536805842 + 15*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.12710273011186105 + 15*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.4929078588336794 + 15*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2220875707609886 + 15*p2 + -20*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9016058756816094 + 14*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.786493050928808 + 14*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.16868851566620474 + 14*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.264876794827849 + 14*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5768243534637514 + 14*p2 + -13*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.05131861412809007 + 14*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.511699495319002 + 14*p2 + -13*p3 + -3*d + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.152914587450847 + 14*p2 + -13*p3 + -4*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.2572507446958685 + 14*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4621930565532573 + 14*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.28277358400904 + 14*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.38001786841958374 + 14*p2 + -15*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.38001786841958374 + 14*p2 + -15*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.0601494990359885 + 14*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.370115419337494 + 14*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2191835174185952 + 14*p2 + -19*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.2698010497827927 + 13*p2 + -10*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.2698010497827927 + 13*p2 + -10*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9074785595487205 + 13*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.06630819987591817 + 13*p2 + -12*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7081132557865204 + 13*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8423079567809353 + 13*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.470468726731148 + 13*p2 + -13*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.683512333377518 + 13*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.332056246069729 + 13*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3803784534430458 + 13*p2 + -14*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.121014523577079 + 13*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.574364469419357 + 13*p2 + -16*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.574364469419357 + 13*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.726354415425764 + 13*p2 + -21*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0645702350000485 + 12*p2 + -8*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.34614316452506 + 12*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.983610362116122 + 12*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.87098792217804 + 12*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.976065478292675 + 12*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0707120401395 + 12*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.9459203259851545 + 12*p2 + -12*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7467007487171804 + 12*p2 + -13*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20629948838205653 + 12*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2233770200123621 + 12*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.962402866375139 + 12*p2 + -18*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.963967204983702 + 12*p2 + -18*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.963967204983702 + 12*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.259489303994476 + 12*p2 + -19*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.599126170645735 + 11*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.65530064831704 + 11*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6490724323829813 + 11*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.194059502836137 + 11*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.531713185851621 + 11*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5962236796013514 + 11*p2 + -13*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.406153518328081 + 11*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20255209194509954 + 11*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.777027057702741 + 11*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.365307569345341 + 11*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.051247630217434 + 11*p2 + -17*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.200356850805208 + 10*p2 + -3*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.200356850805208 + 10*p2 + -3*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5239490886741245 + 10*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2210646332863948 + 10*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.4717950024297375 + 10*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9799149339992912 + 10*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2922869822042282 + 10*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8122455245816425 + 10*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.433879635794021 + 10*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.47681770245281 + 10*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4621597207645443 + 10*p2 + -11*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4621597207645443 + 10*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.3264301772259253 + 10*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6472413989663977 + 10*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.278579889885715 + 10*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8218636935218497 + 10*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0996441716202519 + 10*p2 + -17*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.756551744579603 + 10*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6160036875437616 + 9*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.24317253589016513 + 9*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4583594323529354 + 9*p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2206234140514907 + 9*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.382687191974217 + 9*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.4325291000188285 + 9*p2 + -9*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8516634536687167 + 9*p2 + -10*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.691133322054668 + 9*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.13256321819955 + 9*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.0573300941623165 + 9*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9138392204780552 + 9*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.07367174399008224 + 9*p2 + -12*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.07367174399008224 + 9*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.183706758807032 + 9*p2 + -14*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.366487586452615 + 9*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.271002542938182 + 9*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.366487586452615 + 9*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0214783963358425 + 9*p2 + -15*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.539754607348943 + 9*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.577819897767405 + 8*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.577819897767405 + 8*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.908821747944422 + 8*p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.140493287690595 + 8*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.764390026748626 + 8*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8415633993220344 + 8*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.983156052911828 + 8*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4685516230874902 + 8*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.431053773202118 + 8*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.679448159681325 + 8*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.431053773202118 + 8*p2 + -8*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.600468694903002 + 8*p2 + -9*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.13824182145384 + 8*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7256855882597666 + 8*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.040773726344974 + 8*p2 + -10*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.040773726344974 + 8*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.538104939136591 + 8*p2 + -12*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.2573765489416706 + 8*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8112730271224313 + 8*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.366197338198008 + 8*p2 + -13*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4149248280202706 + 8*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4303610350253675 + 7*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.71067716995265 + 7*p2 + -4*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.71067716995265 + 7*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.21267849226517063 + 7*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5028105249402777 + 7*p2 + -5*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.982767891686184 + 7*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.982767891686184 + 7*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.225073505540251 + 7*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3331402530715097 + 7*p2 + -7*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.219162424429596 + 7*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4632460136909855 + 7*p2 + -8*p3 + 4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.795271175903396 + 7*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8798339149655818 + 7*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.283578346828819 + 7*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.050981633541113 + 7*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0170197697303816 + 7*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.36641393355818 + 7*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.36641393355818 + 7*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.36641393355818 + 7*p2 + -12*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.962393616130103 + 7*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8982408638871315 + 6*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.35569862515522 + 6*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.386641933526311 + 6*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.715011171551202 + 6*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.28814478379215347 + 6*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.982289846004063 + 6*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.982289846004063 + 6*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.427744978006187 + 6*p2 + -6*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.721337815556757 + 6*p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9595150021032057 + 6*p2 + -7*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1892914378526136 + 6*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.523491114278401 + 6*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.747071299114012 + 6*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.147624004882544 + 6*p2 + -8*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.07168346490621032 + 6*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.995020775671935 + 6*p2 + -9*p3 + d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5343200096223994 + 6*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6841627920947866 + 6*p2 + -10*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.1333622214327965 + 6*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.88524059592241 + 6*p2 + -11*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2250019215459687 + 6*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.961977180570578 + 6*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.194127247106064 + 6*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.764004998617319 + 5*p2 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3553193651087616 + 5*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9728519355823205 + 5*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8409738186023943 + 5*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.194734464149466 + 5*p2 + -4*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1230734714990236 + 5*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.981720345069137 + 5*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.993613542191001 + 5*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.4166891898594285 + 5*p2 + -5*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.590910714327039 + 5*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.732391500810095 + 5*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.732391500810095 + 5*p2 + -7*p3 + d + -3*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.452037151670511 + 5*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.360821907133107 + 5*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.953159768691185 + 5*p2 + -9*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.179938418419051 + 5*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9162641724424595 + 4*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.583566543367572 + 4*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7251591969573656 + 4*p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9161716784904204 + 4*p2 + p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3551076566704947 + 4*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9819217135732343 + 4*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9819217135732343 + 4*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3224071763034455 + 4*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.798799542017544 + 4*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.5380147056142635 + 4*p2 + -3*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.839468480620866 + 4*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.1921386359529755 + 4*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5945279177001137 + 4*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.812512061853372 + 4*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.893540866744436 + 4*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.460991056795725 + 4*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.747686676713315 + 4*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6764481047317545 + 4*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9250306377043267 + 4*p2 + -7*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.715265815089068 + 4*p2 + -8*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.715265815089068 + 4*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3550891561804235 + 4*p2 + -9*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.448365519519724 + 4*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.31824438300619723 + 4*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2278546622083537 + 4*p2 + -9*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.369447315798146 + 4*p2 + -9*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2278546622083537 + 4*p2 + -9*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8195371696289415 + 4*p2 + -10*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.961129823218734 + 4*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.164816362180996 + 4*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.886138925386728 + 3*p2 + 2*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.35518410209173196 + 3*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.392314777194068 + 3*p2 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03840858818401321 + 3*p2 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.438527281557474 + 3*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.429805496724458 + 3*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.585092144165057 + 3*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7920497962080406 + 3*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6254307259342418 + 3*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6721659394119865 + 3*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.86294056656126 + 3*p2 + -4*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8976369799659416 + 3*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7601924929009467 + 3*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.263347528838935 + 3*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.183126236802869 + 3*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8315129208244256 + 3*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.960758591686835 + 3*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.148846424992324 + 3*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.303912096752987 + 2*p2 + 10*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9437274688179995 + 2*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0733345548769138 + 2*p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.022848803369558565 + 2*p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.640024837070201 + 2*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.756977779450015 + 2*p2 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2531813095169686 + 2*p2 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.098462932782502 + 2*p2 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3056986157753283 + 2*p2 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.933221625420228 + 2*p2 + -1*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7952311738702591 + 2*p2 + -1*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.976184858813512 + 2*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5704627858765239 + 2*p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.98362361812012 + 2*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.420853545454687 + 2*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3171781613661539 + 2*p2 + -3*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6669622232505321 + 2*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4232451616303776 + 2*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7297492298588684 + 2*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.742311245648414 + 2*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0950234209239134 + 2*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0950234209239134 + 2*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.062604662193086 + 2*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.3222750718757026 + 2*p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.20858031864183 + 2*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.22922108047974 + 2*p2 + -7*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.960492254442981 + 2*p2 + -8*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.960492254442981 + 2*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9801828420394723 + 2*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.132185686485711 + 2*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2023321974559815 + p2 + 6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.181673599266434 + p2 + 5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.026808474335141 + p2 + 4*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9077947877142318 + p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.09695495981046219 + p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1479365678566253 + p2 + 2*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2781812311896101 + p2 + 2*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.2721661539504865 + p2 + p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2543855867008444 + p2 + p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.683539552015532 + p2 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3097540628252622 + p2 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.281183239994624 + p2 + -1*d + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.281183239994624 + p2 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7855505476377806 + p2 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6428321651787678 + p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3699675729532161 + p2 + -1*p3 + d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4577789443420386 + p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4577789443420386 + p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.143609032474622 + p2 + -2*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.04260997875268 + p2 + -2*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.345213934234664 + p2 + -2*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.06954491297374166 + p2 + -2*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8887618061866251 + p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2154539233400086 + p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.08224916459900837 + p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.9277580722247345 + p2 + -4*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0938106001250194 + p2 + -4*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.225406314333656 + p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2299808223031332 + p2 + -6*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2299808223031332 + p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0112383580848334 + 46*p3 + -65*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.279896898342637 + 37*p3 + -48*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.72759882668412 + 32*p3 + -38*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.273475682986575 + 30*p3 + -35*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.790118623383975 + 28*p3 + -32*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.05194431466493004 + 25*p3 + -22*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.170911051928961 + 24*p3 + -24*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.714605540036406 + 18*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.714605540036406 + 18*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.228645487889066 + 17*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.228645487889066 + 17*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5827040186478696 + 17*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2248609074407244 + 17*p3 + -22*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.09678673556552 + 17*p3 + -32*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.081885463477842 + 16*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.8741581467296795 + 16*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7325654931398864 + 16*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0870727480493785 + 16*p3 + -21*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.227016389066937 + 16*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20392514246764343 + 15*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2289009955932406 + 15*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.474304070765771 + 15*p3 + -23*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.97929815163827 + 15*p3 + -24*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.988095858293748 + 14*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8378936615384747 + 14*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5840821136286112 + 14*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.736680830478113 + 14*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2836788522987836 + 14*p3 + -18*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.233740819103971 + 14*p3 + -19*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.230538463497462 + 14*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5875226896813843 + 14*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.735458742437551 + 14*p3 + -20*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9685795696013133 + 14*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9834316149057676 + 14*p3 + -23*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.482353346244728 + 14*p3 + -24*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8389050798400057 + 13*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.766871178314944 + 13*p3 + -13*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5921823867149922 + 13*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.517523135434131 + 13*p3 + -15*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.240673449924135 + 13*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.741589543504398 + 13*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2319556708500814 + 13*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5889011507246094 + 13*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.449085816902022 + 13*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.23094584034151 + 13*p3 + -20*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6596938165772355 + 13*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6596938165772355 + 13*p3 + -21*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4861311199089857 + 13*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.484919852909785 + 13*p3 + -23*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.993728035789933 + 12*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.839826962750909 + 12*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.094114104383624 + 12*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.091732777152203 + 12*p3 + -17*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.233185953439812 + 12*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.730039320577183 + 12*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.730039320577183 + 12*p3 + -18*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0815499941989761 + 12*p3 + -19*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5787592084758788 + 12*p3 + -20*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.423906458385642 + 12*p3 + -22*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.48714724210118 + 12*p3 + -22*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.122460545858989 + 12*p3 + -23*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8407491947276626 + 11*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9492187812469156 + 11*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.251621708792336 + 11*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0903324909950114 + 11*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.2477645481420625 + 11*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.2477645481420625 + 11*p3 + -14*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.742715455404859 + 11*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2342705010370016 + 11*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5924808210204497 + 11*p3 + -17*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0829951268196274 + 11*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0829951268196274 + 11*p3 + -18*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.135153112276584 + 11*p3 + -20*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.135153112276584 + 11*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.489061344691842 + 11*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.363958255300624 + 10*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.866506431759378 + 10*p3 + -6*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8417916798898788 + 10*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.72969042925971 + 10*p3 + -10*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9585767130973336 + 10*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.103763872281609 + 10*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.100169366687127 + 10*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.256158692182895 + 10*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.46253389386122207 + 10*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6094785741073058 + 10*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1143576632770475 + 10*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.1309951634096588 + 10*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0862623831793607 + 10*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.163612259530046 + 10*p3 + -17*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.997379247588472 + 10*p3 + -17*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8743523593838433 + 10*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4982562712884406 + 10*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9953162599142975 + 10*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.6229797770623 + 10*p3 + -22*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.965940823301857 + 9*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.630397941483735 + 9*p3 + -7*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.490283624261964 + 9*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5898359490719776 + 9*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9707132091169266 + 9*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9707132091169266 + 9*p3 + -10*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.257609758923004 + 9*p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6447750657020879 + 9*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.2597935318797315 + 9*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.14091648754262057 + 9*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0818779585620586 + 9*p3 + -13*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.11275422929324 + 9*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.730091339887209 + 9*p3 + -15*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0027421207810745 + 9*p3 + -16*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.728023631325738 + 9*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.108577481860293 + 9*p3 + -17*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.108577481860293 + 9*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.998087493700614 + 9*p3 + -18*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.082570181638351 + 9*p3 + -18*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.998087493700614 + 9*p3 + -18*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.622479914764528 + 9*p3 + -21*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.354067291398331 + 8*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.491391384738205 + 8*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3540014754888974 + 8*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.760849617862639 + 8*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.763699216932371 + 8*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.600252597646655 + 8*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.262997066725134 + 8*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.87597726091745 + 8*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6186827679455735 + 8*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.260580326306532 + 8*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.09435180123111266 + 8*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5776613963763745 + 8*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.746614022849989 + 8*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.85653273925054 + 8*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7091421273805714 + 8*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.238731239034198 + 8*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.244549634663255 + 8*p3 + -15*p4 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.973745935716774 + 7*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1238321661248654 + 7*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3298888792079695 + 7*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.628265672736573 + 7*p3 + -9*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5716452719397 + 7*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.212127168249415 + 7*p3 + -10*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.11128079684375684 + 7*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.750701409425235 + 7*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.239514717335419 + 7*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.993979529236829 + 7*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.732431817915817 + 7*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.506556010013375 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.506556010013375 + 7*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.1299954813057 + 7*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.324190587726401 + 6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9095310667490657 + 6*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.339585072864058 + 6*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.269595466993541 + 6*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.009851527959515 + 6*p3 + -6*p4 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.5145875001305935 + 6*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3729948465408004 + 6*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.4131461374846133 + 6*p3 + -6*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.047653780263069 + 6*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.986636895080422 + 6*p3 + -7*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.45361211979087745 + 6*p3 + -8*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5936997504717259 + 6*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.2509633621001677 + 6*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.742308819184095 + 6*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.24058792029247 + 6*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.514359734663207 + 6*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0185680513098254 + 5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.891241246416958 + 5*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7307089694179068 + 5*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8661486392627196 + 5*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.215258288927494 + 5*p3 + -3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.761905192994245 + 5*p3 + -5*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9226482377804044 + 5*p3 + -5*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.8492083075082535 + 5*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.070173448528968 + 5*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.125357783918983 + 5*p3 + -6*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.274572788456062 + 5*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1291601327324288 + 5*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.113591812801272 + 5*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.207024889710769 + 5*p3 + -8*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.065435377713629 + 5*p3 + -8*p4 + d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.6937946000981094 + 5*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.169755452434582 + 5*p3 + -10*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.169755452434582 + 5*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.376972102840245 + 5*p3 + -11*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7691093630527521 + 5*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0154357258979045 + 5*p3 + -12*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1557432425695542 + 5*p3 + -12*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0154357258979045 + 5*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4535529786241845 + 5*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.509865154275156 + 5*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.738599462426515 + 4*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.3517775939526397 + 4*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7577458818571845 + 4*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.302502951908193 + 4*p3 + -3*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.578030026911029 + 4*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.280296255170443 + 4*p3 + -3*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.227788373690045 + 4*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4858408546577455 + 4*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.941586464926261 + 4*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.165830057908871 + 4*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.164931728444554 + 4*p3 + -5*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.4837785651152726 + 4*p3 + -6*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.156848602076425 + 4*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.206887715329879 + 4*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.260140677867954 + 4*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1219767235937037 + 4*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.174787619727199 + 4*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.050063198797130545 + 4*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03373145485451881 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03371068543642008 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.779999029847987 + 4*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.65605045876033 + 4*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.10323362425822 + 4*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.10323362425822 + 4*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.681611154721637 + 4*p3 + -9*p4 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.017342672638634 + 4*p3 + -11*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.017342672638634 + 4*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8805631135270651 + 4*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5111048616428473 + 4*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.146404900898341 + 4*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7481596524422887 + 3*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.401564515627496 + 3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5124838462848476 + 3*p3 + 2*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.876478544973573 + 3*p3 + p4 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8022857947068202 + 3*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.038086583435337 + 3*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3830954074896254 + 3*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.814820442820376 + 3*p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.779238938958743 + 3*p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.333506108075995 + 3*p3 + -2*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.180738660379407 + 3*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.371166648142603 + 3*p3 + -3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.432342349788865 + 3*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5981055105974855 + 3*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.39073209563172656 + 3*p3 + -6*p4 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.751265499839478 + 3*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.349945364300529 + 3*p3 + -7*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.553334167089035 + 3*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.524440232823952 + 3*p3 + -9*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.524440232823952 + 3*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.15520689439209973 + 3*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5121784136657492 + 3*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.009408746426601 + 3*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4984597681809064 + 3*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.413838019993371 + 2*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.382265537423569 + 2*p3 + 3*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5931974532113187 + 2*p3 + 3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8035813526105755 + 2*p3 + 2*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.182133710548843 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.545100750875677 + 2*p3 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3450526488151469 + 2*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.7876673084495485 + 2*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8729241564569363 + 2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.322279626728392 + 2*p3 + -1*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.934085563399965 + 2*p3 + -1*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.4174124627997715 + 2*p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.4174124627997715 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.357120927955937 + 2*p3 + -4*p5 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.388740185349692 + 2*p3 + -4*p5 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.388745072271598 + 2*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3234451321079232 + 2*p3 + -5*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.8150406948736615 + 2*p3 + -1*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.280652825936626 + 2*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.2630513549631885 + 2*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5175409207958686 + 2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.643964917856579 + 2*p3 + -2*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.57541135189797 + 2*p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.133809540821766 + 2*p3 + -3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7067587142523646 + 2*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8871405783427644 + 2*p3 + -6*p4 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.804596968200628 + 2*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.526976370760025 + 2*p3 + -8*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.526976370760025 + 2*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.385383891703157 + 2*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.526976370760025 + 2*p3 + -8*p4 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.513201351140343 + 2*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.403541284036621 + p3 + 6*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.38544378199145 + p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8284840849388306 + p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8809146483333663 + p3 + 3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8594240601877106 + p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.4748817917448145 + p3 + p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.564983541714397 + p3 + p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.3738155343483545 + p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.96774740511228 + p3 + p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.705478698277268 + p3 + p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.667335034077075 + p3 + p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0359035426035756 + p3 + p5 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.472428199384044 + p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.2613927260834347 + p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.28944370031307 + p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.25973413969526454 + p3 + -2*p6 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3800463342830245 + p3 + -3*p6 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7134192142488752 + p3 + -1*p5 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.889691402539504 + p3 + -2*p5 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.767060163479669 + p3 + -2*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0463100512719585 + p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.745022797672629 + p3 + -1*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.536895775030809 + p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0592933810446192 + p3 + -2*p4 + d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5192771658374357 + p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.226174608270384 + p3 + -3*p4 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.763110176808138 + p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.035269132417109 + p3 + -6*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.035269132417109 + p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8931343795616464 + p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.528569158235395 + p3 + -7*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.528569158235395 + p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0213204525368536 + p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8798946524235514 + p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.148283747838114 + p3 + -10*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.151176805606219 + p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.387745173143131 + 5*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.374182219525882 + 4*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.885873477804133 + 4*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5322442640480527 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.158341705756557 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.016749052166763582 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.622224730631254 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5367849296266747 + 2*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.242168490463076 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.194883515267587 + 2*p5 + -4*p6 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.248600726888376 + p5 + 2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.248063340011687 + p5 + -2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1598496617319634 + 4*p1 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.305960938761903 + 46*p2 + -50*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.617507995324372 + 43*p2 + -45*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.008909407727605 + 40*p2 + -41*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.055314404910872 + 39*p2 + -38*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8203906356331663 + 31*p2 + -37*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8203906356331663 + 31*p2 + -37*p3 + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.700511125163609 + 31*p2 + -39*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.700511125163609 + 31*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.830487390850903 + 27*p2 + -33*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4816831483102777 + 26*p2 + -28*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.6848118970402366 + 26*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4327682016280345 + 26*p2 + -32*p3 + -3*d + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4059220621743167 + 24*p2 + -24*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.371758804364538 + 24*p2 + -24*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.12364684615157 + 23*p2 + -23*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.324988543762095 + 23*p2 + -25*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.781098046681335 + 23*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.675584847887085 + 23*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.964101944401955 + 23*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.432412835595695 + 22*p2 + -22*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.11964982513999486 + 22*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9951281049226164 + 21*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.288859879179962 + 21*p2 + -21*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.952708426546621 + 21*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.654498686522381 + 21*p2 + -22*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.355113450250292 + 21*p2 + -26*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.199589263498496 + 20*p2 + -20*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5060477701351944 + 20*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.984695241782528 + 20*p2 + -21*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7895028372306052 + 20*p2 + -22*p3 + -3*d + l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.213587468237926 + 20*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.356505350328758 + 20*p2 + -25*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8820511897456322 + 19*p2 + -18*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.284318698500882 + 19*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.3209491282463295 + 19*p2 + -19*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.195664707644146 + 19*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.417329551161985 + 19*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.205978181765081 + 19*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.3577541334085605 + 19*p2 + -24*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7210196165391682 + 18*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.3427676722567528 + 18*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8975910863049306 + 18*p2 + -17*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4899228392106267 + 18*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.11059976936962868 + 18*p2 + -19*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.9060081366505495 + 18*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.35798538953445 + 18*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.12330667298204 + 17*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.3224822339595983 + 17*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.139176445268282 + 17*p2 + -18*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.690910094443339 + 17*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.870966114060707 + 17*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.0692009340731237 + 16*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4588722185854874 + 16*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.37919215315046517 + 16*p2 + -17*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4603169851436557 + 16*p2 + -18*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3888460928420215 + 16*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8443253828633157 + 15*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.823280568805251 + 15*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.489984117264005 + 15*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4578759846484495 + 15*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.461576780794378 + 15*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1405918648000664 + 15*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8490279810032559 + 14*p2 + -11*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.07540558806228 + 14*p2 + -12*p3 + -3*d + 3*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1786313158472828 + 14*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.19289518519381488 + 14*p2 + -15*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.986057803332927 + 14*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.1944333438635975 + 14*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.363493648653744 + 14*p2 + -19*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8734163393059987 + 13*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.0303633609556035 + 13*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.986552289103283 + 13*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0159781487344743 + 13*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.32016616504556816 + 13*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.7172130619388852 + 13*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1611110026840628 + 13*p2 + -15*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.1840653899750504 + 13*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.364119000124734 + 13*p2 + -18*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.821596309080444 + 13*p2 + -19*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.31547406437609 + 12*p2 + -7*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.4757968253800522 + 12*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.407534588866867 + 12*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.5045200919392405 + 12*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4460688322587076 + 12*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.33531300495900096 + 12*p2 + -13*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.060941878516394 + 12*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.0564631891228515 + 12*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6351246251673524 + 11*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.375481102053533 + 11*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.952349595350726 + 11*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.498563283202183 + 11*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6670533209391696 + 11*p2 + -12*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.019478257511374 + 11*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.532257737076559 + 11*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9952689529932524 + 11*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.223732019982218 + 11*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.634108852041008 + 10*p2 + -7*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.404655127670294 + 10*p2 + -9*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.493012961647916 + 10*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.025503308622183 + 10*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.3390035461539265 + 10*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.31244447936889486 + 10*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2243179270121123 + 10*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2243179270121123 + 10*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.3323806857810419 + 10*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.1624931714103 + 10*p2 + -16*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.1624931714103 + 10*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0998656539023297 + 10*p2 + -17*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0998656539023297 + 10*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.948526094060066 + 9*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.189319920712687 + 9*p2 + -4*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4761087412123333 + 9*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.920598706138104 + 9*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.314814487455128 + 9*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.9713071616580136 + 9*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.089383380947777 + 9*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6970639083613617 + 8*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.421709097355698 + 8*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5526206424975526 + 8*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.83778319069514 + 8*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9496118293944648 + 8*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4228458302975215 + 8*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.4186505908728195 + 8*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.982069053355369 + 8*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.9037756775060055 + 8*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.75846564714239 + 8*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.380695954328934 + 8*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.970642042175029 + 8*p2 + -11*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.897237674128035 + 8*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4839620077179738 + 8*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4149248280202706 + 8*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.391244217725845 + 8*p2 + -14*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.073393721538556 + 7*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.336095827620103 + 7*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.57084662627062 + 7*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6286086214362734 + 7*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.134441541540546 + 7*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.849791430509661 + 7*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.052407393007068 + 7*p2 + -9*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.3033651360603615 + 7*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.102709859448013 + 7*p2 + -10*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.987364914403012 + 7*p2 + -10*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.33046622562621275 + 6*p2 + -2*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.062417686440297604 + 6*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3025285657566143 + 6*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1402880029772942 + 6*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.706957524250799 + 6*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.120187412044559 + 6*p2 + -5*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.561852744607219 + 6*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1330489008387972 + 6*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.058520757778028 + 6*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.36909716875693005 + 6*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.194127247106064 + 6*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.194127247106064 + 6*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9161236819359904 + 5*p2 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8012672205553563 + 5*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.7922845599890667 + 5*p2 + -2*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.178091694035833 + 5*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.0719236477062344 + 5*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.243453218827152 + 5*p2 + -4*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.546538004019744 + 5*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3936527550969635 + 5*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.228543743691991 + 5*p2 + -6*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.7425494830913113 + 5*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.636925140816976 + 5*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4652918886401736 + 5*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7923834946627052 + 5*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7923834946627052 + 5*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4033484081576426 + 5*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.929973069578441 + 5*p2 + -8*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.553191399156221 + 5*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.3090917443673975 + 5*p2 + -9*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.3090917443673975 + 5*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9544411554347332 + 5*p2 + -10*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1835522716732807 + 5*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8199556995835695 + 5*p2 + -11*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.1944747421601365 + 5*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8852271653854862 + 4*p2 + p3 + 4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.27928653970658146 + 4*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.798546077718572 + 4*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.959736858946084 + 4*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.10154430307858128 + 4*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3927853264587227 + 4*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.0952641273227135 + 4*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.31137057828014275 + 4*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.975828986179031 + 4*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.1546819248480498 + 4*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.66209697742094 + 4*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8721729752451945 + 4*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.260650663075387 + 4*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.314230674820336 + 4*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.919901987697341 + 4*p2 + -7*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.380893508603626 + 4*p2 + -7*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3400849096668787 + 4*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.673249805874108 + 4*p2 + -10*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8179817321995637 + 4*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.204037592661372 + 4*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.278382510143948 + 3*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1409423269138665 + 3*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.894579197109714 + 3*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.352900530295056 + 3*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.459609969260306 + 3*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9663542493100709 + 3*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.372538800505571 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.44921668260265485 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.722607866158483 + 3*p2 + -4*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.43124258383391645 + 3*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.9062435645700098 + 3*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.827575441035293 + 3*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4022268510819944 + 3*p2 + -7*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4022268510819944 + 3*p2 + -7*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2386502217636395 + 3*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.696989599826809 + 3*p2 + -9*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.500795916879651 + 3*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.1569836735638965 + 2*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.9229084918668264 + 2*p2 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.8520956056898275 + 2*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.1003727060433 + 2*p2 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9161976838962753 + 2*p2 + 3*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8698139797298824 + 2*p2 + p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.225640903581757 + 2*p2 + p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.146879230399134 + 2*p2 + p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6387744661974395 + 2*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.173158346372146 + 2*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.981114017686994 + 2*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.981114017686994 + 2*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3066745953947268 + 2*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.08354646783201576 + 2*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.974003354784811 + 2*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.365333225685346 + 2*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.929048751704901 + 2*p2 + -4*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.929048751704901 + 2*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1994986469170519 + 2*p2 + -4*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0659668219725449 + 2*p2 + -4*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.2186074012291455 + 2*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7195858115620217 + 2*p2 + -5*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.137321292314754 + 2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8161639802819285 + p2 + 5*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.876391295507607 + p2 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4531326863436713 + p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.212178663960666 + p2 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.703560738965619 + p2 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.356526609352366 + p2 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.7641577234251855 + p2 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9672778860485427 + p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5553068957459306 + p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5553068957459306 + p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.153792522057867 + p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.2039255340250765 + p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.06567918321349941 + p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.2039255340250765 + p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.200582862445024 + p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7165403950485336 + p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.624173931336514 + p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.297301513173084 + 42*p3 + -54*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.027933679605585 + 39*p3 + -52*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7063736776227412 + 38*p3 + -50*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.311035334524101 + 33*p3 + -40*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.760100147986883 + 30*p3 + -35*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.830077229978368 + 29*p3 + -29*p4 + l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.674103795477109 + 29*p3 + -31*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.774168557453825 + 22*p3 + -20*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2303902850439674 + 17*p3 + -30*p4 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.229595479099244 + 15*p3 + -16*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.7321607597846658 + 15*p3 + -17*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.2300606008465826 + 15*p3 + -18*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.706148206578334 + 14*p3 + -15*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.739084996027786 + 14*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.3830226442564504 + 14*p3 + -23*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.482620407115233 + 13*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.08652836285904807 + 13*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.1028554199076295 + 12*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.5927291898713247 + 12*p3 + -16*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.0853551865291236 + 11*p3 + -12*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.033112062997936 + 11*p3 + -14*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.143253010802165 + 11*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0951682832518292 + 11*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8627923711111336 + 10*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.963130494140296 + 10*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1024897564327032 + 10*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.6183560423096 + 10*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6121405672790807 + 10*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.35656622832638635 + 10*p3 + -18*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.35656622832638635 + 10*p3 + -18*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3624796038600184 + 9*p3 + -6*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8195661335962077 + 9*p3 + -8*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.257115498675471 + 9*p3 + -12*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.0189963636065817 + 9*p3 + -12*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.639398097834127 + 9*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.519594134626231 + 9*p3 + -13*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.861624894879525 + 9*p3 + -16*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.861624894879525 + 9*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.728022409595262 + 9*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.363438487751064 + 8*p3 + -5*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8593278840476084 + 8*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2698930116377394 + 8*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.097688381155416 + 8*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.279394235019746 + 8*p3 + -14*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.508429254902907 + 8*p3 + -14*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.279394235019746 + 8*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8616582561631883 + 7*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3641926445208505 + 7*p3 + -4*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.241898138961942 + 7*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6179868881761696 + 7*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6604760476530289 + 7*p3 + -11*p4 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3726127854692222 + 7*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.167492317986788 + 7*p3 + -16*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.0258996643969946 + 7*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.152492417799739 + 6*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7303236007190664 + 6*p3 + -2*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6766931319621012 + 6*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.9780633396908 + 6*p3 + -8*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.232029681308682 + 6*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.09043702771888938 + 6*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.514471784801187 + 6*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.012629236460698 + 6*p3 + -13*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.012629236460698 + 6*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.012581239906267 + 6*p3 + -13*p4 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5892160251183025 + 6*p3 + -14*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.00823362473955 + 6*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.885219136870927 + 5*p3 + 4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7778389678741356 + 5*p3 + -1*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.717042377236357 + 5*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6074728502292308 + 5*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6102543814581338 + 5*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5353270391058503 + 5*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.534695787508671 + 5*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.047126367258066 + 5*p3 + -8*p4 + d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.09397393744805588 + 5*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.75432890174258 + 5*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.765850684301303 + 5*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.062604994262303 + 5*p3 + -12*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.14535316549109 + 5*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.14535316549109 + 5*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2485026053911472 + 4*p3 + p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.279993266012297 + 4*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.098582164265363 + 4*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.62931478165163 + 4*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.5224114621014335 + 4*p3 + -10*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.5224114621014335 + 4*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.402796369013553 + 3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.286892701583406 + 3*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.034868753886701 + 3*p3 + -2*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8029710194694697 + 3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6626488165371534 + 3*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6232335224405898 + 3*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9822843929917986 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.498896441061439 + 3*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5603348402550763 + 3*p3 + -5*p4 + l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9640553016193438 + 3*p3 + -6*p4 + 2*p5 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.759375695807646 + 3*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8268211182308975 + 3*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.0253750354204785 + 3*p3 + -8*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.05637888971998 + 3*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.401980959685338 + 2*p3 + 5*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7511284574999308 + 2*p3 + 4*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.324211523179107 + 2*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2912452036720294 + 2*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.306447038453533 + 2*p3 + -1*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4453781884770605 + 2*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.9626807142937395 + 2*p3 + -5*p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.706849662903027 + 2*p3 + -2*p5 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.4381623247125646 + 2*p3 + -4*p5 + 5*p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8069372971912605 + 2*p3 + -1*p4 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.61016766408926 + 2*p3 + -2*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.75864440285106 + 2*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.809893029276145 + 2*p3 + -6*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.031870278231776 + 2*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.385664740674753 + p3 + 4*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.979312488833086 + p3 + 2*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.790969645927247 + p3 + p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.807594928755095 + p3 + p6 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.810927643460095 + p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5087313628981104 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.09034019593867 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.3680679650936622 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6473400015708188 + p3 + -2*p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8566850894976055 + p3 + -5*p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7800705458557355 + p3 + -2*p5 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.4464974596280477 + p3 + -4*p5 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.22761135481230887 + p3 + -1*p4 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.2195924650589713 + p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1746401054121387 + p3 + -5*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9847395561488959 + p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.3882575763165657 + p3 + -7*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.3757727125782746 + p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.906158933097921 + 8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.38774482407728 + 5*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7405170216824142 + 4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7405170216824142 + 4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.192088894069292 + 3*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.238692675756046 + 3*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.570080750299896 + 2*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7960827200123073 + p4 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0437105578840382 + 2*p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3384832210123235 + p6 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6191424791722318 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.599822582512231 + 3*p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.305315699035757 + 41*p2 + -42*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.479803611737122 + 30*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.1960280596994615 + 29*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.408515812972339 + 28*p2 + -32*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.944597540945067 + 26*p2 + -28*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.2920693651414545 + 25*p2 + -29*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2865179708946863 + 24*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.18002587641121 + 23*p2 + -25*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.111816663914019 + 22*p2 + -23*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.1723441162828236 + 22*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.6786648389163963 + 21*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.438593387044541 + 21*p2 + -23*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5923438296708015 + 21*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2469635740567386 + 21*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.682944062671385 + 20*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.087692897525878 + 20*p2 + -21*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.0328673593384896 + 19*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.6748425678545287 + 19*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.030900530807784005 + 19*p2 + -20*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.221959157019626 + 19*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5081515900155478 + 19*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.82293148595822 + 19*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1208689631174633 + 18*p2 + -17*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.2956458598513747 + 18*p2 + -17*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.043314393638785 + 18*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.3069301200955354 + 18*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8228183886226903 + 18*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.698046022128092 + 17*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5215338765602644 + 17*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8221035017610734 + 17*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.733506417136271 + 16*p2 + -14*p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9033651505709868 + 16*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.9118382089889603 + 16*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.2046627695994365 + 16*p2 + -15*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.0567063219859705 + 16*p2 + -17*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.108897600740058 + 16*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5009007686761127 + 16*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.471749274803336 + 15*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.198487620172955 + 15*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.058035041145514 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.8624670162436122 + 14*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.403850722414683 + 14*p2 + -14*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.246724157374948 + 14*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.4101024578020604 + 14*p2 + -17*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.362504396033714 + 14*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.365405307783453 + 13*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.128066866987296 + 13*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.1685478591251273 + 13*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.36401550210009 + 13*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.7055380139768863 + 12*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.1566700039040466 + 12*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0199363809450723 + 11*p2 + -11*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.32056148212114494 + 11*p2 + -12*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5528361906601744 + 11*p2 + -13*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.306434961688428 + 11*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.963732458199308 + 11*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.454096648686181 + 10*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.0187427842628995 + 10*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5053510261994814 + 10*p2 + -10*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.1582285914243942 + 10*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.437916748388493 + 9*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.00369049870334201 + 9*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.086476543576897 + 9*p2 + -9*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.4686432783681695 + 9*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.0012116075667344634 + 9*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.032311139902513 + 9*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.019650530006862 + 9*p2 + -12*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.075069978243755 + 9*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0879323142076691 + 9*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.330055068546026 + 8*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.922054336229218 + 8*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5666635616590994 + 8*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2551336348182494 + 8*p2 + -8*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.6188319765999852 + 8*p2 + -13*p3 + 2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.577492840062215 + 8*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.22926313441639634 + 7*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0955414261475886 + 7*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.982767891686184 + 7*p2 + -6*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.627691966014809 + 7*p2 + -9*p3 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.131512870557383 + 7*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.255530897250954 + 7*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.038561530016388 + 7*p2 + -13*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9730690545412685 + 6*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.331922030250251 + 6*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.546085274110094 + 6*p2 + -4*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.170286756153839 + 6*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8587164867123183 + 6*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5494977333652757 + 6*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.18501415095643448 + 6*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.0221384798589463 + 6*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.143346534955122 + 6*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.4840812052075685 + 6*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.283225607288674 + 6*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.472654036490936 + 6*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.34474598596725475 + 5*p2 + -1*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.0890198373629034 + 5*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.800473304271891 + 5*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.95994439559078 + 5*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.6999784421775836 + 5*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.532680264291834 + 5*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9075176379273318 + 5*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.0869279197147295 + 5*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.818736412568126 + 5*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.972316511059391 + 5*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.9931082438775998 + 4*p2 + 5*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2268427288063637 + 4*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.7786702681968605 + 4*p2 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.339588563522562 + 4*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.9377554842147666 + 4*p2 + -1*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.756724706708476 + 4*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.9714796086864275 + 4*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.45216807685936 + 4*p2 + -5*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.378450405215001 + 4*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.78124221087755 + 4*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.229054060968641 + 4*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5576552192578554 + 4*p2 + -8*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.211646670608025 + 3*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8992861415761508 + 3*p2 + 2*p3 + 4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.394389284041306 + 3*p2 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.9933660290081194 + 3*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.507342455374323 + 3*p2 + -1*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.539260704665578 + 3*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5957651986034858 + 3*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.26423468819604 + 3*p2 + -3*p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.1191101863319117 + 3*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.424387471127492 + 3*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.6491938903022871 + 3*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.6491938903022871 + 3*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.11705713853615729 + 3*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.0626110859180518 + 3*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8016974527142895 + 2*p2 + 3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.064075102087892 + 2*p2 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2769272206203683 + 2*p2 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.713599889819724 + 2*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.6352506379393463 + 2*p2 + -1*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.139587444812177 + 2*p2 + -1*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.281180272934894 + 2*p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.0267245154998035 + 2*p2 + -1*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.458770814955947 + 2*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.35972876493100003 + 2*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4304545761749576 + p2 + 5*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.774972473103928 + p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.541553169143123 + p2 + p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.955957356949207 + p2 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.7010109789630636 + p2 + -1*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.4590107977280966 + p2 + -2*p3 + 2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.0102648559196545 + p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.2434488215107558 + p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5293807278392553 + p2 + -2*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.048483884350268 + p2 + -3*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.210047442411056 + p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.812613099420429 + p2 + -5*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.850121097710413 + 28*p3 + -31*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9249222357611444 + 26*p3 + -20*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.223629760684684 + 18*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.9846020581971064 + 15*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0983437267945908 + 13*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.3444152460740018 + 13*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.244448073497423 + 12*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.741446452000685 + 12*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.236151293333901 + 12*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.132088663175933 + 12*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.120951891751882 + 11*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.4643701547672453 + 11*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.46437032930017047 + 11*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5481965734112809 + 11*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3575394494122484 + 10*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.553420194824525 + 10*p3 + -11*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5446115180897095 + 10*p3 + -12*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.744788408452403 + 10*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2239266326921316 + 10*p3 + -14*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5048434759546845 + 10*p3 + -16*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8326308042103276 + 10*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8326308042103276 + 10*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.970167444659828 + 9*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.47333713286521656 + 9*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6150264776955705 + 9*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6824183525040515 + 9*p3 + -11*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.052185919223306 + 9*p3 + -13*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.097232135092312 + 9*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5905883605125124 + 9*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0529372409747062 + 9*p3 + -16*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8523746668405887 + 8*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.48007200938281225 + 8*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.696055980718335 + 8*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1522505066670963 + 8*p3 + -11*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.654039464901232 + 8*p3 + -12*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.40582744833222545 + 8*p3 + -13*p4 + d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.265424819714658 + 7*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.156392356013321 + 7*p3 + -14*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.06009762026562154 + 7*p3 + -15*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.9471018968921214 + 6*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3325320228238233 + 6*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.479753695320515 + 6*p3 + -7*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.9746094991357124 + 6*p3 + -9*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.08164213908516474 + 6*p3 + -10*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.143843804753966 + 6*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3318986428382744 + 5*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3496643492943248 + 5*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.121693988753197 + 5*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.99661061308421 + 5*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6803389672332254 + 4*p3 + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.786616245679048 + 4*p3 + -2*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.1332974612192315 + 4*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.152378447799585 + 4*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.1747781779526045 + 4*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5613279241011435 + 4*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.597068618987192 + 4*p3 + -10*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.14590364233717 + 4*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.7586665430376107 + 3*p3 + 5*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.39649538984632 + 3*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.2693640193380937 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.641193509537337 + 3*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.303558344008557 + 3*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9863398400417326 + 3*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.39431804911287405 + 3*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5166233927097783 + 3*p3 + -5*p4 + 2*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9269302285672472 + 3*p3 + -5*p4 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9186622548346997 + 3*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.277689090832131 + 3*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.61088410475057 + 3*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.106751684431465 + 3*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.030597060542446 + 3*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.052494484936742 + 3*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.035185497152672 + 2*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.227837234410783 + 2*p3 + -3*p5 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.44267871321795 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.221980267005258 + 2*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.7817965274479826 + 2*p3 + -2*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.65270901740907 + 2*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.190818800975984 + 2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.09055850263482819 + 2*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5080782861869637 + 2*p3 + -5*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.126409353291626 + 2*p3 + -7*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.538540756349131 + 2*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.898748056567761 + 2*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.718530943060433 + p3 + 5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.6747928089742132 + p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.807014981339607 + p3 + p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.6824029766100006 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.7455673064059849 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5404240986533746 + p3 + -3*p5 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5404240986533746 + p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.7943667122917464 + p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.387687926343665 + p3 + -4*p4 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.5525063574248135 + p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8939300751676307 + p3 + -6*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.7465279441245993 + 6*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.0608879138492413 + 5*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.4028260311125202 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.381323400195025 + 3*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.661425025658922 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.939842033833843 + p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2133897309319917 + p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.281927946491499 + 3*p5 + -5*p6 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.127691638194751 + 2*p5 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.127691638194751 + 2*p5 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.731213586596242 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.763836931908669 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5231762483830242 + p6 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.731546071818746 + 31*p2 + -37*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.8207370834896874 + 30*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.11806017925727844 + 25*p2 + -26*p3 + d + l + -3*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7839134203010936 + 25*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.831284474221973 + 24*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.2993037378943377 + 23*p2 + -25*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6072410705045659 + 22*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.371912584868272 + 21*p2 + -22*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.9634032636074323 + 21*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.838869334583607 + 20*p2 + -19*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.328851821563068 + 18*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.360807936000774 + 18*p2 + -23*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.278487204404118 + 17*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.5919137635464768 + 16*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.3300562732798693 + 16*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4552235907875604 + 15*p2 + -15*p3 + -4*d + l + 2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.24527775203392072 + 15*p2 + -16*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.182760807349085 + 15*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.478924489392893 + 13*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.274448188944103 + 13*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.3218209372043344 + 13*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6988476433552164 + 12*p2 + -14*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.20632013425713 + 12*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.63990528201644 + 11*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6360541875269645 + 10*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7385772712500644 + 9*p2 + -7*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.4325291000188285 + 9*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7591129897619548 + 9*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.96313939531948 + 9*p2 + -15*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.96313939531948 + 9*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.434153835517827 + 8*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.0014282029269069598 + 8*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.16361082927337764 + 8*p2 + -9*p3 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.033252361974846364 + 8*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.10920944008748999 + 8*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.337730660533813 + 7*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6933114589678904 + 7*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.03805498447755916 + 7*p2 + -6*p3 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.497920652971598 + 7*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.256811768894042 + 7*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.872358180173782 + 7*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.3671186975101355 + 7*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.94887813546851 + 6*p2 + -5*p3 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.982289846004063 + 6*p2 + -5*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.044903358386435 + 6*p2 + -12*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.7834371114499075 + 5*p2 + p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.0109083248215978 + 5*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.836831637186953 + 5*p2 + -3*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.41896579733573 + 5*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.288217040423186 + 5*p2 + -6*p3 + d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.966985053793325 + 5*p2 + -7*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1095972692439164 + 5*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.523725528993577 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.4033475099980667 + 4*p2 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.16784571316705 + 4*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.810832540012494 + 4*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.663873505574961 + 3*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.515337102047692 + 3*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.954339794296776 + 3*p2 + -2*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.022519859795458 + 3*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.2686110588038329 + 3*p2 + -6*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.923835278696269 + 3*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.914801595027605 + 2*p2 + 3*p3 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.169426317330923 + 2*p2 + p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.8421578414686307 + 2*p2 + -1*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4345290473137384 + 2*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.970757582971511 + 2*p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.47884923170886495 + 2*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.46368511303583754 + 2*p2 + -3*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.08244446694230655 + 2*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.061742818608452 + 2*p2 + -5*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.8969125022917557 + 2*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.22922108047974 + 2*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.562530822018252 + p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.252227163509853 + p2 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.279885404664524 + p2 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.7855505476377806 + p2 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.46165477151699247 + p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.7305984900762557 + p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.242356113357666 + p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.31727502713963956 + p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.7585196033112265 + p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.2299808223031332 + p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.937696858148533 + p2 + -7*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.612876772652522 + 34*p3 + -39*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.772394962366265 + 34*p3 + -42*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.838071693620495 + 26*p3 + -24*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.03705927413929639 + 21*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.7352796546596627 + 15*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.2041126163242577 + 14*p3 + -17*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.6809159645856178 + 13*p3 + -17*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.46896822468162436 + 12*p3 + -26*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.336100855081668 + 11*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.255490946207716 + 10*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.765950151072034 + 10*p3 + -13*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.0837498156865064 + 10*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.0594139917942487 + 10*p3 + -15*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.3718021055266205 + 9*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.113993936660932 + 9*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.7233393421463106 + 9*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.139680321823332 + 9*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.967535705172329 + 8*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.9431593471498418 + 8*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.503106026179274 + 8*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.5043628292753186 + 8*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.3421259231891107 + 7*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.011116035999218 + 7*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.7321326344887585 + 7*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.5065561845462994 + 7*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.978846800995387 + 6*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.2324270842810447 + 6*p3 + -5*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.7721321242792305 + 6*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.337971865036439 + 5*p3 + -2*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.269120213838223 + 5*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.276236270264453 + 5*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.5009686789806485 + 5*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.613170503067316 + 5*p3 + -10*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.8345457709672992 + 4*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1761880464240493 + 4*p3 + -1*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.278636455550114 + 4*p3 + -7*p4 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.278636455550114 + 4*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.689774225667824 + 4*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.8509712305924264 + 4*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.8385658048300506 + 3*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.25927511810199005 + 3*p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.654104416644357 + 3*p3 + -7*p4 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.203967230397567 + 3*p3 + -7*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1823223551460336 + 2*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.2752283256247945 + 2*p3 + p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.9688972280234935 + 2*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.054721316536095 + 2*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.176831042717117 + 2*p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.553276362697527 + 2*p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.1776040150495588 + 2*p3 + -3*p4 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.9121799274598675 + 2*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.9899565113177153 + 2*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.06322839187784898 + 2*p3 + -5*p4 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.14932623300033 + 2*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.86542206719343 + p3 + 5*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.47151692898831166 + p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.8731030612035824 + p3 + p5 + -5*p6 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.77610694561604 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.3209972993336845 + p3 + -3*p5 + 5*p6 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.56988630362459 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.5223552285062529 + p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.6199519458826733 + p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.846085921974753 + p3 + -5*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.545087303342119 + p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.2453004498125133 + 5*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.11099543551105577 + 3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.659074216194461 + 2*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.5239578068220676 + p6 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.2301499447076512 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.062919494095196 + 43*p2 + -42*p3 + d + -3*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.854396656273973 + 34*p2 + -42*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.8842768336077755 + 24*p2 + -28*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.2364966599996035 + 23*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.7892630374896976 + 22*p2 + -21*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.7618303098710184 + 21*p2 + -20*p3 + d + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.877929271146147 + 21*p2 + -21*p3 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.814423346422281 + 21*p2 + -23*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.945940563306162 + 20*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.34454948738843 + 18*p2 + -15*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -4*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -4*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.533373168503193 + 18*p2 + -17*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.652836916049975 + 18*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.8826278465304909 + 15*p2 + -17*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.361961947702193 + 15*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.277256398215612 + 14*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.129904558149988 + 14*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.20774641732186 + 13*p2 + -14*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.115142214270769 + 13*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.148126834240043 + 12*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.7946998956459521 + 12*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5925946164876796 + 11*p2 + -9*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.3839003533406451 + 11*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.6663632262512473 + 10*p2 + -8*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.965747440820735 + 10*p2 + -16*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.5055777529676315 + 9*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.8112799999411227 + 9*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5646073892673245 + 8*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.0780314104269555 + 8*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.5100759645538469 + 7*p2 + -8*p3 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.3943704089904339 + 7*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.151735451506516 + 7*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5404593628025816 + 6*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.552096162559012 + 6*p2 + -7*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.553273387139482 + 6*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.367531642411158 + 6*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.490388518550009 + 5*p2 + -5*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.2924283453753231 + 5*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.2924283453753231 + 5*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.352331046356763 + 5*p2 + -6*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.961548353173361 + 5*p2 + -11*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.5977684790206084 + 4*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.7437504356512923 + 4*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.604896429180703 + 4*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.7744883102711064 + 4*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.41860465472022557 + 3*p2 + p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.2969917172308545 + 3*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.331730393098382 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3031007101803675 + 2*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.631956703537007 + 2*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.4041622466895305 + 2*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.892729846234301 + p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.5774566862517485 + p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.343230542072698 + p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.9185554831760605 + p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.32799626116374 + p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5234724222587712 + 31*p3 + -37*p4 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.484190854376177 + 12*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.05659998044462491 + 12*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.249898562218475 + 11*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.5939643593829618 + 11*p3 + -15*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.810142419829623 + 9*p3 + -10*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.826135378367789 + 9*p3 + -14*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.634782749160153 + 9*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.851542851417405 + 8*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.44363322528755 + 8*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.8506276007576585 + 7*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3453032950923665 + 7*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.4694604075306868 + 7*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.621150846539135 + 7*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.511549380006697 + 6*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.5083716760342245 + 6*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.144230395183283 + 6*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.496779714242937 + 6*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.0043232060521396 + 5*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5200219063275784 + 5*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.1941101173844448 + 5*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.488200722837684 + 5*p3 + -9*p4 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.488200722837684 + 5*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.6211396764319215 + 5*p3 + -11*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.6425250042270503 + 4*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.915442330890962 + 4*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.033734247381322 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.033707892909616885 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.6333866177998998 + 3*p3 + p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.2398225679205206 + 3*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.8208819288209694 + 3*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.4672600709426975 + 3*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.663977561191647 + 3*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.2315640104676169 + 2*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.383352528481711 + 2*p3 + -4*p5 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.849674983055287 + 2*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.540367409445951 + 2*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.399405185778612 + p3 + 2*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.4623768312251757 + p3 + 2*p5 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.8682353464180874 + p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.76147442873822 + p3 + p5 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.058123703871516 + p3 + p5 + -1*p6 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5980770447340442 + p3 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.889714964484406 + p3 + -2*p5 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.5698859545587396 + p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.7634023024333394 + p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.876550993134164 + p3 + -3*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.864600017115741 + 6*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.254300755200881 + 2*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.1976807204664914 + p4 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.3114046206988734 + 2*p5 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.4854914482398134 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.487598933311596 + p6 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.2911141124485714 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.5059311566462107 + 38*p2 + -37*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.1137073535977544 + 23*p2 + -22*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.2704073771649353 + 23*p2 + -24*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.919743311773385 + 20*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.361762980167466 + 19*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + 2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -2*l + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.361666463459831 + 17*p2 + -22*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.5136580868089566 + 15*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.397769995300735 + 15*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.7028085105563258 + 15*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.1316425230258567 + 14*p2 + -16*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.1334815679603665 + 14*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.964160936530672 + 13*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.1257563916251894 + 13*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.4343245117220382 + 12*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.5613836001042825 + 11*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.1088685857828922 + 11*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.6150161547580335 + 10*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.280745511418224 + 10*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.0991101008691415 + 10*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.96997251687733 + 8*p2 + -12*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.5158565120330856 + 7*p2 + -6*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.0763147130730104 + 7*p2 + -9*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.9845055074962032 + 7*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.7945646751205055 + 6*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.985768627770821 + 6*p2 + -9*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.8903214324062074 + 6*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.548905385613782 + 5*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.5171312920204252 + 5*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.349408317991374 + 4*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.8058895590446546 + 3*p2 + 2*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.37280250275891397 + 3*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.052356603925833 + 2*p2 + 3*p3 + 2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.647349975442505 + 2*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.28432041833518346 + 2*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.895564252441223 + 2*p2 + -2*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.141340287478271 + 2*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.6293468787132337 + p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.8436068138136363 + 12*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.1535760757356694 + 11*p3 + -16*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.134965489381996 + 11*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.741456906979563 + 11*p3 + -21*p4 + 2*p5 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.3570619018339527 + 10*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.3608805331993414 + 9*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.0776045028919177 + 9*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.139536855758819 + 9*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.14128410487299 + 8*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.3776550586748675 + 7*p3 + -11*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.346048376150043 + 6*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.009641058248358 + 6*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.5475167676676291 + 6*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.1698956023735176 + 5*p3 + -4*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.760049899501059 + 5*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.699462207778111 + 5*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.836892042575706 + 4*p3 + -4*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.830951290867767 + 4*p3 + -4*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.137687836952622 + 4*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.786801425112685 + 3*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.147169704176567 + 3*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.539613261174481 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.1548166642663036 + 2*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.536703273712631 + 2*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.4771119394697463 + 2*p3 + -8*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.7487448613404823 + p3 + 5*p4 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.2507608869103026 + p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.8735360858893193 + p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.85548711249567 + p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.868278630583536 + p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.2233880240849664 + p3 + d + l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.31601158329412093 + p3 + d + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.2233880240849664 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.4749292222088858 + p3 + -3*p4 + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.2344431056017071 + 5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.289800271079254 + p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.2341940471174473 + 22*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.491995268659395 + 19*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.3623511561253885 + 16*p2 + -21*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.7199593290185815 + 14*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.1173850944009236 + 12*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.803456587064008 + 10*p2 + -11*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.9836797837287681 + 9*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.557086948551723 + 9*p2 + -8*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.109112591310638 + 9*p2 + -11*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 6.066145237113682 + 7*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.2923023411016457 + 6*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.510067620966704 + 6*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.843579620670571 + 6*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.798530369755304 + 5*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.0468715236923252 + 5*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.2684081025067755 + 5*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.5774317195451286 + 5*p2 + -7*p3 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.8611866427043492 + 4*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.8355940072177305 + 4*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.132101553117448 + 4*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.361384243719783 + 4*p2 + -6*p3 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.361384243719783 + 4*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.2140580090042636 + 4*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.3554305425821136 + 2*p2 + 2*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.821282332846327 + 2*p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.959214324364671 + 2*p2 + -1*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.3570540478523187 + p2 + 3*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.326305901284867 + p2 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.61411438562511 + p2 + -1*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.412750139273969 + p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.899861261557949 + 37*p3 + -48*p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.596051407105863 + 13*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.6015425619984877 + 12*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.34921141085848223 + 12*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.8326308042103276 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.8326308042103276 + 10*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 6.137369680426617 + 10*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.697522955449586 + 8*p3 + -10*p4 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.840610100484595 + 7*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.507204033768007 + 7*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 6.142755417432421 + 7*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.26722442870639 + 6*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.0853609546139715 + 6*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.3669971970992472 + 5*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.46453247038768075 + 5*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.8174591891198335 + 5*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.5857592005068525 + 5*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.37983809950662833 + 4*p3 + -6*p4 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.786764275094567 + 4*p3 + -8*p4 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.786764275094567 + 4*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.83617173669509 + 3*p3 + p4 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.0810721400464134 + 3*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.551882917317684 + 3*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.768086974671884 + 3*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.2890721027186878 + 2*p3 + p4 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.242691557141582 + 2*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.787495385019911 + 2*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.1321839156615088 + 2*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.2980820074179418 + p3 + 2*p6 + d + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.49033227645651134 + p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.522012488332744 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.973708585670782 + p3 + -2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.3818174859096317 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.3818117263231002 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.668867084094475 + p6 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.668867084094475 + p6 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.21894387521397987 + 18*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.9282673423038332 + 16*p2 + -13*p3 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.346074390054214 + 16*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.05115560037595379 + 12*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.5830942572719824 + 11*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.501390691095464 + 7*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.263278903406065 + 6*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.5599676229804564 + 6*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.6928396964710766 + 4*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.811816905710619 + 4*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.1173582333270766 + 3*p2 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.622553052558503 + 3*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.6604532093347775 + 3*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.9986213814204827 + p2 + p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.8731269807126516 + 29*p3 + -33*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.566691869986248 + 11*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.8502109651702577 + 11*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.35335412437101593 + 11*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.3447985288760564 + 10*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.343729357172918 + 10*p3 + -19*p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.238628779708789 + 7*p3 + -8*p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.2037893813467884 + 7*p3 + -9*p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.8308704651267664 + 6*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.242323301167728 + 6*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.531613536049649 + 5*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.4723192568454535 + 4*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.090737964973516 + 4*p3 + -9*p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.8322239509650545 + 3*p3 + -4*p4 + d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.8694687536038379 + 3*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.8317710465224786 + 3*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.926368615607222 + 3*p3 + -8*p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.8539671137484244 + 2*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.242691557141582 + 2*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 6.2775421341091135 + p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.328203772313486 + p3 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.7367460717988716 + 6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.9238724117177533 + 4*p4 + 2*d + -2*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.914316244457575 + 23*p2 + -23*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.5162649020814187 + 23*p2 + -24*p3 + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.848637567846218 + 10*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.6471204476492347 + 6*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.806408645459148 + 4*p2 + -3*p3 ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 6.171303942540218 + 4*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 5.388836186956868 + 2*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 5.932016335032068 + p2 + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.5782876290103067 + p2 + -1*p3 + d + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.734453083722552 + p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 3.851592593301086 + 8*p3 + -9*p4 ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.8508377214029657 + 8*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.83501789102828 + 7*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.6474900998864903 + 6*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.7936349127330184 + 5*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.40920308963850766 + 4*p3 ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.03266401148399908 + 4*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.03264743085610513 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 6.222956438154215 + 2*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.1853627017063744 + p3 + 4*p4 ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.8863481988623585 + p3 + p5 + d + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.3494196456348786 + p3 + -2*d + l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.408293458025635 + p3 + -1*p4 ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.4930085643315194 + p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.877646510810691 + p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.71238898038469 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.963967204983702 + 12*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.6554351962057356 + 10*p2 + -12*p3 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 3.0500892296979356 + 9*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.0010632715769483 + 8*p2 + -10*p3 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.793178683666547 + 7*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 3.0378625001560144 + 3*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.9250418163098555 + p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.0526387896726153 + p2 + -3*p3 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.468323542547521 + 10*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.468171524369673 + 9*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.874938832504097 + 7*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.834397601012122 + 6*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.135318360963482 + 5*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.558321785994142 + 5*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.535329342027144 + 5*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.815390118288227 + 4*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 0.021971775420431414 + 4*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 0.02196636489975023 + 4*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.929379491598154 + 3*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.377414228733041 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.6442048836320944 + 3*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.8333959480560853 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.8327157932465832 + 3*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 3.155265737482842 + 2*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.8572055636771836 + p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 0.7419136341498599 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.522580559011002 + p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.738700001889746 + p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 3.284691326296182 + 4*p2 + -5*p3 ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.6978695608423988 + 9*p3 + -15*p4 ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 5.373728966017456 + 8*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 2.0931053040759715 + 8*p3 + -13*p4 ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.6368083697917015 + 6*p3 + -12*p4 ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.228472534258509 + 5*p3 + -6*p4 ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 0.4020119840544407 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.662528937912492 + 4*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 2.0725067537110093 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.2155282743661435 + 2*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 0.4696420963058193 + 2*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.9937103739712212 + 20*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.39666010643612526 + 18*p2 + -15*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 6.261022592738987 + 12*p2 + -13*p3 ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 2.1931034199702113 + 8*p2 + -7*p3 ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.0041551138485394 + 2*p2 + -4*p3 ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 5.080675967302844 + p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.226396465113262 + 8*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.7181864065677728 + 2*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.47398290468845444 + 2*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.6216709291612792 + p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.5672728476026537 + p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 5.107508310157154 + 4*p2 + -4*p3 ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 4.516115535890715 + 3*p2 + -2*p3 ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 3.4815995470391075 + 3*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 3.2058520114567957 + p2 + 2*d + -1*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.5647798362957386 + 4*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 6.10540694223607 + 3*p3 + -6*p4 + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 6.10540694223607 + 3*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 6.272270716169314 + 5*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 4.5353649467438855 + 5*p3 + 2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 1.0356539435239074 + 2*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 5.150143911256572 + 2*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 6.153976837325194 + 2*p4 + d + -1*f ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 3.6113258560825665 + 18*p2 + -19*p3 + -3*d + 2*f ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 1.1368551148715464 + 10*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 3.823607809541684 + 3*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 4.569495907464186 + 2*p2 + -1*p3 ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.491296613359822 + 6*p3 + -11*p4 ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 4.238452850520189 + 4*p3 + -5*p4 ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 0.5340180421668546 + 4*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 0.5207399262835322 + 3*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 0.049516910741256324 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.2732816023737525 + p3 ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.2486021231517785 + p5 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 4.842478143379638 + 5*p2 + -8*p3 ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 4.325400266932641 + 3*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 3.325003196029495 + 3*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 3.767537711057965 + 3*p2 + -5*p3 + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 0.2983427426115563 + 2*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.974689111644553 + 5*p3 + -9*p4 ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.589222823404069 + 2*p3 ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 3.936530437612792 + p5 + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 3.9802828749005617 + p5 + -1*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.248062467347061 + p5 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 1.0646384518788519 + 10*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.053417938643972 + 3*p2 + -3*p3 ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.330405696694435 + 8*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.182275763353322 + 8*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.318623685544239 + 7*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 1.160153864122269 + 5*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 0.05514629571063883 + 5*p3 + -8*p4 ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 0.7357140501138508 + p3 + -2*p5 + l ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.637477695061524 + 20*p3 + -18*p4 + -3*d + l + f ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.6220524751323984 + 5*p3 + -7*p4 ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.703124606680495 + 4*p3 + -8*p4 ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 1.0388601133598208 + 3*p3 + -4*p4 ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.459501252244539 + 2*p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 0.9455110037839788 + p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 3.696332989965576 + 4*p2 + -6*p3 ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 0.9469926137859969 + 3*p2 + -6*p3 + -1*d + f ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 0.5695683046348766 + 3*p3 + -5*p4 ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 0.5596389519873558 + 2*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 3.097094786178497 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 2.8601413820119634 + 32*p2 + -28*p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 3.8172958263018466 + 3*p1 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 2.5413435550999584 + 34*p3 + -41*p4 + -1*d + -1*l + f ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 3.644189707765919 + 9*p3 + -17*p4 ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 4.254131841322554 + 8*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 0.3896574964112737 + 2*p3 + -4*p4 + l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 0.383312177382723 + 2*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 0.5153067163220738 + 2*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 0.12873880175268054 + 4*p3 + -7*p4 ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 0.7664199767100376 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 0.5319288830522174 + p3 + -3*p5 ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 4.343251145456189 + p2 + -2*p3 ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 3.3803336239762194 + 3*p3 + -2*p5 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 0.7474597669139224 + p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 3.03991971974534 + 4*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 0.2899911676078382 + 3*p2 + -4*p3 + l ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4.117675193617555 + 8*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4.206185552375168 + 2*p3 + -3*p5 ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 1.6709363379573232 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 4.111211715798645 + 8*p3 + -15*p4 + l ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 5.049063516693171 + 3*p3 + -7*p4 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 1.0388555755037656 + p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( 1.6228741591476041 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( 0.006297846072896338 + 3*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( 1.0855056084156962 + 2*p3 + -3*p4 ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 0.4100865753058673 + 2*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 4.827004926896082 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 4.829650671509181 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 5.37036327308791 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00033*t * sin ( fmod ( ( 4.78242694887212 + 7*p3 + -13*p4 ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 0.29262905823930246 + 2*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 0.6207497358837599 + 6*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 0.611395294691846 + 3*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 1.0121694912407724 + p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 5.361832976368787 + p5 + -2*d + l ), twopi ) );
        a += 0.00036*t * sin ( fmod ( ( 0.7696027591339744 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00037*t * sin ( fmod ( ( 2.8354706294362475 + p3 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 0.19487787922408045 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 0.24111339643866225 + 3*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 4.30163935449599 + 5*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00042*t * sin ( fmod ( ( 6.274124953966633 + 6*p2 + -8*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 0.2857273282452161 + 5*p2 + -6*p3 + 2*d + -2*f ), twopi ) );
        a += 0.00045*t * sin ( fmod ( ( 6.248181332767438 + 3*p3 + -6*p4 ), twopi ) );
        a += 0.00048*t * sin ( fmod ( ( 1.687129851823177 + 8*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00049*t * sin ( fmod ( ( 1.675801094181407 + 8*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00049*t * sin ( fmod ( ( 2.9519245821829156 + 3*p2 + -5*p3 ), twopi ) );
        a += 0.0005*t * sin ( fmod ( ( 0.345038503149889 + 2*p2 + -3*p3 + l ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*l + -2*f ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 0.29130609866629076 + 6*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 0.1889865203339736 + 2*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 1.8906865552857246 + 15*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 4.183264666907503 + 2*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 0.7789458556857505 + 6*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00055*t * sin ( fmod ( ( 1.4735507696639774 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.00055*t * sin ( fmod ( ( 1.4725459836136041 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 0.24788876459490422 + 3*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 3.2677218390448917 + 14*p3 + -23*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 0.7523857841947511 + p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00059*t * sin ( fmod ( ( 0.7575657468817453 + p3 + -2*p4 + l ), twopi ) );
        a += 0.00061*t * sin ( fmod ( ( 0.3329442440981943 + 2*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00063*t * sin ( fmod ( ( 5.833736321253491 + p5 ), twopi ) );
        a += 0.00065*t * sin ( fmod ( ( 1.0503389693172622 + 10*p2 + -3*p3 ), twopi ) );
        a += 0.00071*t * sin ( fmod ( ( 5.1898536423979476 + 20*p2 + -20*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00079*t * sin ( fmod ( ( 4.160798963308756 + 26*p2 + -29*p3 + -1*l ), twopi ) );
        a += 0.00079*t * sin ( fmod ( ( 1.0403666815701422 + 10*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.0009*t * sin ( fmod ( ( 2.003557172545123 + 18*p2 + -16*p3 + l ), twopi ) );
        a += 0.00096*t * sin ( fmod ( ( 1.999343424132033 + 18*p2 + -16*p3 + -3*l ), twopi ) );
        a += 0.00107*t * sin ( fmod ( ( 0.03440742087381621 + 4*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00107*t * sin ( fmod ( ( 0.03438961851544587 + 4*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00108*t * sin ( fmod ( ( 0.7541466468770882 + p3 + -2*p5 ), twopi ) );
        a += 0.00118*t * sin ( fmod ( ( 0.3173739873082277 + 20*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00122*t * sin ( fmod ( ( 5.604518041798871 + 12*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00131*t * sin ( fmod ( ( 1.3910649384183986 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00131*t * sin ( fmod ( ( 1.3910846606389462 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00143*t * sin ( fmod ( ( 4.203784502923199 + 8*p3 + -15*p4 ), twopi ) );
        a += 0.00143*t * sin ( fmod ( ( 0.48673340753889904 + 2*p3 + -4*p4 ), twopi ) );
        a += 0.00157*t * sin ( fmod ( ( 0.3156413989597729 + 3*p2 + -4*p3 ), twopi ) );
        a += 0.00157*t * sin ( fmod ( ( 1.035234540904653 + 2*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00167*t * sin ( fmod ( ( 0.03712577118379738 + 4*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00168*t * sin ( fmod ( ( 0.03714758779944731 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00202*t * sin ( fmod ( ( 0.023168373155598724 + 4*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00202*t * sin ( fmod ( ( 0.023163137167842743 + 4*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00235*t * sin ( fmod ( ( 1.0060955709109067 + p3 + -2*p4 ), twopi ) );
        a += 0.00244*t * sin ( fmod ( ( 1.03563893369234 + 2*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0028*t * sin ( fmod ( ( 1.9997528783745508 + 18*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00291*t * sin ( fmod ( ( 1.9997979078692525 + 18*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00293*t * sin ( fmod ( ( 1.9992945549129773 + 18*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00293*t * sin ( fmod ( ( 1.3211922526111324 + 2*p5 + -5*p6 ), twopi ) );
        a += 0.00298*t * sin ( fmod ( ( 1.9994434314981722 + 18*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.0032*t * sin ( fmod ( ( 1.6280816980367796 + 8*p2 + -13*p3 ), twopi ) );
        a += 0.00353*t * sin ( fmod ( ( 0.30487638266639705 + 2*p2 + -3*p3 ), twopi ) );
        a += 0.01056*t * sin ( fmod ( ( 0.03969978276463862 + 4*p3 + -8*p4 + 3*p5 ), twopi ) );
        a += 0.01326*t * sin ( fmod ( ( 2.0035583942755992 + 18*p2 + -16*p3 ), twopi ) );
        a += 0.0141*t * sin ( fmod ( ( 1.9993423769344818 + 18*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.01443*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.25425*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -1*l ), twopi ) );

        return a;
    }

    double planetary_lat13 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 3.8172958263018466 + 3*p1 + -1*p3 + -2*d + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.8172958263018466 + 3*p1 + -1*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*l + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.141137837783356 + 18*p2 + -16*p3 + -1*l + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3796222022781566 + 15*p2 + -16*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.52121485586795 + 15*p2 + -16*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9712917942622794 + 14*p2 + -13*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0562402850824224 + 14*p2 + -15*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0562402850824224 + 14*p2 + -15*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.530757077490745 + 14*p2 + -15*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.381908617591535 + 11*p2 + -10*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.381908617591535 + 11*p2 + -10*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5225852883966158 + 11*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.38099263480682255 + 11*p2 + -12*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.818560832445375 + 10*p2 + -9*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.818560832445375 + 10*p2 + -9*p3 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.382646185235112 + 10*p2 + -13*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.382646185235112 + 10*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6229851790846643 + 9*p2 + -9*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.286435965914793 + 9*p2 + -11*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.224351786399601 + 9*p2 + -14*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.224351786399601 + 9*p2 + -14*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4464292257526117 + 8*p2 + -9*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6365807533622911 + 8*p2 + -9*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1514052182154057 + 8*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1514052182154057 + 8*p2 + -11*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6558737974467614 + 8*p2 + -13*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.9037238327289048 + 8*p2 + -15*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.516766867272609 + 7*p2 + -9*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.516766867272609 + 7*p2 + -9*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.224959893104263 + 6*p2 + -5*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.224959893104263 + 6*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.234622908507929 + 6*p2 + -7*p3 + d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.858152081225489 + 6*p2 + -7*p3 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5027780703145077 + 6*p2 + -9*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.098196454998989 + 6*p2 + -12*p3 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.213577736885698 + 5*p2 + -4*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.0719850832959046 + 5*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.22823710633905 + 5*p2 + -4*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.22823710633905 + 5*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.3219790385396147 + 5*p2 + -6*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.463571692129408 + 5*p2 + -6*p3 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.7142236619960696 + 5*p2 + -8*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.916920101168626 + 5*p2 + -10*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7753274475788325 + 5*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.2188891228653675 + 4*p2 + -3*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.2188891228653675 + 4*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5869222964186984 + 4*p2 + -6*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.5869222964186984 + 4*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7492548465479152 + 4*p2 + -8*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.819362462170816 + 3*p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.819362462170816 + 3*p2 + -2*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1474986477506668 + 3*p2 + -4*p3 + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1474986477506668 + 3*p2 + -4*p3 + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1474986477506668 + 3*p2 + -4*p3 + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.1474986477506668 + 3*p2 + -4*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.30246525279635 + 3*p2 + -4*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.038667944110859574 + 3*p2 + -6*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.008379193697483 + 3*p2 + -7*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.008379193697483 + 3*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9993186404566547 + 2*p2 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0334021197229841 + 2*p2 + -1*p3 + d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.6701710195786403 + 2*p2 + -1*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.856614237628291 + 2*p2 + -1*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.819365778296395 + 2*p2 + -1*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.4059047919130387 + 2*p2 + -3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.831296874557979 + 2*p2 + -3*p3 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9089030802875646 + 2*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.050495733877359 + 2*p2 + -4*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.248301909523801 + 2*p2 + -4*p3 + -1*d + 2*l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.524175789947325 + 2*p2 + -4*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.8120710001547597 + 2*p2 + -8*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.953663653744552 + 2*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.972574645255762 + p2 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.759553519363475 + p2 + d + -2*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.759553519363475 + p2 + d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6511483099986705 + p2 + -1*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6511483099986705 + p2 + -1*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.29980623518262 + p2 + -2*p3 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.29980623518262 + p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5233476482138872 + p2 + -2*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9080321609908197 + p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.9080321609908197 + p2 + -3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.191763198634239 + p2 + -4*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5413435550999584 + 34*p3 + -41*p4 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.5413435550999584 + 34*p3 + -41*p4 + -1*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.328037799999938 + 14*p3 + -23*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.328037799999938 + 14*p3 + -23*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.238679751821265 + 11*p3 + -16*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.0970870982314715 + 11*p3 + -16*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.728568531616528 + 11*p3 + -17*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.246155695139257 + 9*p3 + -15*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4808872611747357 + 9*p3 + -21*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.622479914764528 + 9*p3 + -21*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.11111952842087257 + 8*p3 + -11*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.099785917850464 + 8*p3 + -15*p4 + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.099785917850464 + 8*p3 + -15*p4 + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.099785917850464 + 8*p3 + -15*p4 + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.099785917850464 + 8*p3 + -15*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.2891063281686606 + 7*p3 + -7*p4 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.2891063281686606 + 7*p3 + -7*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.781596521214022 + 7*p3 + -8*p4 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.781596521214022 + 7*p3 + -8*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.695710247990148 + 7*p3 + -11*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.791066852268267 + 7*p3 + -13*p4 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.791066852268267 + 7*p3 + -13*p4 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.891860838301416 + 6*p3 + -5*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.11288793001226 + 6*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.11288793001226 + 6*p3 + -7*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.6240859327489471 + 6*p3 + -8*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.6468529056715373 + 6*p3 + -9*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.993519975546462 + 5*p3 + -6*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0012514095719967 + 5*p3 + -7*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.0012514095719967 + 5*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.4937417771502822 + 5*p3 + -8*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.4937417771502822 + 5*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8776398615628997 + 5*p3 + -12*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.6210462758219903 + 4*p3 + -4*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.867386269231941 + 4*p3 + -5*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.47940075575249524 + 4*p3 + -6*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.046027299434818855 + 4*p3 + -7*p4 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.046027299434818855 + 4*p3 + -7*p4 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1753232357796857 + 4*p3 + -8*p4 + 3*p5 + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1753232357796857 + 4*p3 + -8*p4 + 3*p5 + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.175304211690839 + 4*p3 + -8*p4 + 3*p5 + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.175304211690839 + 4*p3 + -8*p4 + 3*p5 + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.02134192858497 + 4*p3 + -9*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.02134192858497 + 4*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7521983443314035 + 3*p3 + 3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7521983443314035 + 3*p3 + 3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.652839044438343 + 3*p3 + -3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.954415856658896 + 3*p3 + -3*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.954415856658896 + 3*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.301017676714745 + 3*p3 + -4*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.074607440497026 + 3*p3 + -6*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.8835029461191244 + 3*p3 + -10*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.0250955997089175 + 3*p3 + -10*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.5106627697433175 + 3*p3 + -11*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.36907011615352403 + 3*p3 + -11*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7533017414845145 + 2*p3 + 4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.894894395074307 + 2*p3 + 4*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2124390670850635 + 2*p3 + -3*p5 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.2124390670850635 + 2*p3 + -3*p5 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.028915078243982 + 2*p3 + -4*p4 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.028915078243982 + 2*p3 + -4*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.85394827269082 + 2*p3 + -6*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.522589494183453 + 2*p3 + -6*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.522589494183453 + 2*p3 + -6*p4 + -2*d + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.031453319073474 + 2*p3 + -7*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.889860665483681 + 2*p3 + -7*p4 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3.1119831428297093 + p3 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.7670746497124606 + p3 + -2*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5319288830522174 + p3 + -3*p5 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.5319288830522174 + p3 + -3*p5 + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.594942292857803 + p3 + -3*p4 + d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 5.594942292857803 + p3 + -3*p4 + d + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4529433181198297 + p3 + -4*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.4529433181198297 + p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2.4727364075333136 + p3 + -5*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 1.7939370207282221 + 4*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.530548710673007 + 2*p5 + -5*p6 + 2*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4.530548710673007 + 2*p5 + -5*p6 + -2*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.188092613681001 + p5 + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6.188092613681001 + p5 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5282294916680068 + 23*p2 + -23*p3 + d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.6698221452578 + 23*p2 + -23*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4495022269665978 + 22*p2 + -23*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.042313979409859 + 21*p2 + -20*p3 + d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.042313979409859 + 21*p2 + -20*p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.981996264627244 + 21*p2 + -22*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8404036110374512 + 21*p2 + -22*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.509023556509844 + 20*p2 + -19*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.509023556509844 + 20*p2 + -19*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.519294819157831 + 19*p2 + -20*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.20295683379863702 + 18*p2 + -15*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.79613353458849 + 18*p2 + -17*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.068240130319901 + 18*p2 + -17*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37823152393016757 + 18*p2 + -19*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.557253103896513 + 17*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.557253103896513 + 17*p2 + -16*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5105135440922717 + 17*p2 + -16*p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5105135440922717 + 17*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.281382905661052 + 17*p2 + -18*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.281382905661052 + 17*p2 + -18*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3787284191682103 + 17*p2 + -18*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0551376115559625 + 16*p2 + -15*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0551376115559625 + 16*p2 + -15*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8419524332123043 + 16*p2 + -15*p3 + -2*d + -1*l + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.983545086802097 + 16*p2 + -15*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8906865552857246 + 15*p2 + -13*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8906865552857246 + 15*p2 + -13*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.36974643123867185 + 15*p2 + -14*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5113390848284656 + 15*p2 + -14*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.66794975603626 + 15*p2 + -15*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.52121485586795 + 15*p2 + -16*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9779411496465273 + 15*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37010701626213394 + 14*p2 + -13*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.511699669851927 + 14*p2 + -13*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.511699669851927 + 14*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37010701626213394 + 14*p2 + -13*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5216105220093765 + 14*p2 + -15*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2697650790035682 + 14*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5979070496649002 + 14*p2 + -16*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5979070496649002 + 14*p2 + -16*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3704321711017805 + 13*p2 + -12*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.512024824691573 + 13*p2 + -12*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5219711070328388 + 13*p2 + -14*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37072119762591077 + 12*p2 + -11*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.512313851215704 + 12*p2 + -11*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.106867599788748 + 12*p2 + -12*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.106867599788748 + 12*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.461801579202035 + 12*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8895026984540968 + 12*p2 + -13*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8895026984540968 + 12*p2 + -13*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.37097409583452473 + 11*p2 + -10*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.512566749424318 + 11*p2 + -10*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6454697152426982 + 11*p2 + -10*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.787062368832492 + 11*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.056985391635048 + 10*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9379045183362538 + 10*p2 + -9*p3 + d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9113315484054234 + 10*p2 + -9*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.753453095523929 + 10*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.753453095523929 + 10*p2 + -9*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4297486074891594 + 10*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.365909882470205 + 10*p2 + -15*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.365909882470205 + 10*p2 + -15*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5089710136010424 + 9*p2 + -8*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2387500545968533 + 9*p2 + -8*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.87685834561544 + 9*p2 + -8*p3 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.87685834561544 + 9*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.0573300941623165 + 9*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9157374405725243 + 9*p2 + -11*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9534199802860246 + 9*p2 + -11*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.095012633875818 + 9*p2 + -11*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.18135419551500237 + 9*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.171244584349017 + 9*p2 + -12*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.150733491976212 + 9*p2 + -12*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9759972189222896 + 8*p2 + -6*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.817179421339055 + 8*p2 + -8*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.845586915344974 + 8*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6188319765999852 + 8*p2 + -13*p3 + 2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4256866857243595 + 8*p2 + -13*p3 + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4256866857243595 + 8*p2 + -13*p3 + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7579409926709239 + 8*p2 + -15*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8850784633332163 + 7*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8850784633332163 + 7*p2 + -2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8411752380963913 + 7*p2 + -6*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8411752380963913 + 7*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.753593577532081 + 7*p2 + -8*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9523003770658205 + 6*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0719070670783406 + 6*p2 + -5*p3 + d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.816620217846716 + 6*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.816620217846716 + 6*p2 + -5*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6781052693615733 + 6*p2 + -7*p3 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6781052693615733 + 6*p2 + -7*p3 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3655971109699307 + 6*p2 + -7*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.25858693477792866 + 6*p2 + -8*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2584925124653958 + 6*p2 + -8*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.125849285632979 + 6*p2 + -9*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.475200131302062 + 6*p2 + -11*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3336074777122686 + 6*p2 + -11*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.40779166736737 + 6*p2 + -12*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9077344418136954 + 5*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9077344418136954 + 5*p2 + -2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.262365099999621 + 5*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.179879783854501 + 5*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.957427281743554 + 5*p2 + -6*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.706251862139269 + 5*p2 + -6*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.282180172063363 + 5*p2 + -6*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7591128237273463 + 5*p2 + -9*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.899317067897178 + 5*p2 + -9*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.028647187200434 + 4*p2 + -3*p3 + d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6980891232622999 + 4*p2 + -3*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.5968160698444285 + 4*p2 + -4*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.276930902808432 + 4*p2 + -4*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.519483506246605 + 4*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0395657499764022 + 4*p2 + -9*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5688333634834954 + 3*p2 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.995023393665813 + 3*p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6206813274753984 + 3*p2 + -2*p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2852335745998269 + 3*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.2679054731771515 + 3*p2 + -4*p3 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.2679054731771515 + 3*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.48976277552158565 + 3*p2 + -4*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.458542874955637 + 3*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5294549043324657 + 3*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8807610338642413 + 3*p2 + -6*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.136235897547889 + 3*p2 + -6*p3 + -1*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9945463781846101 + 3*p2 + -6*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3598622826187777 + 2*p2 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8224302273970467 + 2*p2 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.310375740606506 + 2*p2 + -3*p3 + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.310375740606506 + 2*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.22314261379550263 + 2*p2 + -3*p3 + -2*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.22314051940040022 + 2*p2 + -3*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4061320082866985 + 2*p2 + -3*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8837605737133516 + 2*p2 + -5*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.284678078790501 + 2*p2 + -5*p3 + -2*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.962161976945097 + 2*p2 + -5*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.962161976945097 + 2*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.35991638782558943 + p2 + 3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1594024998792856 + p2 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.180506174024725 + p2 + p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.047010843458218 + p2 + p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.045493752282484194 + p2 + p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.184581866893982 + p2 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5617766397535149 + p2 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8295841489697298 + p2 + -1*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8295841489697298 + p2 + -1*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.357002237068485 + p2 + -1*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4904975676349916 + p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.404677135815502 + p2 + -1*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.26507781426609556 + p2 + -2*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.11653336522763379 + p2 + -4*p3 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.11653336522763379 + p2 + -4*p3 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9212788949408734 + p2 + -5*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.9212788949408734 + p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.952792734447808 + p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0991200577441944 + 9*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.799334310900355 + 9*p3 + -14*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6577416573105626 + 9*p3 + -14*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9765811805950567 + 8*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0357118884550733 + 8*p3 + -10*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0357118884550733 + 8*p3 + -10*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.199192341633327 + 8*p3 + -12*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.85352274442255 + 8*p3 + -13*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.229272418654698 + 8*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.590371599117731 + 7*p3 + -9*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.590371599117731 + 7*p3 + -9*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0983318585556772 + 7*p3 + -10*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6074948498761223 + 7*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.217908064794504 + 7*p3 + -15*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.178797688216581 + 6*p3 + -5*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8422466787275572 + 6*p3 + -6*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4859720949191791 + 6*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7662827938308308 + 6*p3 + -8*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7663129880268904 + 6*p3 + -8*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.113995332924334 + 6*p3 + -9*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.113995332924334 + 6*p3 + -9*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.428336827653855 + 6*p3 + -13*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.428336827653855 + 6*p3 + -13*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.012581239906267 + 6*p3 + -13*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.479657336149172 + 5*p3 + -2*p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7322497460815673 + 5*p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.320706378442328 + 5*p3 + -6*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.141089998765219 + 5*p3 + -9*p4 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.141089998765219 + 5*p3 + -9*p4 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9587432345046074 + 5*p3 + -11*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.518533515036427 + 5*p3 + -11*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5031903170838286 + 4*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.22585991690793258 + 4*p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.333382887830804 + 4*p3 + -2*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.333382887830804 + 4*p3 + -2*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.45951434221393 + 4*p3 + -3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.668828354781715 + 4*p3 + -3*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.509686066497268 + 4*p3 + -5*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.509686066497268 + 4*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.4145270759820585 + 4*p3 + -6*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.910342644851243 + 4*p3 + -7*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8005862185761785 + 4*p3 + -8*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.4058130045910175 + 4*p3 + -9*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.3790427869597615 + 3*p3 + 2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.614565553236751 + 3*p3 + p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.30710482755366 + 3*p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6956810924933232 + 3*p3 + -1*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.134209378756765 + 3*p3 + -2*p4 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.134209378756765 + 3*p3 + -2*p4 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.6968621652964644 + 3*p3 + -5*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8854015237777604 + 3*p3 + -8*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8854015237777604 + 3*p3 + -8*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3854208926832994 + 3*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.773450545996187 + 2*p3 + p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6318578924063947 + 2*p3 + p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.563013056490578 + 2*p3 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.563013056490578 + 2*p3 + p5 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.292174783028274 + 2*p3 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.292174783028274 + 2*p3 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.156361970287703 + 2*p3 + -2*p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.177245898981999 + 2*p3 + -3*p5 + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.177246946179551 + 2*p3 + -3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.221782521201007 + 2*p3 + -1*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0801898676112134 + 2*p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.643839952282136 + 2*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.643839952282136 + 2*p3 + -2*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.136306583382594 + 2*p3 + -3*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1280425984123768 + 2*p3 + -3*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.48170214690417495 + 2*p3 + -4*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.308442813954872 + 2*p3 + -5*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.323348108798146 + 2*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8883492103514536 + 2*p3 + -7*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4124614703140064 + p3 + 2*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.265488366696065 + p3 + 2*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.123895713106272 + p3 + 2*p4 + d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.644798819176548 + p3 + p4 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.644798819176548 + p3 + p4 + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4454036787824562 + p3 + 3*p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9159852858246236 + p3 + p5 + -1*p6 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5754635032493378 + p3 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7772897212568495 + p3 + -1*d + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7473056543409712 + p3 + -2*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.821412725938084 + p3 + -2*p5 + d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.679830020725027 + p3 + -2*p5 + d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.645967159574466 + p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5043745059846736 + p3 + -1*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6577467017687602 + p3 + -1*p4 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.573796756305266 + p3 + -1*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.77701049407148 + p3 + -1*p4 + -2*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9456773336616939 + p3 + -2*p4 + 2*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9456773336616939 + p3 + -2*p4 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7090077200315346 + p3 + -2*p4 + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7090077200315346 + p3 + -2*p4 + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.26661789279805537 + p3 + -5*p4 + -1*d + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2629165900499846 + 7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.38537361975552 + 5*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7875852524797557 + 2*p4 + -1*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9612662654746569 + 2*p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.724117592958092 + 2*p5 + -5*p6 + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.724117592958092 + 2*p5 + -5*p6 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.1793355901937295 + 20*p2 + -20*p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.518734044869165 + 20*p2 + -21*p3 + -1*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.064489434753998 + 18*p2 + -16*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.37919215315046517 + 16*p2 + -17*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.646889225516611 + 14*p2 + -13*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.564972371607183 + 12*p2 + -11*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.52229608733956 + 12*p2 + -13*p3 + -1*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4621621642254974 + 11*p2 + -12*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8219528713483097 + 11*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7013837982879227 + 11*p2 + -13*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2237376050358242 + 11*p2 + -16*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9137151190699219 + 10*p2 + -10*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6908905127624492 + 10*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.060112647093822 + 10*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.462077166690925 + 9*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.32048451310113196 + 9*p2 + -10*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8189055349726444 + 9*p2 + -15*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.0014282029269069598 + 8*p2 + -9*p3 + d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6625571782531071 + 8*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.052507051307356 + 8*p2 + -10*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9109143977175633 + 8*p2 + -10*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.349769260579003 + 8*p2 + -11*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5202405960828533 + 8*p2 + -13*p3 + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4320080937421575 + 8*p2 + -13*p3 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4320080937421575 + 8*p2 + -13*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5202405960828533 + 8*p2 + -13*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.165581339992146 + 7*p2 + -5*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3297717761134775 + 7*p2 + -6*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8887047339200849 + 7*p2 + -7*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2085226972815637 + 7*p2 + -8*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0596202812135178 + 7*p2 + -14*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.176878141111971 + 6*p2 + -5*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.982289846004063 + 6*p2 + -5*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.84069719241427 + 6*p2 + -5*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.82392668969434 + 6*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2998414653385606 + 6*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8545563199072648 + 5*p2 + -5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.27186278173322354 + 5*p2 + -6*p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4135238522296945 + 5*p2 + -6*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.15059907612886 + 5*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.90291593681479 + 5*p2 + -8*p3 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.90291593681479 + 5*p2 + -8*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.20266518928062874 + 5*p2 + -8*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.211663268232552 + 5*p2 + -10*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.575597578529157 + 4*p2 + -2*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6436863378130104 + 4*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6262423125347363 + 4*p2 + -5*p3 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6262423125347363 + 4*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.261024129542047 + 4*p2 + -7*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.565824092282157 + 3*p2 + -2*p3 + 3*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.18812294841672 + 3*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.306201121561927 + 3*p2 + -3*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8923217457636012 + 3*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.24788876459490422 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.24788876459490422 + 3*p2 + -4*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.281134545308493 + 3*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.14742831098181142 + 2*p2 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.14742831098181142 + 2*p2 + p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.935499488620272 + 2*p2 + -1*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.211090119102831 + 2*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.30665347691077766 + 2*p2 + -3*p3 + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.30665347691077766 + 2*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.982418642804544 + 2*p2 + -4*p3 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.982418642804544 + 2*p2 + -4*p3 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7523521078385043 + 2*p2 + -4*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3327787868851052 + 2*p2 + -5*p3 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.91777128124819 + 2*p2 + -5*p3 + -2*d + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.9011461729532675 + p2 + d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.143609207007547 + p2 + -2*p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.002016553417754248 + p2 + -2*p3 + d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.671684062503828 + p2 + -2*p3 + -1*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.2341089175415325 + p2 + -2*p3 + -1*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5746170270604372 + p2 + -4*p3 + -2*d + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.7162096806502305 + p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.251005799095941 + 10*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.247380392675382 + 10*p3 + -15*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.649444012980731 + 10*p3 + -17*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.649444012980731 + 10*p3 + -17*p4 + d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.47377276704651433 + 9*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.130413645197844 + 9*p3 + -13*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.2339420470684095 + 8*p3 + -15*p4 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.036238305252425 + 8*p3 + -17*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.006492318243152 + 8*p3 + -19*p4 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4778287461935407 + 6*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5520801055298935 + 6*p3 + -8*p4 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.50747963825353 + 6*p3 + -14*p4 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.045176110856938 + 5*p3 + -6*p4 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.495281017010883 + 5*p3 + -6*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.623273158411244 + 5*p3 + -7*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.48168050482145025 + 5*p3 + -7*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1163689807070463 + 5*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8720877946793806 + 5*p3 + -12*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2425299141578976 + 4*p3 + p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.3062335591910643 + 4*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.991120994994646 + 4*p3 + -5*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.063466488781088 + 4*p3 + -7*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.063466488781088 + 4*p3 + -7*p4 + d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9278262976018543 + 4*p3 + -10*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.756364802820081 + 3*p3 + d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.529852856398553 + 3*p3 + -1*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.05208622692975 + 3*p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.637753116515806 + 3*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5047434600902285 + 3*p3 + -5*p4 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5047434600902285 + 3*p3 + -5*p4 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8961806772380776 + 3*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9402533994402216 + 3*p3 + -6*p4 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9402533994402216 + 3*p3 + -6*p4 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6937488299801237 + 3*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8589159863441376 + 3*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.519291511530568 + 3*p3 + -9*p4 + -2*d + 2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.379963273607263 + 2*p3 + 3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4467419972528854 + 2*p3 + p5 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6905210350581186 + 2*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0347910527417212 + 2*p3 + -3*p5 + 2*d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0347910527417212 + 2*p3 + -3*p5 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.188736980742521 + 2*p3 + -1*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9965046376053476 + 2*p3 + -3*p4 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9965046376053476 + 2*p3 + -3*p4 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7306444007338997 + 2*p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.547593770680909 + 2*p3 + -8*p4 + -2*d + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4060011170911155 + 2*p3 + -8*p4 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.437731228387323 + p3 + p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4197796273693015 + p3 + d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4655096972325055 + p3 + -2*p5 + 5*p6 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8095402557427347 + p3 + -2*p4 + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.8095402557427347 + p3 + -2*p4 + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.99388420876472 + p3 + -6*p4 + -2*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.385280410675147 + 3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.265068921585227 + 3*p4 + d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.022923886520661 + p4 + d + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0949431357783217 + p4 + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0949431357783217 + p4 + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.287290662147811 + p4 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.160798963308756 + 26*p2 + -29*p3 + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.160798963308756 + 26*p2 + -29*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -2*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.510943593219963 + 16*p2 + -15*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.058295086705745 + 15*p2 + -14*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5113390848284656 + 15*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.726038685364079 + 13*p2 + -12*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0588807937077647 + 13*p2 + -14*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8676406957452991 + 13*p2 + -14*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.4193607313521895 + 12*p2 + -12*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1705799459732242 + 12*p2 + -13*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9055567520143996 + 11*p2 + -11*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4621597207645443 + 10*p2 + -11*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.708322703795077 + 10*p2 + -12*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.0027216919305104 + 10*p2 + -13*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.764519006580348 + 9*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1603840815489237 + 8*p2 + -7*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.47216867742259 + 8*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.9129054778265546 + 8*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9074041830276356 + 7*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.556316751749452 + 5*p2 + -3*p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3781627834525887 + 5*p2 + -6*p3 + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6439694217193673 + 5*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.821610995341111 + 4*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.4234319203586585 + 4*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.064097084738149 + 4*p2 + -5*p3 + d + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.682355537647614 + 3*p2 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.996163617266141 + 3*p2 + -2*p3 + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.996163617266141 + 3*p2 + -2*p3 + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.249302008680145 + 3*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.001990548011899533 + 3*p2 + -4*p3 + d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.685133901788913 + 3*p2 + -5*p3 + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.685133901788913 + 3*p2 + -5*p3 + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8852231511282067 + 2*p2 + 3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.026815804718 + 2*p2 + 3*p3 + 2*d + -3*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.611419248194182 + 2*p2 + p3 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.176356130129332 + 2*p2 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.628043858385278 + 2*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.30988303415866797 + 2*p2 + -3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.4758528844423076 + 2*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.393211901924544 + p2 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.14679039314020748 + p2 + -2*p3 + d + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.326310813701723 + p2 + -2*p3 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.573932883488605 + p2 + -3*p3 + -1*d + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.744788408452403 + 10*p3 + -14*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.0885553882523143 + 8*p3 + -11*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.605021194727271 + 8*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9079263855398322 + 8*p3 + -15*p4 + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9079263855398322 + 8*p3 + -15*p4 + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6765433742139636 + 7*p3 + -11*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.1605595041353824 + 6*p3 + -8*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.949618146573038 + 5*p3 + -5*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9545130629999153 + 5*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.9390538431436415 + 5*p3 + -11*p4 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6063591471352163 + 4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.882925067603789 + 4*p3 + -11*p4 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.2534668368842781 + 3*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.459017421480937 + 3*p3 + -1*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7661564319929864 + 3*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.0685146451162894 + 3*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.764407122476979 + 2*p3 + 3*p6 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.622814468887186 + 2*p3 + 3*p6 + 2*d + -3*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.132367200727918 + 2*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8299517068118831 + 2*p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.385443607458526 + p3 + 4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.243850953868732 + p3 + 4*p4 + 2*d + -3*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3717676970454065 + p3 + -1*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.1961416976303996 + p3 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.773582492887638 + p3 + -1*p6 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5664982789789352 + p3 + -1*p4 + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5664982789789352 + p3 + -1*p4 + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.1325693268519315 + p3 + -2*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9237828763271259 + p3 + -2*p4 + -2*d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.909675422474839 + 3*p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.2259885476738046 + p4 + d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.248601250487151 + p5 + 2*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.248063340011687 + p5 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.540414716366997 + 20*p2 + -20*p3 + -1*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.3173739873082277 + 20*p2 + -21*p3 + -2*d + l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.3173739873082277 + 20*p2 + -21*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.2818798008990955 + 16*p2 + -17*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.070678729845737 + 13*p2 + -12*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5974171357438653 + 13*p2 + -15*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.604518041798871 + 12*p2 + -8*p3 + -2*d + l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.604518041798871 + 12*p2 + -8*p3 + -2*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1428040866236024 + 9*p2 + -10*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2318985900852244 + 9*p2 + -10*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2832755067086477 + 9*p2 + -11*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.962783871750849 + 8*p2 + -14*p3 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.00738714855065 + 7*p2 + -7*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.3277816026623785 + 7*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.205151427796728 + 6*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.665912773767941 + 6*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.3160962657561095 + 5*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8976399470256697 + 4*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.005083488470941 + 4*p2 + -6*p3 + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.005083488470941 + 4*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.917377560463889 + 4*p2 + -7*p3 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.905056200083244 + 4*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5733970504116104 + 4*p2 + -8*p3 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.2676778737443755 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8852456743738744 + 2*p2 + -1*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.002013237292175459 + 2*p2 + -3*p3 + d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.0002696533694331239 + 2*p2 + -3*p3 + d + -2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.286028265499843 + 2*p2 + -6*p3 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.770579985978799 + p2 + 2*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.444352483970613 + p2 + p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4506517008119615 + p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5887636187795522 + 11*p3 + -17*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.252454422375096 + 9*p3 + -12*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9823596166825596 + 7*p3 + -8*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.078146636150853 + 6*p3 + -6*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.244394474892753 + 6*p3 + -7*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2166405726984397 + 6*p3 + -9*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.039913636587908 + 5*p3 + -4*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.1273922972314003 + 5*p3 + -7*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.6371183487651715 + 4*p3 + -1*p5 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.311737463485545 + 4*p3 + -5*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6231892080742223 + 4*p3 + -6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.33598356045761724 + 4*p3 + -6*p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.22906311968411777 + 4*p3 + -7*p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.03373145485451881 + 4*p3 + -8*p4 + 3*p5 + 2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.03371068543642008 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.3805634668420739 + 4*p3 + -10*p4 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.6845179750958845 + 3*p3 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.849272361091803 + 3*p3 + -2*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.134409934084452 + 3*p3 + -4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.9315976305445135 + 3*p3 + -7*p4 + -1*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3871370919334183 + 2*p3 + -1*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5361072267764415 + 2*p3 + -2*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.069223640350033 + 2*p3 + -3*p4 + d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9777901701679131 + 2*p3 + -4*p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.277708804554362 + p3 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.969725918850656 + p3 + -2*p5 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.7670418375225231 + p3 + -2*p5 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9172682688594487 + p3 + -3*p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.9006696725725236 + p3 + -5*p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.370554535678979 + p3 + -5*p4 + -2*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9962136997173565 + p4 + -1*d + 2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.13780635330715 + p4 + -1*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.388956057083214 + 2*p5 + -5*p6 + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.388956057083214 + 2*p5 + -5*p6 + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.836607379374705 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4353879238386449 + 9*p2 + -9*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6048579979438926 + 8*p2 + -10*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.2631073545372278 + 7*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.1152106311774475 + 6*p2 + -6*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1078713216449363 + 5*p2 + -4*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.0806508430599315 + 5*p2 + -5*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.3893039181997695 + 5*p2 + -6*p3 + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.418189981486585 + 5*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.168317326625888 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.300139593069751 + 4*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.3386052280253546 + 4*p2 + -4*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.3206752860866917 + 4*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.8195371696289415 + 4*p2 + -10*p3 + -2*d + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.763644405095541 + 3*p2 + -2*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.593325560378415 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.139587444812177 + 2*p2 + -1*p3 + -1*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.8638186077146732 + 2*p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.21782895888780587 + p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.4767145195007507 + 8*p3 + -10*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7682386182889325 + 5*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.944542529080364 + 4*p3 + -3*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.0024070260630085 + 4*p3 + -6*p4 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.9300500470967705 + 4*p3 + -8*p4 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.019391174080015 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.5461404435110895 + 3*p3 + -5*p4 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.8764068119413158 + 2*p3 + 2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.985244862960614 + 2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.254279330142665 + 2*p3 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.020068876930249 + 2*p3 + -9*p4 + -2*d + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.390263491724199 + p3 + 2*p6 + d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.909861466074785 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1083442973739097 + p3 + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1083442973739097 + p3 + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.9449818199547741 + p3 + -2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.8949903881831665 + 6*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.373448806679244 + 2*p5 + -5*p6 + l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.373448806679244 + 2*p5 + -5*p6 + -1*l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.07023519069290542 + p5 + d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.0587641972154145 + 10*p2 + -3*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.366487586452615 + 9*p2 + -14*p3 + -2*d + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.6188319765999852 + 8*p2 + -13*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.6263808746807111 + 8*p2 + -13*p3 + -2*d + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.9874573998567344 + 6*p2 + -4*p3 + d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.4983838293618116 + 5*p2 + -8*p3 + d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.136956020397262 + 4*p2 + -7*p3 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.287033217584825 + 3*p2 + -1*p3 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.963208850925393 + 2*p2 + -2*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.3873067294383956 + 2*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.8267125502531069 + 2*p2 + -5*p3 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.0582001152994867 + p2 + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.0582001152994867 + p2 + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.966056364098339 + p2 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.5624733921875444 + 4*p3 + -4*p4 + d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.036246125240792244 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.036222737828815514 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.234961310853257 + 2*p3 + -1*p5 + d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3012398401318914 + 2*p3 + -4*p4 + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3012398401318914 + 2*p3 + -4*p4 + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.1671316819734258 + p3 + d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3087150853181835 + p3 + d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.1317062275435545 + p3 + -1*p4 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.2360889595846545 + p3 + -2*p4 + -1*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.7558900562669054 + 4*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.9188933619226134 + 5*p2 + -8*p3 + -1*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.38369213556088216 + 3*p2 + -4*p3 + -2*d + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.259768041574336 + p2 + -3*p3 + -1*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.5761529337988254 + 6*p3 + -10*p4 + d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.03717778199550681 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.03715736164325848 + 4*p3 + -8*p4 + 3*p5 + -2*d + l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.0714279741986683 + p3 + 2*p5 + -5*p6 + d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.844603596844401 + 2*p2 + -1*p3 + d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.8522159994149489 + 2*p2 + -3*p3 + f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.8522159994149489 + 2*p2 + -3*p3 + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.02246552906582061 + 4*p3 + -8*p4 + 3*p5 + l + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.02246552906582061 + 4*p3 + -8*p4 + 3*p5 + -1*l + f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.3472681867642615 + 2*p3 + p4 + 2*d + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.2013645954169925 + p3 + 2*p4 + 2*d + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.2748205912165783 + 2*p4 + d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.972775515656033 + 3*p2 + -2*p3 + d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.4887452740626226 + p2 + -2*p3 + d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.2724415584081346 + 9*p3 + -15*p4 + d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.05409194230950906 + 4*p3 + -8*p4 + 3*p5 + f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.05409281497413505 + 4*p3 + -8*p4 + 3*p5 + -1*f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.0356527217934308 + 2*p3 + -3*p5 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.2816961497702013 + d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + l + f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -3*l + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.8152050708959327 + 5*p2 + -7*p3 + d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 3.5118244608934446 + 4*p2 + -3*p3 + d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.025775895058078258 + 4*p3 + -8*p4 + 3*p5 + l + f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.025775895058078258 + 4*p3 + -8*p4 + 3*p5 + -1*l + -1*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.0356254946570997 + 2*p3 + -3*p5 + 2*d + -1*l + f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 6.118175771043662 + 5*p2 + -6*p3 + d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.949169256387742 + p3 + p6 + d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.877390121943573 + p3 + -1*p5 + d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 0.4549617829014447 + 8*p2 + -12*p3 + d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3.391180670744439 + 2*p2 + -3*p3 + d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.60364934893857 + 2*p2 + -3*p3 + -2*d + f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3.0920282698928823 + p3 + p5 + d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.2597348378269653 + p3 + -2*p6 + d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 2.476038395945161 + p3 + 2*p5 + d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 3.537681688294666 + p2 + d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.438516460516111 + 2*p2 + -2*p3 + d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + -1*l + f ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -1*l + -1*f ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + -2*l + f ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -1*f ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 3.1851703834194383 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 0.03418000447228135 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*f ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 0.03416185304806061 + 4*p3 + -8*p4 + 3*p5 + -2*d + f ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 5.821412725938084 + p3 + -2*p5 + d ), twopi ) );
        a += 0.00037*t * sin ( fmod ( ( 6.155300844095757 + 4*p2 + -5*p3 + d ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 1.9995451841935634 + 18*p2 + -16*p3 + -2*d + -1*l + f ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 0.9934452499595267 + 3*p2 + -6*p3 + -1*d ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 0.27233297343371077 + 5*p2 + -6*p3 + 2*d + -1*f ), twopi ) );
        a += 0.00064*t * sin ( fmod ( ( 1.050535493391037 + 10*p2 + -3*p3 + -1*l + f ), twopi ) );
        a += 0.00064*t * sin ( fmod ( ( 1.050535493391037 + 10*p2 + -3*p3 + -1*l + -1*f ), twopi ) );
        a += 0.00121*t * sin ( fmod ( ( 2.001499603889947 + 18*p2 + -16*p3 + f ), twopi ) );
        a += 0.00125*t * sin ( fmod ( ( 1.9994443041627983 + 18*p2 + -16*p3 + -2*l + -1*f ), twopi ) );
        a += 0.00132*t * sin ( fmod ( ( 0.19437504986658088 + p3 + d ), twopi ) );
        a += 0.01123*t * sin ( fmod ( ( 2.000561663949925 + 18*p2 + -16*p3 + -1*l + f ), twopi ) );
        a += 0.01126*t * sin ( fmod ( ( 1.9985562806393835 + 18*p2 + -16*p3 + -1*l + -1*f ), twopi ) );
        return a;
    }

    double planetary_r14 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00002*t * sin ( fmod ( ( 5.955056426487643 + 29*p2 + -34*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7818666811855963 + 28*p2 + -33*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7818666811855963 + 28*p2 + -33*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1137207841346783 + 27*p2 + -32*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1137207841346783 + 27*p2 + -32*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.107853868352416 + 26*p2 + -31*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.374272810612378 + 25*p2 + -28*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.374272810612378 + 25*p2 + -28*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.036671512969403 + 25*p2 + -30*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.89507885937961 + 25*p2 + -30*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2327298904079491 + 24*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.374322543997742 + 24*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.630518377700439 + 24*p2 + -26*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.630518377700439 + 24*p2 + -26*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.523255852393548 + 24*p2 + -28*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.523255852393548 + 24*p2 + -28*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9605630893156616 + 23*p2 + -26*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9605630893156616 + 23*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.8136128410126044 + 22*p2 + -23*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4408728125425956 + 21*p2 + -22*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.29928015895280247 + 21*p2 + -22*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.778195389602343 + 20*p2 + -20*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.778195389602343 + 20*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.941841998125386 + 20*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.941841998125386 + 20*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.250851294965556 + 20*p2 + -24*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.146695447228899 + 19*p2 + -17*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.146695447228899 + 19*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0481611559749404 + 19*p2 + -18*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.388398798948002 + 19*p2 + -20*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2468061453582087 + 19*p2 + -20*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.92602825940645 + 19*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2474449358644388 + 19*p2 + -23*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7892900900931035 + 19*p2 + -24*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7892900900931035 + 19*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7737531605935335 + 18*p2 + -15*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3892445600085683 + 18*p2 + -17*p3 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3892445600085683 + 18*p2 + -17*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6218576708929261 + 18*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.763450324482719 + 18*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0503749230998534 + 18*p2 + -20*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0503749230998534 + 18*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.412518376545938 + 17*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.412518376545938 + 17*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3972980242777292 + 17*p2 + -17*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.538890677867522 + 17*p2 + -17*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0442856438725703 + 17*p2 + -19*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0442856438725703 + 17*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.0413013478761695 + 17*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.899708694286376 + 17*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.23436734981385376 + 16*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3759600034036463 + 16*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.868970487597344 + 16*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.868970487597344 + 16*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5384660392605123 + 16*p2 + -16*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5384660392605123 + 16*p2 + -16*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5665293628362544 + 16*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.493751734025335 + 16*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.493751734025335 + 16*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.793722719791027 + 16*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.652130066201234 + 16*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0630669489220395 + 15*p2 + -14*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.204659602511833 + 15*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7120971443371227 + 15*p2 + -22*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7120971443371227 + 15*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.454354782882551 + 14*p2 + -9*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3127621292927579 + 14*p2 + -9*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.326517809751009 + 14*p2 + -11*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.184925156161216 + 14*p2 + -11*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.796212589505289 + 14*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.796212589505289 + 14*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.286334570783568 + 14*p2 + -17*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.286334570783568 + 14*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.93428997544864 + 14*p2 + -19*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.209744619287518 + 13*p2 + -12*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.209744619287518 + 13*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4433262133738074 + 13*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.286753449804047 + 13*p2 + -16*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1451607962142534 + 13*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.310085343313924 + 12*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.345313251967419 + 12*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.16849268972413095 + 12*p2 + -9*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.345313251967419 + 12*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.837299559959413 + 12*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.837299559959413 + 12*p2 + -12*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.932255087575423 + 12*p2 + -13*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.310559889839225 + 12*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.694283283790352 + 12*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.344623148781181 + 11*p2 + -8*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.344623148781181 + 11*p2 + -8*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.382265362890643 + 11*p2 + -10*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.382265362890643 + 11*p2 + -10*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.0746730393819514 + 11*p2 + -10*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2162656929717444 + 11*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.131921801201126 + 11*p2 + -12*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8913729932805337 + 11*p2 + -12*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.032965646870327 + 11*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.112327347253152 + 11*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.112327347253152 + 11*p2 + -13*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.07871242940276707 + 10*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2203050829925606 + 10*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.25243135853402 + 10*p2 + -10*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.25243135853402 + 10*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.004675962588919 + 10*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.004675962588919 + 10*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.713347515209885 + 10*p2 + -11*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.713347515209885 + 10*p2 + -11*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.985469827402881 + 10*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8438771738130868 + 10*p2 + -13*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.392660020316746 + 10*p2 + -16*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.392660020316746 + 10*p2 + -16*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.6416870886498005 + 10*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.6416870886498005 + 10*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.45745605843042 + 9*p2 + -4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3158634048406265 + 9*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5416964521763952 + 9*p2 + -8*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.683289105766188 + 9*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.003325426813725 + 9*p2 + -9*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.18946002816003965 + 9*p2 + -11*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.786060724374772 + 9*p2 + -12*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6444680707849788 + 9*p2 + -12*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0744725180475303 + 9*p2 + -12*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.795691259657718 + 9*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.937283913247511 + 9*p2 + -14*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5099333796522756 + 9*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.651526033242068 + 9*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4557641362535367 + 8*p2 + -3*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3141714826637433 + 8*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0070235709725086 + 8*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9042898260086936 + 8*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.148616224562303 + 8*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.045882479598487 + 8*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.080895163660261 + 8*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.096570148703664 + 8*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.096570148703664 + 8*p2 + -5*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.145991215374036 + 8*p2 + -7*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.270767072527138 + 8*p2 + -7*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.270767072527138 + 8*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.204831892003954 + 8*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.4923787004994242 + 8*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4692785612192623 + 8*p2 + -9*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.610871214809055 + 8*p2 + -9*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.175509313372898 + 8*p2 + -10*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0882576435802407 + 8*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0882576435802407 + 8*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.131333284675669 + 8*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.683092415657805 + 8*p2 + -13*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3578235720178398 + 8*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.23632526016874097 + 7*p2 + -2*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.135555917271312 + 7*p2 + -4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.139880843157754 + 7*p2 + -4*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9982881895679605 + 7*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2416490464844159 + 7*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.753772648313336 + 7*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9633641512355542 + 7*p2 + -6*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.032462992045753 + 7*p2 + -8*p3 + 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.271798562115067 + 7*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.402226344479852 + 7*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.074729971108833 + 7*p2 + -9*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9331373175190399 + 7*p2 + -9*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.373434869540178 + 7*p2 + -10*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2318422159503848 + 7*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5369390252029923 + 7*p2 + -11*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6785316787927855 + 7*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.919218184693044 + 6*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.919218184693044 + 6*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.328811862021514 + 6*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1872192084317208 + 6*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7268064387053976 + 6*p2 + -7*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7268064387053976 + 6*p2 + -7*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.132266835797612 + 6*p2 + -10*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.273859489387405 + 6*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.904420585162935 + 6*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6685471737409014 + 6*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7628279315731414 + 6*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6685471737409014 + 6*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.573776851053477 + 6*p2 + -12*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.573776851053477 + 6*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.123890311083907 + 5*p2 + -2*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9822976574941137 + 5*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.988721873903171 + 5*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.518691956939242 + 5*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8458928630645315 + 5*p2 + -5*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.518691956939242 + 5*p2 + -5*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.987485516654326 + 5*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.495172798098942 + 5*p2 + -6*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3535801445091492 + 5*p2 + -6*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.251004534873881 + 5*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.392597188463674 + 5*p2 + -7*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5873439764642963 + 5*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5873439764642963 + 5*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.295955523752261 + 4*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.295955523752261 + 4*p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.377992090251744 + 4*p2 + p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.23639943666195073 + 4*p2 + p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.64882165406442 + 4*p2 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.094633888929819 + 4*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.094633888929819 + 4*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2818244484668564 + 4*p2 + -3*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.1402317948770632 + 4*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.883921318537461 + 4*p2 + -4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.24079068505996848 + 4*p2 + -4*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.714331357309234 + 4*p2 + -5*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.7352936172936784 + 4*p2 + -5*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.714331357309234 + 4*p2 + -5*p3 + d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.876886270883472 + 4*p2 + -5*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5039849654922617 + 4*p2 + -5*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.3623923119024686 + 4*p2 + -5*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9873247378369496 + 4*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1576641519442992 + 4*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.128917391426743 + 4*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.6525866443335555 + 4*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.794179297923349 + 4*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.6805444094828195 + 4*p2 + -9*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5389517558930255 + 4*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.79865098900325 + 4*p2 + -9*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.79865098900325 + 4*p2 + -9*p3 + -4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.496087010059454 + 4*p2 + -10*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3544943564696605 + 4*p2 + -10*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.23639193174616718 + 3*p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9005848410725599 + 3*p2 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.085997118628008 + 3*p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.944438149892778 + 3*p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9444044650382145 + 3*p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.086030803482571 + 3*p2 + -2*p3 + d + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.063810676207898 + 3*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0614993111845314 + 3*p2 + -4*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.114469521885467 + 3*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.141290720127515 + 3*p2 + -6*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9996980665377216 + 3*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.8575043895400745 + 3*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.191759707975734 + 3*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.050167054385941 + 3*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9049453801740595 + 3*p2 + -8*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.046538033763852 + 3*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.613392300421978 + 2*p2 + 5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.754984954011771 + 2*p2 + 5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3779772549531017 + 2*p2 + 3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2363846013633088 + 2*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.64413088167181 + 2*p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9274994059312727 + 2*p2 + 2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.64413088167181 + 2*p2 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8670129178099897 + 2*p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8670129178099897 + 2*p2 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.709166561990099 + 2*p2 + -1*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.709166561990099 + 2*p2 + -1*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.8322187149772985 + 2*p2 + -2*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.867845780430725 + 2*p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.037495116846786 + 2*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3080167705861436 + 2*p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.428241349645454 + 2*p2 + -3*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.565830716034997 + 2*p2 + -3*p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.021856277115533 + 2*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4808118629510492 + 2*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.010912181542585 + 2*p2 + -3*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.708549089995693 + 2*p2 + -4*p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5242270941290168 + 2*p2 + -4*p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5669564364059005 + 2*p2 + -4*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.66581974771881 + 2*p2 + -4*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.536687382718122 + 2*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.3950947291283282 + 2*p2 + -5*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3393066928483646 + 2*p2 + -5*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.43859864002893 + 2*p2 + -6*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.580191293618723 + 2*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9050558595157105 + 2*p2 + -7*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.046648513105502 + 2*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3779803965457558 + p2 + 4*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.23638774295596238 + p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.148352164744791 + p2 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.148352164744791 + p2 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8251819134957414 + p2 + p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.710386913199727 + p2 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.710386913199727 + p2 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.710386913199727 + p2 + -1*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.568794259609934 + p2 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.886982617547142 + p2 + -2*p3 + 4*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.028575271136935 + p2 + -2*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.064754907831544 + p2 + -2*p3 + d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9231622542417504 + p2 + -2*p3 + d + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8911834675204 + p2 + -2*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7495908139306076 + p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.052520141276747 + p2 + -2*p3 + -3*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.781933893358431 + p2 + -2*p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5775383591624257 + p2 + -2*p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.719131012752218 + p2 + -2*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.1243297594946091 + p2 + -4*p3 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.501940844370642 + p2 + -4*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.265922413084403 + p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.501940844370642 + p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2116391571939245 + p2 + -5*p3 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2116391571939245 + p2 + -5*p3 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7381957337772616 + 37*p3 + -48*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.8797883873670544 + 37*p3 + -48*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.276787794308084 + 19*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.276787794308084 + 19*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.303361819934783 + 16*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.303361819934783 + 16*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.915545479849755 + 15*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.7739528262599618 + 15*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.02075703475936 + 15*p3 + -19*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.162349688349153 + 15*p3 + -19*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1528629342033048 + 14*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1528629342033048 + 14*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.2991067157167375 + 13*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1575140621269444 + 13*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9153347931140894 + 13*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9153347931140894 + 13*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.9146008991602588 + 12*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4199394910304675 + 12*p3 + -21*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4199394910304675 + 12*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5224166810925563 + 11*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5224166810925563 + 11*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9058897778323134 + 11*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9058897778323134 + 11*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.9148583097299781 + 11*p3 + -21*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.056450963319771 + 11*p3 + -21*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.042157912981464 + 10*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.183750566571257 + 10*p3 + -14*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.292919864085952 + 10*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.292919864085952 + 10*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6861875655566583 + 10*p3 + -15*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.690245988164637 + 9*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5486533345748446 + 9*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4316684611680364 + 9*p3 + -16*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.4316684611680364 + 9*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.2587983026486618 + 9*p3 + -17*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.400390956238454 + 9*p3 + -17*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.427291166905718 + 9*p3 + -18*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.568883820495511 + 9*p3 + -18*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.00868285549238 + 8*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.00868285549238 + 8*p3 + -5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.924797802283794 + 8*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.860972184230862 + 8*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.924797802283794 + 8*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.860972184230862 + 8*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.516178699813003 + 8*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.516178699813003 + 8*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9323098739173026 + 8*p3 + -14*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9323098739173026 + 8*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.9292045756138378 + 8*p3 + -16*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.070797229203631 + 8*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6435252354247348 + 7*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.836221146509556 + 7*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.836221146509556 + 7*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.685135140516023 + 7*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5435424869262293 + 7*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.175131083527358 + 7*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.033538429937565 + 7*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.935759683218478 + 7*p3 + -15*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.077352336808271 + 7*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.293157037334664 + 6*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.4336375671250865 + 6*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.434749690924457 + 6*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4207407716900582 + 6*p3 + -6*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.06910369373883749 + 6*p3 + -6*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.2106963473286307 + 6*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.816153874368899 + 6*p3 + -8*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.19307691646053 + 6*p3 + -8*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.19307691646053 + 6*p3 + -8*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.628425727927297 + 6*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4868330743375044 + 6*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.4933838101206982 + 6*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.6349764637104918 + 6*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.1330869915080735 + 6*p3 + -12*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.9914943379182812 + 6*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.665036801514682 + 5*p3 + -2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5234441479248886 + 5*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.7879683352539352 + 5*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.194154465744079 + 5*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.052561812154285625 + 5*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.05203681711528573 + 5*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.864826892921867 + 5*p3 + -6*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.047060202282782 + 5*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.979779164380119 + 5*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.121371817969912 + 5*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.34383145893416 + 5*p3 + -8*p4 + d + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5989591256396857 + 5*p3 + -10*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7405517792294782 + 5*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.1983130362578557 + 5*p3 + -11*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.1983130362578557 + 5*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.999362124649979 + 5*p3 + -13*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.999362124649979 + 5*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.954918894542587 + 4*p3 + p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.813326240952794 + 4*p3 + p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0072337001161324 + 4*p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.575999842928476 + 4*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.5136392542496684 + 4*p3 + -4*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.595033731113975 + 4*p3 + -4*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.453441077524182 + 4*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.574281932342371 + 4*p3 + -5*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.685433417285188 + 4*p3 + -7*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.685433417285188 + 4*p3 + -7*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.446546345843737 + 4*p3 + -11*p4 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.5881389994335295 + 4*p3 + -11*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3036546691866344 + 3*p3 + p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.3036546691866344 + 3*p3 + p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.8578942706000205 + 3*p3 + -4*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.879947918959004 + 3*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0388765194547895 + 3*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.0388765194547895 + 3*p3 + -7*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.2594906662646113 + 3*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.401083319854404 + 3*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.060458396818642 + 2*p3 + 2*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.060458396818642 + 2*p3 + 2*p4 + -2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.484073359724251 + 2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.7490122627785216 + 2*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6074196091887282 + 2*p3 + -1*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1529154686137897 + 2*p3 + -4*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.440692179463331 + 2*p3 + -5*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.443326055837516 + 2*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5424423974003808 + 2*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5424423974003808 + 2*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.098055789959595 + 2*p3 + -8*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.098055789959595 + 2*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3231768835002082 + p3 + 5*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.3231768835002082 + p3 + 5*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.760353071690447 + p3 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6600128372695497 + p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.894413565363699 + p3 + 4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.752820911773907 + p3 + 4*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.635518047875702 + p3 + 2*d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.4939253942859088 + p3 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8631290281272104 + p3 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.604608790421659 + p3 + d + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.642933934870792 + p3 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.787520317733265 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.929112971323058 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5770547199283812 + p3 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.486857717473224 + p3 + -2*p5 + d ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.486857717473224 + p3 + -2*p5 + d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.5668452589325486 + p3 + -2*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.413523171094628 + p3 + -2*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.827638140847023 + p3 + -2*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.0703015302011147 + p3 + -3*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.211894183790907 + p3 + -3*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.447068224785033 + p3 + -3*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.8010707049798984 + p3 + -4*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.099255878353266 + p3 + -7*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.099255878353266 + p3 + -7*p4 + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.324194061388271 + 6*p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.324194061388271 + 6*p4 ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.584140241591019 + 3*p4 + 4*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.106732485809693 + 3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.584140241591019 + 3*p4 + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5875453789616603 + 3*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5875453789616603 + 3*p4 + -2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5.332523662240046 + 2*p4 + d + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.1909310086502534 + 2*p4 + d + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.6604722079286746 + p4 + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.656426734750427 + p4 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 0.5749013326972706 + p4 + -2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 6.0979116257633805 + 2*p5 + -5*p6 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2.956331014945426 + 2*p5 + -5*p6 + -2*d + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.0945328173694944 + 2*d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.841863612950011 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0020834250230557 + 26*p2 + -29*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.143676078612849 + 26*p2 + -29*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.824681719128753 + 26*p2 + -31*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.012320679245578 + 24*p2 + -24*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.012320679245578 + 24*p2 + -24*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.46866021656023 + 23*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.46866021656023 + 23*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1233457428623348 + 22*p2 + -21*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.264938396452128 + 22*p2 + -21*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1263176980109475 + 22*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.085640381827217 + 21*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7662789541064764 + 21*p2 + -25*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6725218035481517 + 21*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.93102481348401 + 21*p2 + -26*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.12240226036029 + 20*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.309863703495554 + 19*p2 + -18*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.898435825662896 + 19*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.8757652459049154 + 19*p2 + -26*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.717583927408301 + 18*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 4*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 4*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -4*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -4*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3042178869362533 + 18*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.12804977975726 + 17*p2 + -16*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9864571261674666 + 17*p2 + -16*p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.198044787650141 + 15*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.976655365586583 + 15*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.804020685976569 + 15*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6624280323867762 + 15*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.384999421163893 + 15*p2 + -17*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2434067675740996 + 15*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.699004722987896 + 13*p2 + -10*p3 + -2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.840597376577689 + 13*p2 + -10*p3 + -2*d + -2*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.271511629986039 + 13*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.413104283575832 + 13*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.221575350618796 + 13*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.793322673329837 + 13*p2 + -18*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.93491532691963 + 13*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.8492008025924696 + 12*p2 + -13*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.657581453081863 + 12*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5159887994920698 + 12*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.035669136386716 + 12*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.177261789976509 + 12*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.935766000397051 + 12*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.393170878188805 + 12*p2 + -18*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2515782245990117 + 12*p2 + -18*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.630221131132191 + 11*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.6361050021031485 + 11*p2 + -12*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.8360256526366987 + 11*p2 + -13*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9064672987834816 + 11*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.348766734958341 + 11*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.42447384792883214 + 11*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.928612385398636 + 10*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.928612385398636 + 10*p2 + -6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.891363393969648 + 10*p2 + -11*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.891363393969648 + 10*p2 + -11*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.032956047559441 + 10*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9031770125759384 + 10*p2 + -15*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.812254634287019 + 10*p2 + -17*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6706619806972265 + 10*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2442558702551947 + 9*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.22857913988253975 + 9*p2 + -11*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.320851415303168 + 9*p2 + -12*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1792587617133747 + 9*p2 + -12*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.9028781952113637 + 9*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.841798869733078 + 9*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.450682069540946 + 9*p2 + -15*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.592274723130739 + 9*p2 + -15*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.801772361332467 + 9*p2 + -16*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6601797077426736 + 9*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7602488500391527 + 8*p2 + -5*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.901841503628946 + 8*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.031223293176377 + 8*p2 + -6*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8896306395865845 + 8*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.001850099997014 + 8*p2 + -8*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.30710656438459544 + 8*p2 + -10*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.469977399550077 + 8*p2 + -10*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3283847459602843 + 8*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7335447888848639 + 8*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.8751374424746565 + 8*p2 + -11*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.054938635522918 + 8*p2 + -11*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.790420390811645 + 8*p2 + -15*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6488277372218523 + 8*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1384035879805494 + 7*p2 + -4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.411971564891288 + 7*p2 + -6*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2703789113014947 + 7*p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.797676946242662 + 7*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.17471618477089237 + 7*p2 + -7*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4920509276659 + 7*p2 + -8*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4920509276659 + 7*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3397957086098232 + 7*p2 + -8*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.480185306746217 + 7*p2 + -9*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.33859265315642356 + 7*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.433767402624801 + 7*p2 + -9*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.2921747490350083 + 7*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.0670501733342075 + 7*p2 + -10*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.340458801684239 + 7*p2 + -10*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.638258048766724 + 7*p2 + -12*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.8201168189684775 + 7*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.938434085224575 + 7*p2 + -12*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9012627269540343 + 6*p2 + -2*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.1442148447563065 + 6*p2 + -3*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.002622191166513 + 6*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.1841713654539125 + 6*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5343630937599738 + 6*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.411493519209166 + 6*p2 + -5*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2699008656193733 + 6*p2 + -5*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.1229427718329985 + 6*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.85694865121129 + 6*p2 + -6*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.998541304801083 + 6*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.032118987650185 + 6*p2 + -7*p3 + 2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5959576914233478 + 6*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5959576914233478 + 6*p2 + -7*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.671903982487896 + 6*p2 + -7*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5303113288981023 + 6*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.652103396656946 + 6*p2 + -11*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.623330920311168 + 6*p2 + -13*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.76492357390096 + 6*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.68524091596701 + 5*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.770956461996771 + 5*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.742224860348757 + 5*p2 + -4*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.600632206758964 + 5*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5314887110148644 + 5*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.0266096643367058 + 5*p2 + -6*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.168202317926499 + 5*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.3173204311951414 + 5*p2 + -6*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.504772475047395 + 5*p2 + -7*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1615951740151993 + 5*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3631798214576016 + 5*p2 + -7*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.020002520425406217 + 5*p2 + -7*p3 + d + -3*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.79858888077683 + 5*p2 + -7*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.014268083631687 + 5*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.15586073722148 + 5*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7382954175725 + 5*p2 + -9*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5967027639827073 + 5*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2491593727886727 + 5*p2 + -11*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.390752026378466 + 5*p2 + -11*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6458555990419977 + 4*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3144308385905896 + 4*p2 + p3 + 4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.694310693957924 + 4*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3689573848804786 + 4*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.552718040368131 + 4*p2 + -2*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03397806987782561 + 4*p2 + -3*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03397806987782561 + 4*p2 + -3*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1648336324422752 + 4*p2 + -4*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4432209615215956 + 4*p2 + -5*p3 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.32274453994953944 + 4*p2 + -6*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.889480366737988 + 4*p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.144469488294172 + 4*p2 + -8*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0028768347043788 + 4*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0091863744832636 + 4*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2487408428340445 + 4*p2 + -10*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.390333496423838 + 4*p2 + -10*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.390333496423838 + 4*p2 + -10*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2487408428340445 + 4*p2 + -10*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.056358818433582 + 3*p2 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0179069205891698 + 3*p2 + -4*p3 + d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.7469579847539739 + 3*p2 + -5*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.33741861266019 + 3*p2 + -5*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.2709058601959375 + 3*p2 + -6*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1293132066061453 + 3*p2 + -6*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.401705346701499 + 3*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7993112470592796 + 3*p2 + -8*p3 + -4*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.7993112470592796 + 3*p2 + -8*p3 + -4*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.389962264891938 + 3*p2 + -9*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2483696113021452 + 3*p2 + -9*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.141680801215335 + 3*p2 + -9*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0000881476255423 + 3*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5066436170435082 + 2*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.6482362706333005 + 2*p2 + 4*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3454013571013786 + 2*p2 + 3*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.2090973021629035 + 2*p2 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.965570289901659 + 2*p2 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8239776363118647 + 2*p2 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.530967240627636 + 2*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.389374587037842 + 2*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.425992484405942 + 2*p2 + -2*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.991649872249583 + 2*p2 + -2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5193450761419713 + 2*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.660937729731765 + 2*p2 + -4*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.358252424910005 + 2*p2 + -4*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2166597713202114 + 2*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.437581130071651 + 2*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4069132346565243 + 2*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.389695927648084 + 2*p2 + -8*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.248103274058291 + 2*p2 + -8*p3 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.631535870661085 + p2 + 6*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.773128524250878 + p2 + 6*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.808817025293975 + p2 + 2*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.38402776237604075 + p2 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.914898311763116 + p2 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.110674844022414 + p2 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8961958616025698 + p2 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.909514669152413 + p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5728127056797256 + p2 + -2*p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.984510568951034 + p2 + -2*p3 + d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.126103222540827 + p2 + -2*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1293076300508553 + p2 + -2*p3 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.182928490998618 + p2 + -2*p3 + -1*d + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.31796547939172853 + p2 + -3*p3 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.786250250134905 + p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.786250250134905 + p2 + -3*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6331292072301804 + p2 + -3*p3 + -1*d + l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.49153655364038745 + p2 + -3*p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.143809213241509 + 18*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.285401866831302 + 18*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6578491610941688 + 17*p3 + -20*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.799441814683961 + 17*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0166445154428858 + 16*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5190153664496365 + 15*p3 + -20*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.417299531498851 + 14*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2757068779090577 + 14*p3 + -12*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.53937589639621 + 14*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9105398670567184 + 13*p3 + -12*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.0888974897823385 + 13*p3 + -21*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.230490143372131 + 13*p3 + -21*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.162072513067303 + 12*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5320590931127327 + 12*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.673651746702526 + 12*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0290574716159948 + 12*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.170650125205787 + 12*p3 + -16*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.170518327352312 + 12*p3 + -16*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.312110980942106 + 12*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1592429937822866 + 12*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.017650340192493456 + 12*p3 + -18*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.057943568896077 + 12*p3 + -22*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.676968221347166 + 11*p3 + -14*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5353755677573724 + 11*p3 + -14*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1719191286099628 + 11*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.313511782199756 + 11*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.795384107204317 + 11*p3 + -18*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6537914536145237 + 11*p3 + -18*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.564356785481688 + 11*p3 + -20*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4227641318918949 + 11*p3 + -20*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.059857671486739 + 11*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.291996044316237 + 10*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.885491782795039 + 10*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.7438991292052455 + 10*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5329675454867124 + 10*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.670965693482023 + 10*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.674560199076506 + 10*p3 + -11*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.670965693482023 + 10*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.049971236942184 + 10*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.187279256256306 + 10*p3 + -12*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.187279256256306 + 10*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5257643801341735 + 10*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6673570337239667 + 10*p3 + -15*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.581209169638486 + 10*p3 + -17*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4396165160486936 + 10*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.069052598083338 + 10*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.683102189501616 + 9*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5415095359118234 + 9*p3 + -10*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.291778244222222 + 9*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.291778244222222 + 9*p3 + -13*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5264358082974157 + 9*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.668028461887209 + 9*p3 + -14*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4415950212887543 + 9*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1572273045308417 + 9*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.3789321330851845 + 8*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2822548296637648 + 8*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.2822548296637648 + 8*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6900101856843763 + 8*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.190053291067742 + 8*p3 + -8*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.04846063747794936 + 8*p3 + -8*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.189479094740469 + 8*p3 + -10*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.991783215404436 + 8*p3 + -14*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.850190561814643 + 8*p3 + -14*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.671267618445985 + 7*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1123651954029707 + 7*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.253957848992765 + 7*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6738765281135497 + 7*p3 + -13*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4473598438080915 + 7*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.596695991191892 + 7*p3 + -16*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.596695991191892 + 7*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.753394260931503 + 6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9437911733356965 + 6*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9437911733356965 + 6*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.7068377946641125 + 6*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.166001100175568 + 6*p3 + -8*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.3059990209328625 + 6*p3 + -8*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6612333545137858 + 6*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.6612333545137858 + 6*p3 + -9*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5294493022822255 + 6*p3 + -9*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.671041955872019 + 6*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.1935416891420205 + 6*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.029919838799405 + 6*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.583377566701165 + 6*p3 + -13*p4 + -1*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2821736803518635 + 6*p3 + -14*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.423766333941657 + 6*p3 + -14*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.573434068388386 + 6*p3 + -15*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4318414147985925 + 6*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.809223670013056 + 5*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3577844681442784 + 5*p3 + -5*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.1162262297708665 + 5*p3 + -6*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.111554656000028 + 5*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.2626293343500565 + 5*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.1210366807602625 + 5*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.173464992223404 + 5*p3 + -9*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.444639399103008 + 5*p3 + -12*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.586232052692801 + 5*p3 + -12*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.574556838696194 + 5*p3 + -14*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.4329641851064003 + 5*p3 + -14*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.3283245660943575 + 4*p3 + -2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.206129527306179 + 4*p3 + -2*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4815784285551583 + 4*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3399857749653654 + 4*p3 + -3*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7094999283755468 + 4*p3 + -3*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5679072747857538 + 4*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.682353609287119 + 4*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5407609556973263 + 4*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.085254131965433 + 4*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.085254131965433 + 4*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.5324372974633234 + 4*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.6740299510531162 + 4*p3 + -9*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.445734418675709 + 4*p3 + -11*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.575608574103445 + 4*p3 + -13*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.434015920513652 + 4*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8307681888325993 + 3*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.972360842422392 + 3*p3 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.095484387874315 + 3*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.9538917342845217 + 3*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.1026215287912287 + 3*p3 + -1*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.762709781281098 + 3*p3 + -2*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.6211171276913048 + 3*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1901604542838147 + 3*p3 + -3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.04856780069402181 + 3*p3 + -3*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.694669533652134 + 3*p3 + -4*p4 + d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.1688693742682945 + 3*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.034604311010075 + 3*p3 + -5*p4 + 3*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.176196964599868 + 3*p3 + -5*p4 + l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.9825378402941385 + 3*p3 + -7*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.840945186704345 + 3*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9536439060290554 + 3*p3 + -9*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.095236559618849 + 3*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.447027533118512 + 3*p3 + -10*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8087176990629033 + 2*p3 + 3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5422050411204262 + 2*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.6837976947102185 + 2*p3 + p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.057441629199835 + 2*p3 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.915848975610044 + 2*p3 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.4437204832518327 + 2*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.2602376671844649 + 2*p3 + -5*p6 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.6627846116512752 + 2*p3 + -3*p5 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.7098564991417295 + 2*p3 + -1*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.1914710220191376 + 2*p3 + -2*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.049878368429344344 + 2*p3 + -2*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.5630132140268698 + 2*p3 + -3*p4 + 2*d + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.061967408489916 + 2*p3 + -4*p4 + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.113485539246459 + 2*p3 + -5*p4 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.113485539246459 + 2*p3 + -5*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.31948129784708557 + 2*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.23285345122067386 + 2*p3 + -7*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9561800439651287 + 2*p3 + -8*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.097772697554921 + 2*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8146474551965537 + p3 + 4*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.956240108786347 + p3 + 4*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.2641145840485533 + p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.451710975128264 + p3 + 3*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4618942561853165 + p3 + p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.42163510389373 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.5335648056550615 + p3 + -1*p5 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.300307327709184 + p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.300307327709184 + p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.256152417495905 + p3 + -3*p5 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.114559763906112 + p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.08498496820150948 + p3 + -1*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.03263381728793957 + p3 + -1*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.4644728056222127 + p3 + -6*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.3228801520324193 + p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.9577728314404985 + p3 + -7*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6.099365485030291 + p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.335362606303024 + 8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.8169488463482333 + 5*p4 + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.958541499938026 + 5*p4 + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 5.452906002067103 + 4*p4 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.3113133484773107 + 4*p4 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 0.961488620421361 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.103081274011154 + 2*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.221147910986665 + 2*p4 ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.0795552573968716 + 2*p4 + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2.715603685337305 + 2*p4 + -2*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2495943088382697 + 31*p2 + -37*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.391186962428063 + 31*p2 + -37*p3 + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1297147983687124 + 31*p2 + -39*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.2713074519585055 + 31*p2 + -39*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9108892649763343 + 26*p2 + -28*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.552839349249461 + 23*p2 + -23*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1078692102532002 + 21*p2 + -20*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7181394742075273 + 21*p2 + -21*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.619057315603051 + 20*p2 + -20*p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.47746466201325793 + 20*p2 + -20*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.03047802908746 + 20*p2 + -21*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.555491568577424 + 20*p2 + -21*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.784744729122135 + 20*p2 + -24*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.510011387371523 + 19*p2 + -18*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.766461034439042 + 19*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7771443438284753 + 19*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2053371223308236 + 18*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7737531605935335 + 18*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7719715199947811 + 18*p2 + -15*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -4*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.239405076665127 + 18*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8990870080068145 + 18*p2 + -23*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.268858929550883 + 17*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.34828289569642124 + 17*p2 + -19*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0925312652849906 + 17*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.220430938228262 + 16*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0718979828679136 + 16*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4860986397882654 + 15*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8829271789955246 + 15*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.890780453999482 + 15*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.447847339763124 + 15*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.340620742743874 + 14*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.213032836594908 + 14*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.792697321858847 + 14*p2 + -19*p3 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.93428997544864 + 14*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.5877506381800113 + 12*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4864100235234545 + 12*p2 + -14*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.7373047771873855 + 12*p2 + -15*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.058580954640588 + 12*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.268219440912953 + 11*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.590274584306271 + 11*p2 + -12*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.7368764733889455 + 11*p2 + -14*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.960830299224142 + 11*p2 + -14*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2733300970320083 + 11*p2 + -14*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7945283467771143 + 11*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.7711531776001035 + 10*p2 + -3*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6295605240103113 + 10*p2 + -3*p3 + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.209189630080334 + 10*p2 + -8*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.01742676351531298 + 10*p2 + -10*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.01742676351531298 + 10*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.457543516422578 + 10*p2 + -11*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.596299635417079 + 10*p2 + -11*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.925156991043855 + 10*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7577395901735606 + 10*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.936706907396802 + 10*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7951142538070086 + 10*p2 + -15*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.591696844615404 + 10*p2 + -16*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4501041910256105 + 10*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.377729767265169 + 9*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.905312414417437 + 9*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.603107466697409 + 9*p2 + -10*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4193422563570683 + 8*p2 + -3*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5214005589003623 + 8*p2 + -7*p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.2790525420437895 + 8*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.088987233699158 + 8*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.871711710218842 + 8*p2 + -9*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7301190566290492 + 8*p2 + -9*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4159563176081993 + 7*p2 + -2*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.000050299475724 + 7*p2 + -6*p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.8013995505059235 + 7*p2 + -6*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6598068969161308 + 7*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.3493070973930745 + 7*p2 + -8*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2077144438032814 + 7*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8350034132938053 + 7*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.887411802508524 + 6*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3461317773933383 + 6*p2 + -7*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0528346241130055 + 6*p2 + -8*p3 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.206421529388353 + 6*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.789961352221737 + 6*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.939018421458143 + 6*p2 + -11*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.474337598084043 + 5*p2 + p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9155327134512656 + 5*p2 + -1*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8668958062171814 + 5*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5493404876979877 + 5*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.672755869197478 + 5*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.531152394566322 + 5*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3591767427835437 + 5*p2 + -8*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.21758408919375105 + 5*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.628216296915375 + 5*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.6668289140889465 + 5*p2 + -10*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.765285206121973 + 5*p2 + -12*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9149558821334813 + 4*p2 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.648105694510302 + 4*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.56225505149812 + 4*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.7807027381040745 + 4*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5428192139858864 + 4*p2 + -5*p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.210445884082653 + 4*p2 + -6*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.610158422342541 + 4*p2 + -6*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8502575739596028 + 4*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.3491056609024445 + 4*p2 + -7*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.490698314492238 + 4*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6302047080405888 + 3*p2 + 4*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.934258725556712 + 3*p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.85333811408264 + 3*p2 + -2*p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.382843249904296 + 3*p2 + -2*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.5777565423155577 + 3*p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.129621274215755 + 3*p2 + -2*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9880286206259623 + 3*p2 + -2*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.3673010759186526 + 3*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8888136424654094 + 3*p2 + -4*p3 + 4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71437952839659 + 3*p2 + -4*p3 + d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8017730169725842 + 3*p2 + -4*p3 + d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.862883311263479 + 3*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8314305242870978 + 3*p2 + -7*p3 + -2*d + l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.9730231778768914 + 3*p2 + -7*p3 + -2*d + -1*l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.859268210783824 + 2*p2 + p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.328306074102603 + 2*p2 + p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7176755571940305 + 2*p2 + p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5627550628338664 + 2*p2 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.410317690892098 + 2*p2 + -3*p3 + d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.26280748997510134 + 2*p2 + -3*p3 + d + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2687250373023047 + 2*p2 + -3*p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3426933042339842 + 2*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.16955458203431 + 2*p2 + -5*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.537041867587518 + p2 + 5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.15702448027512664 + p2 + p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.27203853638889935 + p2 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.4136311899786924 + p2 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.8185053394734787 + p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.159248770365452 + p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0238447052373796 + p2 + -2*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.3210288897931457 + p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.639251115616159 + p2 + -3*p3 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.780843769205952 + p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.14590219508386756 + p2 + -6*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.412948425673629 + 15*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5231840938663415 + 14*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0237970492504838 + 14*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8122743140159838 + 14*p3 + -23*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0214502880365686 + 13*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6573246896539449 + 13*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5223096754127758 + 13*p3 + -18*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.915079127873622 + 12*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.411847122915621 + 12*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.024963984886684 + 12*p3 + -14*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.673651746702526 + 12*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.5237623129492107 + 12*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.1767593096848605 + 11*p3 + -13*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1190000560561106 + 11*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.5549393209071436 + 10*p3 + -11*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.673282592569096 + 10*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.068955208711076 + 10*p3 + -18*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9273625551212827 + 10*p3 + -18*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.393334590072642 + 9*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.2517419364828488 + 9*p3 + -7*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.6833761806992293 + 9*p3 + -10*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5447265182907826 + 9*p3 + -12*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5447265182907826 + 9*p3 + -12*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.019792033717615693 + 9*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.574013875264216 + 9*p3 + -16*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4324212216744217 + 9*p3 + -16*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.646350442376521 + 8*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.194862388285321 + 8*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.194862388285321 + 8*p3 + -10*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.808487856197048 + 8*p3 + -11*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6668952026072557 + 8*p3 + -11*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.2908619293682917 + 7*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7701370129163263 + 7*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7377615128559984 + 7*p3 + -8*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.378253374539084 + 7*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.9434091122641186 + 7*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.517898223687018 + 6*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.7666631095731569 + 6*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.908255763162949 + 6*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.7512209684486035 + 6*p3 + -7*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.0949461028380503 + 6*p3 + -8*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.66670393151787 + 6*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.441832909665801 + 6*p3 + -13*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.583425563255594 + 6*p3 + -13*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.31442281007603046 + 5*p3 + 4*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.8090173720954703 + 5*p3 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.03667652343433404 + 5*p3 + -5*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.1782691770241267 + 5*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.433887298246097 + 5*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4760425847353664 + 5*p3 + -8*p4 + d + -1*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.745629657151865 + 4*p3 + -5*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.691741560800671 + 4*p3 + -7*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5501489072108785 + 4*p3 + -7*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.746120435239208 + 4*p3 + -8*p4 + 3*p5 + 4*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6045070122313165 + 4*p3 + -8*p4 + 3*p5 + -4*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.214360325525659 + 4*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.9516151353065374 + 4*p3 + -10*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.09320778889633 + 4*p3 + -10*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.0317960592469823 + 4*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.1875061405607488 + 3*p3 + 5*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.824915759283129 + 3*p3 + 4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.7162649735942521 + 3*p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.212595797651892 + 3*p3 + -1*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.215599526291208 + 3*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.047362152741694 + 3*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.047362152741694 + 3*p3 + -3*p4 + 2*d + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.1940298492354864 + 3*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.715649438458657 + 3*p3 + -4*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.5740567848688634 + 3*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.685659611956247 + 3*p3 + -6*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.485582562925084 + 3*p3 + -8*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.3439899093352908 + 3*p3 + -8*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.753415196384211 + 2*p3 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.747585298578724 + 2*p3 + -3*p5 + 4*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.871882386423054 + 2*p3 + -4*p5 + 5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.082595637950479 + 2*p3 + -2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.039371337294363 + 2*p3 + -2*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 6.180963990884155 + 2*p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.696681898279683 + 2*p3 + -3*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.802947483019518 + 2*p3 + -5*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.6890291446101475 + 2*p3 + -5*p4 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.6613548294297247 + 2*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.4376016994618743 + 2*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.2893272698553297 + p3 + 5*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.2893272698553297 + p3 + 5*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.220173319132352 + p3 + p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.078580665542558 + p3 + p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.519544043676699 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9061180499018409 + p3 + -2*d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.4113051811862434 + p3 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 5.481154330543557 + p3 + -2*p5 ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2.1406822813536364 + p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.790388791853868 + p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.6029283534245712 + p3 + -5*p4 + -2*d + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0377650937871197 + 2*p4 + 2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.0377650937871197 + 2*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.9992844235049989 + 2*p4 + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.1408770770947925 + 2*p4 + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.8015579924087386 + 2*p5 + -2*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.048575314108122 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.1056437409239823 + 3*p1 + -1*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.391533410284584 + 30*p2 + -36*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.354600838550665 + 25*p2 + -29*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.11889549383728293 + 24*p2 + -27*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4676368960265196 + 23*p2 + -25*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.7428400719134522 + 22*p2 + -23*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.637528318108148 + 21*p2 + -22*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.1673469150634626 + 20*p2 + -19*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.970555082286696 + 20*p2 + -19*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.603663686133386 + 19*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.030945079195293 + 19*p2 + -20*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5092151766650799 + 19*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -2*l + 2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.607619142813815 + 18*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.790011609205878 + 18*p2 + -23*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4860689691909814 + 17*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1627100903413727 + 16*p2 + -14*p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1627100903413727 + 16*p2 + -14*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.3211554261639153 + 16*p2 + -15*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.34775859878912213 + 16*p2 + -18*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.805969495124396 + 15*p2 + -16*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.6181462367368769 + 15*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.933647170685131 + 15*p2 + -20*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.912953848941786 + 14*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8910148517180247 + 14*p2 + -15*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5343671165155703 + 14*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.705078651816078 + 14*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.7983671814702427 + 13*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.794608980988557 + 13*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5103737262225536 + 13*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9591275475075798 + 13*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.93491532691963 + 13*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.251771956145983 + 13*p2 + -19*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.697481757180922 + 13*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.385277809677903 + 12*p2 + -11*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.2436851560881093 + 12*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.812410649725514 + 11*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.032965646870327 + 11*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.343766890250152 + 10*p2 + -7*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.529166933504203 + 10*p2 + -13*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.63475496443178 + 10*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.7711840529312313 + 10*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.102259066397173 + 9*p2 + -7*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.5200446126044875 + 9*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.172317612773143 + 9*p2 + -8*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.713600587951424 + 9*p2 + -10*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.7462959898670092 + 9*p2 + -12*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.392343068524584 + 9*p2 + -15*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.737583472275662 + 8*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.348439660256517 + 8*p2 + -9*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.391987370423027 + 8*p2 + -14*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.3373717953446535 + 7*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.407043278682432 + 7*p2 + -6*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.1500464793927281 + 7*p2 + -9*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.902707361470861 + 6*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.378081808673612 + 6*p2 + -5*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2364891550838197 + 6*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5725502081602254 + 6*p2 + -7*p3 + d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.16229612373775 + 6*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.260004193120449 + 5*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.034093478632965 + 5*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.065612737158899 + 5*p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.3623186845029847 + 5*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.448836592383153 + 4*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.687437395834012 + 4*p2 + -5*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.270847549202288 + 4*p2 + -5*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.32848126266791955 + 3*p2 + 2*p3 + 4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.377984061737185 + 3*p2 + 2*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4225695276802977 + 3*p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.475367682910254 + 3*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5567999994260618 + 3*p2 + -4*p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.550630111482286 + 3*p2 + -4*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.162050713448286 + 3*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.4799097192573267 + 2*p2 + 3*p3 + 2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.924956793280334 + 2*p2 + 2*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.840414972674222 + 2*p2 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.0981790102047855 + 2*p2 + -1*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.7103837716070736 + 2*p2 + -1*p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.2583686025868208 + 2*p2 + -1*p3 + -4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8879744881610505 + 2*p2 + -3*p3 + 4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.8000174072746367 + 2*p2 + -7*p3 + -4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9258153207393898 + p2 + 3*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.327785948988875 + p2 + -1*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.356346874432678 + p2 + -4*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.20272226154716896 + p2 + -1*p3 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.344314915136962 + p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.1657094556575585 + p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8517672837625778 + p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.399076897844628 + p2 + -7*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.7944260874795805 + 18*p3 + -21*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.306075981454559 + 15*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.308422227568015 + 14*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.528017085098039 + 13*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.026687838090562 + 13*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.310350118259768 + 13*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.912678942587963 + 12*p3 + -11*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.170650125205787 + 12*p3 + -16*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6653549665390037 + 12*p3 + -17*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.414468939521333 + 12*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.039764551476521 + 12*p3 + -26*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.918125774615903 + 11*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5248964278971566 + 11*p3 + -16*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4227643064248203 + 11*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.1808684958791225 + 10*p3 + -10*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.392696314666871 + 9*p3 + -9*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.500521368089996 + 9*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.294135668941208 + 9*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.4272913414386434 + 9*p3 + -18*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.6910214294529817 + 8*p3 + -7*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.6857084641786693 + 8*p3 + -9*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.295320389939144 + 8*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.7667655604002492 + 7*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.837993179299105 + 6*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.6645475687287146 + 6*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5638472898797644 + 5*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.37524947986516 + 5*p3 + -5*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5827485160454788 + 5*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9800627633869351 + 5*p3 + -9*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.109542640438329 + 4*p3 + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.109542640438329 + 4*p3 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.9428668554621575 + 4*p3 + -3*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.723682465378936 + 4*p3 + -5*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5481519014807466 + 4*p3 + -7*p4 + -2*d + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5481519014807466 + 4*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.77682532313616 + 4*p3 + -11*p4 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5615314124952933 + 3*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.774875956396292 + 3*p3 + -7*p4 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.5364519038087606 + 3*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.459800733747549 + 3*p3 + -8*p4 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.31820808015775576 + 3*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.398100901228597 + 2*p3 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.813487883936479 + 2*p3 + -3*p5 + -2*d + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.065256672994859 + p3 + d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.1119405313010107 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.9425640238403032 + p3 + -1*d + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 6.229568268959545 + p3 + -1*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.3231337483727341 + p3 + -6*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.81609677660741 + 5*p4 ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2.5568953113998543 + 2*p5 + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 5.698487964989647 + 2*p5 + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 0.9075706874382757 + p6 + 2*d + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.050931708626189 + p6 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.283600678544928 + 34*p2 + -42*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.769932992425085 + 29*p2 + -34*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.178167598861661 + 22*p2 + -25*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.825790011702086 + 19*p2 + -19*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7737531605935335 + 18*p2 + -15*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 4*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.7907125334334792 + 17*p2 + -22*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.097313309899163 + 14*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.699073838026275 + 14*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.689252529757769 + 12*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.0318967902397724 + 11*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.7567524489452655 + 11*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.680332675549602 + 11*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.6957839093828992 + 10*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.6706619806972265 + 10*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.9347814261727352 + 9*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.003325426813725 + 9*p2 + -9*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.196292345039796 + 9*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.6032386984605256 + 9*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.0608875732817076 + 8*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.713817183311597 + 8*p2 + -9*p3 + d + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.821617968159801 + 8*p2 + -11*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.9085269873287105 + 7*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.391597289335206 + 7*p2 + -13*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.920455789167316 + 6*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.20125932656814732 + 6*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.26560930951491 + 6*p2 + -9*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.391180853775681 + 6*p2 + -12*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.1895966874404708 + 5*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.8113398647344661 + 5*p2 + -9*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.390752026378466 + 5*p2 + -11*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.5048104977301384 + 4*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.570143782180843 + 4*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.034099578787031 + 4*p2 + -5*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.183346863416954 + 4*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.9244860779810713 + 3*p2 + p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.3397171772918004 + 3*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.079612712722529 + 3*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4612023906731921 + 3*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.862082911766833 + 3*p2 + -2*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.90255429609546 + 3*p2 + -4*p3 + -1*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7326422791286575 + 2*p2 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.05833117252967809 + 2*p2 + -1*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.267657078831326 + 2*p2 + -1*p3 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.710383946139999 + 2*p2 + -1*p3 + -1*d + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.735277568762877 + 2*p2 + -3*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1645154589196363 + p2 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.618226887944952 + p2 + -1*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.442987470460945 + p2 + -2*p3 + d + -1*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7724715653237941 + p2 + -2*p3 + -1*l + 2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.475843442667714 + p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.8007771490980296 + p2 + -6*p3 + -4*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6273963072395217 + 12*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.9200977966427817 + 12*p3 + -20*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.519123785389452 + 11*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.9242563926515086 + 11*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.512961517406169 + 10*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.91543027112249 + 10*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.2618344774154313 + 10*p3 + -19*p4 + 3*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.403427131005224 + 10*p3 + -19*p4 + 3*p6 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4252037531203325 + 10*p3 + -19*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.7897365368174472 + 9*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.191989201775738 + 9*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1572273045308417 + 9*p3 + -17*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4272913414386434 + 9*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.9223937687754635 + 9*p3 + -19*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.283544287413455 + 8*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.2551402670694072 + 8*p3 + -6*p4 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4290633742281929 + 8*p3 + -17*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.7173219704842095 + 7*p3 + -6*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1856259143542087 + 7*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.770360947157674 + 7*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.1616354911209203 + 7*p3 + -13*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.05774945428998838 + 7*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.40800649190334043 + 6*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.05974314389454149 + 6*p3 + -6*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.6008032830189265 + 6*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1099225986164885 + 6*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.5335649546930369 + 6*p3 + -11*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.067576041037833 + 6*p3 + -16*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.7498760177270163 + 5*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.5547293577981294 + 5*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.201315045062869 + 5*p3 + -7*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.331186914565945 + 5*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.179541181481297 + 5*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.687320118206594 + 4*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.6134593295635713 + 4*p3 + -8*p4 + 3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.75502702494506 + 4*p3 + -8*p4 + 3*p5 + -2*d + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.2744282581973634 + 3*p3 + p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.095484387874315 + 3*p3 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.551630027607387 + 3*p3 + -5*p4 + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.410037374017594 + 3*p3 + -5*p4 + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.2406664686071265 + 3*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.4351074494278495 + 3*p3 + -12*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.943952990852306 + 2*p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.7050234824150817 + 2*p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.6249285947084435 + 2*p3 + -3*p5 + 2*d + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.959541573599419 + 2*p3 + -4*p5 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.690896131809322 + 2*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.109032863757088 + 2*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.814329979805616 + p3 + 4*p4 ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 5.401019108734564 + p3 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.698006769216555 + p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.041696473422187 + p3 + p4 + 2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.606699869398472 + p3 + p5 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1851146989179826 + p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.1046229063428075 + p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.110848529777938 + p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 6.1033017260923135 + 2*p5 + -5*p6 + 2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2.961702614784289 + 2*p5 + -5*p6 + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.6997173409214854 + 23*p2 + -24*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.932736457881439 + 19*p2 + -18*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.7951908652628548 + 18*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + -1*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.791393386374682 + 16*p2 + -21*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.968217256245233 + 15*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.5782970707849007 + 12*p2 + -8*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.2515782245990117 + 12*p2 + -18*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.218414376312191 + 10*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3172034941352573 + 9*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.6726921561814625 + 8*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.241551325042938 + 8*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.844128501225374 + 8*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.7991810539953974 + 7*p2 + -11*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.004817325760013 + 5*p2 + -6*p3 + 2*d + l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.6555221136024847 + 5*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.8632246721702195 + 5*p2 + -6*p3 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.212737692920079 + 5*p2 + -6*p3 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.229520272405115 + 5*p2 + -7*p3 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.0879276188153217 + 5*p2 + -7*p3 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.287077906511993 + 4*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.660479580803116 + 4*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.8625595271922846 + 3*p2 + -2*p3 + -1*d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.576621388668378 + 2*p2 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.6680153804161355 + 2*p2 + -3*p3 + d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.0184504161182413 + 2*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 6.2028277304238895 + 2*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.0761303978056833 + p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.421065585962171 + 11*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.393785932217208 + 10*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.9278582286288495 + 10*p3 + -18*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.575841384029028 + 8*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.2956060833410623 + 7*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.184455164488603 + 7*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.4305629611215067 + 7*p3 + -16*p4 + -2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.311465192122234 + 6*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.7109965482091316 + 5*p3 + -4*p4 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.9606138614002614 + 5*p3 + -9*p4 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.102206514990055 + 5*p3 + -9*p4 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.0186169460238315 + 4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.0717660274781464 + 4*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.272361264764226 + 3*p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.967763985740173 + 3*p3 + -2*p5 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 5.183991430506349 + 3*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2.6157472901783274 + 2*p3 + -3*p5 ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.3274724708585837 + p3 + p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.2846907857007732 + p3 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.426283439290566 + p3 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.439074957378433 + p3 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.3010658308054674 + 6*p4 + 2*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.1594956919630254 + 6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.6268843936715949 + p4 + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.7684770472613884 + p4 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.633278275344934 + 20*p2 + -21*p3 + -2*d + 2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.9625386104993607 + 19*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.7737531605935335 + 18*p2 + -15*p3 + -2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.904899503509682 + 16*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.276413753252749 + 10*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.6181254588204612 + 9*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.292700127133125 + 9*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.0547872899818203 + 7*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.157410423562642 + 7*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.970998604442895 + 6*p2 + -8*p3 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.8285249001483777 + 5*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.9498303446168145 + 4*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.872245763973319 + 4*p2 + -6*p3 + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.013838417563113 + 4*p2 + -6*p3 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2.8377224532371708 + p2 + p3 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.72253248493143 + p2 + -2*p3 + d + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.30442730944985896 + p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.006617275319278 + 11*p3 + -10*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.488659229330499 + 9*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.2195930141526965 + 7*p3 + -7*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.329508780490152 + 6*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.572842742339493 + 5*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.102691209919968 + 5*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.225967463183122 + 4*p3 + -8*p4 + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.0843748095933288 + 4*p3 + -8*p4 + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.711534816248763 + 3*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.2605408308755363 + 3*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.917323089194594 + 2*p3 ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 6.224065420360932 + 2*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 0.6525916972900697 + p3 + d + l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.7941843508798625 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 5.450753836566469 + p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.763080148646687 + 3*p4 + 2*d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 1.0980707572995787 + p6 + l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.239663410889372 + p6 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.3574472790311096 + 16*p2 + -13*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.6214047664503501 + 12*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.242353295335912 + 11*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.2383065749322384 + 10*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.118127233893822 + 8*p2 + -7*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.216859279450347 + 8*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.351282444043849 + 7*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.8996909004263216 + 2*p2 + -2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.311636941018947 + p2 + p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.3195406390416535 + p2 + -1*p3 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.004332954401001122 + p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.2117770467031486 + 8*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.4971582846560114 + 8*p3 + -13*p4 + -2*d ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 6.01803296735443 + 8*p3 + -15*p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.2600741383318697 + 6*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.426923792094807 + 6*p3 + -6*p4 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.0993696483255464 + 4*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 5.831672993011783 + 2*p3 + -3*p4 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.69008033942199 + 2*p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.5962858218210396 + 2*p3 + -3*p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.065570815263584 + 2*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 0.4893028812636851 + p3 + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.6308955348534777 + p3 + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 3.8344379266161592 + p3 + -2*d + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2.5993876209676836 + p3 + -2*p4 ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.0746875341130595 + p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.9665650935820285 + 9*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 6.213753317008449 + 7*p2 + -7*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.07632412085433803 + 6*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 6.1144472241626255 + 6*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 6.00851045095555 + 4*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.6645672739526288 + 4*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.5113514681678373 + 2*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.703323225149371 + p2 + 5*p3 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.8950971938350727 + 10*p3 + -9*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.2618344774154313 + 10*p3 + -19*p4 + 3*p6 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.403427131005224 + 10*p3 + -19*p4 + 3*p6 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.894894386575991 + 9*p3 + -8*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.264221564233384 + 7*p3 + -5*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.1568035385884574 + 7*p3 + -9*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.7073505554017157 + 6*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.2228705254634333 + 5*p3 + -3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.5369510849714647 + 3*p3 + -4*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.184635623034943 + 3*p3 + -7*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.652134280486389 + 2*p3 + -2*p5 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.719420039276349 + 2*p3 + -5*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.7192680210985 + 2*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.70673620800333 + p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.295064001072027 + p3 + p4 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.5029859135334702 + p3 ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.190793659736438 + p3 + -1*p4 + -2*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 5.2053975447162095 + p3 + -3*p4 + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2.063804891126416 + p3 + -3*p4 + -1*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.622491608470517 + p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 0.9523800961210529 + p6 + 2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 6.0314180719209 + 5*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 5.051582026803799 + 3*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.656108901795322 + 9*p3 + -10*p4 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 3.7915166151181894 + 8*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 0.5644923635713016 + 5*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.4792970916932435 + 4*p3 + 2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.736020040324992 + 4*p3 + -8*p4 + 3*p5 + 2*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.5944268631364233 + 4*p3 + -8*p4 + 3*p5 + -2*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 3.8066102224894363 + 3*p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.215044145526591 + 3*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.7095154533075725 + 2*p3 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 2.1406817577548605 + p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4.094754133616965 + p6 + -2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.721935207766448 + 3*p2 + -5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.345575051355219 + 7*p3 + -10*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.152658049545754 + 4*p3 + -8*p4 + -2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.2879966223352923 + 2*p3 + 2*p4 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.429541453903581 + 2*p3 + 2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.748043272974447 + 2*p3 + -3*p5 + 2*d ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2.6059533750807606 + 2*p3 + -3*p5 + 2*d + -2*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 5.927917080217909 + 2*p3 + -4*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 3.564091661469994 + 20*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 5.7711531776001035 + 10*p2 + -3*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 2.6295605240103113 + 10*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.576979504735937 + 3*p2 + -5*p3 + 2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.5726514372568412 + p2 + 2*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.266942208966342 + 4*p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.293893234209788 + 3*p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.172530019343111 + 13*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.824041881424972 + 7*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 5.923368228588435 + 4*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 2.8185637995051036 + 4*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.6448537800513529 + 2*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3.771080031307812 + 7*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 5.957715610135983 + 4*p3 + p4 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.534610615441173 + 3*p3 + -6*p4 + l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.39301796185138 + 3*p3 + -6*p4 + -1*l ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 5.45928744941117 + p3 + -2*p5 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3.8022940232492544 + p4 ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3.8628129659963077 + 2*p5 + -5*p6 + 2*d ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 0.7442361437854887 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.884032321477888 + 13*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 1.2333119577134897 + 8*p2 + -14*p3 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 0.28677888911954263 + 7*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 4.92441087978526 + 6*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.694549604037572 + 3*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 6.109339169040814 + 3*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.82330847707665 + 3*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.6909901795610547 + 8*p3 + -15*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 4.746120435239208 + 4*p3 + -8*p4 + 3*p5 + 2*d + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 1.6045070122313165 + 4*p3 + -8*p4 + 3*p5 + -2*d + -1*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 4.761888786899277 + 2*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2.112496086598554 + 2*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 0.4377816344094385 + 2*p3 + -7*p4 + -2*d + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 5.958540103674625 + 5*p4 + 2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 4.048690880399554 + 5*p2 + -4*p3 + 2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 5.831931476274004 + 8*p3 + -15*p4 + -2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 3.1772348949093954 + 4*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 5.232057972639198 + 2*p3 + -4*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 3.7252105096373738 + p4 + -2*d ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 2.304310389386609 + p5 + l ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 5.456649733312631 + p5 + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.933979655907635 + 16*p2 + -21*p3 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.0413259485203055 + 8*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.076849681983697 + 7*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.119765233895135 + 7*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 3.4848685487280933 + 7*p2 + -9*p3 + 2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 4.728024861554531 + 5*p2 + -6*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 5.254126264767265 + 3*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 0.4429336718284005 + 5*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 2.1099849068707845 + 3*p3 + -5*p4 + -2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 1.6136471269910857 + 3*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.184030674919569 + 3*p2 + -5*p3 + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.325623328509362 + 3*p2 + -5*p3 + -1*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.568929033021454 + 3*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.7961319552938466 + 3*p2 + -8*p3 + -2*d + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.185896631917826 + 2*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.7961801263812016 + 2*p2 + -7*p3 + -2*d + l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 4.644152191685318 + p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.6556516255312994 + 8*p3 + -15*p4 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 5.704662416284427 + 4*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.0680718720816915 + 4*p3 + -6*p4 + -2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 3.148961608224638 + 2*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 2.5950646149434187 + 2*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.9344765511456785 + 15*p2 + -20*p3 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 1.2464438150054948 + 7*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.085695002134487 + 4*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.0870635232992925 + 3*p2 + -4*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.015047747703503 + 2*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.29140771932034 + 2*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 2.99386519317419 + p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 2.7962026411285525 + p2 + -6*p3 + -2*d + l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 1.9017220976131595 + 6*p3 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 3.7117543701703477 + 3*p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 3.204646512542443 + 3*p3 + -3*p4 + -2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.954443815920193 + 2*p3 + 3*p4 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 5.450454512599753 + p3 + -2*p5 + l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 2.3424121486881213 + p3 + -2*p5 + -2*d + l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 3.6778040510276284 + p5 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.22290511697589 + 6*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.4839161225552795 + 6*p2 + -8*p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 1.2454915633656067 + 6*p2 + -12*p3 + -2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.4409017850081782 + 4*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.0727844610899515 + 3*p2 + p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.277573716070257 + p2 + 3*p3 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 1.240403754063118 + p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.1886987580319035 + 5*p3 + -7*p4 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 1.9519872310047457 + 2*p3 + -4*p4 + -1*l ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 5.957028474009472 + p3 + 4*p4 + 2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 4.439074957378433 + p3 + 2*p5 + -5*p6 + -2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 3.2062141672765843 + p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( 1.526248542966993 + 3*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.7711531776001035 + 10*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 2.6295605240103113 + 10*p2 + -3*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.126319992433925 + 5*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 1.2444689749568631 + 5*p2 + -11*p3 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.126280722525755 + 4*p2 + 2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 1.2433957719998119 + 4*p2 + -10*p3 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 1.242308955474595 + 3*p2 + -9*p3 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 3.9998462704861657 + 2*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 1.2412746733598632 + 2*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.2837780124952465 + p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 5.813487883936479 + 2*p3 + -3*p5 + -2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 3.4828937086794616 + 5*p2 + -7*p3 + 2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 5.041218436238382 + 4*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 0.2866958114471477 + 3*p2 + 2*p3 + 2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 4.100393990561859 + 2*p2 + -1*p3 + -2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 6.102691209919968 + 5*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 0.2605408308755363 + 3*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 5.630926793243722 + p3 + -2*p4 + 2*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 0.5356743596269973 + p5 + -2*d ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 1.8813528835119093 + 12*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 0.34375568614967317 + 2*p2 + 3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 3.8904923171366113 + 2*p3 + 2*d ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 2.3140894691855327 + p3 + -2*p5 + -1*l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 6.219826015607838 + p3 + -1*p4 + 2*d ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 3.8163416547997815 + p5 + 2*d + -1*l ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 1.875251212446937 + 13*p2 + -14*p3 + 2*d ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 2.5260049035017316 + 3*p3 + -4*p4 + -2*d ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 3.713605291842088 + 2*p3 + -1*p4 + -2*d ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 5.109468314907144 + 2*p3 + -4*p4 + l ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 2.632271020338658 + p3 + -2*p4 + -2*d + l ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 2.536072311693085 + p3 + -2*p4 + -2*d ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 0.0927960147358849 + 2*p5 + -5*p6 + -2*d + l ), twopi ) );
        a += 0.00024*t * sin ( fmod ( ( 0.6682661502363804 + p5 + -2*d + l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 1.7737531605935335 + 18*p2 + -15*p3 + -2*d + -1*l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 2.2253372077935936 + 18*p2 + -17*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 4.22204501022219 + 7*p2 + -6*p3 + -2*d ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 5.6841275704371625 + 8*p3 + -15*p4 + -1*l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 5.710817145358661 + 3*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 5.206628699970566 + p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( 3.2321405097161837 + 2*p5 + -5*p6 + 2*d + -1*l ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 4.264614288810033 + 6*p2 + -5*p3 + -2*d ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 4.210939131125899 + 4*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 4.932087710500157 + 3*p2 + -4*p3 + l ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 3.551250052432595 + 2*p2 + p3 + 2*d ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 1.2775893900402586 + p2 + -2*d + l ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 5.702418097399288 + 2*p3 + -3*p4 + 2*d ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 5.934887401651598 + 14*p2 + -19*p3 + -2*d ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 4.275076315945261 + 5*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 4.183325229832547 + p2 + 2*d ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4.2565765240058235 + 4*p2 + -1*p3 + 2*d ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 5.193815016201199 + 4*p3 + -6*p4 + 2*d ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4.0113273953716355 + 3*p3 + 2*d ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 5.731463517745127 + p3 + -2*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 2.5558849402958743 + 8*p3 + -15*p4 + l ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 3.9388665608165865 + 10*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 1.891363393969648 + 10*p2 + -11*p3 + 2*d ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 1.7739568405172415 + 3*p2 + -4*p3 + -1*l ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 0.37418515259234386 + 2*p2 + -3*p3 + -2*d ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( 5.192619814729434 + 3*p3 + -5*p4 + 2*d ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( 0.1239204712866998 + 8*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 2*d ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -2*d + -2*l ), twopi ) );
        a += 0.00033*t * sin ( fmod ( ( 4.044608031680363 + 20*p2 + -21*p3 + -2*d + l ), twopi ) );
        a += 0.00033*t * sin ( fmod ( ( 2.7939323168375583 + 12*p2 + -17*p3 + -2*d ), twopi ) );
        a += 0.00033*t * sin ( fmod ( ( 0.3136292088651486 + 11*p2 + -6*p3 + 2*d ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 3.2104790538367576 + 8*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 4.452935315100221 + 6*p2 + -3*p3 + 2*d ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 1.7935340242039366 + 2*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 4.907285185565915 + 3*p2 + -4*p3 + d ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 4.372281730503386 + 2*p2 + -1*p3 + -2*d + l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 2.749898881540218 + 5*p3 + -6*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 2.337285593076238 + p3 + -2*p5 + -2*d ), twopi ) );
        a += 0.00036*t * sin ( fmod ( ( 5.357922042580919 + 5*p2 + -8*p3 + -2*d ), twopi ) );
        a += 0.00037*t * sin ( fmod ( ( 3.234596537039591 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00037*t * sin ( fmod ( ( 5.198749585595363 + 2*p3 + -4*p4 + 2*d ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 1.2706445504136483 + 18*p2 + -17*p3 + -2*d + l ), twopi ) );
        a += 0.00039*t * sin ( fmod ( ( 0.04962739008290756 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00039*t * sin ( fmod ( ( 1.902007982544636 + 3*p2 + -4*p3 + -2*d ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 4.437876788846939 + 5*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 5.361403799905722 + 4*p2 + -7*p3 + -2*d ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 4.252632952560942 + 3*p2 + -2*p3 + 2*d ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 5.752650069535087 + 2*p3 + -3*p5 + -1*l ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 4.413044942381264 + 14*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 1.8912808398960286 + 9*p2 + -10*p3 + 2*d ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 4.411493519209166 + 6*p2 + -5*p3 + -2*d + l ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 2.7945283467771143 + 11*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 4.40459981772964 + 5*p2 + -4*p3 + -2*d + l ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 0.013618106021610954 + 2*d ), twopi ) );
        a += 0.00044*t * sin ( fmod ( ( 2.0194703865331065 + p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00045*t * sin ( fmod ( ( 4.122375190760251 + 3*p2 + 2*d ), twopi ) );
        a += 0.00045*t * sin ( fmod ( ( 4.391173697925748 + 3*p2 + -2*p3 + -2*d + l ), twopi ) );
        a += 0.00045*t * sin ( fmod ( ( 0.2608839626064784 + 5*p3 + 2*d ), twopi ) );
        a += 0.00046*t * sin ( fmod ( ( 4.396240214211362 + 4*p2 + -3*p3 + -2*d + l ), twopi ) );
        a += 0.00046*t * sin ( fmod ( ( 5.012435862477893 + 2*p2 + -3*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00047*t * sin ( fmod ( ( 4.959030707229044 + 6*p2 + -8*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00047*t * sin ( fmod ( ( 5.032878380407727 + 2*p2 + -3*p3 + l ), twopi ) );
        a += 0.00048*t * sin ( fmod ( ( 6.178752135123103 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.00048*t * sin ( fmod ( ( 3.0361840170143712 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 1.8897034113180762 + 2*p2 + -3*p3 + -1*l ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 5.475019672755722 + 6*p3 + -8*p4 + 2*d + -1*l ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 2.8001441181783315 + 10*p2 + -15*p3 + -2*d ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 5.461646436428166 + p3 + -2*p4 + l ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 2.3210168555196233 + p3 + -2*p4 + -1*l ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 4.24328095482998 + 3*p2 + -2*p3 + -2*d ), twopi ) );
        a += 0.00055*t * sin ( fmod ( ( 6.127641389708927 + 18*p2 + -16*p3 + -1*l ), twopi ) );
        a += 0.0006*t * sin ( fmod ( ( 5.76271852492399 + 10*p2 + -3*p3 ), twopi ) );
        a += 0.00068*t * sin ( fmod ( ( 0.4308177706939811 + 18*p2 + -16*p3 + l ), twopi ) );
        a += 0.00072*t * sin ( fmod ( ( 3.56839389807616 + 18*p2 + -16*p3 + -3*l ), twopi ) );
        a += 0.00073*t * sin ( fmod ( ( 2.6111696406161964 + 10*p2 + -3*p3 + -2*l ), twopi ) );
        a += 0.0012*t * sin ( fmod ( ( 6.092633401039499 + 2*p5 + -5*p6 + l ), twopi ) );
        a += 0.0012*t * sin ( fmod ( ( 2.951040747449706 + 2*p5 + -5*p6 + -1*l ), twopi ) );
        a += 0.00131*t * sin ( fmod ( ( 1.6080128550997976 + 4*p3 + -8*p4 + 3*p5 + -2*d + l ), twopi ) );
        a += 0.00132*t * sin ( fmod ( ( 4.749628023436942 + 4*p3 + -8*p4 + 3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00134*t * sin ( fmod ( ( 4.746793783264628 + 4*p3 + -8*p4 + 3*p5 + 2*d ), twopi ) );
        a += 0.00134*t * sin ( fmod ( ( 1.6051833273164644 + 4*p3 + -8*p4 + 3*p5 + -2*d ), twopi ) );
        a += 0.00178*t * sin ( fmod ( ( 4.735040736081698 + 4*p3 + -8*p4 + 3*p5 + l ), twopi ) );
        a += 0.00178*t * sin ( fmod ( ( 1.593444591833401 + 4*p3 + -8*p4 + 3*p5 + -1*l ), twopi ) );
        a += 0.00225*t * sin ( fmod ( ( 5.748028437675805 + 2*p3 + -3*p5 + 2*d + -1*l ), twopi ) );
        a += 0.00226*t * sin ( fmod ( ( 0.42895114105897314 + 18*p2 + -16*p3 + 2*d + -2*l ), twopi ) );
        a += 0.00241*t * sin ( fmod ( ( 3.5707541068236317 + 18*p2 + -16*p3 + -2*d ), twopi ) );
        a += 0.00364*t * sin ( fmod ( ( 0.428748857398667 + 18*p2 + -16*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00364*t * sin ( fmod ( ( 3.57034151098846 + 18*p2 + -16*p3 + -2*d + -1*l ), twopi ) );
        a += 0.01225*t * sin ( fmod ( ( 0.4327585768221988 + 18*p2 + -16*p3 ), twopi ) );
        a += 0.01302*t * sin ( fmod ( ( 3.570141845322032 + 18*p2 + -16*p3 + -2*l ), twopi ) );
        return a;
    }

    double planetary_lon15 ( double t,double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 4.0960509132511955 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.096048295257318 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603715109291508 + p3 + 5*d + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.660406417514191 + p3 + 3*d + 3*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.80202176038426 + p3 + 3*d + l + -3*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + -1*lp + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3442841803454937 + p3 + d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603598172231626 + p3 + d + -1*lp + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6602818010055986 + p3 + d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603968182033049 + p3 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.802065219082635 + p3 + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + -1*d + 3*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6604760561513456 + p3 + -1*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6602512577436888 + p3 + -1*d + -1*lp + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801950376417853 + p3 + -3*d + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 5.863051918567539 + 2*d + lp + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.122759354725248 + 2*d + lp + -2*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1880280110037282 + 2*d + -1*lp + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4215872478789586 + d + -2*lp ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.720891509372072 + 2*lp + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.096093499284945 + 8*p2 + -13*p3 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.096089834093515 + 8*p2 + -13*p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6604018796581361 + p3 + 5*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.8019915661882004 + p3 + 3*d + lp + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + 2*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.660406592047116 + p3 + 3*d + -2*lp + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6604113044360964 + p3 + d + 4*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801943046034996 + p3 + d + -3*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6604113044360964 + p3 + d + -4*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.318318917063574 + p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.80196468811772 + p3 + -1*d + 3*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801986330200445 + p3 + -1*d + -1*lp + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415963187812226 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.141593177188569 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.861487230893126 + 3*d + lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.841814403163422 + 3*d + lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.722782748149533 + 2*d + 2*lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.20919394241356393 + 2*d + 2*lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.721070754686252 + 2*d + lp + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283181118389381 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1416191825944235 + 2*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.0557355698560125 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.407574697446397 + d + -1*lp + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.868817264685651 + 2*lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415980641104744 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.095864337554158 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.095863988488308 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6603715109291508 + p3 + 5*d + -1*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6603715109291508 + p3 + 5*d + -2*l + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6604198565494317 + p3 + 3*d + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.802002038163713 + p3 + 3*d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801964164518944 + p3 + d + l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6604435930272583 + p3 + d + l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801956834136086 + p3 + d + -1*l + 3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.802004656157591 + p3 + d + -2*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.802011812007525 + p3 + d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.329152350263628 + p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.34390474576611 + p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.681167998627923 + 2*d + -2*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.8698279848554815 + d + lp + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.42158620068140745 + d + -1*lp + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801964164518944 + p3 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801964164518944 + p3 + d + lp + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.660418634818955 + p3 + d + lp + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.8019980239064335 + p3 + -1*d + lp + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.660430852123719 + p3 + -1*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.3448884133325343 + p3 + -2*d + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801964164518944 + p3 + -2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6603736053242535 + p3 + -3*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( PI + 2*d + 2*lp + -2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6603716854620763 + p3 + 2*d + lp + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.8019908680564996 + p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.801998372972283 + p3 + d + lp + 2*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6603701146657497 + p3 + d + 3*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6603715109291508 + p3 + d + -1*lp + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141590210128841 + 3*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.802000990966161 + p3 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + -1*lp + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.801967655177448 + p3 + d + lp + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6604058939154154 + p3 + d + -1*lp + 2*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6603472508525483 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.801941824304518 + p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.660399261664258 + p3 + 5*d + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6603921058143245 + p3 + 5*d + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6603873934253444 + p3 + 3*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6603908840838484 + p3 + l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.7211660496634105 + 2*d + lp ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.801985283002893 + p3 + 3*d + lp + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.80200395802589 + p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6604062429812658 + p3 + 3*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.801951772681256 + p3 + -1*d + lp + -1*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.801961895590917 + p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.660426488800589 + p3 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.687937075100541 + 2*lp ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 2.687152200535919 + lp + 2*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.801962768255543 + p3 + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.2633162619503742 + p3 ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 2.683193619259471 + lp + -2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.660489320653661 + p3 + -1*d + lp + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.801999420169834 + p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.801986155667519 + p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 1.6603606898877887 + p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.801948805621526 + p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.141592479056868 + 2*d + l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 5.861599630096954 + d + lp + l ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.6604057193824904 + p3 + 3*d + 2*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 6.28317972212598 + l + -2*f ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 4.801964164518944 + p3 + d + 3*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 4.096092975686169 + 8*p2 + -13*p3 ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6603697655998992 + p3 + 3*d + l + f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.6603383496733632 + p3 + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 6.283182165586933 + 2*d + -2*f ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 3.469399870100592 + 2*d + -1*lp ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 0.711516456298351 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.802004830690516 + p3 + d + -1*l + -3*f ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 3.141578516422852 + 2*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 2.882758580189782 + d + lp + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.801999769235684 + p3 + 3*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.802018618791607 + p3 + d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 4.8019617210579915 + p3 + -1*d + -1*lp + f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 2.7228164330040965 + 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.00028 * sin ( fmod ( ( 1.6604294558603174 + p3 + d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.660412526166573 + p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 4.801980047015137 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 1.6604102572385455 + p3 + d + 3*l + -1*f ), twopi ) );
        a += 0.00031 * sin ( fmod ( ( 0.4203252002968416 + d + -1*lp ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 4.80198650473337 + p3 + -1*d + lp + l + -1*f ), twopi ) );
        a += 0.00033 * sin ( fmod ( ( 1.6603706382645251 + p3 + -1*d + lp + f ), twopi ) );
        a += 0.00036 * sin ( fmod ( ( 1.6604044976520138 + p3 + 3*d + -1*lp + -1*f ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 4.801994184182079 + p3 + d + lp + l + -1*f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( 1.660374128923029 + p3 + d + -1*lp + -1*f ), twopi ) );
        a += 0.00042 * sin ( fmod ( ( 4.801943918699621 + p3 + d + -2*l + f ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 3.1365280571663563 + 2*d ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 4.801961371992141 + p3 + d + lp + -1*f ), twopi ) );
        a += 0.00047 * sin ( fmod ( ( 4.802006750552693 + p3 + d + -3*f ), twopi ) );
        a += 0.00052 * sin ( fmod ( ( 1.6604025777898366 + p3 + d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.6604378334407268 + p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00056 * sin ( fmod ( ( 5.8626330395470605 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.660369591066974 + p3 + d + 2*l + f ), twopi ) );
        a += 0.00065 * sin ( fmod ( ( 3.1415937007873445 + 2*l ), twopi ) );
        a += 0.00079 * sin ( fmod ( ( 4.802003783492964 + p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.0008 * sin ( fmod ( ( 1.6605903752173512 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00084 * sin ( fmod ( ( 1.6603706382645251 + p3 + 3*d + f ), twopi ) );
        a += 0.00094 * sin ( fmod ( ( 4.801996453110107 + p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 1.6604043231190884 + p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.0012 * sin ( fmod ( ( 2.698775569755426 + lp + l ), twopi ) );
        a += 0.00135 * sin ( fmod ( ( 2.6926032128557478 + lp + -1*l ), twopi ) );
        a += 0.00143 * sin ( fmod ( ( 1.6603706382645251 + p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00146 * sin ( fmod ( ( 4.801950725483704 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00159 * sin ( fmod ( ( 5.860585244735696 + d + lp ), twopi ) );
        a += 0.00181 * sin ( fmod ( ( 3.142884197236269 + 2*d + -1*l ), twopi ) );
        a += 0.0041 * sin ( fmod ( ( 1.6604128752324234 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00432 * sin ( fmod ( ( 1.6604100827056203 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00465 * sin ( fmod ( ( 4.802001340032012 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00582 * sin ( fmod ( ( 1.6604006579276596 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00661 * sin ( fmod ( ( 1.6603702891986747 + p3 + d + l + f ), twopi ) );
        a += 0.00661 * sin ( fmod ( ( 2.7186347986492434 + lp ), twopi ) );
        a += 0.00772 * sin ( fmod ( ( 4.801985108469968 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00851 * sin ( fmod ( ( 1.6603704637316001 + p3 + -1*d + f ), twopi ) );
        a += 0.00858 * sin ( fmod ( ( 1.660359119091462 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00963 * sin ( fmod ( ( 3.1416916137583812 + l ), twopi ) );
        a += 0.06154 * sin ( fmod ( ( 1.6603709873303756 + p3 + d + f ), twopi ) );
        a += 0.06174 * sin ( fmod ( ( 1.6604118280348723 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.06245 * sin ( fmod ( ( 1.6604107808373207 + p3 + d + l + -1*f ), twopi ) );
        a += 0.28938 * sin ( fmod ( ( 1.660422998142085 + p3 + d + -1*f ), twopi ) );
        return a;
    }

    double planetary_lat16 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + 5*d + -1*lp ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + 3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.80200395802589 + p3 + 3*d + -3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.802002212696638 + p3 + 3*d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.3464965597053218 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + 2*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801995929511331 + p3 + d + lp + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6604149696275259 + p3 + d + 3*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.80200901948072 + p3 + d + -4*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603551048341822 + p3 + d + -1*lp + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.8020207131867085 + p3 + d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801974461961532 + p3 + -1*d + lp + l + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6604435930272583 + p3 + -1*d + lp + -2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + 4*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964862650645 + p3 + -1*d + -1*lp + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 1.6603709873303756 + p3 + -3*d + 2*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.801964164518944 + p3 + -3*d + -1*lp + l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.722782224550757 + 2*d + 2*lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.722787635071439 + 2*d + 2*lp + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141595097050746 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.42011436452320067 + 2*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 2.9481464679511236 + d + lp + -1*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4215848044180059 + d + -1*lp + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.4215874224118839 + d + -1*lp + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.14161604100177 + 2*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + 5*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + 5*d + -1*lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603715109291508 + p3 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + lp + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.660407290178817 + p3 + 3*d + 2*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603650532109189 + p3 + 3*d + -2*l + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + -3*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + -2*lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6604277105310652 + p3 + d + lp + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603715109291508 + p3 + d + lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801959801195815 + p3 + d + 4*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6604017051252107 + p3 + d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + d + -1*lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.498684932651047 + p3 + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.498684932651047 + p3 + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + 2*lp + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.6603718599950015 + p3 + -1*d + lp + 2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801942696969145 + p3 + -1*d + -2*lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.801964164518944 + p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8571411865227345 + 2*d + 2*lp + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.8625511836051425 + 2*d + lp + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 5.862612270128961 + 2*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283177627730876 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801964164518944 + p3 + 5*d + -1*lp + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.660426663333514 + p3 + 3*d + -1*lp + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + -2*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6603715109291508 + p3 + d + 2*l + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6604121771007223 + p3 + d + -3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801964164518944 + p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.3448268032099386 + p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.801964164518944 + p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.6603715109291508 + p3 + -3*d + lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1415923045239422 + 2*d + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6603694165340488 + p3 + d + lp + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.80195631053731 + p3 + d + -2*l + 2*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.801964164518944 + p3 + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6603715109291508 + p3 + -3*d + lp + l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.660369591066974 + p3 + -3*d + 2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.6603715109291508 + p3 + -3*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.6603715109291508 + p3 + 2*d + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.660369591066974 + p3 + -1*d + lp + 2*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 2.7207988323887906 + lp + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141593177188569 + 2*l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6603715109291508 + p3 + 3*d + -1*l + 2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.801964164518944 + p3 + 2*d + lp ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.8019620701238415 + p3 + d + -1*lp + 2*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*lp ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.6604242198725614 + p3 + -1*d + -1*l + -2*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.801964164518944 + p3 + -1*d + -1*lp + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.801964164518944 + p3 + -1*d + -1*lp + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 5.862665328138222 + 2*d + lp + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.44867912119304065 + 2*d + -1*lp + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.720944567381333 + lp + l + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.7221422123140515 + lp + f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.722165948791878 + lp + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 2.7208614897089376 + lp + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.802004132558815 + p3 + 3*d + -2*l + -2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.6603716854620763 + p3 + -1*d + l + 2*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.141592828122718 + 2*d + -1*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.861599979162805 + d + lp + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 5.861596663037225 + d + lp + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 2.720992913001613 + lp + -1*l + -1*f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.8019617210579915 + p3 + 5*d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.801961022926291 + p3 + 3*d + -1*lp + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + 2*lp ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.801954914273908 + p3 + -1*d + -1*l + 2*f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 1.6603701146657497 + p3 + 3*d + lp ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6603725581267024 + p3 + 3*d + lp + -1*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 4.801959277597039 + p3 + 3*d + 2*l ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.6603673221389466 + p3 + -1*d + 3*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 3.141590733727616 + 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 1.660378317713234 + p3 + 3*d + -2*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.6604172385555536 + p3 + d + 2*l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6604095591068446 + p3 + 3*d + l + -2*f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6603734307913283 + p3 + -1*d + lp + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 1.6604510979430422 + p3 + -1*d + -2*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 1.6603687184023481 + p3 + d + -3*l ), twopi ) );
        a += 0.00017 * sin ( fmod ( ( 1.6603755251864305 + p3 + -1*d + -2*l ), twopi ) );
        a += 0.00018 * sin ( fmod ( ( 4.80196468811772 + p3 + 5*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.801963291854318 + p3 + 5*d + -1*l ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.6603706382645251 + p3 + d + l + 2*f ), twopi ) );
        a += 0.00024 * sin ( fmod ( ( 4.801974287428606 + p3 + -1*d + l + -2*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.80200395802589 + p3 + 3*d + -1*l + -2*f ), twopi ) );
        a += 0.00026 * sin ( fmod ( ( 4.801958753998264 + p3 + d + 3*l ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 1.6603720345279267 + p3 + -3*d ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 4.801964164518944 + p3 ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.6603701146657497 + p3 + d + lp + l ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.660382855569289 + p3 + d + lp ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 1.6604127006994982 + p3 + d + -2*l + -2*f ), twopi ) );
        a += 0.00038 * sin ( fmod ( ( 4.801965735315271 + p3 + d + -1*lp + -1*l ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 1.6603706382645251 + p3 + 2*d ), twopi ) );
        a += 0.00039 * sin ( fmod ( ( 3.141592828122718 + l + f ), twopi ) );
        a += 0.00041 * sin ( fmod ( ( PI + l + -1*f ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 1.6603720345279267 + p3 + d + lp + -1*l ), twopi ) );
        a += 0.00044 * sin ( fmod ( ( 4.801954914273908 + p3 + d + -1*lp ), twopi ) );
        a += 0.00048 * sin ( fmod ( ( 4.8019617210579915 + p3 + d + -1*lp + l ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.6604313757224944 + p3 + 3*d + -2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.6603709873303756 + p3 + -1*d + 2*f ), twopi ) );
        a += 0.0005 * sin ( fmod ( ( 1.6603706382645251 + p3 + -3*d + l ), twopi ) );
        a += 0.00054 * sin ( fmod ( ( 1.6603706382645251 + p3 + -1*d + lp + l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 6.283181118389381 + 2*d + -1*f ), twopi ) );
        a += 0.00058 * sin ( fmod ( ( 4.801962768255543 + p3 + 3*d + -1*lp ), twopi ) );
        a += 0.00067 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + -1*lp + -1*l ), twopi ) );
        a += 0.00068 * sin ( fmod ( ( 3.4906585039886593e-7 + f ), twopi ) );
        a += 0.00075 * sin ( fmod ( ( 1.6603652277438439 + p3 + d + -1*l + 2*f ), twopi ) );
        a += 0.00096 * sin ( fmod ( ( 4.801962942788467 + p3 + -1*d + -1*lp ), twopi ) );
        a += 0.00105 * sin ( fmod ( ( 4.801961022926291 + p3 + 3*d + l ), twopi ) );
        a += 0.00108 * sin ( fmod ( ( 1.6603694165340488 + p3 + -1*d + 2*l ), twopi ) );
        a += 0.00142 * sin ( fmod ( ( 1.6603706382645251 + p3 + d + 2*f ), twopi ) );
        a += 0.00198 * sin ( fmod ( ( 1.6604140969628998 + p3 + d + l + -2*f ), twopi ) );
        a += 0.00227 * sin ( fmod ( ( 1.6603715109291508 + p3 + -1*d + lp ), twopi ) );
        a += 0.00264 * sin ( fmod ( ( 1.6603729071925528 + p3 + -1*d + -1*l ), twopi ) );
        a += 0.00294 * sin ( fmod ( ( 1.6603681948035725 + p3 + d + -2*l ), twopi ) );
        a += 0.00325 * sin ( fmod ( ( 1.6604132242982739 + p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00427 * sin ( fmod ( ( 4.801960499327516 + p3 + d + 2*l ), twopi ) );
        a += 0.00849 * sin ( fmod ( ( 4.801962768255543 + p3 + 3*d ), twopi ) );
        a += 0.00917 * sin ( fmod ( ( 1.6604207292140574 + p3 + d + -2*f ), twopi ) );
        a += 0.01209 * sin ( fmod ( ( 1.6603708127974504 + p3 + -1*d + l ), twopi ) );
        a += 0.01504 * sin ( fmod ( ( 4.801964164518944 + p3 + 3*d + -1*l ), twopi ) );
        a += 0.04834 * sin ( fmod ( ( 1.6603711618633008 + p3 + -1*d ), twopi ) );
        a += 0.07245 * sin ( fmod ( ( 4.8019622446567665 + p3 + d + l ), twopi ) );
        a += 0.07755 * sin ( fmod ( ( 1.6603725581267024 + p3 + d + -1*l ), twopi ) );
        a += 1.37497 * sin ( fmod ( ( 4.801963815453093 + p3 + d ), twopi ) );
        return a;
    }

    double planetary_r17 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 0.08957500960132937 + p3 + 5*d + -1*l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.231167837724048 + p3 + d + lp + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.2311954139262293 + p3 + d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.038299032496887 + p3 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.896706378907095 + p3 + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.231167837724048 + p3 + -1*d + -1*lp + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 2.91598179516612 + p3 + -2*d + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.08957500960132937 + p3 + -3*d + l + -1*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707965013278218 + 4*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707834113584318 + 4*d + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707917889388414 + 2*d + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707919634717666 + 2*d + -1*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.556219885975965 + d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.5252490014026927 + 8*p2 + -13*p3 + 2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 2.525091572704163 + 8*p2 + -13*p3 + l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.666684226293957 + 8*p2 + -13*p3 + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 5.666838687932757 + 8*p2 + -13*p3 + -2*d ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2311955884591543 + p3 + 2*d + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2312142634821504 + p3 + d + lp + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.231167837724048 + p3 + d + -1*lp + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08962143535943241 + p3 + d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08959368462432571 + p3 + l + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08965162955549193 + p3 + -1*d + -1*lp + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.08957518413425457 + p3 + -2*d + f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.2312332875709973 + p3 + -3*d + -1*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9908054479642021 + 2*d + -2*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.1570199509173882 + d + lp + -2*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.9923818293446032 + d + -1*lp + -1*l ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5707926616034673 + 3*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08961777016800324 + p3 + 5*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.231205711368816 + p3 + 5*d + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08961096338392047 + p3 + 3*d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08957535866717979 + p3 + 2*d + lp + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2312027443090874 + p3 + d + lp + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2311676631911226 + p3 + d + lp + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08958844863656973 + p3 + d + lp + -1*l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 0.08960991618636925 + p3 + d + -1*lp + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2311676631911226 + p3 + d + -1*lp + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2312036169737137 + p3 + -1*d + lp + 2*l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 2.9146019378594934 + p3 + -2*d ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.2311718519813275 + p3 + -3*d + l + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.1497661880131744 + 2*d + lp + -2*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.712394216372445 + 2*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.08959141569629812 + p3 + 3*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.08957518413425457 + p3 + -1*d + lp + l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 0.08956017430268742 + p3 + -1*d + lp + -1*l + f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.231216183344328 + p3 + -1*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.2312067585663677 + p3 + 3*d + lp + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 0.08961515217412523 + p3 + 3*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 1.1502014731286219 + lp + 2*l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.08961742110215284 + p3 + 3*d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.08957518413425457 + p3 + -1*d + 2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.08956017430268742 + p3 + -1*d + -2*l + f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 3.231210074691946 + p3 + -1*d + -2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 0.08959682621697931 + p3 + -3*d + 2*l + -1*f ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 1.5707968503936722 + 2*d + l ), twopi ) );
        a += 0.00007 * sin ( fmod ( ( 4.291539483180549 + lp + -2*l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 3.2311657433289454 + p3 + -3*d + f ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 4.2908038269008335 + d + lp + l ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.148032028868393 + d + lp + -1*l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 0.08961410497657404 + p3 + 3*d + -3*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.2312160088114026 + p3 + d + l + -3*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 0.08957518413425457 + p3 + -1*d + lp + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 3.2312037915066387 + p3 + -1*d + 3*l + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.113168727993956 + 2*d + lp ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 1.5707896945437387 + l + -2*f ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 0.08956733015262061 + p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00012 * sin ( fmod ( ( 3.231167837724048 + p3 + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 0.08956802828432141 + p3 + 3*d + -2*l + f ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.2311355491328855 + p3 + -1*f ), twopi ) );
        a += 0.00015 * sin ( fmod ( ( 3.2312044896383396 + p3 + 3*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 0.08961497764120004 + p3 + d + 3*l + -1*f ), twopi ) );
        a += 0.00019 * sin ( fmod ( ( 3.231207631230993 + p3 + d + -3*l + -1*f ), twopi ) );
        a += 0.00021 * sin ( fmod ( ( 0.08963033653861759 + p3 + d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 3.2312345093014736 + p3 + -1*d + lp + -1*f ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.712392645576118 + 2*d + -2*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 1.8337109799860702 + 2*d + -1*lp ), twopi ) );
        a += 0.00023 * sin ( fmod ( ( 1.1519855486900106 + 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.2312256081222888 + p3 + d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 0.0895971752828297 + p3 + -1*d + lp + l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 5.133743401341433 + d + -1*lp ), twopi ) );
        a += 0.00027 * sin ( fmod ( ( 3.2311837202202414 + p3 + 2*d + -1*f ), twopi ) );
        a += 0.00029 * sin ( fmod ( ( 5.265876693956317 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 0.08961724656922763 + p3 + 3*d + -1*lp + -1*f ), twopi ) );
        a += 0.00035 * sin ( fmod ( ( 3.231181974890989 + p3 + d + f ), twopi ) );
        a += 0.00037 * sin ( fmod ( ( 3.2311982064530325 + p3 + d + lp + l + -1*f ), twopi ) );
        a += 0.00046 * sin ( fmod ( ( 0.08960590192908967 + p3 + d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00051 * sin ( fmod ( ( 4.300363344279857 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00053 * sin ( fmod ( ( 1.570797548525373 + 2*l ), twopi ) );
        a += 0.00057 * sin ( fmod ( ( 1.5660919663290709 + 2*d ), twopi ) );
        a += 0.00066 * sin ( fmod ( ( 3.231214961613852 + p3 + -1*d + -1*l + -1*f ), twopi ) );
        a += 0.00076 * sin ( fmod ( ( 0.08961602483875125 + p3 + 3*d + l + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 3.231161729071666 + p3 + d + -2*l + f ), twopi ) );
        a += 0.00091 * sin ( fmod ( ( 0.08961497764120004 + p3 + 3*d + -2*l + -1*f ), twopi ) );
        a += 0.00101 * sin ( fmod ( ( 0.08955947617098663 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.0011 * sin ( fmod ( ( 3.2312003008481347 + p3 + -1*d + 2*l + -1*f ), twopi ) );
        a += 0.00112 * sin ( fmod ( ( 1.1245051650844347 + lp + l ), twopi ) );
        a += 0.00126 * sin ( fmod ( ( 4.2626837801244015 + lp + -1*l ), twopi ) );
        a += 0.00133 * sin ( fmod ( ( 0.08957326427207739 + p3 + -1*d + l + f ), twopi ) );
        a += 0.00147 * sin ( fmod ( ( 4.289780365827464 + d + lp ), twopi ) );
        a += 0.00149 * sin ( fmod ( ( 0.08957675493058136 + p3 + -1*d + f ), twopi ) );
        a += 0.00166 * sin ( fmod ( ( 1.5724495026623857 + 2*d + -1*l ), twopi ) );
        a += 0.00183 * sin ( fmod ( ( 3.2311261243549247 + p3 + d + -1*f ), twopi ) );
        a += 0.00311 * sin ( fmod ( ( 3.2312081548297686 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00314 * sin ( fmod ( ( 0.08961445404242444 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00328 * sin ( fmod ( ( 3.2312332875709973 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00351 * sin ( fmod ( ( 3.231207631230993 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00503 * sin ( fmod ( ( 0.08961724656922763 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00648 * sin ( fmod ( ( 0.0895952554206525 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.01035 * sin ( fmod ( ( 1.570753042629447 + l ), twopi ) );
        a += 0.01447 * sin ( fmod ( ( 0.089568551883097 + p3 + d + -1*l + f ), twopi ) );
        a += 0.02702 * sin ( fmod ( ( 4.71238898038469 ), twopi ) );
        a += 0.05703 * sin ( fmod ( ( 3.2312081548297686 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.05765 * sin ( fmod ( ( 0.08961445404242444 + p3 + d + l + -1*f ), twopi ) );
        return a;
    }

    double planetary_lon18 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 3.40013019554989 + p3 + 3*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 0.2585375419600972 + p3 + -1*d + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6*d + lp + -3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6*d + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 6*d + -2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 6*d + -1*lp + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 6*d + -2*lp ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 5*d + lp + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*d + 2*lp ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -2*lp + 2*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -3*lp + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*d + 3*lp + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*d + 3*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + -3*lp + -2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + -4*lp + l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + d + -2*lp + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*lp ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*lp + -1*l ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*lp + l + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + lp + 3*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 6*d + -2*lp + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 5*d + -1*lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4*d + 2*lp + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4*d + lp + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4*d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 4*d + -1*lp + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 3*d + lp + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3*d + lp + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3*d + -2*lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + lp + 2*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -1*lp + 4*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + -2*lp + l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + -2*lp + -1*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -3*lp + 2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( d + 2*lp + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + d + 2*lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + d + lp + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( d + lp + l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( d + -1*lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + d + -3*lp ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*lp + 3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*lp + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*lp + -1*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + lp + -3*l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6*d + lp + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 6*d + lp + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4*d + -1*lp + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 4*d + -2*lp + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 3*d + -2*lp ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + 2*lp + -1*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*d + 2*lp + -1*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*d + -1*lp + 2*l + 2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -2*lp + 3*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( d + -1*lp + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3*lp + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*lp + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.2585375419600972 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 6*d + -2*lp + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 6*d + -2*lp + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4*d + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4*d + -1*lp + -2*l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 3*d ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 2*d + lp + l + 2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( d + 2*lp + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( d + -1*lp + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3.40013019554989 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4*d + lp + -1*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3*d + -1*lp + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2*d + 2*lp + -3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( PI + 2*d + lp + -4*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( PI + 2*d + l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2*d + -1*lp + -2*l + 2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 0.2585375419600972 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 6*d + -1*lp ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4*d + -1*lp + -1*l + 2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 4*d + -3*lp + -2*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 3*d + lp + l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3*d + -2*lp + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + d + lp + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + lp + -2*l + 2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 3.40013019554989 + p3 + -1*d + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 4*d + lp + -3*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 4*d + -3*lp ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 3*d + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2*d + 2*lp + l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2*d + lp + 3*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2*d + -1*lp + 2*l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2*d + -1*lp + -2*l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 2*d + -1*lp + -4*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 2*d + -3*lp + -2*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + lp + 2*l + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( PI + 4*d + -1*lp + 2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2*d + -2*lp + l + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2*d + -2*lp + -1*l + 2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( PI + 2*d + -2*lp + -3*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( PI + 2*d + -4*lp + -1*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2*lp + -3*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2*d + -2*lp + 2*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( d + lp + 2*f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( PI + 6*d + -1*lp + -3*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( lp + 4*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 4*d + 2*lp + -1*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 3*d + lp + -2*l ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( d ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( PI + lp + 2*l + 2*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( l + -2*f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( PI + 4*d + -2*lp + l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 2*d + 2*lp + -2*f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( lp + -4*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4*d + lp + l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( PI + 4*d + -3*lp + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 2*d + 2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( PI + 2*d + -4*lp ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( PI + lp + -2*l + -2*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 3*lp + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 2*d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( PI + 2*d + lp + 2*f ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( PI + 3*d + -1*lp ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( PI + 2*d + lp + -1*l + 2*f ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( PI + 6*d + -1*lp + -1*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 4*d + 2*lp + -2*l ), twopi ) );
        a += 0.00018*t * sin ( fmod ( ( 4*d + -2*l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 2*d + -1*lp + l + 2*f ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( PI + lp + -2*f ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( d + 2*lp ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( lp + -1*l + 2*f ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 3*d + -1*lp + -2*l ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( PI + 2*d + lp + l + -2*f ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( lp + l + -2*f ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 4*d ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( PI + d + -2*lp ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( PI + 6*d + -1*lp + -2*l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( PI + 2*d + -1*lp + 3*l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( PI + d + lp + 2*l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( PI + 4*d + -1*lp + -3*l ), twopi ) );
        a += 0.00025*t * sin ( fmod ( ( PI + 2*d + -3*lp + l ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 2*d + -2*f ), twopi ) );
        a += 0.0003*t * sin ( fmod ( ( d + -1*lp + l ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( PI + 2*d + -2*l ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( PI + 2*d + -2*lp + 2*l ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( PI + 2*d + -2*lp + -2*f ), twopi ) );
        a += 0.00033*t * sin ( fmod ( ( 2*lp + 2*l ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( d + -1*lp + -1*l ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( 2*l ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( PI + 3*d + lp ), twopi ) );
        a += 0.00039*t * sin ( fmod ( ( 3*lp + -1*l ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 4*d + -1*l ), twopi ) );
        a += 0.00045*t * sin ( fmod ( ( PI + 2*d + lp + -3*l ), twopi ) );
        a += 0.00052*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + f ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + l + -1*f ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00058*t * sin ( fmod ( ( 3*d + -1*lp + -1*l ), twopi ) );
        a += 0.00066*t * sin ( fmod ( ( PI + lp + l + 2*f ), twopi ) );
        a += 0.00069*t * sin ( fmod ( ( PI + 3*d + lp + -1*l ), twopi ) );
        a += 0.00071*t * sin ( fmod ( ( PI + 4*d + -1*lp + l ), twopi ) );
        a += 0.00073*t * sin ( fmod ( ( 4*d + lp ), twopi ) );
        a += 0.00073*t * sin ( fmod ( ( 2*d + lp + 2*l ), twopi ) );
        a += 0.00076*t * sin ( fmod ( ( PI + 4*d + -2*lp ), twopi ) );
        a += 0.00076*t * sin ( fmod ( ( 3*lp ), twopi ) );
        a += 0.00076*t * sin ( fmod ( ( PI + lp + -1*l + -2*f ), twopi ) );
        a += 0.00079*t * sin ( fmod ( ( PI + 4*d + -2*lp + -2*l ), twopi ) );
        a += 0.00088*t * sin ( fmod ( ( PI + d + lp + -2*l ), twopi ) );
        a += 0.0009*t * sin ( fmod ( ( 4*d + lp + -2*l ), twopi ) );
        a += 0.00094*t * sin ( fmod ( ( 2*d + 2*lp ), twopi ) );
        a += 0.00094*t * sin ( fmod ( ( 2*d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00096*t * sin ( fmod ( ( 2*d + -1*lp + 2*f ), twopi ) );
        a += 0.00097*t * sin ( fmod ( ( 2*lp + -2*l ), twopi ) );
        a += 0.00097*t * sin ( fmod ( ( l ), twopi ) );
        a += 0.00104*t * sin ( fmod ( ( PI + lp + 2*f ), twopi ) );
        a += 0.00107*t * sin ( fmod ( ( 2*d + -1*lp + -1*l + 2*f ), twopi ) );
        a += 0.0012*t * sin ( fmod ( ( PI + 2*d + -1*lp + -3*l ), twopi ) );
        a += 0.00126*t * sin ( fmod ( ( 2*d + 2*lp + -2*l ), twopi ) );
        a += 0.00128*t * sin ( fmod ( ( 2*d + l ), twopi ) );
        a += 0.00138*t * sin ( fmod ( ( lp + 3*l ), twopi ) );
        a += 0.00141*t * sin ( fmod ( ( d + -1*lp ), twopi ) );
        a += 0.00148*t * sin ( fmod ( ( PI + 2*d + -2*lp + -2*l ), twopi ) );
        a += 0.00155*t * sin ( fmod ( ( PI + 4*d + -2*lp + -1*l ), twopi ) );
        a += 0.0016*t * sin ( fmod ( ( 4*d + lp + -1*l ), twopi ) );
        a += 0.00169*t * sin ( fmod ( ( lp + -3*l ), twopi ) );
        a += 0.00186*t * sin ( fmod ( ( PI + 2*d + -3*lp + -1*l ), twopi ) );
        a += 0.00247*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -1*f ), twopi ) );
        a += 0.00256*t * sin ( fmod ( ( PI + 2*d + -3*lp ), twopi ) );
        a += 0.0027*t * sin ( fmod ( ( PI + d + lp + -1*l ), twopi ) );
        a += 0.00295*t * sin ( fmod ( ( PI + 2*d + -1*lp + 2*l ), twopi ) );
        a += 0.00317*t * sin ( fmod ( ( PI + d + lp + l ), twopi ) );
        a += 0.00362*t * sin ( fmod ( ( 2*d + lp + -2*f ), twopi ) );
        a += 0.00378*t * sin ( fmod ( ( PI + 2*d + -2*lp + l ), twopi ) );
        a += 0.00469*t * sin ( fmod ( ( PI + 4*d + -1*lp ), twopi ) );
        a += 0.00539*t * sin ( fmod ( ( PI + 2*d + -1*lp + -2*f ), twopi ) );
        a += 0.00585*t * sin ( fmod ( ( 2*lp + l ), twopi ) );
        a += 0.00631*t * sin ( fmod ( ( PI + 2*d + lp + -2*l ), twopi ) );
        a += 0.00686*t * sin ( fmod ( ( PI + 4*d + -1*lp + -2*l ), twopi ) );
        a += 0.00734*t * sin ( fmod ( ( 2*d + lp + l ), twopi ) );
        a += 0.00819*t * sin ( fmod ( ( 2*d + -1*l ), twopi ) );
        a += 0.01072*t * sin ( fmod ( ( 2*d ), twopi ) );
        a += 0.01097*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.0127*t * sin ( fmod ( ( 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.01293*t * sin ( fmod ( ( 2*lp + -1*l ), twopi ) );
        a += 0.01923*t * sin ( fmod ( ( lp + 2*l ), twopi ) );
        a += 0.02165*t * sin ( fmod ( ( PI + 2*d + -1*lp + -2*l ), twopi ) );
        a += 0.02438*t * sin ( fmod ( ( lp + -2*l ), twopi ) );
        a += 0.03649*t * sin ( fmod ( ( PI + 2*d + -1*lp + l ), twopi ) );
        a += 0.03707*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*l ), twopi ) );
        a += 0.03747*t * sin ( fmod ( ( 2*lp ), twopi ) );
        a += 0.04048*t * sin ( fmod ( ( PI + 2*d + -2*lp ), twopi ) );
        a += 0.04516*t * sin ( fmod ( ( PI + d + lp ), twopi ) );
        a += 0.06128*t * sin ( fmod ( ( 2*d + lp ), twopi ) );
        a += 0.07118*t * sin ( fmod ( ( 2*d + lp + -1*l ), twopi ) );
        a += 0.2756*t * sin ( fmod ( ( lp + l ), twopi ) );
        a += 0.37115*t * sin ( fmod ( ( lp + -1*l ), twopi ) );
        a += 0.41383*t * sin ( fmod ( ( PI + 2*d + -1*lp ), twopi ) );
        a += 0.51642*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l ), twopi ) );
        a += 1.6768*t * sin ( fmod ( ( lp ), twopi ) );
        return a;
    }

    double  planetary_lat19 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7, double p8 )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + 2*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 6*d + -1*lp + -3*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*d + 2*lp + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*d + lp + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*d + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 4*d + -2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -1*lp + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -1*lp + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -2*lp + l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -2*lp + -2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -3*lp + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -3*lp + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 4*d + -3*lp + -1*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 3*d + lp + l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*d + lp + 3*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + lp + l + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*d + 2*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*d + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + -1*lp + -4*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + -2*lp + -3*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + 2*d + -4*lp + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( d + 2*lp + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + d + -2*lp + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( PI + d + -2*lp + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 3*lp + -1*l + f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( 2*lp + 2*l + -1*f ), twopi ) );
        a += 0.00001*t * sin ( fmod ( ( lp + 4*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + l + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.40013019554989 + p3 + -1*d + lp ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3.40013019554989 + p3 + -1*d + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 6*d + -1*lp + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 6*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 6*d + -1*lp + -2*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4*d + 2*lp + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4*d + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 4*d + -1*lp + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 4*d + -2*lp + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + 2*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -1*lp + 3*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + -1*lp + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -1*lp + -3*l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -3*lp + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + 2*d + -3*lp + l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( d + -1*lp + l + f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 3*lp + -1*l + -1*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + lp + l + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( lp + l + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( lp + -1*l + 3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( PI + lp + -1*l + -3*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( lp + -4*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -1*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 6*d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4*d + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 3*d + lp + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 3*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 3*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*d + 2*lp + l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*d + 2*lp + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -1*lp + 3*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*d + -1*lp + -1*l + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + -3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -2*lp + 2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + 2*d + -2*lp + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + d + lp + 2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( d + -1*lp + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*lp + 2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*lp + -2*l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( PI + lp + 3*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 2*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 0.2585375419600972 + p3 + d + 2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + 6*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4*d + lp + l + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2*d + -1*lp + l + -3*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + d + lp + -2*l + f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( PI + d + lp + -2*l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( PI + 3*d + lp + -1*l + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 3*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( PI + 2*d + lp + -3*l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( d + -1*lp + f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 2*l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4*d + lp + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 4*d + -2*lp + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( PI + 4*d + -2*lp + -2*l + f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 3*d + -1*lp + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 2*d + 2*lp + -2*l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( lp + 3*l + -1*f ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( lp + -3*l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 0.2585375419600972 + p3 + 3*d ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4*d + lp + -2*l + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4*d + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 2*d + 2*lp + f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( PI + 2*d + -3*lp + -1*l + -1*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4*d + -1*l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( PI + 4*d + -1*lp + l + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2*d + lp + 2*l + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( PI + 2*d + -3*lp + -1*l + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 2*lp + -2*l + -1*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( l + f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( l + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( PI + 3*d + lp + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( PI + d + lp + l + -1*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2*lp + -1*f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 3.40013019554989 + p3 + -1*d + l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 2*d + l + f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( PI + 2*d + -2*lp + -2*l + -1*f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( PI + 4*d + -2*lp + -1*l + f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( PI + 2*d + -3*lp + f ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 0.2585375419600972 + p3 + 3*d + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4*d + lp + -1*l + f ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( PI + 4*d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( PI + 4*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 2*d + lp + -3*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( PI + 2*d + lp + -2*l + f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( PI + 2*d + -1*lp + -3*l + -1*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( d + lp + -1*l + f ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( PI + 4*d + -2*lp + -1*f ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 2*d + lp + 2*l + -1*f ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 2*d + -1*lp + -2*l + f ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( lp + 3*l + f ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( PI + 4*d + -2*lp + -1*l + -1*f ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( lp + -3*l + -1*f ), twopi ) );
        a += 0.0002*t * sin ( fmod ( ( PI + 2*d + lp + -2*l + -1*f ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 2*d + l + -1*f ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( PI + 2*d + -1*lp + -3*f ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 2*d + -1*l + -1*f ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( PI + d + lp + l + f ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4*d + lp + -1*f ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( PI + 2*d + -3*lp + -1*f ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 2*lp + l + f ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( PI + 2*d + -2*lp + l + f ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 2*lp + f ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( PI + 2*d + -1*lp + 2*l + f ), twopi ) );
        a += 0.00031*t * sin ( fmod ( ( 2*lp + l + -1*f ), twopi ) );
        a += 0.00032*t * sin ( fmod ( ( PI + 2*d + -1*lp + 2*l + -1*f ), twopi ) );
        a += 0.00035*t * sin ( fmod ( ( PI + 2*d + -2*lp + l + -1*f ), twopi ) );
        a += 0.00037*t * sin ( fmod ( ( 2*d + -1*l + f ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( PI + 4*d + -1*lp + f ), twopi ) );
        a += 0.00041*t * sin ( fmod ( ( 3.40013019554989 + p3 + -1*d ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 4*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00048*t * sin ( fmod ( ( 2*lp + -1*l + f ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 2*d + 2*lp + -1*l + -1*f ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 2*d + f ), twopi ) );
        a += 0.00054*t * sin ( fmod ( ( PI + 4*d + -1*lp + -2*l + f ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 2*d + 2*lp + -1*l + f ), twopi ) );
        a += 0.00057*t * sin ( fmod ( ( 2*lp + -1*l + -1*f ), twopi ) );
        a += 0.0006*t * sin ( fmod ( ( 2*d + lp + l + f ), twopi ) );
        a += 0.00062*t * sin ( fmod ( ( 0.2585375419600972 + p3 + d + l ), twopi ) );
        a += 0.00066*t * sin ( fmod ( ( 3.40013019554989 + p3 + d + -1*l ), twopi ) );
        a += 0.00068*t * sin ( fmod ( ( 2*d + 2*lp + -1*f ), twopi ) );
        a += 0.00076*t * sin ( fmod ( ( lp + -2*l + f ), twopi ) );
        a += 0.00079*t * sin ( fmod ( ( lp + 2*l + -1*f ), twopi ) );
        a += 0.00085*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00104*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*f ), twopi ) );
        a += 0.00135*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*l + -1*f ), twopi ) );
        a += 0.00149*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00158*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*l + f ), twopi ) );
        a += 0.00161*t * sin ( fmod ( ( lp + 2*l + f ), twopi ) );
        a += 0.00164*t * sin ( fmod ( ( PI + 2*d + -1*lp + -2*l + -1*f ), twopi ) );
        a += 0.00193*t * sin ( fmod ( ( PI + 2*d + -2*lp + f ), twopi ) );
        a += 0.00198*t * sin ( fmod ( ( 2*d + lp + -1*l + -1*f ), twopi ) );
        a += 0.002*t * sin ( fmod ( ( lp + -2*l + -1*f ), twopi ) );
        a += 0.00202*t * sin ( fmod ( ( PI + d + lp + f ), twopi ) );
        a += 0.00202*t * sin ( fmod ( ( PI + d + lp + -1*f ), twopi ) );
        a += 0.00207*t * sin ( fmod ( ( 2*d + lp + l + -1*f ), twopi ) );
        a += 0.00285*t * sin ( fmod ( ( PI + 2*d + -1*lp + l + f ), twopi ) );
        a += 0.00295*t * sin ( fmod ( ( 2*d + -1*f ), twopi ) );
        a += 0.00318*t * sin ( fmod ( ( 2*d + lp + f ), twopi ) );
        a += 0.0033*t * sin ( fmod ( ( 2*d + lp + -1*l + f ), twopi ) );
        a += 0.00443*t * sin ( fmod ( ( PI + 2*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00546*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*f ), twopi ) );
        a += 0.01172*t * sin ( fmod ( ( 0.2585375419600972 + p3 + d ), twopi ) );
        a += 0.01215*t * sin ( fmod ( ( lp + -1*f ), twopi ) );
        a += 0.01279*t * sin ( fmod ( ( lp + l + -1*f ), twopi ) );
        a += 0.01338*t * sin ( fmod ( ( lp + l + f ), twopi ) );
        a += 0.01419*t * sin ( fmod ( ( lp + -1*l + f ), twopi ) );
        a += 0.01623*t * sin ( fmod ( ( lp + f ), twopi ) );
        a += 0.01696*t * sin ( fmod ( ( lp + -1*l + -1*f ), twopi ) );
        a += 0.01869*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.01999*t * sin ( fmod ( ( PI + 2*d + -1*lp + f ), twopi ) );
        a += 0.02229*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.03043*t * sin ( fmod ( ( 2*d + lp + -1*f ), twopi ) );
        a += 0.0743*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*f ), twopi ) );
        return a;
    }

    double planetary_r20 ( double t, double d, double lp, double l, double f, double p1, double p2, double p3, double p4, double p5, double p6, double p7,double p8 )
    {
        double a = 0.0;
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + 6*d + lp + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + 6*d + lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -2*lp + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + lp + -2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + -1*lp + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -3*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + d + 2*lp + -1*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + d + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + 3*lp + -2*l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 4.71238898038469 + 2*lp + -1*l + 2*f ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 1.5707963267948966 + lp + -1*l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.970926522344787 + p3 + 3*d + -1*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.8293338687549936 + p3 + d + 2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.970926522344787 + p3 + d + -2*l + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.970926522344787 + p3 + -1*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -2*lp + -1*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -2*lp + -2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.71238898038469 + 4*d + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + 3*d ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + l + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.71238898038469 + d + 2*lp + l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.71238898038469 + d + -1*lp + 2*l ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + d + -1*lp + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 1.5707963267948966 + 2*lp + -2*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( 4.71238898038469 + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.8293338687549936 + p3 + 3*d + -1*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -1*lp ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp + -1*l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -3*lp + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + lp + l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 3*d + -1*lp + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + 3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + -4*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -2*l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*lp + l + -2*f ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -4*lp + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + d + lp + -3*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 1.5707963267948966 + d + -1*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 4.71238898038469 + d + -2*lp + -1*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.8293338687549936 + p3 + -1*d + l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + 2*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + -2*lp ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*lp + l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + 2*lp + -1*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + 2*lp + -3*l ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + 2*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*lp + -1*l + -2*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( 1.5707963267948966 + 2*lp + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -1*lp + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + lp + -3*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -3*lp ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + -1*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -4*l ), twopi ) );
        a += 0.00006*t * sin ( fmod ( ( 4.71238898038469 + lp + 4*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 4.71238898038469 + 3*d + -2*lp + -1*l ), twopi ) );
        a += 0.00007*t * sin ( fmod ( ( 1.5707963267948966 + lp + -4*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -2*l + 2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*lp + -3*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -3*lp + -2*l ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + d + lp + -2*f ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + d ), twopi ) );
        a += 0.00008*t * sin ( fmod ( ( 4.71238898038469 + lp + 2*l + -2*f ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.71238898038469 + 4*d + 2*lp + -1*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -2*lp + l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -1*l + 2*f ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 4.71238898038469 + 3*d + lp + -2*l ), twopi ) );
        a += 0.0001*t * sin ( fmod ( ( 1.5707963267948966 + l + -2*f ), twopi ) );
        a += 0.00011*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -3*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.8293338687549936 + p3 + d + -1*l + f ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 4.71238898038469 + 4*d + -2*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -3*lp + -1*l ), twopi ) );
        a += 0.00012*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + lp + -1*l + -2*f ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -1*lp + -1*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.71238898038469 + 4*d + 2*lp + -2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.71238898038469 + 3*d + -1*lp + -2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 1.5707963267948966 + lp + -2*l + 2*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -2*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + lp + l + -2*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*lp + -2*f ), twopi ) );
        a += 0.00014*t * sin ( fmod ( ( 4.71238898038469 + 3*lp + l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + 3*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 1.5707963267948966 + d + lp + 2*l ), twopi ) );
        a += 0.00015*t * sin ( fmod ( ( 1.5707963267948966 + d + -2*lp ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -4*lp ), twopi ) );
        a += 0.00016*t * sin ( fmod ( ( 4.71238898038469 + 3*lp ), twopi ) );
        a += 0.00017*t * sin ( fmod ( ( 1.5707963267948966 + 6*d + -1*lp + -2*l ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.71238898038469 + 4*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.71238898038469 + d + 2*lp ), twopi ) );
        a += 0.00022*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -3*lp + l ), twopi ) );
        a += 0.00023*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp + 2*l ), twopi ) );
        a += 0.00026*t * sin ( fmod ( ( 4.71238898038469 + 2*lp + 2*l ), twopi ) );
        a += 0.00027*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + lp ), twopi ) );
        a += 0.00028*t * sin ( fmod ( ( 4.71238898038469 + d + -1*lp + l ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 4.71238898038469 + d + -1*lp + -1*l ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 1.5707963267948966 + 3*lp + -1*l ), twopi ) );
        a += 0.00029*t * sin ( fmod ( ( 4.71238898038469 + 2*l ), twopi ) );
        a += 0.00034*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + lp + -2*f ), twopi ) );
        a += 0.00038*t * sin ( fmod ( ( 4.71238898038469 + 4*d + -1*l ), twopi ) );
        a += 0.00039*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + -2*l ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + -1*lp ), twopi ) );
        a += 0.0004*t * sin ( fmod ( ( 1.5707963267948966 + lp + 2*f ), twopi ) );
        a += 0.00043*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + -3*l ), twopi ) );
        a += 0.00047*t * sin ( fmod ( ( 1.5707963267948966 + lp + -2*f ), twopi ) );
        a += 0.00049*t * sin ( fmod ( ( 1.8293338687549936 + p3 + d + l + -1*f ), twopi ) );
        a += 0.00049*t * sin ( fmod ( ( 4.970926522344787 + p3 + d + -1*l + -1*f ), twopi ) );
        a += 0.00051*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + l ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 1.5707963267948966 + 3*d + lp + -1*l ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + 2*l ), twopi ) );
        a += 0.00053*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + l + -2*f ), twopi ) );
        a += 0.00054*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -2*lp + -2*l ), twopi ) );
        a += 0.00055*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + 2*lp + -2*l ), twopi ) );
        a += 0.0006*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp + -2*l ), twopi ) );
        a += 0.00061*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp ), twopi ) );
        a += 0.00062*t * sin ( fmod ( ( 1.5707963267948966 + lp + l + -2*f ), twopi ) );
        a += 0.00064*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -2*lp ), twopi ) );
        a += 0.00064*t * sin ( fmod ( ( 4.71238898038469 + 3*d + -1*lp + -1*l ), twopi ) );
        a += 0.00069*t * sin ( fmod ( ( 1.5707963267948966 + 2*lp + -2*l ), twopi ) );
        a += 0.00074*t * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*lp ), twopi ) );
        a += 0.00081*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -1*l + -2*f ), twopi ) );
        a += 0.00084*t * sin ( fmod ( ( 4.71238898038469 + d + lp + -2*l ), twopi ) );
        a += 0.00084*t * sin ( fmod ( ( 4.71238898038469 + lp + -1*l + 2*f ), twopi ) );
        a += 0.00089*t * sin ( fmod ( ( 4.71238898038469 + lp + 3*l ), twopi ) );
        a += 0.00106*t * sin ( fmod ( ( 1.5707963267948966 + lp + -3*l ), twopi ) );
        a += 0.00112*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -3*lp + -1*l ), twopi ) );
        a += 0.00114*t * sin ( fmod ( ( 4.71238898038469 + 2*d + l ), twopi ) );
        a += 0.00125*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -3*l ), twopi ) );
        a += 0.00126*t * sin ( fmod ( ( 4.71238898038469 + d + -1*lp ), twopi ) );
        a += 0.0014*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -2*lp + -1*l ), twopi ) );
        a += 0.00146*t * sin ( fmod ( ( 4.71238898038469 + 4*d + lp + -1*l ), twopi ) );
        a += 0.00149*t * sin ( fmod ( ( 4.71238898038469 ), twopi ) );
        a += 0.00165*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -2*f ), twopi ) );
        a += 0.00173*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -2*lp + -2*l ), twopi ) );
        a += 0.00174*t * sin ( fmod ( ( 4.71238898038469 + l ), twopi ) );
        a += 0.00213*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + 2*l ), twopi ) );
        a += 0.00214*t * sin ( fmod ( ( 4.71238898038469 + d + lp + -1*l ), twopi ) );
        a += 0.00235*t * sin ( fmod ( ( 1.5707963267948966 + d + lp + l ), twopi ) );
        a += 0.0031*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -3*lp ), twopi ) );
        a += 0.00331*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp + l ), twopi ) );
        a += 0.00394*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp ), twopi ) );
        a += 0.00476*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -2*l ), twopi ) );
        a += 0.00536*t * sin ( fmod ( ( 4.71238898038469 + 2*lp ), twopi ) );
        a += 0.00587*t * sin ( fmod ( ( 4.71238898038469 + 2*lp + l ), twopi ) );
        a += 0.00633*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*l ), twopi ) );
        a += 0.00658*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + l ), twopi ) );
        a += 0.00993*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.01066*t * sin ( fmod ( ( 1.5707963267948966 + 2*lp + -1*l ), twopi ) );
        a += 0.01186*t * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.01356*t * sin ( fmod ( ( 4.71238898038469 + 2*d ), twopi ) );
        a += 0.01449*t * sin ( fmod ( ( 4.71238898038469 + lp + 2*l ), twopi ) );
        a += 0.01764*t * sin ( fmod ( ( 1.5707963267948966 + lp + -2*l ), twopi ) );
        a += 0.0249*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp + -1*l ), twopi ) );
        a += 0.02529*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -2*l ), twopi ) );
        a += 0.03222*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + l ), twopi ) );
        a += 0.04194*t * sin ( fmod ( ( 1.5707963267948966 + d + lp ), twopi ) );
        a += 0.0497*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp ), twopi ) );
        a += 0.06068*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + -1*l ), twopi ) );
        a += 0.07754*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp ), twopi ) );
        a += 0.12302*t * sin ( fmod ( ( 4.71238898038469 + lp ), twopi ) );
        a += 0.26396*t * sin ( fmod ( ( 4.71238898038469 + lp + l ), twopi ) );
        a += 0.32654*t * sin ( fmod ( ( 1.5707963267948966 + lp + -1*l ), twopi ) );
        a += 0.38245*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.51395*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp ), twopi ) );
        return a;
    }

    double tides_lon21 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00004 * sin ( fmod ( ( 3.3673797902679174 + d + lp + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3673797902679174 + d + lp + -1*l + -1*f ), twopi ) );
        a += 0.00082 * sin ( fmod ( ( 3.3673797902679174 + d + lp + -1*f ), twopi ) );
        return a;
    }

    double tides_lat22 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00004 * sin ( fmod ( ( 3.3673796157349924 + d + lp ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.3673794412020674 + d + lp + -2*f ), twopi ) );
        return a;
    }

    double tides_r23 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00004 * sin ( fmod ( ( 1.7965834634730211 + d + lp + l + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 4.938176117062814 + d + lp + -1*l + -1*f ), twopi ) );
        return a;
    }

    double tides_lon24 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 2*d + l ), twopi ) );
        a += 0.00002*t * sin ( fmod ( ( 2*d + -2*l ), twopi ) );
        a += 0.00004*t * sin ( fmod ( ( 2*l ), twopi ) );
        a += 0.00009*t * sin ( fmod ( ( 2*d ), twopi ) );
        a += 0.00021*t * sin ( fmod ( ( 2*d + -1*l ), twopi ) );
        a += 0.00058*t * sin ( fmod ( ( l ), twopi ) );
        return a;
    }

    double tides_lat25 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t * sin ( fmod ( ( 2*d + -1*f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( l + f ), twopi ) );
        a += 0.00003*t * sin ( fmod ( ( l + -1*f ), twopi ) );
        a += 0.00005*t * sin ( fmod ( ( PI + f ), twopi ) );
        return a;
    }

    double tides_r26 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00003*t * sin ( fmod ( ( 4.71238898038469 + 2*l ), twopi ) );
        a += 0.00013*t * sin ( fmod ( ( 4.71238898038469 + 2*d ), twopi ) );
        a += 0.00019*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*l ), twopi ) );
        a += 0.00072*t * sin ( fmod ( ( 4.71238898038469 + l ), twopi ) );
        a += 0.00356*t * sin ( fmod ( ( 1.5707963267948966 ), twopi ) );
        return a;
    }

    double tides_lon27 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 3.1412655788879693 + 2*d + -3*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.283104498435218 + d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283179198527203 + 2*d + lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.00005462880558742251 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1414502347228304 + 2*d + lp + -2*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 3.1415758984289743 + 2*d ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007571063762226202 + 3*l + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.1408707854111686 + 2*d + -2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.141595097050746 + 2*d + -1*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.0011201523139299607 + d + lp + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.1416092342176865 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 5.305135082953127 + f ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 6.283068544652628 + d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 3.1415294726708707 + 2*d + -1*l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.283178500395503 + lp + l ), twopi ) );
        a += 0.00014 * sin ( fmod ( ( 6.2831605235042085 + lp + -1*l ), twopi ) );
        a += 0.00016 * sin ( fmod ( ( 4.5358302515224675 + l + -1*f ), twopi ) );
        a += 0.00025 * sin ( fmod ( ( 3.1413074667900167 + 2*d + -2*l ), twopi ) );
        a += 0.0004 * sin ( fmod ( ( 0.007508406442079606 + 2*l + -2*f ), twopi ) );
        a += 0.00223 * sin ( fmod ( ( 6.283182165586933 + lp ), twopi ) );
        return a;
    }

    double tides_lat28 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 3.1413051978619895 + 2*d + -2*l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1413057214607654 + 2*d + -2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.283182165586933 + lp + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 6.283182165586933 + lp + -1*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.013003575591983752 + 2*l + -1*f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 0.00009250245035569947 + l + f ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 4.29334712068684 + l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.007379775676207623 + 2*l + -3*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 0.000383797902513553 + l + -1*f ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.141501547402839 + 2*d + -1*f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.283182165586933 + lp + f ), twopi ) );
        a += 0.0001 * sin ( fmod ( ( 6.283182165586933 + lp + -1*f ), twopi ) );
        return a;
    }

    double tides_r29 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 4.712385838792036 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 1.5707640382037347 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.719968770793176 + 3*l + -2*f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 4.713042606189561 + 2*f ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712385838792036 + 2*d + lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 1.5708054025070068 + 2*d + -1*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 3.7342575983480115 + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 1.5721222534276367 + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.712142016295533 + 2*d + -2*l ), twopi ) );
        a += 0.00011 * sin ( fmod ( ( 4.712372050690945 + lp + l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5707724157841445 + 2*d + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.5707821896279552 + lp + -1*l ), twopi ) );
        a += 0.00022 * sin ( fmod ( ( 4.712390202115166 + lp ), twopi ) );
        a += 0.0013 * sin ( fmod ( ( 1.5707963267948966 ), twopi ) );
        return a;
    }

    double tides_lon30 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001 * sin ( fmod ( ( 3.141598762242175 + 4*d + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.1546745944651913 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00001 * sin ( fmod ( ( 3.141990937725098 + d + lp ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.282980405525403 + 2*d + -1*l ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 0.0003951425426515162 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 3.1409508960238353 + lp + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1415956206495212 + 2*d + l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 3.1404534771870165 + lp + -1*l ), twopi ) );
        a += 0.00013 * sin ( fmod ( ( 1.7453292519943297e-7 + d ), twopi ) );
        a += 0.00055 * sin ( fmod ( ( 3.141595969715372 + 2*d ), twopi ) );
        a += 0.00081 * sin ( fmod ( ( 3.1413364392556002 + lp ), twopi ) );
        return a;
    }

    double tides_lat31 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 3.1415971914458485 + 2*d + f ), twopi ) );
        a += 0.00002 * sin ( fmod ( ( 6.283152145923799 + 2*d + -1*f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141557397938903 + lp + f ), twopi ) );
        a += 0.00004 * sin ( fmod ( ( 3.141558270603529 + lp + -1*f ), twopi ) );
        return a;
    }

    double tides_r32 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002 * sin ( fmod ( ( 1.5702851198569874 + 2*d + -1*lp ), twopi ) );
        a += 0.00003 * sin ( fmod ( ( 4.712278501043039 + 2*d + -1*l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 1.570057179856677 + lp + l ), twopi ) );
        a += 0.00005 * sin ( fmod ( ( 4.711218213522453 + lp + -1*l ), twopi ) );
        a += 0.00006 * sin ( fmod ( ( 4.712389329450541 + d ), twopi ) );
        a += 0.00008 * sin ( fmod ( ( 1.5707980721241486 + 2*d + l ), twopi ) );
        a += 0.00009 * sin ( fmod ( ( 4.71254745628077 + lp ), twopi ) );
        a += 0.00043 * sin ( fmod ( ( 1.5707952795973452 + l ), twopi ) );
        a += 0.00106 * sin ( fmod ( ( 1.5707987702558492 + 2*d ), twopi ) );
        a += 0.00828 * sin ( fmod ( ( 4.71238898038469 ), twopi ) );
        return a;
    }

    double tides_lon33 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t*t * sin ( fmod ( ( PI + 4*d + -1*lp ), twopi ) );
        a += 0.00001*t*t * sin ( fmod ( ( 2*d + lp + -2*f ), twopi ) );
        a += 0.00001*t*t * sin ( fmod ( ( PI + 2*d + -2*lp + l ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( PI + 4*d + -1*lp + -2*l ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( 2*d + lp + l ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( PI + 2*d + lp + -2*l ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( 2*d + -1*l ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -2*f ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( 2*lp + l ), twopi ) );
        a += 0.00003*t*t * sin ( fmod ( ( PI + 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.00003*t*t * sin ( fmod ( ( 2*d ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( 2*lp + -1*l ), twopi ) );
        a += 0.00006*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -2*l ), twopi ) );
        a += 0.00006*t*t * sin ( fmod ( ( lp + 2*l ), twopi ) );
        a += 0.00007*t*t * sin ( fmod ( ( lp + -2*l ), twopi ) );
        a += 0.00011*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + l ), twopi ) );
        a += 0.00011*t*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*l ), twopi ) );
        a += 0.00011*t*t * sin ( fmod ( ( 2*lp ), twopi ) );
        a += 0.00012*t*t * sin ( fmod ( ( PI + 2*d + -2*lp ), twopi ) );
        a += 0.00013*t*t * sin ( fmod ( ( PI + d + lp ), twopi ) );
        a += 0.00018*t*t * sin ( fmod ( ( 2*d + lp ), twopi ) );
        a += 0.00021*t*t * sin ( fmod ( ( 2*d + lp + -1*l ), twopi ) );
        a += 0.0008*t*t * sin ( fmod ( ( lp + l ), twopi ) );
        a += 0.00108*t*t * sin ( fmod ( ( lp + -1*l ), twopi ) );
        a += 0.0012*t*t * sin ( fmod ( ( PI + 2*d + -1*lp ), twopi ) );
        a += 0.0015*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00487*t*t * sin ( fmod ( ( lp ), twopi ) );
        return a;
    }

    double tides_lat34 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00001*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + l + -1*f ), twopi ) );
        a += 0.00002*t*t * sin ( fmod ( ( PI + 2*d + -2*lp + -1*f ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( lp + l + f ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( lp + l + -1*f ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( lp + -1*f ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( lp + -1*l + f ), twopi ) );
        a += 0.00005*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + -1*f ), twopi ) );
        a += 0.00005*t*t * sin ( fmod ( ( lp + f ), twopi ) );
        a += 0.00005*t*t * sin ( fmod ( ( lp + -1*l + -1*f ), twopi ) );
        a += 0.00006*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + f ), twopi ) );
        a += 0.00006*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*l + f ), twopi ) );
        a += 0.00009*t*t * sin ( fmod ( ( 2*d + lp + -1*f ), twopi ) );
        a += 0.00022*t*t * sin ( fmod ( ( PI + 2*d + -1*lp + -1*f ), twopi ) );
        return a;
    }

    double tides_r35 ( double t, double d, double lp, double l, double f )
    {
        double a = 0.0;
        a += 0.00002*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + l ), twopi ) );
        a += 0.00003*t*t * sin ( fmod ( ( 1.5707963267948966 + 4*d + -1*lp + -1*l ), twopi ) );
        a += 0.00003*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d + 2*lp + -1*l ), twopi ) );
        a += 0.00003*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*lp + -1*l ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d ), twopi ) );
        a += 0.00004*t*t * sin ( fmod ( ( 4.71238898038469 + lp + 2*l ), twopi ) );
        a += 0.00005*t*t * sin ( fmod ( ( 1.5707963267948966 + lp + -2*l ), twopi ) );
        a += 0.00007*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d + -1*lp + -2*l ), twopi ) );
        a += 0.00007*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp + -1*l ), twopi ) );
        a += 0.00009*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + l ), twopi ) );
        a += 0.00012*t*t * sin ( fmod ( ( 1.5707963267948966 + d + lp ), twopi ) );
        a += 0.00014*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -2*lp ), twopi ) );
        a += 0.00018*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp + -1*l ), twopi ) );
        a += 0.00023*t*t * sin ( fmod ( ( 4.71238898038469 + 2*d + lp ), twopi ) );
        a += 0.00036*t*t * sin ( fmod ( ( 4.71238898038469 + lp ), twopi ) );
        a += 0.00077*t*t * sin ( fmod ( ( 4.71238898038469 + lp + l ), twopi ) );
        a += 0.00095*t*t * sin ( fmod ( ( 1.5707963267948966 + lp + -1*l ), twopi ) );
        a += 0.00111*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp + -1*l ), twopi ) );
        a += 0.00149*t*t * sin ( fmod ( ( 1.5707963267948966 + 2*d + -1*lp ), twopi ) );
        return a;
    }

    void convertToInertialEclipticOfJ2000 ( double r[3], double t )
    {
        const double rad = 648000. / PI;
        const double a0 = 384747.9806448954;
        const double ath = 384747.9806743165;

        r[0] = r[0] / rad + 3.810344430588308 + 8399.684731773914*t + -0.000028547283984772807*t*t + 3.201709550047375e-8*t*t*t + -1.5363745554361197e-10*t*t*t*t;
        r[1] = r[1] / rad;
        r[2] = r[2] * a0 / ath;

        double x1 = r[2] * cos ( r[1] );
        const double x2 = x1 * sin ( r[0] );
        x1 = x1 * cos ( r[0] );
        const double x3 = r[2] * sin ( r[1] );

        //Precession matrix.
        double pw = ( 0.10180391e-4 + 0.47020439e-6 * t + -0.5417367e-9 * t*t + -0.2507948e-11 * t*t*t + 0.463486e-14 * t*t*t*t ) * t;
        double qw = ( -0.113469002e-3 + 0.12372674e-6 * t + 0.1265417e-8 * t*t + -0.1371808e-11 * t*t*t + -0.320334e-14 * t*t*t*t ) * t;

        const double ra = 2. * sqrt ( 1 - pw * pw - qw * qw );
        const double pwqw = 2. * pw * qw;
        const double pw2 = 1 - 2. * pw * pw;
        const double qw2 = 1 - 2. * qw * qw;
        pw = pw * ra;
        qw = qw * ra;
        r[0] = pw2 * x1 + pwqw * x2 + pw * x3;
        r[1] = pwqw * x1 + qw2 * x2 - qw * x3;
        r[2] = -pw * x1 + qw * x2 + ( pw2 + qw2 - 1 ) * x3;
    }

public:

    void getPosition ( double jd, double r3[3] )
    {
        const double t = ( jd - 2451545.0 ) / 36525.0;
        const double d = 5.198466741027443 + ( 7771.377146811758 + ( -0.00002844935162118868 + ( 3.1973462269173895e-8 + -1.5436467606527627e-10*t ) *t ) *t ) *t;
        const double lp = -0.04312518020812495 + ( 628.301955168488 + ( -0.000002680534842854624 + ( 7.126761112310179e-10 + 7.272205216643039e-13*t ) *t ) *t ) *t;
        const double l =  2.3555558982657994 + ( 8328.691426955555 + ( 0.00015702775761561094 + ( 2.504111144298864e-7 + -1.1863390776750345e-9*t ) *t ) *t ) *t;
        const double f = 1.627905233371468 + ( 8433.466158130539 + ( -0.0000593921000043237 + ( -4.949947684128362e-9 + 2.021673050226763e-11*t ) *t ) *t ) *t;

        const double p_d = 5.198466741027443 + 7771.377146811758*t;
        const double p_lp = -0.04312518020812495 + 628.301955168488*t;
        const double p_l =  2.3555558982657994 + 8328.691426955555*t;
        const double p_f = 1.627905233371468 + 8433.466158130539*t;

        const double p1= ( 4.4026088424029615 + 2608.7903141574106 * t );
        const double p2= ( 3.1761466969075944 + 1021.3285546211089 * t );
        const double p3= ( 1.753470343150658 + 628.3075849621554 * t );
        const double p4= ( 6.203480913399945 + 334.06124314922965 * t );
        const double p5= ( 0.5995464973886735 + 52.96909650947205 * t );
        const double p6= ( 0.8740167565184808 + 21.329909543800007 * t );
        const double p7= ( 5.481293871604991 + 7.4781598567143535 * t );
        const double p8= ( 5.311886286783467 + 3.813303563758456 * t );

        double lon = 0.0;
        double lat = 0.0;
        double r = 0.0;

        lon += this->mainproblem_lon ( d,lp,l,f );
        lat += this->mainproblem_lat ( d,lp,l,f );
        r += this->mainproblem_r ( d,lp,l,f );

        lon += this->tides_lon3 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon6 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon21 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon24 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon27 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon30 ( t,p_d,p_lp,p_l,p_f );
        lon += this->tides_lon33 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat4 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat7 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat25 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat22 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat28 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat31 ( t,p_d,p_lp,p_l,p_f );
        lat += this->tides_lat34 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r5 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r8 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r23 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r26 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r29 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r32 ( t,p_d,p_lp,p_l,p_f );
        r += this->tides_r35 ( t,p_d,p_lp,p_l,p_f );

        lon += this->planetary_lon9 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lon += this->planetary_lon12 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lon += this->planetary_lon15 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lon += this->planetary_lon18 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lat += this->planetary_lat10 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lat += this->planetary_lat13 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lat += this->planetary_lat16 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        lat += this->planetary_lat19 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        r += this->planetary_r11 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        r += this->planetary_r14 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        r += this->planetary_r17 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );
        r += this->planetary_r20 ( t,p_d,p_lp,p_l,p_f,p1,p2,p3,p4,p5,p6,p7,p8 );

        r3[0] = lon;
        r3[1] = lat;
        r3[2] = r;
        this->convertToInertialEclipticOfJ2000 ( r3, t );
    }
};

int main ()
{
    double r3[3];

    ELP2000_82b XYZ;
    XYZ.getPosition ( 2451555.5, r3 );
    constexpr auto max_precision{std::numeric_limits<long double>::digits10 + 1};
    std::cout << std::setprecision ( max_precision );
    std::cout << ( atan ( 1.0 ) * 4.0 ) << "\n";
    std::cout << ( atan ( 1.0 ) * 4.0 ) /2 << "\n";
    std::cout << ( atan ( 1.0 ) * 4.0 ) *2 << "\n";
    std::cout << r3[0] << " Dif = " << ( r3[0] - 382979.7604730463 ) << "\n";
    std::cout << r3[1] << " Dif = " << ( r3[1] - -68204.20174530084 ) << "\n";
    std::cout << r3[2] << " Dif = " << ( r3[2] - -25987.71602589964 ) << std::endl;
}

/*
const p=ELP82b.getPosition(2451555.5);
[ 382979.7604730463, -68204.20174530084, -25987.71602589964 ]
*/
